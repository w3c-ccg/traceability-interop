{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "370a4a43-4994-46c5-a722-2738c29dee8b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f654de4-402a-4a02-9859-84480b5ba9f7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "491857d0-aba0-4abb-9c4a-77e4be753f74",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44cb90e8-fb90-477d-a10f-5730bb92ec10"
                }
              }
            ]
          },
          {
            "id": "35baee64-1962-4f9b-a28b-ac0f407a1129",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42d95eb9-dbbb-4993-ac54-cee45c64b4e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f16875a-1fd2-4ebf-b976-b1cd56a895b9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "31e95f56-b650-4292-9d46-719a1e39dce9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ad22ef3-5134-42ff-a610-832ca27ca132",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4569c91f-0461-424e-ac89-9846692bfad6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7e02ac5-efde-4f3f-ad60-aa894cbc8954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1986a8f8-9213-41c0-a63a-8e10b3353189"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "906ad22e-2a10-4b07-a7e6-5d376066f552",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a069c67b-8c7b-4fcf-9ceb-9ce5af48308e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9305afc8-2036-4d98-91b3-b0c0f9b854ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd615652-43d0-4adf-a5ba-e40bdb0c98bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ec25737-4a5c-4e0f-ba7c-46fb7f24b0d1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13832ad7-ea2f-4926-b45b-75a087e9f291"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c5f71ea-cc69-46c5-a55f-00e282da582f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d3b8233-b800-4196-b24d-e709c2bd3793"
            }
          }
        ]
      },
      {
        "id": "18f23859-12e1-472e-a548-962d9fc3c6a5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "690897e4-1078-4e16-8a47-371c20f06827",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3497637d-3267-4572-8255-b6d631b75d2c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03baab2c-fd55-4439-a86e-1e48b33d5677",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0486002a-0d36-4bf3-be47-1fc9337f86f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdb84316-843b-477c-8231-d1cb69c58cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca9db06-c07c-4ae9-842c-6b0672296b1f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db17dce4-4142-4637-aef9-d273b02538ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5a3a6ff-8277-45a8-a13b-85169cb43afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfcf4d6-e330-42f0-92db-8c5d9e44044a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec723326-42b6-42df-9acb-7d044e815f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c73b3946-1ae5-4e22-80d3-f94026c71743"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4b69d6b-f36e-466f-ad6c-45deec1453f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d82419c-0a2c-4eba-b1be-fd97104bb2a4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261188f1-a164-4573-aa8e-a32ec1b506ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0caef535-41da-4e26-8737-3aac9c1128e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745a3c87-5ec9-4fa2-9867-20239dbb3e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a872b46-9f84-48b5-a49e-f42400e6081c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "265f6728-ed1d-40f7-b2a1-bdb1ea1b4927",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e85179d8-537c-4ba5-9dcd-b16a16447115",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bceb27e-da57-4c4b-803e-67dc782122a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5cce941c-54c2-4e99-9155-ff16c20a5ede"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "962af60a-e9e3-4786-bc86-4c8556f45924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8b0c0a18-18db-4552-935b-9a9a4a3a8c2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd1e4838-d72c-4247-bdc7-a177e79b3bb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e402a46c-c573-4e19-95eb-6ef16cc7d30b"
            }
          }
        ]
      },
      {
        "id": "bbe95f26-578e-4238-919d-a08dd52f4821",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "08ae3561-92cf-42d5-84b2-7d45b61ae0ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad8fe443-a9f7-41d6-ba6e-a553f941070c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6964d191-8e76-499f-aee7-c2cea8eb2986",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a23c39-bcf0-4e53-8448-10415fe5cc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea284cd-c415-4665-bff2-e1c0bd1c8d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9802da45-f5dd-461d-b09e-17df1a32fab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "711f280a-0a25-46ee-b5f6-095785be2e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a828df-2cb1-4b62-9741-5cec49b1d29a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9613b5d-13e3-4d6e-80d5-a27d84d16a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f2c1fc-4710-4046-bc8f-315a09c37f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9ddb12-0c7b-41fc-9f1c-d01f7c8262bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "934e596f-50f9-47f3-98b9-36a5838e547f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee546154-b371-40f2-a010-5e8858248846",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca6c925-e942-4480-b9d2-6a5746b62e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32526b72-fcc1-41e4-99bf-a1242961dc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef4edc-799d-472a-9f63-d901b0c4efc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "960df7a8-ca54-47f3-8ca8-65f3666af765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f081b03-473b-4763-94f3-01acc382df74",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947cbfdd-e51b-4fa5-815f-535c6312354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e33f9b0-0ca4-4b29-89c5-646e331a9f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d42e1e4-0278-41c2-adea-c6aef31f6712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "558e7a20-2580-47a2-8984-389ea1e49ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9412ac8-4c21-4ee6-be8b-241ec4aa4c9d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35cab04-4e76-4fbd-885d-f1e9708f1ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300256bd-f3d4-4e4e-b13e-814584c5798e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bb9e0b-2f4b-4733-9c81-4c552e096e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f12693a-0d8b-42a1-8b29-172da1e2355f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1fff90-1fd4-4765-96f7-7f1d2b335335",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f489b-6d78-42fb-8229-b32fdd5f0cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623fa636-ac47-43c2-96d0-5e5ceee1a307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96a7ef8-63a9-4eb4-9ef0-f6666758f0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb7110c0-b933-48ee-a2b7-a992ae79dd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22832ffd-2361-44e5-ba9c-7aa9a152e9f3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe2152c-62fd-47e4-8bd1-48ccce8bad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0561383a-82c5-4d5d-ba9d-a9c9e7433898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff475e5c-930b-4a76-8fd3-ea96d87b6344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82339336-3163-4ccc-a05c-4498964e22f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a5e1db-cf08-4c29-addc-5de9f6c70102",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b075c21c-c2c0-420b-9eaf-4b37205d89c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10d0aa0-6dc6-430d-ac67-e886a5e476de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19f04fe-6982-4e7a-b62a-14dbe025c609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8d96e08-df3a-4cfe-93ea-447deeb375e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3966180a-8e71-4fd2-84ed-ef7902530965",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466d1c74-06c4-4c8b-953b-cea1b35a34ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b32655d-559d-48e4-a93c-8d206b7c4931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1924c65d-f159-4d5f-9d96-d99dc536efd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49200a98-76f5-42ea-9cae-3edfc624a0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85075c-9fd9-46fc-a6df-66657b4e86d7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3023044-4bb1-41d6-99f4-90457ce245f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afee817-322c-47ab-9b2b-f73c71e2b7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dd76a1-53a1-46ca-8561-59ffe21d44fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b81fed3-bc91-4ea6-87ab-97723a8237a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aab5e15-bdb7-47c8-b8f8-02c394c67679",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db686ae-dc3c-44ee-830a-b365579d3399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651b5c8f-075e-4a88-9f57-fa23c6b7113f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7894b5e-fa44-46f8-a491-e4adabfb54f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49b6c76a-0a27-4c44-ac6a-1c887b6cbb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bb2dbf-eed8-4a6f-a1c3-d6161a563456",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d91635-e3cd-4c01-8631-ca8060019566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ec0696-2b3d-4f8b-8450-80887b9a17ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d4f0d2-5fa3-4ec3-8a7a-c27c3af854fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7738986a-ce9d-4b66-a653-f0aa601b0a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e360024-1739-4b0f-829c-dc6347bf9776",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c9f274-33f1-4edc-8aab-dbf0c6230b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ae5b8a-faec-49e2-a718-dbc038692db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c6dbd1-ac8d-48c0-9c1d-71b1adab397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36078f98-a026-417a-9780-8b8a0cd193fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a28da60-f414-4e47-ac6a-4597dc150be6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8879378a-44fd-4ca7-8f9f-ef04206ac437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a1461f-f2b1-4a67-ba2f-c3db26f25f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23739207-4eca-471b-84aa-3b01ef8c0818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc43b45-f051-4355-b82d-7768abcd19c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073c7688-6e46-4c34-8b4f-9f2d1ae00b0c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67ab6ae-25a2-42ca-a6a2-0557526ed412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c84552-8ba4-489b-902f-e75e70cca038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef1b02f-e10e-4fa4-8dfd-a81a6ceaf504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96d2c3ce-600e-4cb6-9de7-a755d11802fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baad0bdf-8334-4472-a6f7-0710ef33ec53",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402961a1-0342-46ba-b82b-5eb49818a49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d601583e-8b00-4b0c-9f35-ee0e46f94ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8930bfac-d3bc-4dd9-911b-5e31de773741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58979404-6d9c-4243-b080-662bc00cde33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d96e5a-4ffe-4673-9ed1-a975ad47a423",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58c2f24-06f9-4840-a743-4519f873d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a60305c-0b9f-4973-90b3-aef27a8eacfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d23473b-ee93-4812-ad66-958ac8087688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "770123a9-eb32-47bf-8170-117502ced44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681913c9-ba4b-4583-a9b5-9b467a405746",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e2ec6-acb4-4c1d-be2c-7376c0f1ab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1663ed-ceb1-47c3-82a7-76051aeda0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b57e067-8e1f-4f26-abfa-d0fa115d7cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac548dc-0cc2-4743-a008-262f5f5f60e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e311fccc-511a-4181-a5ef-71f7ebda391a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804393a9-88bb-4a22-bd77-6dc5e1a02179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00767790-4cef-460a-91bd-0e127bffbd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce51891-7389-4506-a52e-33e7f7ad179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e4c100-d553-4912-b5ec-0a0962652f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dfc36c-6307-4a3a-bf61-fac22004fd72",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b8eb74-72d7-43f8-b668-83fcd4906e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2da6e2e-868b-41af-92c3-fea7aea14955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594fb3b-8c43-49b2-a0ab-c48ba7910fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f18a2f7-e2ac-4f75-b6a0-3390e9344287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfad855-c8bb-4a61-b0f8-ce6c26ec2c03",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3045416d-f7f5-42b3-9c6e-715325678739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3bde98-f5d0-4a57-b9d4-39379b473f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac54a6cd-8c23-4a08-b3aa-3b293cc81d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f201f4-492a-49a4-881a-4a2122c6a1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d6cd6e-1ffe-4c6d-8cd9-b792d48810f7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bae06fd-7ee3-4ea8-92b7-1bed5ea03b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eb63dd-78fc-4d33-8225-9cb4edfc1db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fae574-b59b-43fb-bc08-932b14a5d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca5587b-d29a-4b23-99c1-66312542701b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7fed40-3767-4487-aebc-8d307b03a068",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f89173-e362-4558-8055-37da5fa7c4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45c4a59-bf31-41a9-a1ef-4e69e724c53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc496faf-0eab-43c7-b999-1c84e8c9f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccafa73e-d779-4e86-be75-0753381a5272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd26b8-f563-42a7-abf6-bdcbe876cfb7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9883b424-b12f-48a5-80e0-4b3d608604eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d6481-ccfc-43d2-bbd8-e8f3fdab96e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff5c72-4d40-4d70-a290-efeae1e761b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b77566-50d2-4be9-b094-58ee589d9bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95d8518-59c8-430e-8042-a6c2922705bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bff060d-5350-4c1c-8c57-ea849bd9ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40db085-46b6-4708-97a5-1d874943b5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65252a24-4f45-4f2f-b9c1-4d8b5fceaea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d126ffe-1746-40f7-9a97-92804c60b20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c1127b-8bc9-45b0-89b3-408807121a1c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2cf95a-f4cd-480f-973e-20edd734e483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d182fe50-9537-49d4-9815-a8b5c489c3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989adad4-80c4-4383-92b4-16a4795245d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e43aac1-afe4-4606-af34-93d031bfb112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43338b9b-7bc1-4f2a-ac55-2df8f0963362",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e2d974-504e-4bf1-98ad-5f51b40c7753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56b2eb6-f628-43bc-b594-ca3c35c153da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054bd466-7863-4db0-8264-e65de2df16fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b7978e-3526-401c-b31f-d8213ccd4d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43be9536-8bf1-428f-87d8-e1a68afaf0d4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f89c5c-a3c6-4588-a0ee-9cc4fd1de4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aee9f43-a0a1-4273-9f31-01e194e8eab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b21705-2c0f-4ab4-ad31-2117e6859063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "793ac795-28c5-4306-b057-55dfbb505ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837d7ca8-4044-46c4-8b4e-7e30e900690a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b910122-92e1-4bde-a2b0-8597e223803d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b9976f-8212-4b3d-bccd-1fe4dffb9957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72b5bca-b927-4306-bd92-e08af727f5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "682b1859-da8d-4d23-9ab5-c45c7878d269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fd3347-357b-44fd-8509-11e5cb539d77",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc25181-4ae0-431b-bf26-8fd60a15c9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d504129-f544-4d21-8bc6-89ed74c8eae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac73bcb6-25d8-48ef-8529-fdf6cfbf9ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51dd15a4-8645-4799-9183-bde699feea35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edffead5-5f55-49db-9ceb-968faf988dc5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b23f18-8ffe-4739-a1d5-557a42cd86db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a31ebd7-99cc-4764-b20b-3bec49e3f47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5cd5bb-85dd-4c49-9853-ab2b33c76fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12cdacfc-497a-493b-b69f-6ba0347cb51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebfeea0-59eb-4235-8ef9-7c21d1481f7d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43629c-5dbb-4e5e-a05e-9c8b3059f46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72ffb48-222c-491d-8d02-f540fa0e17a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dbf0c5-1045-4ac8-bc55-6fe0783531b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb58069a-8b27-4e48-b9a5-c7e2b5ec87f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa91fb8-0a14-4d6f-a42a-48914c5e554d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4a15ed-6e13-47b2-aed3-7767040c2db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d451df8d-2bdf-4978-86d7-880a4d356d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c23e844-bed3-419d-9d84-cb45134e6155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d488c405-e6cf-4301-a116-8a62d8d1f979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ee5f42-5d02-47f9-98ab-c6e43ec7d97d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b80697-589f-4cae-9864-03f4a94128ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784b475c-adf3-437f-b8f3-3175bdbdab74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788c5ec5-ceeb-4894-af91-65edddcefec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2ef23a-4197-4793-843a-fa6fc0f81572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a251a0fb-d690-45b8-a2f1-6612341fc6e9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70feb5c-64b8-4945-92f3-ca5fd785d313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9008b344-9ef8-44b5-a1ab-f257e6c35dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9d22dd-2d9a-4e7b-b9ab-00683b9b1c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "87e8ad33-bd1f-4900-b337-ef6194eae457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f340f885-7940-4cd0-a713-3aae5596513c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bded0835-c3e1-40bc-9dba-658030958208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3426b7e3-f675-497c-bd98-f8ca9cb7a894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161c1e00-d413-4351-8054-424cc3719cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5af260ec-60b9-44d1-b05f-b4950f268fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee56046-55ea-44c6-b50e-cb25814797da",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6e7eea-ad90-4dfc-be83-542774e0e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2129c721-82e5-4193-a46e-9c13526cc801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fdf673-4f4a-4c9e-bab5-4074bdd270e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c2d812-2e37-415b-9a86-b8db5881fd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee031f77-bcc8-4482-bfcf-3b978ef6f380",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fa0435-20b1-42fa-b638-681ed822676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0965055b-c96b-41b4-822c-fc65e1946478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e8222b-231e-42d6-aca5-68e558400cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9362d1fa-9b83-44e8-83c7-496722dff937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf734b54-ccd9-496d-bf30-f918b5006a1f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1b9129-7a33-4bd5-ba1f-259b11e16129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb72345-83db-43a1-bf10-42803f099ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38de1739-6fb7-4165-8fd4-b3a4b2727b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aabe0dff-a58a-4382-9544-4101b5a3a198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d40c04-c104-43b5-8585-89207eca61a0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d4197e-0888-4a4f-be18-71e095fc3345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eff80b-860e-4978-8475-41d06fcf6a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd13a40-933e-460f-8e01-614b17778c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eddceed0-ef99-4ae0-91fb-a8e66d276229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06d61f8-d8dd-4b47-adeb-a0d3366c8432",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288b7e66-3fca-45c3-a77a-e75f679a2708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151cb957-7cf8-44e0-b583-131fd137982b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e10b70-95ed-4a95-9d4e-e139ac4a0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "355429c8-8295-4f4e-b15b-2b9843e0f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3786f55-61ad-4043-bad6-77888e38fd36",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40a2e48-4aa5-4cdf-ba5b-581e2d7ee612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aad1e2a-89a8-48a5-9dd4-0ecd69b0ecd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0742e1-392a-480f-8664-9ad46be8eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d56deb84-0a4c-4181-9be8-c985bf9564ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b68bea-8c06-46b3-95be-aabd93535134",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461c2941-6084-424f-93b4-4576b244dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b95f67-9070-4455-9fd8-25793ffa353d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c81ebf-8ddb-40f0-bba7-909c8bbb14f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf938ff4-2edb-49bf-a437-dadbcf81d857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fdef1f-856b-4e3d-9dca-67e4148fdb53",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b5f186-f5c0-48ca-951b-e350101d4ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf8c9c4-731a-487b-aeab-0577a8ba26ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4bf636-4f43-430f-801c-41ac3676a089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "149f020d-ec33-4bc8-858f-f2e748a0ed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f90ed4-4c50-43c6-a9ca-5af5416efefa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4841132-31fc-4ee5-ad87-bc49aabd343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8639901b-aa87-41c0-9d26-5f0a4eff60b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cee2c5-ec87-4fbf-9818-c2e9d38d1346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae69ea0a-1b27-49c0-8f21-119c7c19afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef13031-dcd4-41ef-9b08-3a057511d85e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40af67a8-f004-4dcf-9372-27b4431a328f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7ef2ac-9b9c-4a7e-922e-30038c0c85c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb21a5b-35d1-404f-99fe-d4a1d07c8472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86aafd59-5784-4198-b02e-4e7f3d6e2648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4833c278-28f6-4008-8334-14a15639136f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c822afe3-13ad-4f04-94d9-cfa9e89d9d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cb9447-71f4-4ce4-81a6-b9fcb1b063e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac0329-c770-42c5-8bda-2be0dff3978e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0169a4-71ab-417a-b239-d65629d9a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6037cd-d001-4b2d-b64b-fdca464c4041",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a8c13f-db8a-485e-9d01-d17e5892970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e96d93-4f81-4010-be05-e5ce6a5a2ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8730d28c-cd3f-4261-a86b-488159cbbf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db1ffa5-f0af-457b-81f1-0b19ad62dd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fb62a5-cff1-4c3b-a140-41dd3df6568f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37e769a-0b92-4670-8db0-556f92a2bca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb36a3a8-ffb1-47f8-9876-a56585885b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4fc62c-fc9d-4ed0-bc61-7a58ae184012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0048d543-c356-44b4-a96e-e28f4b83aeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a730d936-5b0e-4dc7-81df-b898f5919c35",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff4a5ad-70e0-4ec1-bc1e-00b4c07de288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f68e95-60c4-498c-8ba6-1d48bb2674f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708737bd-f523-4bd6-9cd1-c0120fbd2a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fae8ae51-ddac-4fe6-85f6-e4f0601d630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170fc908-2ee8-453d-8ddd-d99a95853e77",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a05aec-c74b-414f-a0a7-f630572c0856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a6c0e3-75d5-4dff-bfa6-1faab84bad81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1df8dac-903d-46ae-a89b-8e19f76c00bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "77146e9c-1475-4c4f-bab9-832e77581f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0e31c8-2385-455f-b7f7-627af6045f45",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c0d356-762e-4d36-a945-84560c455295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9390ca5-63a4-4948-8b47-abdd2ec26f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3a5e7b-ef71-41fb-b8ab-d98568cb5064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e867191-549a-4258-bedc-e2dcc01b23b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe2899-2727-4c34-bdd3-b63a83095978",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8bd572-76ac-4e65-8aae-7ac1f9afb870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64c15a3-6384-4122-b6d0-a5010be3defa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea55f79-6974-4cf5-928e-78890cd24215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d205ce77-5e57-48f2-9b62-537a19bf708a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290cfee6-d0e7-4a9b-b3b3-fbf5091b91d6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fd8f29-a584-4441-9110-3b9f4eadc09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9463f2d8-b199-4c5f-9c50-8a79a36e7db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1f0429-d025-4a46-bc50-9770dbdad84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1afe2a78-08a0-430b-9ea1-07afea734ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380756d0-a216-44de-975a-3fcbc4d8bcc7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32bd1a1-8ff1-47d4-bbea-ecb177d83b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90295637-1819-41d9-86e8-0310302332d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af168d1-4d2d-4968-99db-8559a98ce845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7d4102-277c-4acd-9fca-37643fb6cc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e5a0ff-5db6-4c58-8707-aea5ccafd787",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7380d3-9a9b-4326-9927-8f7f00e9eb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d934e-01e7-4a03-952d-313959c9aedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8e8588-7b73-4910-ae8a-c29404ce488f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a29fd4d8-aea2-4554-b343-31dd1e57a37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a06588-4bb2-4c5f-ab18-322555e9f043",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d96ba8-e4b5-4723-ac4d-6bc3a22996c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325a4a5d-c8b4-40aa-a859-d03c451ca897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f79145-359b-4b19-a17b-3be5748d0932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff86c58e-12e1-4999-aba9-5b3fd32ab1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d5feca-d901-449d-8a39-5880c5f36c10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d031282f-c65f-466f-91ea-213df2e6ca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b2b0d2-e306-41b1-90b8-ac7b77996903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4302e1e1-68e0-4883-bc28-94369a0fd40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1c54ea-5198-4ec9-b06d-8e6da12c910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fba3c0-a795-46fb-8a31-08685ba59795",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a63ab7f-51dd-41c9-aad4-3af2e296a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e598a976-6bdb-4dde-8458-4ff4486fb5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35d813b-39cf-4b87-a992-b4f638db1aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71201a88-9ab3-4e84-b56c-334af163e48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b28bfb6-49dc-4519-8420-58b161486680",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3059c3-a7ca-4227-b6e0-1052dda831b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa5aef4-7631-4dfc-b226-adc0666169e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8104d62-36e1-4ce5-96ca-3074e396e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6f7b51-2fec-4d02-b1a8-004f5e889f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3baa532-10b4-4cdb-951c-7744824b6d08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42885ca-eb42-45bc-8815-b5465ea1896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7378336a-6bbc-4a83-b5a5-ad2d5459d30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710df42-f03f-49fd-8c81-44ef447c8393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "54396028-8c41-4de3-a546-e51edb630cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45b8d91-a455-4885-810c-321b637634d8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bf3fd1-6eb6-40a5-b03b-4192de740833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc811f77-3ba8-447e-a495-386d621cd1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f78805-77ca-4aab-9f97-124f9ae2fa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d38c26-d546-4151-ac29-1c4a2b59ec48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1e2127-3f1d-4a56-932b-e0a3f669cec7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53a4a3c-a753-441d-9f09-b59d3646a6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9fe05c-1ede-4082-b559-f52f9e564fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865abaa0-bb94-4ec3-83ce-dea45a653e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c581eb3-7e27-483b-9d66-2975ada91185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952e8ea3-e197-4d28-97a8-ef425a9c7627",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3150adb7-6092-468b-8292-30447aa0b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7b1d9e-fb72-471a-ac58-ab99b38e203b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f9fa43-9bb7-4c08-a9e3-9367622256a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1722b262-c531-476c-9cb5-888b29051e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff213301-34e3-45ab-8eba-86e1f8007faf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e8f9ae-14af-4958-b8af-f455126fe074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2520188a-4faf-4148-a46a-1c6650d5263a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b667c4-10f5-4337-893c-ad168f7e61e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4387f41b-e7ae-4404-95e5-ff2477c5624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449898b2-bfd7-4b9d-91f5-a3b7a446a2cb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b97bc1-3881-4e60-bc30-125d711adeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb22ba60-de34-480a-ab3f-52715d1c45f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7139a55-e636-468b-a86d-0bc89e08abc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6a66c7-f2b9-442f-8a15-601b1e124921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917868ca-2195-46a8-ae19-ccd0cdd0e62b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d283a-f76d-48cc-b9bb-fa568cbf029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfa9abb-f554-4d95-93c9-c04477cf8b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5003e5-f45b-4e6b-af75-3e7fd84fea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5ce798-458a-45f4-bd53-53f490ccd945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b528c08c-f4ee-4b56-b460-b79dfd6a505f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03819966-592c-4bef-9566-05b2180bf789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8d828b-8e44-4d9d-ae28-799d0e4b6246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b603654c-50a4-4bc7-8bd3-92b25a078de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4919aa29-4eb8-47d1-90f4-ba2cf3da5a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc005290-6612-49ff-b3f4-e2872842f127",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225fa819-4dfc-4c36-88ad-212c7f90916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540052b1-9c6f-434f-9550-c87074ac7da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76f325b-4071-4d9c-9063-dd5a931ed50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5899f2f-ae01-4add-9e20-22073af5b434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5bc69b-6de6-45c5-9bb1-1ced580f63fe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1d92c3-3dbf-427e-81e3-d8018658483b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73f5462-d686-442b-b02f-16ddbd928c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b18e4e-348f-4eb6-93e6-3309bbd105a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0f9fde-d4bb-41c4-ba92-c7771f7d1586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddc955d-2d04-4778-8d26-8aa84967f4e5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363e41fb-672a-4142-89b1-b280c11c0f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dd0b5c-9fec-4700-9b09-d36f0ff46578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee4c735-577e-49a9-8bab-ddbe1158218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c09cdaf-3b49-42f1-9da6-85ac25d995b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e769fb-f751-4268-b228-789856d7e1b8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54914210-25b1-4531-9640-319f27a2366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f56627-0795-45b1-91f6-c29ffbd77ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79adcaea-fa8c-4886-a0d4-d1d3d31dbf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3240b9b-bc7f-46e2-8803-9bb0b16d107a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a4c1da-4183-4551-95e4-d1a2041f5837",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e00b4f-32a7-4acb-af8f-3eec831b23cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9352706-9c1f-4148-b1c6-925f06335fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89859a72-ae63-49f4-9f45-8512d6a0173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f98ec9-e623-4ab5-a261-a4e3db04aaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b032ccdd-9826-4b1b-8221-104766a3c6b5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ce3552-88a4-409f-8289-2ac017b94f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210ecc8e-59ef-4383-a807-92e3bc049f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4b83a4-b730-4b00-8ece-f3c700124fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fca8c85d-553f-40a6-b99d-2ab7d9de836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b65d5ac-2bfc-4395-924f-1f92b67413b2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c63c5f-0674-4fee-bf4a-da0824d849ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d5151e-c3fe-4c42-81da-e21ba1886898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c738f0-b6a0-4c6f-9de8-6f0d1a5bde5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ef2281-45ea-414f-a6b9-0db083834952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7e000e-6713-452f-a55a-397b6725c9c4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b72506-4b0e-40e0-8412-4651726914e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312b5848-e5cc-483c-8f02-136d4d68a4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b368278-7cda-4bab-bacf-83ebc52828ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1205f7b5-8b8e-4080-88f2-ebde56eb672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363b2561-0b3c-4b6f-9175-3001654d9fb8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df57756-9b25-469c-82d2-7c0b3def38da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735bab44-815c-4d94-b6e6-d916700569c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ea68a3-a8eb-4af1-a0c9-b73d8c38096d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31be9803-a600-49f9-b244-80ea14c57a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c94272-69a2-4e93-93c9-b0c7e4d851af",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce09e322-7049-4588-8578-6b69999ea81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2967a344-c654-4a5c-8f54-1184d286cdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd73ccf-5e51-4197-885c-8000ce1f9c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9f8574-eff9-4680-8936-9f6151d05773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c1b8e3-d93f-4624-b7b1-b8e69ab0ee9c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cccde8-acc5-486d-82ec-38514c7e4260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb25f45-df1a-46ca-876a-fb39327555c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e37e27-ff71-40b5-99f3-cc42eed4a7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a79a5df6-7880-4b50-9ef2-1e27b5d59f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9b9b99-6250-4483-ad0b-bcf979f1af09",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805836da-9b0a-4fab-a586-e2fdce7fd3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8959cbc3-fe51-48ed-89f1-92f1a4f0f822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0494d737-bad9-4f7e-958a-d084cdbc30a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cd458f-13b8-4043-8459-5516f1a3a9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eade92-6df5-4c39-8738-85c02db33fcb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98980cf7-6974-4ba2-8d3b-da40c91f32ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39212ee-ea16-4d12-835a-f1b71ab3384f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67266fd3-e8bc-4b01-8687-6bcbf1fe534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac592aa8-e8b3-4219-bebb-2df3918d3cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c7f20b-9b88-48a6-be48-0c432bef779f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d187a339-9877-4518-9988-7afd06c711b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7155fe9c-4a2e-4bc5-b00c-4efcc28ed08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560b18e2-1782-4160-9a2b-b3ea9dc7a4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7771cbe2-8d98-40fb-a549-2c3c9bab9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc69db5-ec96-4eca-aae1-69a3810a4bf6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0271a1f9-376a-4f4b-bb2a-40402679cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6d1872-e0f1-46f0-b06d-3faf6cb6ed4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4512e5f7-0b37-4ac8-bbe2-99f450c0ebcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f19f26-45c7-47dd-a304-1bade19461e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1622db8a-69f4-4bd9-a87c-d97e637fde64",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfe178f-d3dc-4822-bd6f-a3dccc983f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a813f09c-ea71-4de5-a3ee-207fd844e1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4238c9-0e02-4dd5-b808-b5591744bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ef992f-329e-4f06-b661-eda84f1e2536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caa6bc9-e970-4ec5-896f-d4a307d54cc0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e287e-7d23-464b-8416-467120f22676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0727408d-3123-45f0-9685-7e80f9813f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a657201-fca9-45f9-9d47-6329d2d9e35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dde2276a-a158-4366-862a-ecab71252abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd05607-bc23-4a21-b1b9-2c7b3a382fb8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a39d43-5dd2-47ef-9735-f720001f6dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a621e981-eced-4ddf-bcd8-bca8628e72ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e22a9b-fb6d-4384-8539-72c030a3a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0feab0e-84c1-40f0-88a0-175ebe16a71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e4512e-afb2-4e7e-b1a8-b968adc1f279",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c352f9a7-28ff-4e3a-ba12-c7c5e5b5cd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c53647c-6862-4ff4-ba5e-edb2195f23eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5513961b-3fea-46c0-801e-01ba44969791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3198d165-6069-4645-9f12-24e17514fafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4407c0-f9fe-4e6e-a694-022ef4fc08a2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7fd44f-ff72-4447-a61e-0fed5422b436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89739707-24dc-49fe-863f-2185e9cae513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689eb7fa-f572-40b3-ac38-57169dffbad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31348a8e-1d20-456a-a170-d654fd59aa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb54094-0459-4156-b8bc-ac9840a03bdc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e38ef2-e23c-4755-8576-25b6e148d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8de4707-8200-49bf-996a-c10399fa8524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5f05f2-3b6e-44db-991f-761e99c2bb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b95bdacc-c1fe-4033-b2fa-6d14c9f21df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f79f250-cc06-4d0d-bc69-8fa84fc3858a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f271d7f-0882-4321-9016-fb9ad5b3bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b150a22c-9c8d-4aa5-b893-940653a26c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dfe0f7-5bcd-4721-9d6c-054d12ed18ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa036e08-a522-474a-9848-e6b47d9a960a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4be6562-92de-4fd1-b638-79bcebef010a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55dee13-2721-4afc-bf56-759ed0afade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cdd4df-55b6-4b1f-a805-25e6864437ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f87241-ea6b-494a-aae4-0ad3c5b368d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "943d7697-2fd1-45c6-8336-1cef641f0f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2fd264-a5fa-4527-ab01-da76ed2ba9f8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e6f3e8-0c45-45a0-a044-91738e6251b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "59f1aec6-cbee-45ba-9e9c-47aac6350504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a071870-f05f-4f5e-a244-a77bdff3bdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc1db0e-cec4-498e-a3f3-e8c26c7b92d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bbb1749-8388-42fc-a371-c4475775b94f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8e0c2a3-382a-4dd6-ab5e-2d296beb89c7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f508e08b-3718-45b6-b145-f213cb6d4bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "764bed4f-aad0-48dc-a52b-d1f85b87ae7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0564bc1a-bf3f-457e-a91f-f2be9ce20ffd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7d76ea2-1975-4d8f-9c1b-0453b1b42aad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5530cea6-8db7-4ddc-8d54-29b2684c56bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04d20b04-4c2b-4e4f-8b57-10ab7b911d92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4b6d4da-71db-484b-8699-698ca5953803",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa0a37d-7f17-4c07-8435-7fb2c790b9bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79fe22c1-a0b2-43b6-8eeb-028b8ff7f850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4580a500-4333-4315-ac9d-504f34b17569"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78d92ff1-3cc1-4f54-8b84-44949b703bcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5e15aa6-72c4-40c0-9fbc-8f8e53f5a773"
                }
              }
            ]
          },
          {
            "id": "c4bba53b-ae1c-47e9-9b3c-3a0497d20828",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2bbf05a8-72cb-4a39-bddc-767aee28c83b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e540fc4-ce6a-4cdf-902b-9fd33cbc9590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdaa7014-d04d-4f65-bcdd-a2cc27f41296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3595bbff-61f8-4538-b70b-1aa1ba0b2b38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54fcee2e-f503-4d41-8c05-739b62f5af04"
                    }
                  }
                ]
              },
              {
                "id": "9f7ab764-ff1d-4c75-a550-579a688e869a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38e1fafd-de62-4f4a-b350-02be01b3d291",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e40739e-294c-4d29-ade8-83736e3bef93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "701b8368-b774-4117-a857-1d574ab35b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12164e95-9649-40ba-a540-b4f54d5f1de7"
                    }
                  }
                ]
              },
              {
                "id": "2884f4d1-b0f7-475f-8afb-2ab517325168",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d44362fd-05b8-4e90-ab75-4079f8b31a62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d62b97f-efc2-4091-95d0-e0148280b58f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eee194d9-7c13-4422-a764-d90a3c6471af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ba87c90-4632-4354-9370-3e07eace5fc9"
                    }
                  }
                ]
              },
              {
                "id": "2b2b12ee-6683-423c-8698-c9f48c4e462c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f319ed3-8ce3-4a76-94aa-cd99b42d4800",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c74c3fa6-7edb-4aa7-a1a5-18935a46e231"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43e9ced4-d2a5-4451-b63a-7b2f0942a7e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d2166fec-4d31-4213-883a-c6a5c20c66a7"
                    }
                  }
                ]
              },
              {
                "id": "6ac59897-ce6a-479f-b07a-4515ca846a0f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cd7b005-1cfa-45a5-b34b-55503995bba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a230e82-49f8-4813-a3ea-1e8583b38f83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13cd2187-a284-4481-8d98-f7302f2bc530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d5efceed-0293-4455-9161-819e5cbca3b0"
                    }
                  }
                ]
              },
              {
                "id": "ff02a375-e6cb-46d2-90d5-c724529b473c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c7ccfa-b760-48cf-a220-997074a2487d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0b42824-19f2-4b80-9efe-d22acc36e4ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6eb9d278-0073-4154-bc60-8612031397ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b3b2df0-1d3f-40ca-ab12-184b05295e45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52ffcc3e-6ca6-45e2-8bd6-2db00eccb2b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7fa9730-2906-41f8-910b-e7b4e0627b5c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9b5c4fe-45f8-4799-b67b-3124f5a5c5b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64244cfc-7075-4621-8800-9bf30fc240a1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "badd0704-6203-4e6c-a18c-086f1942da26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e103a1ee-3eb3-4e30-8df6-495f45fd9d42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38a88800-5b55-4885-bcdd-ab99c599ca1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7eb0e6d-773f-4d04-bb5c-34bb1a1bbe92"
            }
          }
        ]
      },
      {
        "id": "54a3ea75-24d7-4403-99a6-180a5556a557",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "217faa15-c30d-4a78-bcf8-a95937081a61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f56153d-d1e1-46ae-a73c-315dce43ddd8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f56780c2-09c3-460f-aec7-65224609b267",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6662c27b-51a9-47f3-8b2d-939daa656dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25aac5f9-0939-49b9-bbb3-ba22413b8fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d93860f-7565-41f8-940d-753aabf1f433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "551ae4f6-c872-4dad-a5cb-98837d69adf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35018a4-6d6a-48e0-8c1f-05f5ffa97752",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55f9bcd-6d10-40d4-b814-9bacb8fcd564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa792806-cf61-4953-bb3f-8bc92f13f8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a3168b-2ae9-4bb2-b1dd-65672240a975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "369ab067-be9a-4b18-ac85-33485811676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c33ae-71e8-4be6-8be8-1e6aeb3d3895",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3326fdf-3a3b-4d3e-94b1-92ce5725f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc47f6a-9ebb-4478-954e-efcd6995fa16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1590f82c-9040-4d6d-a39d-d4db0ac70ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ab63ab-7c7d-4255-9b13-02ee83a9205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db24a4f5-d0f7-41eb-86ff-f455c0c0dfb0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf5f5ef-2655-446d-a010-e2975cd186c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dca914a-401b-45b1-ba39-fc74dbb6306e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f261a460-00d1-4c00-b791-b1a67b070be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec79126-f7f9-46e6-918b-e5b2240ac4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7f8afd-4888-40bf-8d09-93e4526f6957",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8251dfe8-dfdb-4567-b6fa-154a4972f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84160903-d905-49b3-a781-7bb6add2d63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67369329-69d0-4c2e-a3c6-9e375ac30ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc396cde-fb0a-425b-9ed5-49d494576018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcec1ef-ef55-47b5-aa80-0501ee41350e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480cc73f-58f4-4323-960e-e40e9957fed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06a212a-9cdb-4f0c-aed6-4543ed7940ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d8e1b7-0757-412c-a00d-94dd83059802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5a9df0-ad43-4ba8-892f-3f47149799f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad172a8f-a1ec-4f25-bd8c-15e65e189fb9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f9ae11-15d0-460c-b863-d4783b878a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb27d48-4799-4124-8669-1f33ab9142b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd51180-13f3-4265-9d47-55456fa180d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6556db20-a455-4e66-bf06-9aaa5ca9def7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd99ad4c-6890-4016-89d6-e86de6cd6a6a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357c8445-3f91-466a-8cc6-e005e02d2892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00349102-c27f-4ae7-b170-4bce106f758a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c91bcf-508e-4893-8a17-aabfbbbcd98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68002829-d434-45e2-835e-89a4abafd37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9281cf5-461a-4230-9b0f-d98fc0612dda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b464e71-3fb7-41ef-8c9b-cf58f928bfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6def39-a4bb-4b89-94ed-befba97b9e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a372794-a195-4111-b502-453675f93950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f320c03-85b6-4743-a02a-6896a161b950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3302f691-2c3f-4b8a-bc3b-386e46b3f68b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc2fac1-2638-4aa2-86e2-cad7a3213daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f01591-fbea-49e7-ab16-13da112afb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2ccdfb-5d5d-4ca1-adac-8781337d1412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "168d69da-94e0-4ee9-8c0b-7a4c99afe43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9acd7a-e73d-40a4-931c-5a460b7cfa7a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f107ee41-81e4-460c-93f7-89fc27be7ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8041f7a4-7578-405e-ad87-5b8e1fefe6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639efbe3-6410-4d53-9222-06a88eed3f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec8c572-a07a-4c99-a71f-77c431b6712a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb96f06-ff6b-4370-a3b0-966e5b154e0c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8845a165-f48a-4555-91f3-3570370040bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b385fca5-ac04-4108-b446-fedda1c86f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48c6514-08d5-447e-8144-229341d74eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "288ddb63-3fa5-468e-b0c5-22455f930110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7f291b-5968-45a6-980f-384a34f8956b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9839e25-df18-498c-ad41-08e863803587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac244b6-ef23-449a-be81-e0aeec64fbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1181d4-020f-4839-8532-17137fd48246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65570b17-b2d4-40c5-b9a0-18e7476f0f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53ed64e-aec8-438d-aa09-619b9600ab39",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874658b1-6256-4c7e-a9fe-ef0b42253282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b637a9d8-7008-4a24-8fad-b78621a66bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b459f37-cbf7-4d00-ade2-ebce142b43d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "63bb3616-fe1a-4d13-bf9c-af52668c8c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8977616-eca5-4292-8f2f-304c687c5266",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6538a303-980f-4a10-89c7-917e63bc9d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8823e471-92fa-4ff5-bd61-4834c9ebbf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2cb654-12aa-4daa-9967-c249591eb2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "72286da0-f259-4595-bab3-54aace32adfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09cfa7c-dff4-4cf9-9c80-67a5ca6f9e14",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56ed34-e38d-4560-a2be-ef7fde7a10dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4b1c9b-a1d7-4d84-a540-f66fca283b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba72c264-7d91-4fda-9fbe-0acc9023537a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a45c6f-d02d-4b45-8e67-6ceee9cb73e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2558246-3393-46f7-b912-f531a874d7b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949c33b8-f8c7-466b-b171-c4854f1e8deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa2ebf8-a8c2-4b34-9ff3-8316e90e3b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13be3b71-a103-4576-8b3a-ea67cfe27250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7addea41-a497-47d1-befc-e4248b00464e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aa74f2-3f2b-44e0-bfa8-22bb108e6471",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085b109e-3e48-4d65-ae82-b55367bc1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f97c93-501b-47ee-99fe-a3f95a9bf227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c700ed1f-ca91-46e0-b47a-4e98889eb688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c17ab2-174e-4fff-8b3a-b7e346782da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eab6f44-d49e-4edd-bee8-38b2a07e1170",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06d1d58-1087-4c9b-a18b-3d291554dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a582b07-92a5-48a5-afa7-502d85b3654f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a517df6c-9517-4620-a7e7-12ee8b742bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eeff150-1323-4102-a618-bd1a4d9eccba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba94da-007c-447b-8e15-941e6d9c03ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e83f03d-84a0-4699-bed2-004aa8c7371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dc6fbc-cecc-4213-8674-50d9003a7ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8ea5e-2236-411a-92e8-566629de65a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc51a441-9fbf-4c2f-95f3-1e6cee05c41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6621947b-13ff-4e49-9d06-1e3b230e3f5d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed07833-c52e-4d83-8a93-c73d4742d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20585272-ef54-45c1-aba6-5f17003029d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cb0bf4-c7b4-4e23-bca5-073b7f4f60cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6dc2dc5-fc2e-410f-9a30-34219bec69de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776b44dc-d696-4d48-98df-f352a2cf400d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3f96d5-9189-4e65-9950-1ac201a9c23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53f4548-db89-4b58-b83c-d20eafc22a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c283f9-e10d-4553-a6f1-4c30be50af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e2d346-3c60-4487-b90f-076cc65e90c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511797bc-8d0e-4226-8c1c-1844080e92d0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826a716c-048a-4c51-977a-0e7e200ede6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb15e85d-2e60-4c96-bcf2-36484243136a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9b9d5c-59cc-4a28-b343-8a0a60526fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe7005f-3f12-44c5-9f5b-ab9ccf593926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c220f20-afe4-4fe2-85b6-5f82964ccd30",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e603fbb-dc98-4964-8349-8c60cafe035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fce8737-31e6-49d8-adc1-54e9288cf38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25484e3e-9a12-470e-9e32-7660f724cc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c298dc0-8519-41f2-90e9-878faf9e0da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a326d3-ec1a-4d0f-aff1-76e48ccef999",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f382426c-ed97-4a19-8211-bdfe05559f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7577559-5b12-423c-ac44-6ce604bb2a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c0ea64-ca68-47bd-919b-b1301fb39d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12dc5de0-0c05-4b09-b596-e8075f33e485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782551e7-12bd-4be4-89a3-236331c60c1d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1aecd6-1c4c-49b9-a4c5-65090b05520d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d790d7c9-5f1e-41e0-9ec7-36fb62be9fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768fc1f6-9d3b-4b2e-a7ff-45471a2dc49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "543a3730-9504-4917-97f1-df5ee3e3113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ce7fd1-e0ec-4634-803d-c513bb6546ce",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338a8228-79a5-4866-a4cb-dd63086b6b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e572f80c-a3f9-4d8a-abc9-7ba3efe2e7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92674bc-3ac0-4aba-89c6-70ef1584d6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f96d6b-ad71-4a21-a84e-ee810f520af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6bb271-af08-45fe-9f12-60c0a747d7a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0244d550-e5ac-499e-b548-13f642808e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3e1998-9d92-408f-b188-cfacb1b5cda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a31a35-6859-4c3b-b354-2f721cfdf7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4364e4-8bba-4347-b65b-5ae152bd792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62b825b-c33b-4d50-bac4-c66551fd404c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb464a6-ba32-4a2b-bf3d-fa24206090a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4941ff9-6222-46ca-b6a3-ee9a048929a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca59bb1-f869-4700-b11c-443563759040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62be2e5b-fe64-44d1-8933-4d9329f989ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627186ec-5419-44f0-ae2a-cd229eb84d63",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f17397-dae5-4573-ad88-da4aab25ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14440bcd-25c0-46cc-9dbb-2bcab7bf5dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430849ab-2ad2-4391-9ed7-5a46d43b7159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0312a46-237f-47b2-85f5-cb9c4256203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a52479-097f-4fe4-a7bf-a6d923d699ea",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11045f2-d4fa-4a28-b24e-8e64f1e3affb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e02efe3-9585-4289-b193-90a3cdad64a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5f412c-e3d3-4c17-a09e-b885936a3c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f30f37-da4e-4eef-b160-78fa4ae560c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68239080-4128-44a0-ba5a-0a86f05f5797",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695253ef-cdf0-4472-ad40-fbe933214baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835359bf-8ded-42d3-b731-659c92167fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5193d0a-177e-4bb2-8b20-4b90ce874123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f00eee-3795-4f3f-a48f-6ad5d3fc1603"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60110825-679e-4d55-89bc-31fe38f6f160",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2611b278-1955-4aa3-89e1-913f25f2ccb8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d046c9a-b145-4e79-8802-dda3fb56f57b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4300b531-e6d7-4f35-b9a7-e4f944c1008c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbad4c4-2a28-4260-adbb-0161e5427078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44d3e1c4-8d8b-432e-8706-69d8cf54b1b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cdd917c-e6bd-48af-b181-ffd830c1405c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "484c5d3d-fb06-4df0-88d9-7141cd8207c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aa17c1f-a11e-4156-ab83-0544998e19aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0426758-0768-41ae-b73a-3f4574b5a728"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60cad713-2303-45aa-b180-26cf9336a25d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "096647a1-aff0-49a5-8370-dc34215a4d28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8940c99d-a467-43fa-b029-8348fc63643b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15acfff6-1872-42be-8030-495007671673"
            }
          }
        ]
      },
      {
        "id": "7f56755f-d786-47c1-b8df-8f26e11712cd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bc30eb2c-acc8-43b4-b0ae-7db42fdbd111",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09f03543-656c-4f03-bf95-596957c4b23b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b852d3a5-550b-4f4d-81c0-20ac16b07a69",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb66a0-5bce-41e8-9cf1-ff9827eb84f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af119ba6-2d34-48d7-8c9b-dd2c342e27f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc503e98-7f4a-4b8e-9fcd-c037b441bda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ff4c2a-4204-4543-8b6a-78afdbec2ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355fbd2e-9be3-457b-bbf5-5dd7c7bea0cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccae2587-8fb3-4e51-ade9-fe76d1b6eb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c3ac03-e659-4c06-9b9b-7afcd474cd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cec5c9-cc1a-4148-a373-2a58f6b66263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65635fa2-22c9-4719-bc91-660840cefa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df7ea76-300d-403c-90a2-f19b608f37d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4279bf70-3dd4-4d3d-aeaa-35c688e811dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c75e3b-6463-4e82-a262-8e9c8f5364d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92014a76-6ccf-41e2-b64e-71f183eaae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f7133a-ebc0-4b4c-808e-f07ec2e073ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907b1298-d89c-4d9a-ada0-4051e3456b8e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cadf809-e48e-4bef-96db-52fb6b3dd572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c31259-bfe2-4532-94fc-547d39850b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab50add-7577-4933-8741-d3a3dc7a6e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65258dfc-48e4-4784-a568-5d3da267e558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdafff3-b69d-4bef-b941-429b5072f33b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f854d2-8a87-42d9-803b-51ea611ee879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c81d0c-4ea9-480a-b709-a27509c5e928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cb8350-3d94-4b2e-842f-fcee5c6716c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1439d648-192b-4bd7-a7ca-ef637a1360e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33752ae6-de7e-4a24-a8a8-c6cd21b98bf1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4908a39-4706-4881-833f-053e3cc01007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d644d3-ea85-4d41-8088-4a31e5ecb27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fcf4e5-c822-4a06-bc5f-0187293a676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23cbe22b-ebda-4970-ba92-ef891efc24e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05bcf69-5e00-40ea-af2b-99d92e5ef1c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eed5277-c1d1-4eeb-b32f-36da4f58d582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0afc7c-adaf-4b25-aa80-dc0514e8ee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d090ced6-9637-4913-b975-53b63845668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7b9164-9f89-45f1-beb0-4b2d6fac3476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b38ff9d-405b-4697-b931-d79aae8240a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d0ae1b-2662-458f-8554-dab0a06deaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f402a2-1b85-402c-a0aa-9254af84ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b649c379-9ae0-4199-a31f-1d52d8c74392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c87174-9897-41be-b347-a5f5f397af9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae920eb-af47-4370-ae0e-5af7f082d8fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8849bb-e528-4229-9faa-9610c741a1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64379110-ec60-439c-8374-04414916de63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04adecde-6872-4605-ae5a-992cfbe804c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1570b1-5182-4818-bfc1-709dd6febe41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401849b7-6b35-4a53-9807-9215e2216a4a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefdfa7a-2b3f-4a4a-8b0a-44377fb39e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b3f2b5-916f-476c-923d-2e7179029981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f72cff3-b697-4ed3-965c-cb8fc1ff5f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d695bded-6b46-4142-89f1-a4dff50140d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a50355-e092-4cd5-9487-6c533ae8b5ef",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4b7147-7a87-4346-a5d0-211ab7c4dcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f815eded-3031-49fe-95a5-97f3dc309f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda9c6b6-91da-49b6-a582-653fe08de795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e1ac0a-cdb2-451e-abec-120f2a6993fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a6c65c-50fe-499f-b669-cda0d8c73e5e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab66bf-92c2-4482-93f1-74911d27f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0086f0-17e9-4bd2-a717-1eb7b5297662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e195ac28-1779-4ae0-8061-e30870de12cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79086371-4e90-4c13-ba7d-24c60b92fc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39037c6-ac02-402f-8b71-9838afb284b4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78034bcf-560e-4a3b-85d6-b91a67c979c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d106cf2a-f618-49c2-8a86-c400bea35a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a0d8f-fa95-4ae3-980f-00505cd5cda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9bb14e-3faf-4afe-8aaa-ddcd4f0516d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0868fc82-9887-4a03-b4fe-51bc582c618c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9031b9a-990d-48c8-869c-613501b2e126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6a59a1-db90-4ea3-99a5-e12571501856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd67a9e7-16d2-4b33-9678-0dbca46e92e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b79767-f23b-4dd3-ae4c-21bb041d6ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d423a87-a1b3-46b7-9309-bd7421079ac4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5873ada1-298a-4b22-881c-3aa514489392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544c61c9-92a6-4ad0-944e-23dd21d5b10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ef0bed-d446-4218-84ef-b6ba697da799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "19207726-3d12-4e76-9918-0c112cadc2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cce1419-735c-47e4-a19c-964bd1657ba9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13256c5c-8d17-4ce1-ae05-4782a484ade9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0324af2a-9306-4cf6-864b-765d422b7e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5246df24-699e-4531-a02b-db81e60ec4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c513e44b-cf78-4cc9-a316-a8c7633b5de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fee70e8-3db6-4948-9e33-7c575d2d9950",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfd0e68-1590-44db-ae94-f5d9dc2a7d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c360d6-caf1-45f5-b816-b7219d163fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4855ae88-db4a-45b0-8941-a5e0d8adb595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "111287ec-2c67-4e41-925d-656776848371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b093bce3-9af0-4ef2-82c7-7100e467a2c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065a395f-daeb-4abe-ba0d-7ea0a711a6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed045d5a-1ae9-4cb8-b5b0-b1f7cf540c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa279945-b35c-44f9-ad8d-6b898f83f9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db7382a-a85c-45e7-9b9f-8d142195ba5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1508cdcf-ba83-43ee-ad62-5f452311386a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38184683-98de-4540-ac37-4d895b4abbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d116ab-a76f-457e-bfce-9e36093ad381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b739a082-f079-41f9-9f86-6ee8d63652cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3977578-59ad-463b-90df-522b681ae9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6380151c-1a93-4128-a44e-cf44c09ea941",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623764fd-7ced-4001-be66-ef62e7a7e248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7e1f12-fe1d-4973-94c2-20377c38545a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fe8768-b9f0-4153-968d-4e26e513afe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7369cd5-50fe-4f56-bc67-7eb8d7d48cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaeaf4c-5059-408a-aef4-5b148ae58112",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe42ffb-f937-4b4d-a062-37a846f719a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc401b4-ec01-403d-b892-31161d43f1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc9f9af-d43f-4af4-8017-7684f4c35580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb73c576-cf6f-4ef6-b546-c467301daeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea25dfaa-cb95-4c07-97a2-69c27e78254f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcea70cb-de17-464c-a284-7a807e7f17b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2958cc-922e-4b31-8fd3-51ab59d0d15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8df1b1-c849-4701-8d5f-7b555d3b3b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b826beb-a936-4378-a682-115ff7b599cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe816f6-5fa7-4ed9-99ff-241e80c402b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d30465-6c2d-419a-b889-bcd7356f3178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbb8e0c-c210-4acd-80c1-da21c562e6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d3bf3e-9670-4a7a-a2b7-cdd2f36e6663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d1c6d6-d9a4-4e4b-8c13-978de1ef7d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e572ba36-c9bc-45cc-97e4-9d2fb2ed93bf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9764fa43-a7eb-4f40-8e3e-f782e907e83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6ac325-dfc9-4b55-ad17-6786b92862ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713f7cd6-265d-4c03-8dda-21a4e06f7bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b01632e-7d17-4b05-b426-32d1ee360134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361015c1-37a3-4e18-80bc-737e03019195",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d89f22b-d160-4878-a5e2-d630d28c6b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26f8cd5-eb8c-40cb-a9a1-91f6bf5bfe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a384069-9ddc-4788-8937-f2cfebd0ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccaf1557-de1b-47a6-9a83-c5e9e1b5e573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f7ef3c-3f70-407a-b70e-5d10c2962987",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2f5e03-65a6-4928-bb25-9fd5a04bd96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a47a64-172c-40c2-bc05-5fb3c7a8cc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e190fb2-6e0b-4726-9004-1ceea1c0beaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "948663e5-e0a3-4c14-9c4a-2950df42afce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5857bccb-ca0c-4eb0-842e-e8e55c97357f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb813018-c919-424b-a1fc-63100d0b1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c9ef72-553b-4384-ba3b-6824206f83da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdf741b-e1cc-4e66-b1ab-98d50cf9f90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8a503f-2c8a-4076-b134-17f67e6c9727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2ff2d4-8e57-49e4-89fa-cc279f57f139",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7317718-8286-4b0e-a614-f006361a8a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96575757-5390-437e-8bae-45a13af0840c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce55961-36c1-4f08-ae2b-c308d5c941bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fdbd60-0e3d-4314-a84d-e3de8a702144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f3d392-f2c5-453d-8cab-8e07c61e4ca4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6bc6ad-7abf-4cfb-acb6-5b2c81fdf92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae86471-e26b-4dff-8ca7-f311a5f0f09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dae83e-24c9-43fb-8ffd-b1d3c2a72633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44973f8-2c90-43b2-971d-612f1ca31abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9895c7-c7ac-4df1-a30b-69ea396b89bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767229d2-98c4-411f-a7eb-31112ada5ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecc9c31-3c0a-46e8-8724-ee8b33ce0f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645201b1-cdba-4bb9-8183-1c3ae70e656f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bcae37-fd2e-4bd3-9b9e-970fe00966ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be60c8da-27a8-4ba4-966d-6bff26ecab69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fd9dac-f158-4ed8-9471-034a79e40e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341f5de8-3b25-4c91-b7fb-f2df5177dc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc3b8f-3740-47d1-a2a6-7f0aa160caaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3323ba5-3cad-41f4-bebd-2be1d525fb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c13143-6c51-4313-b326-faad475c6875",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5c59a0-3609-48b7-b2db-97c97ba6d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ce4631-7d2c-4fec-a446-538894700662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f84582-8c27-44f0-8dbd-3ae3bc5623d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7578ec67-a82d-4455-a965-ca4dcefa5f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4b1fa6-49d6-4c54-87a2-a27967a1c059",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc10e296-7aa9-4b53-9e71-ff6f2da7218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3b7cb3-bed0-4391-ba25-24ec29bc1ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34dff87-15c1-44e4-8b45-9e56ef116824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "889e388d-864c-4159-82b2-fbc43187ffef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d53724-463f-4c15-b311-3b270ba1386f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3961f88d-3b59-473d-9234-c37511d36f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff09dc96-4273-45ab-ae84-ad48259f71a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfc3463-47b8-45b0-9487-0a2f2bf59f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e331d5-d4c5-4de3-a024-2ed94c5f94ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3216a0eb-82df-4cf2-b736-1c3897f40b9b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1214fb-c4c0-4200-8162-4c59aa8f457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d479a1-7557-46b4-a386-4c8990e767be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec1734d-aa05-49fe-806c-43492becf379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74df8fe-e4b4-42dc-97d8-227c8d84aa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1c9fe5-4d4c-438d-93de-3368c915c899",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973dfe53-4a0d-41c9-9710-e47fb832124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c07d181-6427-4c12-a0c0-c687d568fb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb0308-f523-4775-9af1-49b7d1cba978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf93472f-25c4-42e0-aa5b-02631f9dd3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8465e40-58dc-4bad-8270-00de2a8dc26b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb69d9ca-7c97-49e4-a71b-13df60abcb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77292b79-bdb2-4979-a42f-025bd1996bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e46f1cc-5f7c-455d-bc0f-29df819620d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd000a04-75ed-4f0f-a9e5-62abb70087e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74e271a8-8179-4f80-9749-261a7622ac75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c20bd0e-d3fc-4c7f-8560-851cc49de48f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd7c7e6-f571-40c6-a362-528dfa6b23c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d7e207-375f-445c-83fa-597b2ddacda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad5cbf1-3fc8-416f-b992-3b2436c22d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93b56ff3-e6b9-4fa1-931a-4203c868be75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8e34290-4250-4543-97ac-82804695c775",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21ee4a1a-c7f2-4ee0-98e5-ec4500b4b14d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03dcd26c-7149-43b9-927e-42b0e4989f10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d22baf56-a4d1-4c3f-b134-32df34e4ce5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1989ed1c-cdde-4ab4-a08d-82de5fc155a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a0539c5-7b14-4d38-b42f-df1650f64d64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb26defd-0aa3-41dc-a36d-3232615840fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2003fe4a-f332-4792-8d9c-dfb53ceee5b2"
            }
          }
        ]
      },
      {
        "id": "5252eade-b350-4a8e-b54d-f10a35787f46",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a18547c-f9fe-4fb4-96e0-c8314be34b33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e9349a8-57a6-4a40-bdf0-44948a07fb9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85301450-a8c5-4207-96ca-c415066fa32b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b26ea44-7bdb-468c-97f9-346e7b59c409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d72827f-054e-4714-8210-4db80547861d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b9e0ac-669e-4f8f-8b35-ca8d1dff69ce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96784e5-77d9-4671-b870-bd029b3c4045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6403c218-7468-416a-9aa5-0a317e7e07fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cd2a3e-6902-488f-9450-a3ca47153051",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9eab7e-9bf3-4b56-a83d-8a81de7fe484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657bf6d7-5faf-487b-bc62-e1242c204927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d522ae-0f00-4d15-a3df-5f3573cc4d3d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a7ccf2-e46e-42de-a7f0-dc8faed6508a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6ec2a7-47b5-46ea-ba1d-ac4b9314a2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94eb6d67-3ede-4d84-99bd-9bd3b855a1da",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d013d7f-99ea-45c1-b79c-94884480f6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2142e25-bb04-4c5c-ab42-b2b76502dcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02df4d41-3068-4320-b45d-067429dfe60e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc06bea3-2f37-4cd5-a800-dd3231441b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fcb0a5-8f17-4b7a-82f9-ea6b657ffdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b20adf-e975-488e-951e-551f763b4a58",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f58074-a389-401d-8b77-b147a7aeee77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50bed86-5e61-4c3a-98a3-492a23a693d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de15b3-ea85-4134-a1ca-ce311c0bfed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba69d682-7971-49d7-868a-b36479dfb382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba25b44-0335-45d7-a840-ea150a32f83b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb957dd-7f02-49a1-876e-539379cabe6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23627040-804b-478a-b0e8-b68a3d3a7964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc1dbc1-2f5d-4bd9-96f0-531c7c62a108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30110f13-4358-4027-898d-708568a37e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae01be09-419a-472c-8246-a5276c21f006",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bca9af8-771c-41f8-b9a2-354f7d1f1599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f93a5db-8cc9-41bb-9eda-c3adc070737c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7534b544-072f-4c71-877d-b5b1f8d264bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4e812f-1548-42b4-9058-ecdabf33a538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e4a39a-65e4-4858-bb0e-4f41fb71cf3e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040eb2b5-963e-491e-aaa5-fbace7f69624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a601e730-b9c1-43e1-905d-044d0d09cb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ad9684-8bf2-4a77-a7d4-aae42ffe5079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fcbb40-ea6d-4181-a661-5ada06773445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244c6fb8-e050-4a6d-8002-b059c4ad78b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7169077-cfd9-4fcf-82f7-f0a8d99e327a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f99c28e-42b4-45b7-9767-5817adf39932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab00c979-9d44-4730-8b1a-f94590f47d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34851ed-9f52-41de-99ef-5dfe1a90c359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76ea4e9-a697-472f-8cd5-929ce65d6b19",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1366fa-ba9c-4d24-b269-a5c9c9426e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae93a96-e7e9-4258-9687-f95fd96ee61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3310b26-1dd4-4aac-8e94-56e55b44c1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29dc8c4-3a15-450b-a6b9-13ad4a75a566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928396b0-0c44-49f2-a578-c60a695af589",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a933882-3cf9-44e9-b3db-8eaeddb0928a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf1a2ba-5711-46b5-8335-5b564ac8ab5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2d75e5-744e-4fbe-8f91-d373d1c1c4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15fe830-ab34-4c91-a608-248fc88ab3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e7f1d-a651-494b-875a-10b06a3c346a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b888186-5d66-4ab0-8f35-320181658ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92dc8b8-7a3c-4c6e-adba-ab84ec682927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce37f95-a255-456c-b120-3b3e124b7458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14bb7f1-55a3-4930-88c1-84db09bbbc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512262c4-54fe-4643-ae7a-e36dbe9c4224",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fa01b7-2716-419e-b5bc-8706dd87abf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f732a9b-af2c-465a-8bcc-c490deaaea4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8f42cc-aab8-4574-81d0-bf2a803791e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e623fb44-a495-42a7-b7db-4c573adf1745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6fb758-4386-4b4b-8d66-3408a8bb4726",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99319004-ca1d-4a9e-8183-97ac5cc99dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5614ed22-13c0-46ff-9e73-70abed9025f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd20cfd-560f-4572-93ee-affad2179771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227f3d7f-f3d1-49d0-8046-67722efd3820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309034f7-fd6c-45e0-b624-23bad45dc84b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c74d485-16b5-46d8-8d6e-fb8e55033247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c428a7-4719-4849-b917-3d4e27ee8572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49dd908-fc4c-4b2a-b670-43a54f56547e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e3f9fa-ffed-4c55-84e4-2691e187867a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d023a6-f25d-40a2-897a-6184452d41ef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96f41cf-f881-4e56-aa78-531bcc051783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e77529-5b29-4552-96b3-7a5d74b29461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab073c-b139-4edf-aa8e-dda971588667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3318f4-fc6d-4f75-bd40-21c4d8baa62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960f2194-e1dd-4d95-84de-717114ad6628",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb05680-19ae-44cf-8584-bc0c9273a2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7429863-6109-448e-99db-bf05720a327e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4234e5d2-4650-4b64-bd4a-a6af81304ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cb2b61-39c8-4731-a66d-c43ec73bfbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77455ecf-593f-4b41-a834-b7aee6e80a99",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7034e6e-a0d1-4533-bca9-12c3c4f945eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf5098c-5749-4447-87d6-29942b3d4a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3a1942-0556-431a-98aa-146dc431decc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27e70f5-5917-4471-93f7-59c4a78a40bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b65004-a338-4498-896c-1e77a723aabc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4a4997-0667-4280-8862-7e9ed73ffdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc5abab-6cd0-4ca3-8afe-d33d1e15115c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a235f0b4-e7eb-499d-bd19-0db318d5ea25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6f32ff-7443-45ae-b4ef-c831e82a2043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3f13f4-4bff-4f4f-afd7-4022da1dc0b5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad780103-e607-40b1-92e8-cbb927d0ea50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701c8210-b630-49b9-b201-2d898439f2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a0d6f-44f5-499d-8971-a18cb3de74f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646c5c24-7ea5-47cb-8f89-c4a663974995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15212ba0-5aa2-4b6b-9d28-abe673bec4f0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a11c1e-fd8c-4783-8dc2-63c82c5feb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c2abf1-d887-4561-8ba7-8a8c2d0e83fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac6a3b0-bb2a-477b-b714-35009bbd2f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840e4477-36a3-4c59-ad42-3eb3ac98784e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152aab70-591b-48b6-8e8d-0f4c16add978",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1027f3ae-2b58-4ec3-8bdd-5e8a71b44cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "905ef5d0-1bb2-4517-ac09-ce6cfe04ccb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334840c3-948f-4538-9708-4316a674ae07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10053a46-f188-49fa-a265-2b1cb1883441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15e000c-2f17-4077-88c5-a0ac1960cccf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc6a511-0d2f-4f29-9be3-17a1210e9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ad0b53-25c1-425d-a6d5-09c298d25d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddba5ed-6b93-4c07-baad-2c685456d158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b11d233-71b7-499d-8f67-597c67c90fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520584ca-100d-4354-8a25-26ab3d754088",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3200d8-dfcc-46af-918b-f479eb64f955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb04d3cb-da60-4e3f-a850-95252771042b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789dc1bc-193b-4017-9440-3d347a7e08af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4cf538-a147-4a52-8f7a-26b772f4ff6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08f50ec-4990-4f44-a60a-610f55c8e1f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a616cc46-c694-41af-8260-9f10352dbef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb541e4-32a3-4b3b-b9cd-ac1507a63146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079a774f-ef71-415f-85d7-a4139c2cdb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99f57bd-bf36-4e1e-a821-0e4a6156005f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca93482e-ae30-4ccc-83d4-90085ec272c0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f9b34a-5d2c-461a-bcd8-5238bdf2eacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427a3fed-6a65-47d6-80da-8b780a148458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94451a1-b01e-403c-acdc-521a9c79156d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92aef04-b9ef-4b10-b011-40de87dbc5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8478b745-b362-4bad-8105-419a01d7764b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f5dea8-2f08-4e0f-8f6a-8cb82867edee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd7fe76-424d-405d-9b59-35d262d06f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ad427f-e2a1-4de3-be80-625232752b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684e8110-0ac8-445d-8ab2-176b37c600ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739ba06a-4b76-4871-a400-870f5351b14f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5b36f3-1be8-426c-9dde-cff3c1ae9814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49dcc626-d3c9-4304-ba5f-80e51e3ef79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac7c06-bcf1-424b-9ec0-e144796669cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e2d04c-080c-4764-a074-3e5cef787105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41590b00-e937-45e9-89db-7a5d0f71ba9f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ba570d-582a-49c9-930a-c8838199a68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f4744ef-c484-4613-a044-3598d819ed7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d918269e-3297-458d-9b2d-1990586145ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9932171-ed46-475a-b1c7-30201d23f0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3027fb23-e9b6-4187-ac90-f3fc4a1ac8cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737b1fea-f775-4e5f-8a2d-4c105a4f94da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c0aa68-bd20-46e5-bbb0-9927304f93c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37299595-dc4d-4b64-bc0d-89c4dd05a3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fe2877-9e23-466c-aa6b-ecde47f85532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f3179c-f47b-47d1-90e2-8765fb13ed36",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f383612c-9d6c-4147-8c90-0181762ee1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7334750-5498-4f21-83b4-72178815abca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f20d159-1a29-439e-860f-cee032103e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef87573-7ccc-4173-a3e0-0905403119b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0259fdb9-21e1-48c1-9161-fd08fb453be4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1581e05-434b-4873-b454-f67b9dec0689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3ba24c-dbe4-451f-9fc0-0ff9bc85b484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78b30f1-c709-44cc-b74a-275174d4a174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48437582-560d-4be8-bdaf-2398c043b028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73378feb-1dba-4e42-8430-ef66c7eaf9bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f2c0d4-02de-4d75-b7bd-b58f49093810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520b5c96-b82f-4002-8516-0932cecd8bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563a7149-0324-45a7-95c4-d2dc40c803a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db3173c-9480-48e7-ab03-6c4039f007e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7b4f14-c763-4ca6-b36b-6b79ea987eda",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b47150-d876-4265-8fe6-c1be2a9c6cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8d7bf6-73fd-4d5f-9e75-70174d06ab37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac271a4-e521-4690-beb3-446ddf264dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d69e73-3c83-4814-b8ab-9eaf4cfa148c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559cfcd2-08ce-4bc1-b7bc-2b567232349c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf7f71-df3d-4229-8389-59029c398321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b16fd63-e5b6-41b8-96ea-adcded1e6028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e377968e-571c-4319-90ba-febe76083937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b148443c-8c8f-4044-a9fd-5a3fc0b219d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b076ae24-0eaa-4e0d-8db2-dfbecd7d0b4c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3632a4e0-55f3-4c7f-9882-5000e8c0651c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03c2b43-18b9-4a01-9c6c-a2085b3e0193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a262d7-91fe-48b1-bbf4-fc8be7d8aeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caca486b-0251-4d89-ac8b-8ea56cfe4596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf5b2d9-160b-4c8b-a649-f446539c6d9d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09827689-adf0-4e05-90d0-83362e5cb187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f613355c-ad12-409b-8382-da54ac45dc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01c58b8-63e2-4b5a-82e0-81f075bd1d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a93a2cf-bbc4-4009-b7cd-210c92079d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6b5246-e92f-46f4-bcd4-6df79ec0f0b2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b05c21-7b0f-4ab7-9468-eb5bebd02ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d990fb-9031-4255-987b-9458a3170687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120ff6bd-b0ca-4b81-b1cd-45c510a4ff01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faaaf3b-dff4-462f-a188-4e07bfdb27dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c44e9b9-8829-4260-8246-4456950c0f76",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097126a5-f41f-420d-b259-2835fab3b500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f077135-d314-4984-b0d6-85e2d179b98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2cf735-6ad5-4d81-bb8e-ff767b4680f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea11e484-67fb-4534-ac70-03d66509f32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3824bb56-7a16-41d5-88b8-762870ef9d0b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1638f811-ae0d-4425-b617-314c43f74059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724f2b2d-256d-47eb-8f2a-ce7763388fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929c234e-7b84-445a-9dfd-781ee95582e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d111ac3f-54ad-4a6a-a663-53dcba552693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcf9b75-d08a-41db-be64-a8939823f02b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072dcb00-6893-4ea3-939f-59695bec8c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdabeac1-6d9d-4730-bae0-54c4a7a23820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81790d79-1603-44d0-99f1-ca1b747d9a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5616b657-5283-4f05-a568-c35bde011a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d61964f-b102-4459-8181-147e38e0ebc9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f82c08-5c1b-4183-8a93-46dd7d85c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2804ed93-f019-4e54-bb8d-f08c48608d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a54a90-0b77-47fe-ad2d-9519d74d827b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74eb53e5-174b-4a8a-9763-110fea605867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc304bc-f0a4-4b6b-a043-ba5747a573cc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476f94ce-4e8f-4961-ae6e-c22830ece569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6932674-a8c3-46e8-a81e-7fc9e5a718bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f3011a-affe-419f-ab04-30e3b65502ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad06694-d3d4-4f55-8ba7-19b40489c195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3589747f-ebc8-433f-9459-2572c840a542",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd1c931-3619-4ebe-894b-91661bf2342f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a45b37f-b9ac-4f3b-b96c-6e0f3445fc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f52dfb9-de74-4c14-b209-f7d1df3db6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b2ec3a-428f-440e-a53e-0c37e78299fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a619279-68ec-41ef-b56b-cb6682e6f09e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b99f16-db11-4b09-8fe0-71d64cc380e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5849414d-c9a7-4695-a18d-3b1accfa7194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1e3787-3b76-4ee7-821a-7a8dc55cada8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c22f6dc-5914-49a4-a30d-4c654153ac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb2bca-63ce-4e79-99b1-3635f673671d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7781985-0eeb-46b1-9541-1a502d001864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f4c491-6e11-48c3-83a8-09884a87bc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ef4e6a-e008-470d-b1ab-65fb28b9d792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26c2b58-cd1b-4de1-93bb-4b7e8fe0ec85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1450067b-f4d2-4b6d-aa3f-4981a1b549b2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f90e79-fbf5-42a2-8a04-0f7b08530b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4f3b40-aece-4a70-bf9d-a41923848aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e429356-82dd-4884-9d38-57246f4f67d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aa83a7-100e-44e9-aaf0-30629adbf8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4313a3ff-2e79-4418-9ace-7f598a79c8d8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158763ab-ad26-4d08-b290-e4ce5ff34f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee16933-b3fd-49a6-803f-4fce2e14ef90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50215461-a850-45da-9f4f-cf65f8d33c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f466b85-0265-402b-9a82-a96c32a3d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1356340-57e9-473a-88b2-6e12368bd66a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebb508c-f9b7-4e26-805b-d3171bf48cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8809917-9d66-401a-8430-06fc9f08a94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e127a7-a11e-49a7-b87d-b2e32d4ead16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f9d961-a922-4d2e-8387-e8440776ee62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcc84ae-e81b-4397-ae3d-b9d6b3f36f09",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b9d314-0a91-4889-8cc7-ccb02c401133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de3759a-d841-4939-bbda-01757f8439ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6265dc-9396-4b5d-80b4-011eaf0f7f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabeaec5-124a-47a0-a9c6-7f5e62106637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34094b9e-d796-4677-90f2-6472a99b793e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e788f5d8-116f-49ce-b04a-39659cc1a2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1868b70-0b3d-4b32-8373-0293356f5d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f548da43-4b58-4f40-aee8-fc2723f17db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f69d78c-cc96-4048-85e1-5cdce9259603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bf28a2-0a98-41ea-8647-312b764840a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d77d9f7-fff5-4e71-9bcc-204c9d410325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97517a63-eb8a-44bd-ae97-d2e05654f621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7746fc-952d-4fbc-884d-0c82cc3f1458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede59791-1fdc-4cea-8b84-bc54317035d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a90435-05e8-4cc0-b5d2-47f49a93384e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3696425-08a6-46ed-8c5e-eb620f42eefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908e7ec3-0b00-4202-b5b7-7a970b45c773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53dbc4-2139-4d73-93da-43f5b0596995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a700bd3c-d589-455d-a88b-a414e3cc03b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90678dbe-8445-4de4-bfc6-82de0d37cdad",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67ec38e-de37-472d-8154-f1d97ed355be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e228d971-0c6e-4664-a00b-add14ee9a137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73378ee3-9daa-4bf3-91e2-b9b98ba215ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70986983-2c9e-4ab1-9cec-c54d36205cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a79edc9-d4f8-403e-8d80-8647ddfe34c0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da75c62d-3e5e-4d6b-a214-697471f85d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a764daa6-bce9-4975-8453-e1fd1ea412a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4260e1fe-a6a1-4685-8085-93d25cdc97ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878c99aa-34cc-441e-bd1e-267977fe5f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab396e5-060d-4408-9da2-354a32e01909",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8ad6ef-05f1-4b9b-9d31-c3597d54aa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c7e171-7aef-4ed0-9093-6f2cdd3600d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b6e35c-ff16-43f3-bc0c-060dac47f234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2983e282-03d7-4edc-9860-15db6ce65ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46594e8b-1fc0-42d5-8cf1-3f56e66e3530",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cfeef2-8819-4e13-adf4-de16fc453bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b724b9d7-9dda-4fb3-8a22-41001cd9b621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d161762-fd76-4911-8e3a-fcb84d260845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa4398d-6778-465f-b7d6-158a0cfda407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3800d37d-859a-423a-bde1-ddd909b9e6bb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad51b3b-4cf1-4084-b50c-b837be8a1b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f902bf4d-18c9-4d88-88a7-d63060130e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a772235-ab4b-4382-a878-acc053eb05b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1320bbe1-c99d-4c16-9d4a-fbf19ef2b79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4f9b26-de76-4826-885d-113da56adae5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98c0d90-7791-4c64-94a2-72ab457a290e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0e606c-5ec5-4e47-b3f8-e0b3990a4986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590fd479-4d50-403b-baea-068cbca2d367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b153319c-9825-4726-9484-f1e1cba78ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145b2135-d353-46a7-8e4a-fdcd755b1aa3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933e4afa-e589-4d7a-a7b1-78a370c9093f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322591b1-6f2c-4fe3-84cb-f8d8315dc822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906128d6-34b6-4784-b526-9055ecee441f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef9778-7d4f-44fc-9d94-1ee2f67be7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ccb62f-b9ba-4692-becf-cfed92946f16",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e637b4-0a18-4167-9bea-a695bee15a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80673ac6-c671-4eb8-b456-83a98cacdcad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5620ed-2846-48f2-b108-26c59f835686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd0c764-ff1c-4fd9-9f38-a48f34223347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59af04d7-7e15-4785-a84b-a5a3741ed3fa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a251a4f7-8a16-4c6b-b072-cd34c46d074c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9701e23-c612-49d0-9db7-f7ad1a4bc363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051e5ac-31b7-476b-bbd1-906de4e825ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde49f89-818f-4a99-8f2a-5e73525ee3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53ac251-ece1-4727-8296-079e0c5856f3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333cc625-adb8-4961-8cee-59cc1c038104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3578ec-1679-4ec5-8a30-43a96b1a6df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa7266b-2b8d-4154-9c26-57696fa97f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5fff6e-8a91-480f-9577-7c3aa59d838b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b27600-6497-449f-81c4-cb4157e9075a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9894f685-0d89-4828-9172-00b90054022e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7f31a0-65fe-413d-b991-bef1af6be0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33e1f3a-cf59-4119-af66-0ab8ea8181fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c9f883-37a2-4a29-ba9b-2fc902ac7815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8272863-064a-4acd-96ee-34ea6cc835e8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f68b1f-5a30-44fd-849c-cff482f740a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f047aa-a82a-4c08-8382-e240e0c55ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9e9d0b-367d-4aa9-b737-c0e8991b49b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7651cdf-f03d-489c-8ac6-6a8b3d0207b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795d0bed-0233-41ee-89cf-840adcb72e41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d876c343-84ee-4ce3-88b1-1b2c75032baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d061005e-0e18-496e-bfba-a436134a4d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6af2b2-0db8-4f56-9ba6-bf5774529adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a67e00-1d93-471c-aa8f-c2bd8880d358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc34c4bf-08c0-43de-8e2c-315d840df0d5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722d6f92-8432-4444-a8a4-aa09c72988fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448ee887-6530-4624-acda-e996aa56c7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7553bdd7-df16-4366-97c2-aab7d08e5f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0a7fdf-a80f-4b82-a68b-0bb53cc888c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77142aec-097b-444a-8f21-47c89152d8bd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd37e9b8-4981-4d37-94f5-0dfe40c24674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50dcb48-c94c-4a6a-91f5-5a0623459d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5add8324-5d70-43f5-ae63-3f00bdf8a7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488bcc46-92c1-4e91-b96e-87fbe319695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa41e09-830f-4c28-9d40-43fef6adae16",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325dfbba-eafe-4afc-a4d6-be38eeb9c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1521e21c-f3e5-4635-938e-155403e6d101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5b60e8-84b5-4753-ad88-9f71a3cb16e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c975bb6-da84-4b35-bc80-1921e30ae733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c63fe9-a542-494e-bfa3-22cc8f6947c2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1807d230-5dd9-4fe8-b971-09450a588f5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433a92db-e3e1-44cf-9a22-47c07135d65e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b654234-d0dd-4053-9add-81db80757cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef648a94-03db-45c8-a71a-c88ebdf24964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4506e6d-1b41-4d4d-8208-0d77d75665eb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddffe184-e8f5-4bc6-b2b6-bfe95eccea66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "046c4130-85f5-4edd-a32d-f1d00686e82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd27fb1-714a-4ca1-9e78-117ceb4c699a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df30d2b-c9ed-4487-99b6-e0391fe08141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8c2c6e-b914-4cfb-8bc9-07f9486832a2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a99c0f2-eac2-4ede-8d3f-fa30741c371d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "795c7d49-1fb1-4a4c-b1be-0fe147add29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540d50d-bc3d-44e1-8e94-334158e0d88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2101759c-d3ec-4001-917b-281828aef2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9cd6dd-a4cc-4a32-8aad-8409193123ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222d3999-a65a-4b15-b136-2adc6a14e89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f47634-0a2f-4896-a1b0-a80e77bdad16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac5da7b-779a-4b4a-9d58-f64806300706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb56fcbd-72f2-41bd-8daf-bd638afe47de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a1d8fa-7828-4baa-ab57-4d153f9d9bd7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2269b3d1-026e-4fc8-84ce-343dffe7143b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f4253d-6e8c-43cf-8e1e-591721a5ab05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5096e3-5172-4bdf-a7ab-d715b2ced154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22cfb1e-4f34-4574-a4e1-5e83653c3282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e78b2-0f92-46bd-89d6-8c9e6f423f17",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e05de15-d53b-49ff-9bcd-4cfced246841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed90759-fa4d-4727-81ad-10d96e4358e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9981b9f-ebcb-4279-9eb5-e767f8ef98c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2586c5-7e3b-4d29-8eb3-734116ba1a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff733ab-0832-46d7-82d3-ae9049a18fda",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bed9428-ffd5-4c7f-a37e-9201d383e7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c2e30c-2737-4061-8f1f-7ec8fe780539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77da295b-2233-4cae-9b87-0fcfb9fcb200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8959de3f-b965-4fea-b5a2-8cff05297ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d3f601-6803-44bd-8de3-102c2aa3128f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0933abbe-b8fb-4919-8565-b13f5f31a348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c2a2b8-4c13-4992-9cf0-9138c80ddf82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5681e27d-535f-49d7-8d9b-6d070a094ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7a12db-6ecb-4ecb-8c63-7a1c19da9dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f61951-00a0-46e7-8580-1ed1a043de62",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ca5db8-04e3-4792-af50-c1d2f333fa79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f23811a-66f5-4ef3-a047-610ef9889ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8ce98f-f5f9-4847-9cdb-d52b624f27e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a85867-096f-473a-9e89-1fd6b153d5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc79202f-e962-474d-bd8e-70693d2389f0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f62521-b7aa-4edc-8dc1-0a795b3ebe0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473f5866-518d-41d3-9090-da8d35419d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f112868-a472-48ff-9f28-c7b722d3dbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad55d96-3cd0-43f4-8460-09b2983ef86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672f4d1-e6a8-4191-9b4f-eb2add88d867",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c614e303-68af-4519-9ee6-fbac70f98536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f81e057-5dff-4207-a3b4-3c74c3c4c31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8c619-98fa-45c5-b4b8-649ab1d0d541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89a3df6-b935-4bbb-83ba-27173aeb8a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8888fa0a-9d58-4f01-8d24-435a7fd8e299",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558c6fec-bc63-465c-8e71-f55ee5e44ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa19dbc9-7a52-4e73-a3fd-dc8de04964cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d434ba0-7d2b-4591-bd66-ab8d3cc29886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dd3639-6b32-454b-9581-2ab967ef6deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e568e51-1726-4faf-821b-1cd2aa4ece86",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36f9dcd-0337-404e-922d-6ca50d0e2ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9139c7-57d1-46b8-ac69-e3597b755e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed909720-1ce9-4513-93c7-2e7399015730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d76eeba-851b-4c1e-8790-8c50caaa30ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c7e345-0b99-44b3-8d34-2f047bd78b57",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41352165-772d-4d57-a023-d49f87e540ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d678822f-c3bb-4210-911a-be93f7118549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be475a38-07f6-4d84-b9d0-1de7187b59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363bb7a3-11bf-43f7-91b6-d6c55aaf8d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5488051-6440-46ae-9f72-6a64b347c8aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95666516-3fef-456b-9912-2d317ec39bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17f3870-e1df-4c04-8193-5621eeb3b98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23df309-de16-4b73-b5d6-575901d62c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06afcadb-2033-4ec6-bf7f-56a13adfeb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e35a1-be8d-45d1-bdcb-77f02377af47",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfad2f7b-5a29-47b7-8a7f-2d5bf7410ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d855c7-559a-4758-bca7-53aef1649a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd153e5f-f861-4515-9f6f-882a427505ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae9a197-72b1-491e-a27d-c10e243c602d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4132d9-8720-4484-8b67-320e1eda947f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79f52bf-33bb-4787-9c72-d95b17660e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fb0a07-77e7-4885-a798-2ec6123d6007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97993d4-7278-47e8-b1f7-9c2b19065ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6655332c-a0ee-45a9-aa2d-86e05652e1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef1e2cd-21d0-4c90-a6a5-531968a2731a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e727343-282c-44a5-a525-e11abde581d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ac6f25-6434-4dab-b8ff-ca6e89911404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ebe7ce-d50b-45cb-af20-ed1836eb0a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402be500-e328-4101-b14a-1f17ab3e59d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d8a14d-4851-41b1-b6bc-ff52b113b645",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65131361-e85c-4b63-941a-ec9f87546f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34588e8d-0d16-470f-b4a1-b8bf53513a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1515ed9f-bef0-40b1-bd56-a8452673988d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f171a381-187e-44ea-96eb-1f22050ad47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7c624e-8123-4ed1-85fa-49627744e6ec",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b44814-acd8-4869-b5ea-f79e538ce3b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c6676f-da9f-42e0-9032-3f7c3852c802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffad8a4e-475a-46e2-86a7-90c8511387da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89193fec-d331-4f56-8a91-29f37aacc13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af79a5e-893f-4bb7-9322-f6ac1fa5d85e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e341d23d-45a5-4ee9-bfcb-20e7047096e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11642162-e694-427f-9edf-edb4b345108e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f341511-ec87-4443-9907-d5262f3e9df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7beda021-0853-409d-99cb-cdc2c844a1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c816525-6bc6-4646-9913-bde5978861af",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02913423-8b69-453c-be16-8f6b76b61f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3f6805-dbc2-4590-81db-9f8501ec4d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64fb9ce-06d5-4137-a6b9-55850b49395e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef4ed5f-ca78-4b4b-9637-fb4231a661c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e77d59-6650-4618-8b36-b0abc56786fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0ea9f8-2743-4503-9d10-0e699b530ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3100524e-cb87-47f1-88a7-981cf49e8bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df4b82e-78b5-4a64-8dd1-84424b4b88d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1136b6-e6bf-4262-b475-6ae81800f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0be443-1632-4e66-b233-c68de4235448",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1ab2f3-b3cc-4459-b805-c4993d4af740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5204b9-d8ff-4bc6-b628-993ed79e522d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734f62d4-ff27-4f87-81a9-426c3bed0c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd49d907-051c-462d-bfcc-ca66cc1a2862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbf74e0-16a8-4775-bf5f-b64ba12e3a1c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348b71ec-a47a-4686-9199-f06105a1a3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36dad531-b8ff-489c-8976-2bf9a0b3e86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ce036-6848-4966-9e88-2bd59ac18d7a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36d0c51-d9c2-44d1-962a-3bb5c41ca267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab665e1-c5e9-4dcf-b8f8-ce4d1d6685a4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575affc4-d7f9-46b4-9898-f899566b2e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fd7c6d-b0a4-40c9-9189-bc98bf0a8f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc55cec1-112e-4df0-8b90-e877145ad808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0ace71-6c76-4951-8c3a-435c47f8fd16"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dabc75eb-38e7-43d2-a1db-f6829662cb64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b6aedb-4bdd-4de9-abcb-2111635ce358"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2bcfb90-bf15-49ca-82b4-23df295e1a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00613bb5-c93c-4c9c-ac06-5ef906ee67f2"
                    }
                  }
                ]
              },
              {
                "id": "73744da6-3b61-4597-82a1-c2f3078a80c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2f78863-f48a-4ccf-b34b-f96b36148a32",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc09f91-e0ac-4c4c-b859-3e4e1e3a1f5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "336a28d2-baf0-4f4c-8106-937d880ef0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0667bd8f-cc95-45aa-a3b7-df11a5c51ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0af0229-e3a9-42e0-89cc-3d15b055709e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ef3db10-408d-497b-8d00-c0388fbaac0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1c0e7b1-c4f7-48e6-b428-bf3e11d2bdeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82de6a91-4fa1-433a-a46a-d4ce6911bd04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e03ae73f-b94f-466e-ae5c-dd9ba52ab5aa"
                    }
                  }
                ]
              },
              {
                "id": "13f3b8b0-9c58-4106-86ac-707ee8e7006a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "235d8350-c3bc-4ab4-8600-9ab46f30389e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca89979d-6f8f-48c4-9b42-7a41638b1a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "85380ac2-3c68-4c93-9549-5f28de42861d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903fec62-a56a-4be4-9bc0-690cccbf4589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95223d15-a9f0-418f-b14e-2632712a3db7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "01b86100-b1fc-4f32-a94f-1d3d337ec936",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1f2bb43-f925-4175-8bf2-a317b9ab94d0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be933b89-d77d-4600-b9b9-8f1360b35280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5a75b5f0-5a1c-4d34-9752-6f528c12e2e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1bb9892-bcec-415a-a641-b908e7fc3730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24847d30-b0a8-4434-ad20-0c6b3e72445c"
                    }
                  }
                ]
              },
              {
                "id": "a754b230-71d6-49d6-89c6-0fb336dc7ceb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e796fde-c57c-4322-b17e-041babbf25c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9fca2a05-63d1-4118-b983-6c0adf8e5e68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35ffe2ad-0009-40f1-8dcd-686731ba4eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d65718d3-fa11-4a82-9a68-75bf2d0ce208"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac3643d6-92a5-4574-9428-43156343c7c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1497fa38-6ced-40fe-9011-274d60097b6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8796927-71cc-4d63-8ba6-97a8fda729ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1fb6247-2a60-4c94-aa01-25820ae0d729"
            }
          }
        ]
      },
      {
        "id": "5382f9a7-8f43-44e8-b593-2556b5a25d83",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "01897910-07b2-44b0-acfa-7a3d9916ae6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d2fed23-72b3-4aa8-80b1-5f0f3fc88460",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a9c1534-893a-4060-b709-d3d23c1c2410",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cac981-5854-4360-bfb7-8c8656e6940a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "83e62a1c-2502-4c9c-a733-8590b7717fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf852f1-3cab-407c-958f-29ec422ff0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4152fd8-fe20-4639-921e-ca4410a3248c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3915ca0d-848a-44dd-80dd-807935c8fcf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af6cc386-56c5-449b-8562-e846882388fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecbe0ea6-ff4f-42d1-afa3-566772e47ed2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "351b39f4-f270-4cb9-92b7-e836df558491"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c74c8324-add1-4522-ab18-b51bb78fcfb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "46ff2391-adfa-4cf2-bd45-68a1a4480456"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce8bd061-2372-4516-a07f-089f71e96223",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c3a0c7b-5fb3-4e74-908e-71bc402c261d"
            }
          }
        ]
      },
      {
        "id": "537adda9-5446-497b-820b-c80f212255a2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eaf11b0e-595c-4f15-b4d6-f14f6bd9e88f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa32e782-7aa5-4fce-9aef-64e7765836e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e0c9639-3225-42f1-aaa3-d8f77fe55b43",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c960ca0-9776-40cd-bb0c-0ca00e4cb824",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ceab4b0-cf7a-45c1-89b2-a4e619519108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909a832-8061-47b8-a946-c4d19d4606de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8b7fc33-bef3-48c1-843d-3c3904e660ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d9355f3-a556-4162-8904-2e32458b10d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8dd86ce-359d-41af-af41-2ecbf891753a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88f6b30f-15fd-47b8-9f24-65400d1f942c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7546f4cd-e70b-4582-88ef-5a49cca5094a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "536ed035-91b4-4244-b1a4-0692e144c9d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "500b342a-e7f5-41b6-bd72-1affbf068696"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d51667e0-c3a4-4159-aa9a-44c0b2519ef7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c933dded-bd24-4ceb-978f-709955ccfa22"
            }
          }
        ]
      },
      {
        "id": "db10895d-0524-4124-aaac-a20205b1eb85",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3c938ac1-ba31-4456-afba-6bf4a21c6858",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa23b61d-cc4a-456c-8d4d-ee36a63d096a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0204d715-9aa1-4ea7-a925-661d4d42f2fb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8c197e-94e6-4ad2-831a-52fc98e896c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2739272-ff8b-4159-a16c-bd8ee455c891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6577a21-de0d-4534-b5a0-f2fe656538a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e3bd5f7-3154-4c6d-9e54-8099da7cbbf4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3be14afc-95a6-4096-9b77-bdd055704074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5806cf-1f64-4689-a480-359234101064"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee77adef-b903-4bb8-9413-41d5a1079f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79c12f51-8a41-45dd-8ec7-d83fd429a91e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b683717d-92aa-4f2a-a077-613735e1cb33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b01336c-61a4-4075-84ae-c2ac01063eac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21af8575-0d30-4c32-bbce-548b44609d83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91497817-8851-47af-a252-a69a118642f6"
            }
          }
        ]
      },
      {
        "id": "4fa802d4-cfe5-448e-97ad-6a67b48a0bc5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f4c028e-6734-44ad-a188-7c1ae5256042",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98af32f9-3963-436f-92ae-c3455c399a88",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "20933cbb-a275-43e8-8b0a-820f8b214224",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70f207cf-a7a5-4f5b-bd49-6199c2b8fa8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f099ed2e-cd8d-45c5-a35f-008612cb6662",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.11971830985908,
      "responseMin": 12,
      "responseMax": 6657,
      "responseSd": 513.9023854039445,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693009850990,
      "completed": 1693009889979
    },
    "executions": [
      {
        "id": "6f654de4-402a-4a02-9859-84480b5ba9f7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cb124a46-bb3a-4fdf-842c-c6a32bc2f89c",
          "httpRequestId": "856a8d11-b839-4dde-be39-68c4fec62de2"
        },
        "item": {
          "id": "6f654de4-402a-4a02-9859-84480b5ba9f7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "84492897-f2b9-4bdc-9cf4-4240c80bbef6",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "35baee64-1962-4f9b-a28b-ac0f407a1129",
        "cursor": {
          "ref": "f3769763-723d-46ea-8a46-8197107c1954",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1c7a216d-666d-4819-8824-1731dfc71473"
        },
        "item": {
          "id": "35baee64-1962-4f9b-a28b-ac0f407a1129",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "72b5f221-a086-488b-a57b-9a203bb2d4dc",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "4569c91f-0461-424e-ac89-9846692bfad6",
        "cursor": {
          "ref": "89d2eb06-2c29-44a7-9f79-07c6a34039ec",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "de07e7ac-ecc4-4770-8407-670033308573"
        },
        "item": {
          "id": "4569c91f-0461-424e-ac89-9846692bfad6",
          "name": "did_json"
        },
        "response": {
          "id": "d65dd7f6-ddbc-49f4-920e-43f9a27e79bf",
          "status": "OK",
          "code": 200,
          "responseTime": 274,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03baab2c-fd55-4439-a86e-1e48b33d5677",
        "cursor": {
          "ref": "243370b3-bcfb-4086-a1f9-cba23579e5b7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "562da1e4-7059-4ab8-9116-3b0d1fcc2d7e"
        },
        "item": {
          "id": "03baab2c-fd55-4439-a86e-1e48b33d5677",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bbc4a17-ed3a-4071-8181-31cfdf19fbfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1528,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03baab2c-fd55-4439-a86e-1e48b33d5677",
        "cursor": {
          "ref": "243370b3-bcfb-4086-a1f9-cba23579e5b7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "562da1e4-7059-4ab8-9116-3b0d1fcc2d7e"
        },
        "item": {
          "id": "03baab2c-fd55-4439-a86e-1e48b33d5677",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bbc4a17-ed3a-4071-8181-31cfdf19fbfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1528,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca9db06-c07c-4ae9-842c-6b0672296b1f",
        "cursor": {
          "ref": "f8da5db6-2b9f-4559-b598-9d468baaa701",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2a840658-0663-4ecc-baab-f7195c38d0a2"
        },
        "item": {
          "id": "bca9db06-c07c-4ae9-842c-6b0672296b1f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7858b377-ce37-42fc-a80f-a0391ecbdb41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfcf4d6-e330-42f0-92db-8c5d9e44044a",
        "cursor": {
          "ref": "7b445e63-4892-4f94-87f6-8ea4fa6d4814",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0ecf24bc-0861-43f4-be23-2b3a6f2d4078"
        },
        "item": {
          "id": "bdfcf4d6-e330-42f0-92db-8c5d9e44044a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "05130931-ce7b-4944-9341-15973880c858",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d82419c-0a2c-4eba-b1be-fd97104bb2a4",
        "cursor": {
          "ref": "46785495-4dcf-40b4-9a98-ad2a075a2b19",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1e35261-a593-416f-b8b7-e913ffefc31a"
        },
        "item": {
          "id": "4d82419c-0a2c-4eba-b1be-fd97104bb2a4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca6b3aa6-a920-47e9-bc46-48cd54c81f2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85179d8-537c-4ba5-9dcd-b16a16447115",
        "cursor": {
          "ref": "fa63cc48-213b-454d-a2e0-ec37870ea43f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "00ebd5f6-a0fe-4467-ba32-0d8ce017eee5"
        },
        "item": {
          "id": "e85179d8-537c-4ba5-9dcd-b16a16447115",
          "name": "identifiers"
        },
        "response": {
          "id": "b84ad48e-9b88-42e7-8ab7-522333209b2f",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6964d191-8e76-499f-aee7-c2cea8eb2986",
        "cursor": {
          "ref": "5f65bb34-368c-48b8-9d97-a7ef8323d113",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e9c6c970-69fd-4a27-b290-14cc7b51e66a"
        },
        "item": {
          "id": "6964d191-8e76-499f-aee7-c2cea8eb2986",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "80c0cc01-d220-4134-9c83-5ec7c19b7f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a828df-2cb1-4b62-9741-5cec49b1d29a",
        "cursor": {
          "ref": "6d8f4733-700c-408d-82f9-49ab1bad69d9",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "37b8a79a-4263-4d99-b7c4-edc605198790"
        },
        "item": {
          "id": "76a828df-2cb1-4b62-9741-5cec49b1d29a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e628299d-19bd-44ab-b964-ae5a5e7cc269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee546154-b371-40f2-a010-5e8858248846",
        "cursor": {
          "ref": "d452cbfc-dcf4-4240-8926-9cac8f246550",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "35f32d0b-695b-4e26-84c0-668efc09b0e7"
        },
        "item": {
          "id": "ee546154-b371-40f2-a010-5e8858248846",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "60b8ce6c-32e4-42cb-ae6a-9c7ec249f6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f081b03-473b-4763-94f3-01acc382df74",
        "cursor": {
          "ref": "2c789950-1c6a-4b85-84f1-9536bb85ad79",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e560a7c3-b371-49fe-9055-83825b3ae577"
        },
        "item": {
          "id": "7f081b03-473b-4763-94f3-01acc382df74",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b71b2d8b-6017-4a3b-bda0-d630faae7a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9412ac8-4c21-4ee6-be8b-241ec4aa4c9d",
        "cursor": {
          "ref": "f199003a-2e9a-426e-b388-7600986b95d7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9bbaa732-d655-4186-91f9-98229cf73846"
        },
        "item": {
          "id": "d9412ac8-4c21-4ee6-be8b-241ec4aa4c9d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5b0df25b-b021-4f6c-a48a-58462da01eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1fff90-1fd4-4765-96f7-7f1d2b335335",
        "cursor": {
          "ref": "88128f91-cdaa-4784-bddb-710bf153134d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c39e5961-d207-4204-8b2a-bd091c206514"
        },
        "item": {
          "id": "cb1fff90-1fd4-4765-96f7-7f1d2b335335",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7c9ad53c-4b35-4b05-918b-9d61ec2d72e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22832ffd-2361-44e5-ba9c-7aa9a152e9f3",
        "cursor": {
          "ref": "966fbd66-c8bb-44f2-ac7e-5ac657466483",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3b6add7c-f807-49f1-9f41-ca8d4d166461"
        },
        "item": {
          "id": "22832ffd-2361-44e5-ba9c-7aa9a152e9f3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af721ea8-2e0b-4ed2-83ab-7c51e01dc952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a5e1db-cf08-4c29-addc-5de9f6c70102",
        "cursor": {
          "ref": "b331b249-a6cb-4da8-bc21-c0fd2a74a1f1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1171fdbd-3a51-4fb8-9321-37d55c98c3fa"
        },
        "item": {
          "id": "88a5e1db-cf08-4c29-addc-5de9f6c70102",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "78cffb62-dfc6-4fb1-aa6b-88f75e5b4aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3966180a-8e71-4fd2-84ed-ef7902530965",
        "cursor": {
          "ref": "5565bc84-4005-4250-a41d-ca9b96cac169",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "608509c8-a4aa-4a68-8c2d-9f39f021067f"
        },
        "item": {
          "id": "3966180a-8e71-4fd2-84ed-ef7902530965",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fa13901f-8247-419f-8869-ebd10470505c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85075c-9fd9-46fc-a6df-66657b4e86d7",
        "cursor": {
          "ref": "1bb3469c-d9d3-4f6b-863c-ce2902b923f6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1b2755fb-822e-4457-bc04-c8ca10dae4b7"
        },
        "item": {
          "id": "ad85075c-9fd9-46fc-a6df-66657b4e86d7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "47f6a7c6-0b5c-45be-a4e0-714a797f8765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aab5e15-bdb7-47c8-b8f8-02c394c67679",
        "cursor": {
          "ref": "93b9461f-58e3-41a4-9aed-1b256d83d34e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "726c2e6d-d424-4df7-a4f3-4980bc945cff"
        },
        "item": {
          "id": "6aab5e15-bdb7-47c8-b8f8-02c394c67679",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b0887234-9c76-4ba0-b70c-ef9bac0fe85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bb2dbf-eed8-4a6f-a1c3-d6161a563456",
        "cursor": {
          "ref": "d14eb5ec-4448-4b61-91be-30421d564207",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8221c6a8-aeca-42c6-a5fc-48e34cff6067"
        },
        "item": {
          "id": "74bb2dbf-eed8-4a6f-a1c3-d6161a563456",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "33a5f323-68c1-4a83-815d-b9d33ddd6fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e360024-1739-4b0f-829c-dc6347bf9776",
        "cursor": {
          "ref": "977fed76-44c4-4090-b1e7-d361cafb1ca7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2934a407-13e3-4855-af08-16ae22f9da2b"
        },
        "item": {
          "id": "5e360024-1739-4b0f-829c-dc6347bf9776",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cf1ffbeb-d5c5-43fe-a81f-cdad12e564d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a28da60-f414-4e47-ac6a-4597dc150be6",
        "cursor": {
          "ref": "35cc298e-823d-4f95-acd7-dcfc0c87c428",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4d761c3f-4266-4098-9327-d4ae438ee5a1"
        },
        "item": {
          "id": "5a28da60-f414-4e47-ac6a-4597dc150be6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "79a78203-3f96-43f8-8811-31f52fa3dd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073c7688-6e46-4c34-8b4f-9f2d1ae00b0c",
        "cursor": {
          "ref": "c312c14b-ef33-4b36-b382-46229b5f4dcc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e0f7973f-e98f-4064-b54a-fa32c7892945"
        },
        "item": {
          "id": "073c7688-6e46-4c34-8b4f-9f2d1ae00b0c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9464977b-61ac-4e12-874c-f40a098ceeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baad0bdf-8334-4472-a6f7-0710ef33ec53",
        "cursor": {
          "ref": "9aff621d-e42e-4e64-a169-b0f3b24b57b6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a2fe0c8-19cd-47f4-b0fe-c43589f1241d"
        },
        "item": {
          "id": "baad0bdf-8334-4472-a6f7-0710ef33ec53",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3c579e4c-a02d-4196-8861-071a33717930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d96e5a-4ffe-4673-9ed1-a975ad47a423",
        "cursor": {
          "ref": "3d88a0ee-affe-433a-94c4-b884924c5323",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83cfd6dd-76d9-4cd3-a022-9ee80f6dd87a"
        },
        "item": {
          "id": "34d96e5a-4ffe-4673-9ed1-a975ad47a423",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4548a274-4a72-4f9a-801c-dc49429aa93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681913c9-ba4b-4583-a9b5-9b467a405746",
        "cursor": {
          "ref": "9e666508-f5d6-4d54-ac90-05ee0752a519",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "43433d92-c0b5-44bc-8ab4-7444b1d7f563"
        },
        "item": {
          "id": "681913c9-ba4b-4583-a9b5-9b467a405746",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1e7d0ec0-2543-4365-9233-4fe92c1c06b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e311fccc-511a-4181-a5ef-71f7ebda391a",
        "cursor": {
          "ref": "f787bd5e-8301-4d29-a3cc-7eb36c047844",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2412a37e-22f2-4b96-ba02-a093ef262907"
        },
        "item": {
          "id": "e311fccc-511a-4181-a5ef-71f7ebda391a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "25230480-c58b-47aa-b394-a4484fe08ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dfc36c-6307-4a3a-bf61-fac22004fd72",
        "cursor": {
          "ref": "bbb8e7cb-619e-4637-831c-8cbdadaa4d45",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2447e4e9-cc11-4048-aa15-0f3d04e7d4f1"
        },
        "item": {
          "id": "c0dfc36c-6307-4a3a-bf61-fac22004fd72",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "066d4448-c60d-4671-903c-38359cb8abcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfad855-c8bb-4a61-b0f8-ce6c26ec2c03",
        "cursor": {
          "ref": "25249ccf-402c-4ec5-ba47-5a14370af072",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0b8e9728-aedc-4e74-859c-c91b99c9cf3f"
        },
        "item": {
          "id": "6cfad855-c8bb-4a61-b0f8-ce6c26ec2c03",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "64ff35f6-c7c7-4675-93ff-90592761c2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d6cd6e-1ffe-4c6d-8cd9-b792d48810f7",
        "cursor": {
          "ref": "772d962f-c91b-4a5a-a51d-9d085f4f62ac",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5118098f-2ca8-4a0c-821f-7f6f03ce36b8"
        },
        "item": {
          "id": "16d6cd6e-1ffe-4c6d-8cd9-b792d48810f7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6f6b9db2-3d1b-4797-a665-30221fcef679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7fed40-3767-4487-aebc-8d307b03a068",
        "cursor": {
          "ref": "104a4f7e-1024-48fd-9ef0-f95a7b7352e2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "29430541-cccd-4425-82a3-9c30ea165ccb"
        },
        "item": {
          "id": "8e7fed40-3767-4487-aebc-8d307b03a068",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c0ef6719-5acb-4968-820c-9bbd5ddcf064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd26b8-f563-42a7-abf6-bdcbe876cfb7",
        "cursor": {
          "ref": "9e95f537-3581-4876-9c52-8454524cbf0d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e518933-1941-4f10-a30e-0d8e3cd3d9ed"
        },
        "item": {
          "id": "08fd26b8-f563-42a7-abf6-bdcbe876cfb7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fe44cb46-5bb5-4cc7-a2ae-b3565d8f5d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95d8518-59c8-430e-8042-a6c2922705bd",
        "cursor": {
          "ref": "8d57d673-023d-4e58-833d-d418ad74eda4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "57e4330c-a249-48b2-913f-e1591b97c789"
        },
        "item": {
          "id": "b95d8518-59c8-430e-8042-a6c2922705bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "24526e3a-20a1-4838-bbfb-1c1be5af42a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c1127b-8bc9-45b0-89b3-408807121a1c",
        "cursor": {
          "ref": "77df569f-c467-4427-8d80-977066a4f697",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c23f3f8a-54c8-4bb9-9908-4c17a9fb6ce2"
        },
        "item": {
          "id": "53c1127b-8bc9-45b0-89b3-408807121a1c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "72084c47-fb5a-4873-9c5f-0ee6fd6cb413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43338b9b-7bc1-4f2a-ac55-2df8f0963362",
        "cursor": {
          "ref": "45b20ab9-a411-4580-9c89-61d334dd1da0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b0bed89-5833-451b-bace-edb66ae1f1e1"
        },
        "item": {
          "id": "43338b9b-7bc1-4f2a-ac55-2df8f0963362",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3a0c2543-34dc-42f1-b7ab-16a45ab56d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43be9536-8bf1-428f-87d8-e1a68afaf0d4",
        "cursor": {
          "ref": "803acaa4-f0fa-48be-a56c-a021e60e9320",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "41cb6ca0-e796-4075-b53f-3f3fb5a8c59d"
        },
        "item": {
          "id": "43be9536-8bf1-428f-87d8-e1a68afaf0d4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd73639d-34e6-4ad8-86de-17d11f4ef70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837d7ca8-4044-46c4-8b4e-7e30e900690a",
        "cursor": {
          "ref": "1aa33c94-bb06-4827-a8fd-146e308de83b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9ffd913a-3c0e-4fdc-86d6-aad708305eac"
        },
        "item": {
          "id": "837d7ca8-4044-46c4-8b4e-7e30e900690a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6d6be5ce-1820-4472-b060-27b57a7f3574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fd3347-357b-44fd-8509-11e5cb539d77",
        "cursor": {
          "ref": "b41cc0f1-9af8-46ed-9083-f69b98a702f0",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "262e1767-89c1-4494-abd2-4e100af44041"
        },
        "item": {
          "id": "e3fd3347-357b-44fd-8509-11e5cb539d77",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "df8db4cb-637c-41e1-872d-978d77366344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edffead5-5f55-49db-9ceb-968faf988dc5",
        "cursor": {
          "ref": "be62e543-eb53-408f-b7d5-15046dce88ac",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f38f9105-d5eb-4c49-87d8-3c1b8fa13241"
        },
        "item": {
          "id": "edffead5-5f55-49db-9ceb-968faf988dc5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f1af6ebf-dd86-4bab-804a-31c66f8b4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebfeea0-59eb-4235-8ef9-7c21d1481f7d",
        "cursor": {
          "ref": "96348e5c-2ff2-49c8-95b0-ac523410c6ac",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "658ba953-9585-48a0-ad84-e279b601050e"
        },
        "item": {
          "id": "7ebfeea0-59eb-4235-8ef9-7c21d1481f7d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3a2258b-ec56-4a69-852e-6068414961cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa91fb8-0a14-4d6f-a42a-48914c5e554d",
        "cursor": {
          "ref": "288433c5-1f50-4f09-960b-38d0d573b62e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6222a3d9-f3cc-4b88-b85a-fa7a83efc47b"
        },
        "item": {
          "id": "1fa91fb8-0a14-4d6f-a42a-48914c5e554d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c9baa0e1-e77b-4e73-87fe-e3e8af2dee45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ee5f42-5d02-47f9-98ab-c6e43ec7d97d",
        "cursor": {
          "ref": "f5c09429-c4e4-4f9c-982b-7ca85c25c68e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b35a1ca-2c54-46e5-87a2-ac1af63c4df5"
        },
        "item": {
          "id": "f0ee5f42-5d02-47f9-98ab-c6e43ec7d97d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d78f3133-c014-4d3d-a653-8e681ec78088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a251a0fb-d690-45b8-a2f1-6612341fc6e9",
        "cursor": {
          "ref": "6d198f63-3a17-46f7-911f-9da271835d65",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0580c0a5-d0be-4e97-ba62-beae586e0e5c"
        },
        "item": {
          "id": "a251a0fb-d690-45b8-a2f1-6612341fc6e9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c8343e69-c155-4a03-af92-82f939a9949c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f340f885-7940-4cd0-a713-3aae5596513c",
        "cursor": {
          "ref": "62062f82-32f3-4f83-a2c9-b4c0207d273a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "12a250a7-14fc-4042-91bc-44b64e7bf46b"
        },
        "item": {
          "id": "f340f885-7940-4cd0-a713-3aae5596513c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6bddd384-431d-48d4-99d5-3972979cb405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee56046-55ea-44c6-b50e-cb25814797da",
        "cursor": {
          "ref": "2fc06b38-5f6b-4d0b-8be3-9e51f9e5d2b6",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dc443991-9124-40fc-8d1e-95cabaffd4fa"
        },
        "item": {
          "id": "2ee56046-55ea-44c6-b50e-cb25814797da",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8f93fa60-937c-4669-a2fd-e62208c6f000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee031f77-bcc8-4482-bfcf-3b978ef6f380",
        "cursor": {
          "ref": "c7e7ade4-3417-4671-bf11-1892e25092f1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9c1e2864-e1a4-461d-92f5-3a63de807819"
        },
        "item": {
          "id": "ee031f77-bcc8-4482-bfcf-3b978ef6f380",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "02df2a2b-eab5-4f05-8a4f-1c3eaf2e5f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf734b54-ccd9-496d-bf30-f918b5006a1f",
        "cursor": {
          "ref": "d7ff9be4-cf5c-405e-8247-b7ce17e77b10",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e2480dd-04c9-4201-9d0e-290952706743"
        },
        "item": {
          "id": "cf734b54-ccd9-496d-bf30-f918b5006a1f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "21e60a03-29c5-4d7b-8f6b-e764a92bd5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d40c04-c104-43b5-8585-89207eca61a0",
        "cursor": {
          "ref": "fc233517-c61a-49ac-911d-64994e801105",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c11900dc-4715-484d-bfc7-4e0bbff76ee4"
        },
        "item": {
          "id": "79d40c04-c104-43b5-8585-89207eca61a0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "356041ad-0d80-40c8-b9cf-7416cc8e0c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06d61f8-d8dd-4b47-adeb-a0d3366c8432",
        "cursor": {
          "ref": "85932c84-5a78-43c6-9f41-cbf737e4bb63",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2bd2bb3e-0c35-4e3e-87e5-811b783ad770"
        },
        "item": {
          "id": "f06d61f8-d8dd-4b47-adeb-a0d3366c8432",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "54bb2cb8-f4d6-41be-8a5a-681ffc9020ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3786f55-61ad-4043-bad6-77888e38fd36",
        "cursor": {
          "ref": "548c863d-34ac-4c33-8338-40b13c09e723",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b5a3f2b2-fb96-4b1f-a4de-5f893f2d7120"
        },
        "item": {
          "id": "b3786f55-61ad-4043-bad6-77888e38fd36",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0e8bfc67-76a2-42df-a086-5455ffcefb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b68bea-8c06-46b3-95be-aabd93535134",
        "cursor": {
          "ref": "11aa1c56-825e-40e4-9235-c83ff0d774ff",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "72dac293-28ea-4c05-bc07-d62f55db1519"
        },
        "item": {
          "id": "73b68bea-8c06-46b3-95be-aabd93535134",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "63420d47-6c73-4031-acfd-163643652d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fdef1f-856b-4e3d-9dca-67e4148fdb53",
        "cursor": {
          "ref": "24ff245c-a46c-4460-bbb0-b12271659afb",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3f29dfc5-d68d-4c95-99cb-53dff15467ca"
        },
        "item": {
          "id": "34fdef1f-856b-4e3d-9dca-67e4148fdb53",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "627ebf22-d784-46e4-a124-24f0e79967f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f90ed4-4c50-43c6-a9ca-5af5416efefa",
        "cursor": {
          "ref": "825a4e3c-9cfa-4680-ad05-7a8b711be1ce",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "69d940e7-6c67-4292-ba14-1e77cea15934"
        },
        "item": {
          "id": "15f90ed4-4c50-43c6-a9ca-5af5416efefa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "057d48f9-364d-4779-b0a1-679c1e3d6fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef13031-dcd4-41ef-9b08-3a057511d85e",
        "cursor": {
          "ref": "9105f627-9a2c-4426-92f5-63b5e2f3f86f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0c59de7d-d669-4cd3-aa29-487deb374712"
        },
        "item": {
          "id": "6ef13031-dcd4-41ef-9b08-3a057511d85e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "589fe5db-f58d-4745-b890-c6733889758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4833c278-28f6-4008-8334-14a15639136f",
        "cursor": {
          "ref": "a52757f0-f295-414c-8a29-cd2fc17cd618",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "884c6d28-a8a3-4cef-b25a-dbb9f9f2e5c5"
        },
        "item": {
          "id": "4833c278-28f6-4008-8334-14a15639136f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "48844a96-d4df-4fbf-a88a-97425809d8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6037cd-d001-4b2d-b64b-fdca464c4041",
        "cursor": {
          "ref": "590327e9-ecdd-4582-bee8-689bd29cb797",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab042aac-8353-4a6b-ba96-c2b9237a7c17"
        },
        "item": {
          "id": "ab6037cd-d001-4b2d-b64b-fdca464c4041",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d7805715-df04-448a-8229-16557b61fb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fb62a5-cff1-4c3b-a140-41dd3df6568f",
        "cursor": {
          "ref": "8bf5d3fc-e0f3-4db7-8e04-b812f000f861",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31165406-0964-4804-9f63-a9bf7f2c9ff9"
        },
        "item": {
          "id": "71fb62a5-cff1-4c3b-a140-41dd3df6568f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20ac2227-30d6-4c20-aea2-b263b3db03f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a730d936-5b0e-4dc7-81df-b898f5919c35",
        "cursor": {
          "ref": "44be3812-73f4-4686-8bde-c2d538ebcda4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e797b0aa-26c7-46d9-86fd-bd17c9d97541"
        },
        "item": {
          "id": "a730d936-5b0e-4dc7-81df-b898f5919c35",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bf392bba-0cfe-4269-86ac-e418ba3377a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170fc908-2ee8-453d-8ddd-d99a95853e77",
        "cursor": {
          "ref": "68afb49b-f1de-41ba-9734-61e9e68fd599",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "97e8c233-c22f-4e49-ae66-110ab2323505"
        },
        "item": {
          "id": "170fc908-2ee8-453d-8ddd-d99a95853e77",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "abfec418-4f82-458d-905d-5801b0c96821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0e31c8-2385-455f-b7f7-627af6045f45",
        "cursor": {
          "ref": "d5aa4720-24c4-40f7-84a0-550fd1b89c75",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "69b5d5fd-70b0-4087-95e0-b88b6638586b"
        },
        "item": {
          "id": "dd0e31c8-2385-455f-b7f7-627af6045f45",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "99219676-74fe-451b-b6e7-eab656ed95bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe2899-2727-4c34-bdd3-b63a83095978",
        "cursor": {
          "ref": "02a2d4d4-91f7-4d62-8aa2-103408ad6248",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e48b910c-96ee-4985-9add-e17aadd80022"
        },
        "item": {
          "id": "4dfe2899-2727-4c34-bdd3-b63a83095978",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "36ebfe47-3260-4dba-87c4-a70f218960b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290cfee6-d0e7-4a9b-b3b3-fbf5091b91d6",
        "cursor": {
          "ref": "163a54c3-aba4-4dc1-b006-9e15b48917d7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6f773baa-4852-4503-8e88-ddf9f0860a1b"
        },
        "item": {
          "id": "290cfee6-d0e7-4a9b-b3b3-fbf5091b91d6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "45be5480-a5b2-4849-b271-8113aacfed6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380756d0-a216-44de-975a-3fcbc4d8bcc7",
        "cursor": {
          "ref": "390aaa66-d4ed-47ae-a4ed-7574c98e65ec",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "88eadb3b-df80-482f-9e45-d275a94d82d6"
        },
        "item": {
          "id": "380756d0-a216-44de-975a-3fcbc4d8bcc7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eaea1457-0d26-4f42-a35f-704de9202baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e5a0ff-5db6-4c58-8707-aea5ccafd787",
        "cursor": {
          "ref": "a0e833b8-b9e5-4d3f-a0c6-d5e800f2494f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9dd1a1c9-7bde-4221-bba5-40f0d59311b7"
        },
        "item": {
          "id": "81e5a0ff-5db6-4c58-8707-aea5ccafd787",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b996cae8-e6be-47bd-b04d-18ef4dda261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a06588-4bb2-4c5f-ab18-322555e9f043",
        "cursor": {
          "ref": "bad889ca-be14-4aad-8782-f9f42b55e91a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0625a263-6a61-44f4-9213-0537f4571851"
        },
        "item": {
          "id": "b2a06588-4bb2-4c5f-ab18-322555e9f043",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d1bb2b9e-9f54-417a-b773-09b4836b6e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d5feca-d901-449d-8a39-5880c5f36c10",
        "cursor": {
          "ref": "c7c16e8e-addf-4a15-b322-18192b20586d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "75d3eca8-333f-4f5e-aa3d-cf8d186f5918"
        },
        "item": {
          "id": "a5d5feca-d901-449d-8a39-5880c5f36c10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2aaa648f-9a29-42ef-b563-86d780efe023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fba3c0-a795-46fb-8a31-08685ba59795",
        "cursor": {
          "ref": "8e0d7642-5519-4b3f-9640-a0e4200b3a99",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "964009a1-31ef-424b-8d8c-5bb7fcc1ba1a"
        },
        "item": {
          "id": "f9fba3c0-a795-46fb-8a31-08685ba59795",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bbe9c237-1e9a-48fd-bc66-2288ec1a5435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b28bfb6-49dc-4519-8420-58b161486680",
        "cursor": {
          "ref": "23d0095b-2fff-4039-9340-ab6609076b9c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b1cc7e06-6d43-4a40-a665-f8c64055695a"
        },
        "item": {
          "id": "6b28bfb6-49dc-4519-8420-58b161486680",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5fbc7aba-e97c-49a2-948b-2fec92f080e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3baa532-10b4-4cdb-951c-7744824b6d08",
        "cursor": {
          "ref": "20d95750-f338-40a1-b5ff-11f0e6b65f57",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2179e72e-c698-4d64-8cfc-4c9a6e518976"
        },
        "item": {
          "id": "b3baa532-10b4-4cdb-951c-7744824b6d08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cebebb06-97d5-47ed-b680-82fcd226de51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45b8d91-a455-4885-810c-321b637634d8",
        "cursor": {
          "ref": "06b1289a-97ab-489f-b417-92d0f1674b6b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "79fa49fa-2b39-467e-8a44-b5c7717831fd"
        },
        "item": {
          "id": "d45b8d91-a455-4885-810c-321b637634d8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "84533c49-666c-4964-89b4-c926538aa75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1e2127-3f1d-4a56-932b-e0a3f669cec7",
        "cursor": {
          "ref": "d022c1b7-70e0-4feb-bc35-25809d92a03e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "11f55f76-af0c-4e58-8bf8-db625f668243"
        },
        "item": {
          "id": "8f1e2127-3f1d-4a56-932b-e0a3f669cec7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "011ddbab-d2c0-4751-b064-9874fd80ec95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952e8ea3-e197-4d28-97a8-ef425a9c7627",
        "cursor": {
          "ref": "843e2631-dabe-4251-82a9-c4cde0b10b96",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16c1c957-77d3-4b33-a3bd-ff0e4b716803"
        },
        "item": {
          "id": "952e8ea3-e197-4d28-97a8-ef425a9c7627",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "722b2177-01f7-4a33-b837-a11dd53cb2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff213301-34e3-45ab-8eba-86e1f8007faf",
        "cursor": {
          "ref": "c1f9296d-1310-40d7-b0b9-82664a643a71",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "375d059e-dfbb-4064-aef1-1d634bae7dce"
        },
        "item": {
          "id": "ff213301-34e3-45ab-8eba-86e1f8007faf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "74600b01-5976-4885-835b-d88fcf2a4a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449898b2-bfd7-4b9d-91f5-a3b7a446a2cb",
        "cursor": {
          "ref": "ccb3eab0-d2ae-4edc-9270-bf22a6378f32",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3102a498-30cd-4b32-a49c-50902fc9f6bb"
        },
        "item": {
          "id": "449898b2-bfd7-4b9d-91f5-a3b7a446a2cb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c28ac20-8756-449c-b9da-c2aa6f0921cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917868ca-2195-46a8-ae19-ccd0cdd0e62b",
        "cursor": {
          "ref": "04507f00-4c41-4abc-9ce4-f8e653f46082",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6cd8a5de-d241-4c85-bb29-b0d7b5487514"
        },
        "item": {
          "id": "917868ca-2195-46a8-ae19-ccd0cdd0e62b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cafdbedd-3c39-47ea-ab1d-52660562d59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b528c08c-f4ee-4b56-b460-b79dfd6a505f",
        "cursor": {
          "ref": "f96ff1ee-1388-45a2-bf71-230707a3ecc9",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0af5d1b5-b53c-45d5-8b25-7788135a9312"
        },
        "item": {
          "id": "b528c08c-f4ee-4b56-b460-b79dfd6a505f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27b2165e-3de0-423c-8cb7-563367bf176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc005290-6612-49ff-b3f4-e2872842f127",
        "cursor": {
          "ref": "39bfcc04-d722-4662-8970-d01d5a9a6ecb",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bad9d835-0032-435e-883d-013d199a604b"
        },
        "item": {
          "id": "dc005290-6612-49ff-b3f4-e2872842f127",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "11262c8d-623d-4833-afff-d2d0d3a30dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5bc69b-6de6-45c5-9bb1-1ced580f63fe",
        "cursor": {
          "ref": "a9c2b689-be6e-49d9-ae5c-685b201e43b4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "768ea834-b845-4731-a650-8cbf8c673dad"
        },
        "item": {
          "id": "ac5bc69b-6de6-45c5-9bb1-1ced580f63fe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "471a12cd-b523-4de0-beeb-ac860b4f0123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddc955d-2d04-4778-8d26-8aa84967f4e5",
        "cursor": {
          "ref": "020f1e64-7e15-4ede-bdcc-e56c8722a699",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e885c2e2-f92a-4781-ab74-da71393ec2f1"
        },
        "item": {
          "id": "9ddc955d-2d04-4778-8d26-8aa84967f4e5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6a676d37-909f-405c-9798-baddc751b126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e769fb-f751-4268-b228-789856d7e1b8",
        "cursor": {
          "ref": "0fdd3b90-12c2-423b-8708-4d43aa4c41fb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8fc1e5a3-1bb4-40f4-b2d4-67536b9ca44d"
        },
        "item": {
          "id": "78e769fb-f751-4268-b228-789856d7e1b8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "902d7a36-dd28-4be8-b31b-70a89aded691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a4c1da-4183-4551-95e4-d1a2041f5837",
        "cursor": {
          "ref": "805733cb-c295-48a7-b142-c2ae77c3c1a8",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a34acada-0b0a-4de4-adf4-73185e82faac"
        },
        "item": {
          "id": "f4a4c1da-4183-4551-95e4-d1a2041f5837",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7ccf87e9-e307-44db-bc1f-84c5131d445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b032ccdd-9826-4b1b-8221-104766a3c6b5",
        "cursor": {
          "ref": "e09cb57d-c7f4-4570-b5a9-83bea99dedd2",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d3f111a2-61b5-458a-ae36-4414d2fe8775"
        },
        "item": {
          "id": "b032ccdd-9826-4b1b-8221-104766a3c6b5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6f05e099-368e-43df-97f9-f2c8a8e0a08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b65d5ac-2bfc-4395-924f-1f92b67413b2",
        "cursor": {
          "ref": "c72f9208-8a22-4478-9c7b-3fe8ff4dc70c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "47f4f18f-9fd6-4a18-a3be-c68126f7bbac"
        },
        "item": {
          "id": "1b65d5ac-2bfc-4395-924f-1f92b67413b2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f1318e08-905a-4b8b-8a12-0b060fa869bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7e000e-6713-452f-a55a-397b6725c9c4",
        "cursor": {
          "ref": "fb8dbe61-bc0a-4bbc-836b-833337e620b8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "38f20de3-a9cf-411c-9863-c30ce7d4dc35"
        },
        "item": {
          "id": "db7e000e-6713-452f-a55a-397b6725c9c4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fb12761b-d659-4c06-8ba3-fe5380427fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363b2561-0b3c-4b6f-9175-3001654d9fb8",
        "cursor": {
          "ref": "bc67d2c5-6f3f-4bb0-bbb9-b71759ba8fcb",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ce00aebb-b210-4a8a-8174-820ff3884480"
        },
        "item": {
          "id": "363b2561-0b3c-4b6f-9175-3001654d9fb8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "32b4570d-bb96-4ea3-a97d-bbbf32957e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c94272-69a2-4e93-93c9-b0c7e4d851af",
        "cursor": {
          "ref": "9c494292-a4ae-47e5-8a53-1f9885882ce9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "25747fa8-0d39-427a-954f-727b1ab79b9a"
        },
        "item": {
          "id": "89c94272-69a2-4e93-93c9-b0c7e4d851af",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a4d60c68-09ef-4bc9-b2f4-82373dbd0960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c1b8e3-d93f-4624-b7b1-b8e69ab0ee9c",
        "cursor": {
          "ref": "223c048c-5ca6-4ed9-9f89-97417459b817",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8ab25165-60b0-4d2d-a042-7f7f71203543"
        },
        "item": {
          "id": "88c1b8e3-d93f-4624-b7b1-b8e69ab0ee9c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "04cd40d3-00b0-4340-a202-b0f94483ff94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9b9b99-6250-4483-ad0b-bcf979f1af09",
        "cursor": {
          "ref": "db954555-9873-4bb9-af97-e1cbaa0005c3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "00014c7f-c1a8-4538-b0dd-2c2e9616c655"
        },
        "item": {
          "id": "db9b9b99-6250-4483-ad0b-bcf979f1af09",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a5fba0d4-28d8-44ac-9951-52d387f9cee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eade92-6df5-4c39-8738-85c02db33fcb",
        "cursor": {
          "ref": "69cc8a88-a356-45ec-9eb1-3c9b8254afe3",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c0167d7f-a4dd-4639-b175-8d9c669e967d"
        },
        "item": {
          "id": "16eade92-6df5-4c39-8738-85c02db33fcb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "37641eef-4d91-46cd-999c-36f10fbe0411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c7f20b-9b88-48a6-be48-0c432bef779f",
        "cursor": {
          "ref": "99127c25-1e07-40cf-a4ca-55158958c993",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6ea9b6b4-1eea-42cc-a3d8-8b2520e6aca4"
        },
        "item": {
          "id": "c2c7f20b-9b88-48a6-be48-0c432bef779f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e568afb7-6709-486c-8a32-060e43fa991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc69db5-ec96-4eca-aae1-69a3810a4bf6",
        "cursor": {
          "ref": "2cb5129d-c264-4659-b0f6-b40f18c7f178",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37df7cd7-0203-42ec-959c-5f17cc6902a8"
        },
        "item": {
          "id": "fbc69db5-ec96-4eca-aae1-69a3810a4bf6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "28506303-71ec-448a-a92c-da2da89763e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1622db8a-69f4-4bd9-a87c-d97e637fde64",
        "cursor": {
          "ref": "ac30d08f-bd10-4020-8e69-4afe09adc40e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2c17918-6b35-4999-b1a0-ed840b195e07"
        },
        "item": {
          "id": "1622db8a-69f4-4bd9-a87c-d97e637fde64",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "304b94f0-7c37-49f0-949a-28176718b2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caa6bc9-e970-4ec5-896f-d4a307d54cc0",
        "cursor": {
          "ref": "6ea82322-310b-4a1d-bbf4-6a726684bc3f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "54b3a4d8-75ab-4473-bf82-b0b6a18621a1"
        },
        "item": {
          "id": "4caa6bc9-e970-4ec5-896f-d4a307d54cc0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5b193d4-d2e2-44d7-b9c9-cd881b618920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd05607-bc23-4a21-b1b9-2c7b3a382fb8",
        "cursor": {
          "ref": "6d12eb7f-d1df-46d0-9d04-a9cefea3a2ff",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "47ed1d9a-c492-45d0-ad8b-19341c38888d"
        },
        "item": {
          "id": "5dd05607-bc23-4a21-b1b9-2c7b3a382fb8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1c87061f-e895-4427-815d-85264ad4dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e4512e-afb2-4e7e-b1a8-b968adc1f279",
        "cursor": {
          "ref": "bcb388ea-de4c-4fa1-932f-35c953195227",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7b159a9a-7978-4fd3-8f3a-1e94de04b0cf"
        },
        "item": {
          "id": "65e4512e-afb2-4e7e-b1a8-b968adc1f279",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b744ff89-48a3-4815-a30f-20e90f482f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4407c0-f9fe-4e6e-a694-022ef4fc08a2",
        "cursor": {
          "ref": "d7914b93-7a46-4e1c-abc2-ef23b52236d1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "04d1eedf-e1fb-41de-946f-cf406050fbd9"
        },
        "item": {
          "id": "9c4407c0-f9fe-4e6e-a694-022ef4fc08a2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a4109a65-360b-4eb8-91cc-c2c3c31b8972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb54094-0459-4156-b8bc-ac9840a03bdc",
        "cursor": {
          "ref": "18c5bed8-c2ce-4c33-835e-ad40b6d883bd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd5379f4-6f85-4326-8026-0daaa6ff2a2d"
        },
        "item": {
          "id": "6cb54094-0459-4156-b8bc-ac9840a03bdc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "26eb9a52-5982-48e9-a95d-5e2ec5fc15f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f79f250-cc06-4d0d-bc69-8fa84fc3858a",
        "cursor": {
          "ref": "d18cde10-5048-44cf-9675-f8e30cee5c9d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4a38fe1-f7c3-4480-809c-fb8a3f9a248f"
        },
        "item": {
          "id": "5f79f250-cc06-4d0d-bc69-8fa84fc3858a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d5cb935f-b6c8-4ec3-86fb-8006392413f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4be6562-92de-4fd1-b638-79bcebef010a",
        "cursor": {
          "ref": "34daa727-3a62-4d9d-8334-8febd24fd473",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "860c47f1-9ac0-4026-876d-2f0da9740cfb"
        },
        "item": {
          "id": "e4be6562-92de-4fd1-b638-79bcebef010a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "596b7957-4b6e-4540-bc98-efd158977ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2fd264-a5fa-4527-ab01-da76ed2ba9f8",
        "cursor": {
          "ref": "d5082d4b-480c-4ef2-9b65-4e538f1644b5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f83d4b1b-156d-4fb3-8b5b-7e7c93e8e4d4"
        },
        "item": {
          "id": "2d2fd264-a5fa-4527-ab01-da76ed2ba9f8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7a4997b5-f910-4f6a-9721-227eb27838e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e0c2a3-382a-4dd6-ab5e-2d296beb89c7",
        "cursor": {
          "ref": "3e61fdb4-5918-4e40-908e-1cfcd4da9127",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "abf0556a-53ca-48ba-a304-0908531b0ae1"
        },
        "item": {
          "id": "c8e0c2a3-382a-4dd6-ab5e-2d296beb89c7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d7d5d14a-b752-4b38-b49d-0cfd9d28b783",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbf05a8-72cb-4a39-bddc-767aee28c83b",
        "cursor": {
          "ref": "696e20aa-b5d1-43c4-8cee-4d4641d0ffcb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "066b4842-fb8b-49d7-9248-4a0f227854c7"
        },
        "item": {
          "id": "2bbf05a8-72cb-4a39-bddc-767aee28c83b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0c2bda5-195b-4736-b8b4-2bb3e6f62686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "9f7ab764-ff1d-4c75-a550-579a688e869a",
        "cursor": {
          "ref": "a5b0f5aa-2743-4538-ab71-50f30a4e4c93",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "40720357-e7f4-4d6f-958c-35d33db7db08"
        },
        "item": {
          "id": "9f7ab764-ff1d-4c75-a550-579a688e869a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af8bbccb-07ec-4275-a889-e54d2f002b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "2884f4d1-b0f7-475f-8afb-2ab517325168",
        "cursor": {
          "ref": "5ae5078a-0a3f-4d45-bc89-31ad5a3cf06e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e2e44c8b-aeea-471d-97e8-2e993e0b6abb"
        },
        "item": {
          "id": "2884f4d1-b0f7-475f-8afb-2ab517325168",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6b999e28-2588-4686-b2a5-605fae99280f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2b2b12ee-6683-423c-8698-c9f48c4e462c",
        "cursor": {
          "ref": "5635a3a1-50c2-40ef-9472-f301bf7a0661",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3e68c1c9-7a7b-4895-a390-5db0a4936e9d"
        },
        "item": {
          "id": "2b2b12ee-6683-423c-8698-c9f48c4e462c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "03729cc9-d8d7-4b58-b764-eb042d170c46",
          "status": "Created",
          "code": 201,
          "responseTime": 4894,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac59897-ce6a-479f-b07a-4515ca846a0f",
        "cursor": {
          "ref": "77227aa1-8183-4dc7-8447-96ba219c0027",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0cee3d41-4baa-421c-8db1-a8a3d10b09f6"
        },
        "item": {
          "id": "6ac59897-ce6a-479f-b07a-4515ca846a0f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "74a87115-d051-4769-b164-d81d9e58fa25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ff02a375-e6cb-46d2-90d5-c724529b473c",
        "cursor": {
          "ref": "2a07d92d-efdc-4343-9cbe-b7d2ab9bb2ae",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "219c4487-e7ac-4e90-8bc3-763007411fc8"
        },
        "item": {
          "id": "ff02a375-e6cb-46d2-90d5-c724529b473c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f3b0668e-3411-4a7e-90cc-3cb174e0239d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f56780c2-09c3-460f-aec7-65224609b267",
        "cursor": {
          "ref": "46995ba4-1fe7-441a-9c76-88a3c6e456ad",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "294f83dd-d797-4bab-905e-fcebafd33ff6"
        },
        "item": {
          "id": "f56780c2-09c3-460f-aec7-65224609b267",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "57f9ed56-5976-42c6-ac02-e65d21fc0891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35018a4-6d6a-48e0-8c1f-05f5ffa97752",
        "cursor": {
          "ref": "5b56d606-355d-4314-a627-f293aa79b51c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "98a8f48b-465d-4d2d-a870-cd12002de1bd"
        },
        "item": {
          "id": "b35018a4-6d6a-48e0-8c1f-05f5ffa97752",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a7b6a550-01b3-443b-8230-437bb9f3c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c33ae-71e8-4be6-8be8-1e6aeb3d3895",
        "cursor": {
          "ref": "e59956e0-8e8b-44f8-a442-eb2193b8633d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "25ca270d-af89-485c-bcf9-e9078d665aef"
        },
        "item": {
          "id": "559c33ae-71e8-4be6-8be8-1e6aeb3d3895",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e332913b-d903-4b2b-af38-d320ab4cd996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db24a4f5-d0f7-41eb-86ff-f455c0c0dfb0",
        "cursor": {
          "ref": "cd226b3c-31e3-450a-b903-a67ed7f660f5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cc1486df-20fb-474a-8c5d-61c5526aeaa4"
        },
        "item": {
          "id": "db24a4f5-d0f7-41eb-86ff-f455c0c0dfb0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "45e7be3d-fcde-4bdd-802c-694b22b04d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7f8afd-4888-40bf-8d09-93e4526f6957",
        "cursor": {
          "ref": "9447601b-49dc-4b15-b82d-4b242a1b3caa",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4b47c722-b415-47c4-b9e6-27fce2617217"
        },
        "item": {
          "id": "ba7f8afd-4888-40bf-8d09-93e4526f6957",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "98eb3f50-f216-4450-aba5-1f7523c337b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcec1ef-ef55-47b5-aa80-0501ee41350e",
        "cursor": {
          "ref": "25b5b7cf-ea59-48db-a196-3fdb5015f74d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7be618e8-c7c1-4684-b64f-0555d393284c"
        },
        "item": {
          "id": "2bcec1ef-ef55-47b5-aa80-0501ee41350e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3787067c-e0d8-4eb0-bdfe-5312fb358b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad172a8f-a1ec-4f25-bd8c-15e65e189fb9",
        "cursor": {
          "ref": "df8674f2-59a2-47e2-b3ca-2463620b715f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "87799ae4-2727-48b6-9d27-6519be791c79"
        },
        "item": {
          "id": "ad172a8f-a1ec-4f25-bd8c-15e65e189fb9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4e16a013-8f67-4713-9aeb-899f5194c4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd99ad4c-6890-4016-89d6-e86de6cd6a6a",
        "cursor": {
          "ref": "9c46c5d9-ab37-4d02-a32c-7f63b9bcaed6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4783381e-f840-430d-9a9b-e7cd3bc9c332"
        },
        "item": {
          "id": "fd99ad4c-6890-4016-89d6-e86de6cd6a6a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5558e711-0307-420e-a34e-51edb3019bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9281cf5-461a-4230-9b0f-d98fc0612dda",
        "cursor": {
          "ref": "2738bbde-36dd-4160-82a8-23943dc027f1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "df1036b6-ea1d-4655-8c26-eff0273f145a"
        },
        "item": {
          "id": "e9281cf5-461a-4230-9b0f-d98fc0612dda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "902d9a74-4ec7-43fe-aaab-3c3a6b26a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3302f691-2c3f-4b8a-bc3b-386e46b3f68b",
        "cursor": {
          "ref": "9c15c9de-4e28-4ab8-9d21-8707ed1701f2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1ed2cac-5d8d-409c-95e9-8e12c5be9672"
        },
        "item": {
          "id": "3302f691-2c3f-4b8a-bc3b-386e46b3f68b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4cc49a77-b808-4214-900c-8db6cd535b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9acd7a-e73d-40a4-931c-5a460b7cfa7a",
        "cursor": {
          "ref": "4d393c7c-2306-4afb-a713-cb8cd889f8d5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "46c72169-147b-4c66-a9e9-9bfd1dff3273"
        },
        "item": {
          "id": "af9acd7a-e73d-40a4-931c-5a460b7cfa7a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "00468dbb-1da5-406a-9c72-67d521ed3f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb96f06-ff6b-4370-a3b0-966e5b154e0c",
        "cursor": {
          "ref": "412a455a-8fc3-4d84-8e6d-33ddb9650d11",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "19a7b6f2-20b6-475f-b494-f7e89a00d05e"
        },
        "item": {
          "id": "3fb96f06-ff6b-4370-a3b0-966e5b154e0c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aab90c16-93df-4037-9b8e-c69a0f588e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7f291b-5968-45a6-980f-384a34f8956b",
        "cursor": {
          "ref": "38b7c7c0-47bb-4e34-9aa3-9a8c6b37844c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9b95bbaa-0c97-4692-b8be-93dd6ce5bb02"
        },
        "item": {
          "id": "5d7f291b-5968-45a6-980f-384a34f8956b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3887243a-585e-45c0-bfc7-5743ce4e7371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53ed64e-aec8-438d-aa09-619b9600ab39",
        "cursor": {
          "ref": "ce788316-3d69-4ef5-9777-42a35e537dd9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f7dc635-f300-4f72-b76b-5c9da4dbf672"
        },
        "item": {
          "id": "c53ed64e-aec8-438d-aa09-619b9600ab39",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "255fa4a2-20dd-4d58-96cb-a89f1f335a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8977616-eca5-4292-8f2f-304c687c5266",
        "cursor": {
          "ref": "5e891040-7a00-444f-b932-8d3b98373cfb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8f34b8dc-0e6f-41f8-b5b7-5087f8bfab53"
        },
        "item": {
          "id": "e8977616-eca5-4292-8f2f-304c687c5266",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "85575eb9-8acd-4935-b0b8-22031b876af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09cfa7c-dff4-4cf9-9c80-67a5ca6f9e14",
        "cursor": {
          "ref": "9ed68a55-1486-4aac-b223-550de60a96cd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2c3f2995-1d3b-4a9e-babe-071b0c7bca52"
        },
        "item": {
          "id": "b09cfa7c-dff4-4cf9-9c80-67a5ca6f9e14",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a10558c-1aba-475c-bf20-958f4fd6ae05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2558246-3393-46f7-b912-f531a874d7b4",
        "cursor": {
          "ref": "24f887f2-5cc4-4534-bea0-d07f117a14a7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af45b7f0-d88d-43e0-b91d-4f856b4546fd"
        },
        "item": {
          "id": "f2558246-3393-46f7-b912-f531a874d7b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cf08642-eb50-48ef-b1d3-2800a45d234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aa74f2-3f2b-44e0-bfa8-22bb108e6471",
        "cursor": {
          "ref": "c2a1c71f-da4b-45a4-a012-81701b5ee88a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f0109581-327b-474a-b0b6-3503c02da016"
        },
        "item": {
          "id": "c3aa74f2-3f2b-44e0-bfa8-22bb108e6471",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "759b84b9-0e59-46ce-abba-ccceb1bba88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eab6f44-d49e-4edd-bee8-38b2a07e1170",
        "cursor": {
          "ref": "f0392a90-1393-412e-a3a4-2de24be550f1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a7a2bb0e-0d24-4b7a-bdff-c994a8538035"
        },
        "item": {
          "id": "4eab6f44-d49e-4edd-bee8-38b2a07e1170",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4aa1031d-c3b2-42f1-8304-21e576666019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba94da-007c-447b-8e15-941e6d9c03ab",
        "cursor": {
          "ref": "8c94354e-28a8-4837-ab00-3838fcc36229",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a6079562-c8eb-492a-b9e9-107aca6f7dbe"
        },
        "item": {
          "id": "90ba94da-007c-447b-8e15-941e6d9c03ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8cbe7f2b-4fd3-4714-b0e5-f969b4c8a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6621947b-13ff-4e49-9d06-1e3b230e3f5d",
        "cursor": {
          "ref": "d0e61d5a-279d-4704-815a-6cce89c3a1d9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2acfa820-d487-454f-b32b-180289aba9e0"
        },
        "item": {
          "id": "6621947b-13ff-4e49-9d06-1e3b230e3f5d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1fa13ad0-df69-4bff-9375-099e8cdd9b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776b44dc-d696-4d48-98df-f352a2cf400d",
        "cursor": {
          "ref": "52e13a9d-a634-442d-85a1-b1273b20d514",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bc5d03b9-fecc-4696-8fe1-941e378d011c"
        },
        "item": {
          "id": "776b44dc-d696-4d48-98df-f352a2cf400d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8296877f-97b6-4931-ab14-0d8e1c75fe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511797bc-8d0e-4226-8c1c-1844080e92d0",
        "cursor": {
          "ref": "4beb4b53-d86b-4916-88e9-ce0ce7af23d3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fecabafe-407e-4fda-a6e7-8b1ac28191f8"
        },
        "item": {
          "id": "511797bc-8d0e-4226-8c1c-1844080e92d0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd152c8f-4218-435a-ac1e-d7b460f941ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c220f20-afe4-4fe2-85b6-5f82964ccd30",
        "cursor": {
          "ref": "db2d56df-7673-4774-a2f0-0db9e87d7503",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f786c064-a583-45c6-977b-4df6b58ec3db"
        },
        "item": {
          "id": "6c220f20-afe4-4fe2-85b6-5f82964ccd30",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6c38f423-617a-4798-bd59-2cc714baa898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a326d3-ec1a-4d0f-aff1-76e48ccef999",
        "cursor": {
          "ref": "85fba100-88bf-44de-8e6e-6782ae813a35",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d665f74b-c6fa-4891-82d7-38dc991df7b9"
        },
        "item": {
          "id": "f9a326d3-ec1a-4d0f-aff1-76e48ccef999",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd1769d3-42e8-43c7-a449-803a6c1e2648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782551e7-12bd-4be4-89a3-236331c60c1d",
        "cursor": {
          "ref": "ae722094-498e-4e09-a0d6-d6d3678d45d5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b0fcd974-09ac-477a-b384-4d10d8537774"
        },
        "item": {
          "id": "782551e7-12bd-4be4-89a3-236331c60c1d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbb11bda-7270-43ac-9498-6f979b2e45d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ce7fd1-e0ec-4634-803d-c513bb6546ce",
        "cursor": {
          "ref": "b3a81153-0ba8-4c69-afcf-49b60b4cd5c5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "858f2227-ab52-4978-b2da-6c334acec11f"
        },
        "item": {
          "id": "b5ce7fd1-e0ec-4634-803d-c513bb6546ce",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f0ca2063-af47-4758-b05b-068e8caa8569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6bb271-af08-45fe-9f12-60c0a747d7a5",
        "cursor": {
          "ref": "7e663dae-b2d4-45c0-90a1-c141bf6bd519",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4473ed80-0cf3-44a5-b887-36a4ba10bf36"
        },
        "item": {
          "id": "fa6bb271-af08-45fe-9f12-60c0a747d7a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c52126b8-c07a-4344-a950-0e90161c98dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62b825b-c33b-4d50-bac4-c66551fd404c",
        "cursor": {
          "ref": "82afda00-4df9-4609-a932-0103eba0613d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7117d482-6ad9-496c-801a-717e746187f2"
        },
        "item": {
          "id": "d62b825b-c33b-4d50-bac4-c66551fd404c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8327fd13-5120-457c-bb94-d10e994db05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627186ec-5419-44f0-ae2a-cd229eb84d63",
        "cursor": {
          "ref": "64717f0c-75c7-4326-a004-e972ef2ee96e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "891369bb-cc08-4376-866e-2f87ed3649bb"
        },
        "item": {
          "id": "627186ec-5419-44f0-ae2a-cd229eb84d63",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c094b38-34c8-4d1f-b4ee-ed3eecb34f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a52479-097f-4fe4-a7bf-a6d923d699ea",
        "cursor": {
          "ref": "acfb6e46-0fd7-4f03-b531-2758b3305229",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d095619b-12fd-4a31-83fb-c881a8df0cee"
        },
        "item": {
          "id": "30a52479-097f-4fe4-a7bf-a6d923d699ea",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc604591-5cb0-4ad4-89c9-a1b7ba535193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68239080-4128-44a0-ba5a-0a86f05f5797",
        "cursor": {
          "ref": "1b5a3873-85b7-48f0-93d3-d6a04422a7bc",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "81c12f4b-65bf-427e-8a21-26f566dbe3ae"
        },
        "item": {
          "id": "68239080-4128-44a0-ba5a-0a86f05f5797",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "49cbdcdc-5fe2-4b88-9367-0652002be9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611b278-1955-4aa3-89e1-913f25f2ccb8",
        "cursor": {
          "ref": "10adf9e2-3879-40ba-8598-1b4569242977",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e5c6c25-4833-47e8-9ab1-bf14c914d70c"
        },
        "item": {
          "id": "2611b278-1955-4aa3-89e1-913f25f2ccb8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9cd690f4-81d0-434d-a50a-df150cc63cf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b852d3a5-550b-4f4d-81c0-20ac16b07a69",
        "cursor": {
          "ref": "58ef5864-4d1e-45c3-9f9e-1c46bef5653c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "220508ba-b37e-41fe-bae0-1efb79789117"
        },
        "item": {
          "id": "b852d3a5-550b-4f4d-81c0-20ac16b07a69",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e22aa11-4fca-49f7-ad2c-3e8dc8e321ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355fbd2e-9be3-457b-bbf5-5dd7c7bea0cc",
        "cursor": {
          "ref": "57d58b85-36c8-45e8-adca-131fe53522af",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6fb20dd5-d072-4944-88ba-b9de8a9106e6"
        },
        "item": {
          "id": "355fbd2e-9be3-457b-bbf5-5dd7c7bea0cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5f90bcef-c300-4e3e-89b1-c7d884bb3c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df7ea76-300d-403c-90a2-f19b608f37d0",
        "cursor": {
          "ref": "ba4a5e30-ab7a-4b4c-8d6e-0f5942533614",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c4966578-0a63-44df-9bcc-6e037f49f2ae"
        },
        "item": {
          "id": "7df7ea76-300d-403c-90a2-f19b608f37d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93c749e1-d275-4042-91b7-8eebf3f3bf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907b1298-d89c-4d9a-ada0-4051e3456b8e",
        "cursor": {
          "ref": "cc758338-c945-4443-b8dd-f453916f31a9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3c16bd18-4681-4afa-94d5-9dccb4c45513"
        },
        "item": {
          "id": "907b1298-d89c-4d9a-ada0-4051e3456b8e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5fe63ebe-7ab7-46fb-a72e-dbc6d528faf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdafff3-b69d-4bef-b941-429b5072f33b",
        "cursor": {
          "ref": "62a63755-b4aa-4896-8b69-a6ffd33c398a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "67c0b484-7690-45c1-a243-5124a1407687"
        },
        "item": {
          "id": "5cdafff3-b69d-4bef-b941-429b5072f33b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ed5dcd56-c9c0-4376-970e-0226292ca6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33752ae6-de7e-4a24-a8a8-c6cd21b98bf1",
        "cursor": {
          "ref": "79122352-21ff-442b-b491-e77f8dbc6c84",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7ded4336-8a7c-43b2-8595-1f226b624eb1"
        },
        "item": {
          "id": "33752ae6-de7e-4a24-a8a8-c6cd21b98bf1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b7dded4a-4916-4aec-b4ce-3454a1cb8edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05bcf69-5e00-40ea-af2b-99d92e5ef1c0",
        "cursor": {
          "ref": "9382c1ca-b78f-4f60-ae1f-809e38b4ef88",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d133a54c-2318-4184-aa71-3426395511ec"
        },
        "item": {
          "id": "c05bcf69-5e00-40ea-af2b-99d92e5ef1c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "127b0971-c5d4-4379-bbbf-7c8c97b8e2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b38ff9d-405b-4697-b931-d79aae8240a1",
        "cursor": {
          "ref": "3acc9e20-00cc-42cb-b2d0-5de56a315cd0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ee6908cb-3c38-4bd7-af07-ad3f3cf72804"
        },
        "item": {
          "id": "8b38ff9d-405b-4697-b931-d79aae8240a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7357a68e-7fec-44d1-83b3-e29e77a9d9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae920eb-af47-4370-ae0e-5af7f082d8fc",
        "cursor": {
          "ref": "7b52c08c-2243-44e8-b55f-e3dc093d9d75",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "edf258be-a780-4d3b-a9ce-6840d365be07"
        },
        "item": {
          "id": "5ae920eb-af47-4370-ae0e-5af7f082d8fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ac369aa4-abbd-40a2-8c10-1b4629ed5e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401849b7-6b35-4a53-9807-9215e2216a4a",
        "cursor": {
          "ref": "cf298320-c669-442f-aef2-8a6de40aed70",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "152dbe51-9b5a-49e3-8e71-a372a683b4b2"
        },
        "item": {
          "id": "401849b7-6b35-4a53-9807-9215e2216a4a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1702aea6-e90c-45a3-988d-66f18542a782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a50355-e092-4cd5-9487-6c533ae8b5ef",
        "cursor": {
          "ref": "f56685fc-629e-420c-af33-bf295943ed50",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1548735e-a184-42a9-a8ed-e1de88173054"
        },
        "item": {
          "id": "52a50355-e092-4cd5-9487-6c533ae8b5ef",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b20997d7-c721-4799-baab-8c42dc36f139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a6c65c-50fe-499f-b669-cda0d8c73e5e",
        "cursor": {
          "ref": "76001cf8-cf49-47db-a459-e8c6cf7f309c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d12dc347-30ca-4665-9740-cd7e981ceed2"
        },
        "item": {
          "id": "50a6c65c-50fe-499f-b669-cda0d8c73e5e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93cdc437-5f37-4cc1-95a9-b5aa71227fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39037c6-ac02-402f-8b71-9838afb284b4",
        "cursor": {
          "ref": "cc8ad5d6-b463-43c4-a136-93c7a5b36dd1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c4388b9f-fe6f-4a7d-a403-1c0975e7ddac"
        },
        "item": {
          "id": "b39037c6-ac02-402f-8b71-9838afb284b4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c38f95bb-ba25-4b8b-8322-d6dd5c1cf4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0868fc82-9887-4a03-b4fe-51bc582c618c",
        "cursor": {
          "ref": "6ad13f25-c07a-42d8-925a-5cac0ab51aaa",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ba64b34a-b144-48fb-b2a5-7ad790c5d798"
        },
        "item": {
          "id": "0868fc82-9887-4a03-b4fe-51bc582c618c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "631e0ecc-b193-41cf-8141-564566907182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d423a87-a1b3-46b7-9309-bd7421079ac4",
        "cursor": {
          "ref": "98e0d518-ec19-427c-ac3f-9c534765657f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d818e6af-fc1e-4a73-ae33-db4cb97b3d3c"
        },
        "item": {
          "id": "0d423a87-a1b3-46b7-9309-bd7421079ac4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "520da06d-7ee0-4bd7-b07d-c2fa32adbfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cce1419-735c-47e4-a19c-964bd1657ba9",
        "cursor": {
          "ref": "cc0987bb-56de-4450-b51d-b67e4e504320",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9123a681-1687-45fb-993f-c57efdcd8afe"
        },
        "item": {
          "id": "6cce1419-735c-47e4-a19c-964bd1657ba9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8eda4d2e-8b52-4643-989f-a1b8462d4bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fee70e8-3db6-4948-9e33-7c575d2d9950",
        "cursor": {
          "ref": "4093ce19-2f48-4bc9-8ce9-08fd592e2076",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9b8c8c97-76cb-474d-a437-2b42872ed66a"
        },
        "item": {
          "id": "8fee70e8-3db6-4948-9e33-7c575d2d9950",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "689855c2-fd88-49c4-88d5-059d21c6a29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b093bce3-9af0-4ef2-82c7-7100e467a2c7",
        "cursor": {
          "ref": "4ef568b4-7861-4604-8b23-dc6627a75310",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "87f0dee2-1b76-4102-a474-c6a934c1d936"
        },
        "item": {
          "id": "b093bce3-9af0-4ef2-82c7-7100e467a2c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "648120cf-8232-4c48-bb02-239a530408e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1508cdcf-ba83-43ee-ad62-5f452311386a",
        "cursor": {
          "ref": "557a09e4-fe11-43fe-8085-57221ff7aefb",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b0171c2c-6d4e-47db-91d0-6c5a66b5ec5a"
        },
        "item": {
          "id": "1508cdcf-ba83-43ee-ad62-5f452311386a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ebaaadb7-d168-4464-8194-f6f5ddbdaee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6380151c-1a93-4128-a44e-cf44c09ea941",
        "cursor": {
          "ref": "f48311fe-91f6-4b6d-b065-01ff033dc8e6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "140698b0-ad70-48d2-a215-430b0145dc47"
        },
        "item": {
          "id": "6380151c-1a93-4128-a44e-cf44c09ea941",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2dc9ea2d-2ef8-4a1d-914a-8951a9e60922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaeaf4c-5059-408a-aef4-5b148ae58112",
        "cursor": {
          "ref": "347e9568-2a0a-4037-b1bf-55953336f362",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "049dd175-aea8-4849-9f4f-2e34181ed1ea"
        },
        "item": {
          "id": "abaeaf4c-5059-408a-aef4-5b148ae58112",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "48d1e51e-511a-42c7-9827-5f31edd96968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea25dfaa-cb95-4c07-97a2-69c27e78254f",
        "cursor": {
          "ref": "60958812-21e2-4865-9c18-2274e57eaae4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7d2740aa-28d6-429e-a493-88dfda65aad5"
        },
        "item": {
          "id": "ea25dfaa-cb95-4c07-97a2-69c27e78254f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "69c0812a-0de4-46f2-831c-7f56837822d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe816f6-5fa7-4ed9-99ff-241e80c402b0",
        "cursor": {
          "ref": "395504c0-1a54-4867-b084-723301e8c77d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bf12498e-2e98-41cf-892d-89d528f2412b"
        },
        "item": {
          "id": "6fe816f6-5fa7-4ed9-99ff-241e80c402b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "120d0d43-8176-48b5-b8f5-5d74f7a5fc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e572ba36-c9bc-45cc-97e4-9d2fb2ed93bf",
        "cursor": {
          "ref": "b71bf331-a68a-4c6d-a8c6-c044a2a963d7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "95153fd7-e902-49b0-9d72-53e5149b3dc5"
        },
        "item": {
          "id": "e572ba36-c9bc-45cc-97e4-9d2fb2ed93bf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9600199b-e556-439f-88f2-addd71c0cb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361015c1-37a3-4e18-80bc-737e03019195",
        "cursor": {
          "ref": "6bb9d051-8749-44f4-963b-40737c9b72ac",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "63cf5054-f48a-4023-9e3f-20b7086396cb"
        },
        "item": {
          "id": "361015c1-37a3-4e18-80bc-737e03019195",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "709b1a6a-6a49-4a80-ba09-de55211967de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f7ef3c-3f70-407a-b70e-5d10c2962987",
        "cursor": {
          "ref": "b82f28fa-17ba-4f4a-9a3d-9a87aaa8d80d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1d6f558a-2e2f-4c23-a527-1af2e255eb11"
        },
        "item": {
          "id": "44f7ef3c-3f70-407a-b70e-5d10c2962987",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5181909f-dc5f-42d1-9009-e1422383bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5857bccb-ca0c-4eb0-842e-e8e55c97357f",
        "cursor": {
          "ref": "519f4697-b14a-4d79-ae43-9304de2a22ac",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23ee3d9f-0ee6-4b9d-9970-49b049de8a0d"
        },
        "item": {
          "id": "5857bccb-ca0c-4eb0-842e-e8e55c97357f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5290e132-a76d-4744-ba07-59cd2edc7bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2ff2d4-8e57-49e4-89fa-cc279f57f139",
        "cursor": {
          "ref": "3fe282a5-7737-4ea5-aaa9-cdd7e8c7f184",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96c6cde0-1bc2-4ebf-9791-000d50cea723"
        },
        "item": {
          "id": "0a2ff2d4-8e57-49e4-89fa-cc279f57f139",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b72eaecb-48af-4fc8-8390-a009009562ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f3d392-f2c5-453d-8cab-8e07c61e4ca4",
        "cursor": {
          "ref": "cfb0ecb0-2728-4f37-9838-8848587fe3ec",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d7278067-cb1e-41bc-93d5-59870311b649"
        },
        "item": {
          "id": "f1f3d392-f2c5-453d-8cab-8e07c61e4ca4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3aad8051-1861-4aae-a3c3-d064c3304830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9895c7-c7ac-4df1-a30b-69ea396b89bb",
        "cursor": {
          "ref": "9dac3e1c-4cef-462a-a67d-58cfc5d5fdf5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "816e9dd2-3945-432b-ac44-ae073e0900f2"
        },
        "item": {
          "id": "2b9895c7-c7ac-4df1-a30b-69ea396b89bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d2661b1-3377-490f-a2c2-e40884458463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be60c8da-27a8-4ba4-966d-6bff26ecab69",
        "cursor": {
          "ref": "8cc60ae1-cff4-4f11-8de6-0b01c2755239",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "019acc47-b63f-4fdb-9627-efcd4a822fa4"
        },
        "item": {
          "id": "be60c8da-27a8-4ba4-966d-6bff26ecab69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "441d3340-b592-430e-ac1b-21d4eafa8c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c13143-6c51-4313-b326-faad475c6875",
        "cursor": {
          "ref": "c73082f2-89ce-4d39-99ad-173cf0ee1c32",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c660c91b-21a6-429f-926b-b8719686ba71"
        },
        "item": {
          "id": "c3c13143-6c51-4313-b326-faad475c6875",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e7b43923-a855-465c-a48e-c9a1b60d915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4b1fa6-49d6-4c54-87a2-a27967a1c059",
        "cursor": {
          "ref": "0217b67f-d6a8-40ec-bb8c-d48e3645d553",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "af705002-e92c-41e6-a07c-c42a97d7a418"
        },
        "item": {
          "id": "4e4b1fa6-49d6-4c54-87a2-a27967a1c059",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "35c04651-84a4-4f29-8cda-1aa953c8d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d53724-463f-4c15-b311-3b270ba1386f",
        "cursor": {
          "ref": "fabbdbad-0524-491a-a7aa-55595e08c215",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ea8dd183-295d-42a9-a7e8-be7790f3b883"
        },
        "item": {
          "id": "56d53724-463f-4c15-b311-3b270ba1386f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc8503ae-55e1-4d34-909a-e4d51172f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3216a0eb-82df-4cf2-b736-1c3897f40b9b",
        "cursor": {
          "ref": "48f2d100-fa6c-4f11-9717-2f438277cc9f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "99782ef6-fb29-4903-b74a-072b8703e088"
        },
        "item": {
          "id": "3216a0eb-82df-4cf2-b736-1c3897f40b9b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ac43fe18-d193-42f8-8715-ab10f9b12945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1c9fe5-4d4c-438d-93de-3368c915c899",
        "cursor": {
          "ref": "b329b30a-4254-4fe3-82aa-d25e9221d5d9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "272e702e-a69d-4cf6-be11-63d0e10f40af"
        },
        "item": {
          "id": "ac1c9fe5-4d4c-438d-93de-3368c915c899",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fdb861b7-efd2-4f17-b9f4-3f65e39172fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8465e40-58dc-4bad-8270-00de2a8dc26b",
        "cursor": {
          "ref": "59d90004-8bb7-4bbb-b257-96cae14e0693",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "22bdcb5c-5496-4550-99a5-3cd50903de4a"
        },
        "item": {
          "id": "d8465e40-58dc-4bad-8270-00de2a8dc26b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01dd57bf-9425-4659-b3f3-57f7a14b18d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c20bd0e-d3fc-4c7f-8560-851cc49de48f",
        "cursor": {
          "ref": "58d012e8-2a14-40f3-b705-42ae9a1f7a95",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c4850d16-1fec-4afd-9dee-8679207dec70"
        },
        "item": {
          "id": "7c20bd0e-d3fc-4c7f-8560-851cc49de48f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fad700a5-1e73-41ed-905e-977203d90763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85301450-a8c5-4207-96ca-c415066fa32b",
        "cursor": {
          "ref": "2b34ca6f-9db5-4c64-bd1b-fa2eeed43cd9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1c5615cb-16a4-4255-b7fb-19cda6381b72"
        },
        "item": {
          "id": "85301450-a8c5-4207-96ca-c415066fa32b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dc0672e8-7051-40ed-a6a3-9a871c6c98f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b9e0ac-669e-4f8f-8b35-ca8d1dff69ce",
        "cursor": {
          "ref": "4bff35af-2765-435c-bc1f-ab8a35ea4775",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e3cdba85-fb2d-45a2-b8d2-8aaff4426e9b"
        },
        "item": {
          "id": "54b9e0ac-669e-4f8f-8b35-ca8d1dff69ce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4e12f579-5eb9-4f88-9ee2-4bfc1ff26b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cd2a3e-6902-488f-9450-a3ca47153051",
        "cursor": {
          "ref": "05146d5d-c693-45e8-a1a8-1cbe9d9e44ec",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "63a78156-d5eb-4899-b563-e2e5073f2a3c"
        },
        "item": {
          "id": "f1cd2a3e-6902-488f-9450-a3ca47153051",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cd1eec2e-6377-494f-b244-5f7de4d95cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d522ae-0f00-4d15-a3df-5f3573cc4d3d",
        "cursor": {
          "ref": "f4ceee0c-92b0-445e-ad4f-375a03addca8",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "67c9d7b9-767c-4b51-b6a7-c62d751bd15e"
        },
        "item": {
          "id": "c6d522ae-0f00-4d15-a3df-5f3573cc4d3d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c0fafa0-b145-4218-b055-34df577ee6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94eb6d67-3ede-4d84-99bd-9bd3b855a1da",
        "cursor": {
          "ref": "65223e47-f05f-4311-8a5b-f5eb2fa19b68",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c25b6d84-6507-4ec2-835b-cd45ef4438dc"
        },
        "item": {
          "id": "94eb6d67-3ede-4d84-99bd-9bd3b855a1da",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bfa40e73-1bf8-4c2b-a785-f3c0d31243f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02df4d41-3068-4320-b45d-067429dfe60e",
        "cursor": {
          "ref": "893061f8-a593-4e92-a561-744ef58bd7e0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "820a53a6-51fb-42c1-b79f-d9ffad30e33e"
        },
        "item": {
          "id": "02df4d41-3068-4320-b45d-067429dfe60e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9b205fdc-eee1-4694-b61b-1ba7897599a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b20adf-e975-488e-951e-551f763b4a58",
        "cursor": {
          "ref": "a4ae950e-00b8-490d-ae03-2b6a16dd5bf2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "164d44df-72a9-4779-a244-358ad45b4595"
        },
        "item": {
          "id": "f0b20adf-e975-488e-951e-551f763b4a58",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0787d55e-d386-4ef5-8181-fe8bb09317fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba25b44-0335-45d7-a840-ea150a32f83b",
        "cursor": {
          "ref": "30f2257f-d5b9-4f19-8768-32a26ec96d5d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5fadf732-9d5e-418a-8fa6-5766c74a3348"
        },
        "item": {
          "id": "fba25b44-0335-45d7-a840-ea150a32f83b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "95042137-247b-412e-baa1-f52c514b001b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae01be09-419a-472c-8246-a5276c21f006",
        "cursor": {
          "ref": "c71e46c1-394e-4a77-879b-0eeafc9602e1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a77a4d3d-16cf-4abd-bc8f-ebec3cf70ce6"
        },
        "item": {
          "id": "ae01be09-419a-472c-8246-a5276c21f006",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fd388ccf-8cd8-426d-84b4-821eb9301682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e4a39a-65e4-4858-bb0e-4f41fb71cf3e",
        "cursor": {
          "ref": "8f1bf466-be95-4580-99be-d37593103484",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e9108280-d35a-48fd-b5a5-acf08dfe2a1d"
        },
        "item": {
          "id": "31e4a39a-65e4-4858-bb0e-4f41fb71cf3e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "af9b6a76-6e36-4890-9f96-6c347c64dd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244c6fb8-e050-4a6d-8002-b059c4ad78b0",
        "cursor": {
          "ref": "b1456aaa-eecc-4fb5-9475-dc9772769d52",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "186bd642-d72e-4288-b21d-72f80e77375b"
        },
        "item": {
          "id": "244c6fb8-e050-4a6d-8002-b059c4ad78b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8cd6b35a-3100-498d-97fe-e32544afa735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76ea4e9-a697-472f-8cd5-929ce65d6b19",
        "cursor": {
          "ref": "faba0a54-145b-4df7-954b-176d00e8331a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cf85f3a2-ea8a-4db7-a497-2a3f29c989cb"
        },
        "item": {
          "id": "d76ea4e9-a697-472f-8cd5-929ce65d6b19",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e26410d3-0c56-46f2-b2b4-b35ae9a39581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928396b0-0c44-49f2-a578-c60a695af589",
        "cursor": {
          "ref": "ac014fa4-12b1-46c5-83e2-eee0648f4c05",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c963310f-2f2b-419f-9a33-938e83138fab"
        },
        "item": {
          "id": "928396b0-0c44-49f2-a578-c60a695af589",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4165d3ca-54ed-44b6-920f-10c9859e4b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e7f1d-a651-494b-875a-10b06a3c346a",
        "cursor": {
          "ref": "c2590ff5-7866-428f-840f-686478f81cec",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8af7422f-62a4-48eb-a356-06db38b4d7d1"
        },
        "item": {
          "id": "740e7f1d-a651-494b-875a-10b06a3c346a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "38ec99a6-5536-496a-90b1-2ad463965e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512262c4-54fe-4643-ae7a-e36dbe9c4224",
        "cursor": {
          "ref": "b28eacd4-616b-42dd-9b5d-569a85fa6fa7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fdb667d2-027e-4bed-9e52-3b46c5bf6c1f"
        },
        "item": {
          "id": "512262c4-54fe-4643-ae7a-e36dbe9c4224",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2e018c69-065b-4051-ba4d-ff0df069447e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6fb758-4386-4b4b-8d66-3408a8bb4726",
        "cursor": {
          "ref": "035714ca-c1d4-490e-a30a-ea96b16dcb8e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ce66ecd6-b5fe-4124-be72-6ac7a01a2528"
        },
        "item": {
          "id": "eb6fb758-4386-4b4b-8d66-3408a8bb4726",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "836652ed-2a6b-4fea-8418-624d5a90599c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309034f7-fd6c-45e0-b624-23bad45dc84b",
        "cursor": {
          "ref": "3c50f987-56c3-4198-a535-9995ba1096b3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0ad07b97-c3b5-45f7-a8cb-b13f1bfeb716"
        },
        "item": {
          "id": "309034f7-fd6c-45e0-b624-23bad45dc84b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "46e7d7c1-7506-49bc-acb7-25c3cce1d6ab",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "39d023a6-f25d-40a2-897a-6184452d41ef",
        "cursor": {
          "ref": "d43cb30b-b4e0-4ba9-a6e7-43f5f5889a14",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c34f57df-72ab-4976-807f-d6a92c41be80"
        },
        "item": {
          "id": "39d023a6-f25d-40a2-897a-6184452d41ef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7d791b81-d2fd-40a7-ac2b-1b5aa8564813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960f2194-e1dd-4d95-84de-717114ad6628",
        "cursor": {
          "ref": "b6302942-944c-40d6-ac7e-bd78035c8cef",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c36a6ac-7eff-4d94-89e4-fc3b6f522d71"
        },
        "item": {
          "id": "960f2194-e1dd-4d95-84de-717114ad6628",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c0f5653d-6b7e-4359-969b-c4a42db7dd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77455ecf-593f-4b41-a834-b7aee6e80a99",
        "cursor": {
          "ref": "f52e0292-b991-405c-9cee-1d0b96df0874",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6ed8ca4a-49e0-411b-8372-bded7cd07ca8"
        },
        "item": {
          "id": "77455ecf-593f-4b41-a834-b7aee6e80a99",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "afb0c26a-d75f-4523-b73f-512653085534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b65004-a338-4498-896c-1e77a723aabc",
        "cursor": {
          "ref": "650b3868-ab2f-44b1-a650-e23ce8a57217",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dc580d9e-dec8-46b5-8037-6d307758361a"
        },
        "item": {
          "id": "a8b65004-a338-4498-896c-1e77a723aabc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b8f8109a-75ea-4bd3-be9c-ce83b653bc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3f13f4-4bff-4f4f-afd7-4022da1dc0b5",
        "cursor": {
          "ref": "9e9fad6b-3330-4bda-a65e-83ef443ecf72",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "24fec6cd-f0f2-44e1-8287-661bd9f1da9c"
        },
        "item": {
          "id": "4b3f13f4-4bff-4f4f-afd7-4022da1dc0b5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bfdd71c7-a5ca-4c5b-8e43-23150fc20dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15212ba0-5aa2-4b6b-9d28-abe673bec4f0",
        "cursor": {
          "ref": "8dc2f36a-6362-4739-9765-74c57597a0b0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "733f02c4-e083-4432-a7d9-330f53416b56"
        },
        "item": {
          "id": "15212ba0-5aa2-4b6b-9d28-abe673bec4f0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d71ff35b-1042-49a0-9f54-38015a901a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152aab70-591b-48b6-8e8d-0f4c16add978",
        "cursor": {
          "ref": "d5f5ad16-eeae-40e1-a900-5a9b90e3da06",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d5a58207-7b88-4913-94e9-165612008723"
        },
        "item": {
          "id": "152aab70-591b-48b6-8e8d-0f4c16add978",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fb7d1971-5711-454f-b041-51f44ce93042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e000c-2f17-4077-88c5-a0ac1960cccf",
        "cursor": {
          "ref": "b35fd64a-eeaa-4f39-b68b-40891f75c210",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2e469255-f122-436c-9d69-9784a502c2e5"
        },
        "item": {
          "id": "f15e000c-2f17-4077-88c5-a0ac1960cccf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa7dc43d-0dfb-4f7f-b1ee-ddbe141e0654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520584ca-100d-4354-8a25-26ab3d754088",
        "cursor": {
          "ref": "2d49a864-666b-4508-b925-c7d85da6cadd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fc1784ce-d470-4854-8b50-060cb6ddc8e4"
        },
        "item": {
          "id": "520584ca-100d-4354-8a25-26ab3d754088",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6489ab16-e3c8-4949-a0e0-0592d2f21d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08f50ec-4990-4f44-a60a-610f55c8e1f5",
        "cursor": {
          "ref": "0edb8862-74db-46bd-954c-446fb184543e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ff767be0-45ee-4f99-9ae1-01aef33c873e"
        },
        "item": {
          "id": "c08f50ec-4990-4f44-a60a-610f55c8e1f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e4725b8-18ae-42d3-8dd0-bd8b1424b92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca93482e-ae30-4ccc-83d4-90085ec272c0",
        "cursor": {
          "ref": "a3bad8e5-f13f-466c-997e-85e8433c53a2",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f902c07b-1d51-45a7-b169-32c5b4d3b92b"
        },
        "item": {
          "id": "ca93482e-ae30-4ccc-83d4-90085ec272c0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc2c9bb0-cfc9-4c04-90a9-cdeb6e409388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8478b745-b362-4bad-8105-419a01d7764b",
        "cursor": {
          "ref": "8dfb1ab9-c215-4b5c-bfc5-36f56a598682",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e3a89dd0-0d90-496a-8b90-77511f3cfd5c"
        },
        "item": {
          "id": "8478b745-b362-4bad-8105-419a01d7764b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1e86f2f7-75a7-48b0-b435-b9f845b2a5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739ba06a-4b76-4871-a400-870f5351b14f",
        "cursor": {
          "ref": "e1ac96b7-e06a-4feb-9a60-534010ab30d6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3bc9f65f-3787-4157-bca0-c16aacc8fe15"
        },
        "item": {
          "id": "739ba06a-4b76-4871-a400-870f5351b14f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f8765f01-58cf-4b7a-afb4-7ef738f6dda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41590b00-e937-45e9-89db-7a5d0f71ba9f",
        "cursor": {
          "ref": "6eb781aa-e3d7-456f-b10b-f63c24e96366",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "31266b56-4a21-43b0-984f-2f98b40a28ee"
        },
        "item": {
          "id": "41590b00-e937-45e9-89db-7a5d0f71ba9f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e86b656d-3c68-45bf-a214-fdba27b3d07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3027fb23-e9b6-4187-ac90-f3fc4a1ac8cd",
        "cursor": {
          "ref": "4ce9d18a-81db-40ea-9d98-863ba734a8bf",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "76eee19c-2c4f-4ca3-bd69-b3881a6a4deb"
        },
        "item": {
          "id": "3027fb23-e9b6-4187-ac90-f3fc4a1ac8cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98878427-69a6-4af5-9539-19b79b333561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f3179c-f47b-47d1-90e2-8765fb13ed36",
        "cursor": {
          "ref": "36adbec0-7d0e-4c76-b963-dab3b826d8fc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c0656446-1c28-419f-8afd-3bacaaf9b271"
        },
        "item": {
          "id": "c3f3179c-f47b-47d1-90e2-8765fb13ed36",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "393dc8ad-244b-4c84-9ea6-19e5ccf21b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0259fdb9-21e1-48c1-9161-fd08fb453be4",
        "cursor": {
          "ref": "c90f4543-e564-4626-8548-b7a71c0bc990",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "22efd634-6bff-4701-b85c-8c173e780c2a"
        },
        "item": {
          "id": "0259fdb9-21e1-48c1-9161-fd08fb453be4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bd2cfd83-e21d-4f4c-844c-865088614133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73378feb-1dba-4e42-8430-ef66c7eaf9bb",
        "cursor": {
          "ref": "b11872e5-238a-4e90-9fca-c892ce040434",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ad9c5eeb-304c-4c7a-8d86-e6d94ea2c6b7"
        },
        "item": {
          "id": "73378feb-1dba-4e42-8430-ef66c7eaf9bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c8f74605-ff92-4033-9271-c5d608d37f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7b4f14-c763-4ca6-b36b-6b79ea987eda",
        "cursor": {
          "ref": "4fd141ae-5fe8-4d4d-bafc-d2f6f092ed2a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b91e404c-6bbe-4cb1-b614-984463c5e230"
        },
        "item": {
          "id": "1f7b4f14-c763-4ca6-b36b-6b79ea987eda",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1f2fd355-7c75-424a-99ed-9f427e0e71c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559cfcd2-08ce-4bc1-b7bc-2b567232349c",
        "cursor": {
          "ref": "3728ee7a-3471-4dbf-b491-72c7397004f5",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a8b469fc-d5de-4be1-abba-427704983260"
        },
        "item": {
          "id": "559cfcd2-08ce-4bc1-b7bc-2b567232349c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c5cf8f44-706d-4fc2-94bf-a67a296a00d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b076ae24-0eaa-4e0d-8db2-dfbecd7d0b4c",
        "cursor": {
          "ref": "c577fcc5-2cc2-4f09-bbd8-2d2f70249cf5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "331343a3-7d1b-4a21-bced-c19133d2fd0e"
        },
        "item": {
          "id": "b076ae24-0eaa-4e0d-8db2-dfbecd7d0b4c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4a7a58a3-d34f-4f76-a1d3-da4502002065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf5b2d9-160b-4c8b-a649-f446539c6d9d",
        "cursor": {
          "ref": "c622451e-d8ee-4e6b-a35b-e521e17e52b4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5deda11e-c916-4839-9c11-a169592c13d0"
        },
        "item": {
          "id": "8bf5b2d9-160b-4c8b-a649-f446539c6d9d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a137068b-4bf9-4716-9f37-9912bac6a106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6b5246-e92f-46f4-bcd4-6df79ec0f0b2",
        "cursor": {
          "ref": "76ca0636-834a-4c80-bf7c-b3d40f28d010",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62eb77b8-5846-4af0-9ea8-a8351b87c707"
        },
        "item": {
          "id": "6a6b5246-e92f-46f4-bcd4-6df79ec0f0b2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ae799c5c-86ff-44ea-adf3-88bc74f9060c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c44e9b9-8829-4260-8246-4456950c0f76",
        "cursor": {
          "ref": "65c13564-e71e-466c-a148-6d2808833908",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6a752f3d-b92e-4f4b-a783-250af1ae7bd2"
        },
        "item": {
          "id": "0c44e9b9-8829-4260-8246-4456950c0f76",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2adf044a-c5a8-48fd-ae8e-3f91ee6e5c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3824bb56-7a16-41d5-88b8-762870ef9d0b",
        "cursor": {
          "ref": "504d63e8-e389-4c65-9563-1cf785c966d1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "68e5543a-abd2-4073-b0bd-bc0a2ae217b8"
        },
        "item": {
          "id": "3824bb56-7a16-41d5-88b8-762870ef9d0b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1972d7d4-c4e3-4b28-8e7c-83eacd9a3a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcf9b75-d08a-41db-be64-a8939823f02b",
        "cursor": {
          "ref": "54071db9-12b2-4049-9e15-03719a42ba0b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "888753f2-2858-4dff-af62-18db445d9853"
        },
        "item": {
          "id": "efcf9b75-d08a-41db-be64-a8939823f02b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "20b612e8-70ab-44f0-89cd-5e4b1d2c5631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d61964f-b102-4459-8181-147e38e0ebc9",
        "cursor": {
          "ref": "94bacf3d-e741-4dbb-ac9d-4f3e5d8722cf",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0f509a7-e152-4b95-9ca3-287345e5ed6b"
        },
        "item": {
          "id": "4d61964f-b102-4459-8181-147e38e0ebc9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d251c3e7-4437-4129-a69e-3ca53d23be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc304bc-f0a4-4b6b-a043-ba5747a573cc",
        "cursor": {
          "ref": "f7936852-87ba-4ed9-8e4c-9eb49ca91a56",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "01d05ad8-b381-4b21-bb01-bb8b3af1e42d"
        },
        "item": {
          "id": "8cc304bc-f0a4-4b6b-a043-ba5747a573cc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "226d9650-6315-4631-871a-5f4f1cb7afe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3589747f-ebc8-433f-9459-2572c840a542",
        "cursor": {
          "ref": "405193d4-770a-494b-b8f1-3bcf9829aa74",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d566c3cf-f0c5-44b7-878f-705a06bbaa29"
        },
        "item": {
          "id": "3589747f-ebc8-433f-9459-2572c840a542",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e2f76c8f-e792-4c25-ad72-5abc2f9ffe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a619279-68ec-41ef-b56b-cb6682e6f09e",
        "cursor": {
          "ref": "7e2b3773-69c7-49d6-9af7-c9ef576a70cd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "98790760-667b-4e50-a2b6-6ea8faa8ac9c"
        },
        "item": {
          "id": "9a619279-68ec-41ef-b56b-cb6682e6f09e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c6b3f34e-5384-47c5-b06a-cd513855b076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb2bca-63ce-4e79-99b1-3635f673671d",
        "cursor": {
          "ref": "dc7246bc-4e7d-4588-988c-b43c19688dfe",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7abc3d24-d91d-42cb-a5dd-b335ccd00221"
        },
        "item": {
          "id": "deeb2bca-63ce-4e79-99b1-3635f673671d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "10025b51-d070-4572-a916-fb761c9bc2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1450067b-f4d2-4b6d-aa3f-4981a1b549b2",
        "cursor": {
          "ref": "954e0429-58b5-4483-ab00-b6f634a2ebd5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "05e1f155-df5e-4081-b1f6-0255b4d4c1de"
        },
        "item": {
          "id": "1450067b-f4d2-4b6d-aa3f-4981a1b549b2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "41f34763-9333-4e5c-8e6b-ebe102975587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313a3ff-2e79-4418-9ace-7f598a79c8d8",
        "cursor": {
          "ref": "af4e0d73-fdf9-407b-a16e-a993720449d4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d011e884-a0c1-4646-9740-89fd9dc02346"
        },
        "item": {
          "id": "4313a3ff-2e79-4418-9ace-7f598a79c8d8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "59437f9d-e100-44ac-a543-49b1f9e06af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1356340-57e9-473a-88b2-6e12368bd66a",
        "cursor": {
          "ref": "dac517e8-c83c-436d-8be7-21364d51c672",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2a945200-9947-403f-b6df-9fb7842935a3"
        },
        "item": {
          "id": "e1356340-57e9-473a-88b2-6e12368bd66a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5f6045e6-6832-4170-a454-a53ea9d1f035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcc84ae-e81b-4397-ae3d-b9d6b3f36f09",
        "cursor": {
          "ref": "780529d1-29b0-4b72-a27e-814f552f1d7f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "68b2031e-3ec5-4a77-a00b-8a87216d1e7f"
        },
        "item": {
          "id": "1bcc84ae-e81b-4397-ae3d-b9d6b3f36f09",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a3ce40e8-e343-470e-b742-8a007e33121d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34094b9e-d796-4677-90f2-6472a99b793e",
        "cursor": {
          "ref": "6d56b92d-3caf-41e6-b50d-6db6ed0a0ec2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "53f0fda5-8776-4c49-983c-6f03b05db197"
        },
        "item": {
          "id": "34094b9e-d796-4677-90f2-6472a99b793e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f3c98b12-25a1-4b59-b9ab-18407969e3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bf28a2-0a98-41ea-8647-312b764840a0",
        "cursor": {
          "ref": "b5f5e900-a048-4fdb-a8d4-cbf5301188ab",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cbd4c13d-93b8-4658-ac87-f9f82b776a58"
        },
        "item": {
          "id": "66bf28a2-0a98-41ea-8647-312b764840a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c9e7c5c2-6046-4b82-a9e9-f2c34c0df7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a90435-05e8-4cc0-b5d2-47f49a93384e",
        "cursor": {
          "ref": "1dd00298-2409-43f4-9c70-453839853b8f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94d9ec9c-ce87-4ec2-8b52-dbd539de2971"
        },
        "item": {
          "id": "33a90435-05e8-4cc0-b5d2-47f49a93384e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d6a2076b-5281-479b-9d30-aa664c84099d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90678dbe-8445-4de4-bfc6-82de0d37cdad",
        "cursor": {
          "ref": "e417d50c-b055-431e-8578-f5c0052c40f8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cb35ba15-6889-4e60-9587-4693d3dd6dd8"
        },
        "item": {
          "id": "90678dbe-8445-4de4-bfc6-82de0d37cdad",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8d2ceb99-8bdc-42ff-8a91-30e9d5d3c8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a79edc9-d4f8-403e-8d80-8647ddfe34c0",
        "cursor": {
          "ref": "6a12e871-0174-4df1-ae30-0175470525ea",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd8ce000-1d13-4086-9f14-1937e697dab1"
        },
        "item": {
          "id": "1a79edc9-d4f8-403e-8d80-8647ddfe34c0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4cbcb1c7-8c5f-4172-910e-a827867d6590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab396e5-060d-4408-9da2-354a32e01909",
        "cursor": {
          "ref": "f8d6d6ce-1630-4190-bf88-13fd15018727",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b1d05443-36e4-4b30-b677-c766da844660"
        },
        "item": {
          "id": "cab396e5-060d-4408-9da2-354a32e01909",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0f51d2c1-8ac3-4362-90f0-c2b6773b0f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46594e8b-1fc0-42d5-8cf1-3f56e66e3530",
        "cursor": {
          "ref": "bf56a67d-df4c-47c2-bf7f-779b6080234c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "19c2cffe-1a4a-4efb-82ee-1f6be3ad7bb7"
        },
        "item": {
          "id": "46594e8b-1fc0-42d5-8cf1-3f56e66e3530",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "72fe18c2-cea9-46f1-8733-f75ecf7c955f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3800d37d-859a-423a-bde1-ddd909b9e6bb",
        "cursor": {
          "ref": "3edd9c2e-aa5b-4e34-b1eb-acf73e7e740b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d009cbc7-d16a-44ba-8307-36dd14f5bc92"
        },
        "item": {
          "id": "3800d37d-859a-423a-bde1-ddd909b9e6bb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "691d68ad-5235-4e79-baf9-2fedaae43642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4f9b26-de76-4826-885d-113da56adae5",
        "cursor": {
          "ref": "5e969cc9-dc59-42df-9014-8315c03fb03a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "72e420f5-b12b-4204-bc3f-c683b6c3f078"
        },
        "item": {
          "id": "0b4f9b26-de76-4826-885d-113da56adae5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "22da32ec-b9a3-4de9-9754-4917527bdbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b2135-d353-46a7-8e4a-fdcd755b1aa3",
        "cursor": {
          "ref": "936a8daa-890f-4ed3-b11a-5a46b3dc5fc6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e2d887ab-306c-4a92-ab53-bb6da5a9de1c"
        },
        "item": {
          "id": "145b2135-d353-46a7-8e4a-fdcd755b1aa3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9384f266-1550-4346-9672-f32a11d25536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ccb62f-b9ba-4692-becf-cfed92946f16",
        "cursor": {
          "ref": "13e1f16a-757b-4050-81c4-ceeae3f3f393",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "91ab774f-c434-4561-8162-9886f2c9e75b"
        },
        "item": {
          "id": "b9ccb62f-b9ba-4692-becf-cfed92946f16",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "db1f7987-77f4-4288-bbbb-451fb3495dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59af04d7-7e15-4785-a84b-a5a3741ed3fa",
        "cursor": {
          "ref": "c1305532-ba4c-4f62-9542-12b820cafa1c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e0711e09-ca6c-4db8-82ee-3e16de9e1444"
        },
        "item": {
          "id": "59af04d7-7e15-4785-a84b-a5a3741ed3fa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0ad1d6ba-c6fb-452d-b1ba-5db78c9039bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53ac251-ece1-4727-8296-079e0c5856f3",
        "cursor": {
          "ref": "65456235-6bcc-4035-aa6f-69605276e8a8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "215a26da-a637-492d-938a-443bcba1ad6a"
        },
        "item": {
          "id": "e53ac251-ece1-4727-8296-079e0c5856f3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e15fe9c0-54ed-4c93-b4d2-f6a92255199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b27600-6497-449f-81c4-cb4157e9075a",
        "cursor": {
          "ref": "2392be56-448f-492a-ad35-2fad73c3ba2f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "350b39ed-cd20-4e0a-a1de-0f002a6de87e"
        },
        "item": {
          "id": "07b27600-6497-449f-81c4-cb4157e9075a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "60e66655-f965-46e0-9efe-a0b316c852b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8272863-064a-4acd-96ee-34ea6cc835e8",
        "cursor": {
          "ref": "a11e417c-be9c-43fa-bdf7-a26980573ae9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5ef3730e-970c-4005-85ff-8df165a886d1"
        },
        "item": {
          "id": "b8272863-064a-4acd-96ee-34ea6cc835e8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9271e004-6aa5-40bd-b474-6b0e0381f7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d0bed-0233-41ee-89cf-840adcb72e41",
        "cursor": {
          "ref": "f8b5c238-dd91-4d32-972f-de1ca66b1b95",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "45671e60-bc82-4284-bc0d-ad051d02a9e4"
        },
        "item": {
          "id": "795d0bed-0233-41ee-89cf-840adcb72e41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cc64b733-c261-4e36-a2ea-8d36ceaa83b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc34c4bf-08c0-43de-8e2c-315d840df0d5",
        "cursor": {
          "ref": "51e4abc7-a389-4c51-a6e8-d3961c6f384d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b05a13e9-44aa-4236-899b-7c63b6a86037"
        },
        "item": {
          "id": "dc34c4bf-08c0-43de-8e2c-315d840df0d5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "beae4556-71be-41e3-86fc-8b1e8ea10f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77142aec-097b-444a-8f21-47c89152d8bd",
        "cursor": {
          "ref": "0174d384-5ccf-4af7-a0d9-f38b25abc67a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4117fd1-bd36-470d-be0b-a5c0f4321ddf"
        },
        "item": {
          "id": "77142aec-097b-444a-8f21-47c89152d8bd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0ea0fc3e-4b12-4e30-ac0e-8c67c4bb3cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa41e09-830f-4c28-9d40-43fef6adae16",
        "cursor": {
          "ref": "ef6408cf-6d86-43fd-8769-ac7c78f7a5a7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f55b78c2-01bd-45d8-9517-0c5d08f91d99"
        },
        "item": {
          "id": "daa41e09-830f-4c28-9d40-43fef6adae16",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "82ab29e3-8918-4650-8c23-3a74ea0746ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c63fe9-a542-494e-bfa3-22cc8f6947c2",
        "cursor": {
          "ref": "389015ba-f032-478f-8ead-dc6da9fef64a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f5dbd188-5c15-4df5-9882-49ee2072696a"
        },
        "item": {
          "id": "28c63fe9-a542-494e-bfa3-22cc8f6947c2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "542a085d-454a-4654-a6ab-68e6ad7cb1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4506e6d-1b41-4d4d-8208-0d77d75665eb",
        "cursor": {
          "ref": "83c01b25-4861-45b4-8fa3-4f21cdd8727c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "074f2abd-ea6a-495b-bce8-ef61b51989ae"
        },
        "item": {
          "id": "c4506e6d-1b41-4d4d-8208-0d77d75665eb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a67d51ef-526f-4db3-bd59-0b50a1899a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8c2c6e-b914-4cfb-8bc9-07f9486832a2",
        "cursor": {
          "ref": "a9383155-132f-4d31-8512-8816cf721314",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "92e0a318-42ce-497e-981f-4fe92348100e"
        },
        "item": {
          "id": "ce8c2c6e-b914-4cfb-8bc9-07f9486832a2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9fd06a3e-acaa-4c8d-90a5-d1ac2cb40a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9cd6dd-a4cc-4a32-8aad-8409193123ef",
        "cursor": {
          "ref": "3e823964-a132-429e-9729-0121e74dcfb7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "980333eb-e6d5-4357-8ffa-34c3250cb9c1"
        },
        "item": {
          "id": "be9cd6dd-a4cc-4a32-8aad-8409193123ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0fdafef-5514-40e2-b7a7-a0385e731892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a1d8fa-7828-4baa-ab57-4d153f9d9bd7",
        "cursor": {
          "ref": "9bfbca37-1136-4985-8f86-c9f62573ca26",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2c52a3ee-bb39-44c8-8348-a8cf95d79478"
        },
        "item": {
          "id": "13a1d8fa-7828-4baa-ab57-4d153f9d9bd7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fa6f3870-288c-47bd-84fb-14fc25cc64a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e78b2-0f92-46bd-89d6-8c9e6f423f17",
        "cursor": {
          "ref": "3d4ed4c9-a48e-4d79-b7a7-e7268a7c2e13",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "684142e9-20cd-43b7-8759-23ddb4f2f45d"
        },
        "item": {
          "id": "9a3e78b2-0f92-46bd-89d6-8c9e6f423f17",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0a0a975b-8c24-4060-ac09-2d5e71e276dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff733ab-0832-46d7-82d3-ae9049a18fda",
        "cursor": {
          "ref": "143d2155-c0db-4df8-bbd8-4aa37f62deca",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6722e39d-5a0e-4cac-8b33-df5edc048611"
        },
        "item": {
          "id": "9ff733ab-0832-46d7-82d3-ae9049a18fda",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d9f5977d-f87c-4733-b791-b1a7f9e58bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d3f601-6803-44bd-8de3-102c2aa3128f",
        "cursor": {
          "ref": "51d5275f-9e50-4634-8cdd-092c7c78c8fb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e85fc673-c760-43e8-95a8-ca669809188e"
        },
        "item": {
          "id": "02d3f601-6803-44bd-8de3-102c2aa3128f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb44a25c-112c-4e5a-b2d3-ab4c3a85cbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f61951-00a0-46e7-8580-1ed1a043de62",
        "cursor": {
          "ref": "7a308d09-a161-42e0-bca7-204fc5807249",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e75e5186-0094-4305-ba20-462661a6afc5"
        },
        "item": {
          "id": "37f61951-00a0-46e7-8580-1ed1a043de62",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d63e5082-a984-40a1-9055-90ebfc778281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc79202f-e962-474d-bd8e-70693d2389f0",
        "cursor": {
          "ref": "fa593dd1-1b1f-4f43-a871-530e16fe6d18",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7e8183c3-1df3-4a0e-ad78-b2dc09beb3c2"
        },
        "item": {
          "id": "dc79202f-e962-474d-bd8e-70693d2389f0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f6cfa078-4523-4e00-ba06-7bbca6986bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672f4d1-e6a8-4191-9b4f-eb2add88d867",
        "cursor": {
          "ref": "b66f9c53-43bd-40af-803a-c4f4e7c56c92",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cfee66da-1c5e-499b-9352-68cdde03f8fc"
        },
        "item": {
          "id": "2672f4d1-e6a8-4191-9b4f-eb2add88d867",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "960a4ea1-eaf3-403f-90f3-c793322f8e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8888fa0a-9d58-4f01-8d24-435a7fd8e299",
        "cursor": {
          "ref": "0bf5b2ef-8d0b-4e6b-b5a4-98e4644256ca",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3c825610-8da0-4d1e-b1e3-abac9883b433"
        },
        "item": {
          "id": "8888fa0a-9d58-4f01-8d24-435a7fd8e299",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "799aa33a-87a0-47b7-965d-6f277e6a45ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e568e51-1726-4faf-821b-1cd2aa4ece86",
        "cursor": {
          "ref": "cd1533a8-6e7c-4bfc-b819-f39b3a42e627",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ae294457-321a-4ea7-92fa-aa81de1de0a9"
        },
        "item": {
          "id": "2e568e51-1726-4faf-821b-1cd2aa4ece86",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "63082506-77fe-473a-9672-223ce017a0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c7e345-0b99-44b3-8d34-2f047bd78b57",
        "cursor": {
          "ref": "437b1f5a-b586-460c-b77e-959f7a8e41a4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "916d5ce9-0781-40f9-a5e6-2beb687de591"
        },
        "item": {
          "id": "37c7e345-0b99-44b3-8d34-2f047bd78b57",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9e76cde5-f443-46b5-9bc9-a797ab0e9d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5488051-6440-46ae-9f72-6a64b347c8aa",
        "cursor": {
          "ref": "5fb9aebb-1dae-4e1e-bda8-0c02eb3ccfca",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1ed8f241-d770-4242-9e74-9570f63147e2"
        },
        "item": {
          "id": "c5488051-6440-46ae-9f72-6a64b347c8aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4db0af00-0898-4bf6-a527-50d92607af97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e35a1-be8d-45d1-bdcb-77f02377af47",
        "cursor": {
          "ref": "01d4015e-0077-490e-84f5-04cdfb91945e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5ff625fa-81e0-49e0-8b78-9d00264f3e88"
        },
        "item": {
          "id": "c75e35a1-be8d-45d1-bdcb-77f02377af47",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4b1dbb2c-ab72-42ab-b8f7-fe5a7fed3a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4132d9-8720-4484-8b67-320e1eda947f",
        "cursor": {
          "ref": "9dbeac01-c8ee-4f73-ad37-8d2618e22ce0",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8bea81af-ec0e-484b-b6a7-7c9b30f34846"
        },
        "item": {
          "id": "8f4132d9-8720-4484-8b67-320e1eda947f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d9e31e7b-6901-4073-a18a-7d481c3522fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef1e2cd-21d0-4c90-a6a5-531968a2731a",
        "cursor": {
          "ref": "5d096d54-aab5-463f-8d39-934a59df4b23",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b23e2e22-ae3c-4db9-b7bf-e0d60435fc87"
        },
        "item": {
          "id": "8ef1e2cd-21d0-4c90-a6a5-531968a2731a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "de94bfe1-ac5f-46c6-bf5c-dd6ac9938ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d8a14d-4851-41b1-b6bc-ff52b113b645",
        "cursor": {
          "ref": "bae610f7-d250-4a10-bf91-c69420f46d3b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "00c56813-d018-425b-8333-0f4d594dbfa9"
        },
        "item": {
          "id": "10d8a14d-4851-41b1-b6bc-ff52b113b645",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ef7d5f77-e08f-4907-880b-2d6c4f3673c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7c624e-8123-4ed1-85fa-49627744e6ec",
        "cursor": {
          "ref": "d2a2a2cb-1e15-45d5-b1bd-6e1cc44bea48",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "10f7461c-de50-46dd-a7a1-b2dd4914265b"
        },
        "item": {
          "id": "ce7c624e-8123-4ed1-85fa-49627744e6ec",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eea72822-95bd-4aa9-9723-c0d2e68e040f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af79a5e-893f-4bb7-9322-f6ac1fa5d85e",
        "cursor": {
          "ref": "eb6890d0-4a23-4966-865a-24db9fbc7980",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "55d9df9d-d229-4fb0-b837-848c6cd0374e"
        },
        "item": {
          "id": "3af79a5e-893f-4bb7-9322-f6ac1fa5d85e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "78bbbf0c-783d-43f2-aa9d-07fa68ab9e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c816525-6bc6-4646-9913-bde5978861af",
        "cursor": {
          "ref": "8222ef77-4d49-4816-b57d-f5bd6bffee45",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fdf01f85-10c0-4b18-a75b-c3ba7363acaf"
        },
        "item": {
          "id": "1c816525-6bc6-4646-9913-bde5978861af",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "efc493c0-be8e-440c-9fce-9fbfa01e977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e77d59-6650-4618-8b36-b0abc56786fd",
        "cursor": {
          "ref": "eea236a4-2734-434b-bd29-07881e8468c5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e9082ec5-c459-48ca-ba57-949a70b52a46"
        },
        "item": {
          "id": "79e77d59-6650-4618-8b36-b0abc56786fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d87c60d7-9b56-40d5-9c92-ac4e746a5b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0be443-1632-4e66-b233-c68de4235448",
        "cursor": {
          "ref": "69f6dbf5-a1be-4054-8502-7e2c6477a3ae",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4d3ba859-09aa-47a5-b3c2-00fa47c1b08e"
        },
        "item": {
          "id": "2e0be443-1632-4e66-b233-c68de4235448",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "470c5df8-1023-465a-bb88-5f3231f32510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbf74e0-16a8-4775-bf5f-b64ba12e3a1c",
        "cursor": {
          "ref": "aac7b5a0-3846-4103-9405-d8833012e0aa",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "11d3c5a9-9deb-4e8a-b979-5913e4277823"
        },
        "item": {
          "id": "2bbf74e0-16a8-4775-bf5f-b64ba12e3a1c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "96576c2b-3665-4cd9-94cb-a26516406cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab665e1-c5e9-4dcf-b8f8-ce4d1d6685a4",
        "cursor": {
          "ref": "23172ce4-94c5-4c86-917c-b08fb8ce6648",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "087026e6-6fd5-47da-a166-6fced9aaf73e"
        },
        "item": {
          "id": "3ab665e1-c5e9-4dcf-b8f8-ce4d1d6685a4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "88176517-a9d7-41bd-90a6-adf2fa9dd32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f78863-f48a-4ccf-b34b-f96b36148a32",
        "cursor": {
          "ref": "422c39cd-4443-4066-b0b2-dcbdd71f0cc3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bdad7c1c-a687-4801-88fd-b0981e64161c"
        },
        "item": {
          "id": "a2f78863-f48a-4ccf-b34b-f96b36148a32",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0308534e-647d-4e84-b928-ce7e14abc988",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235d8350-c3bc-4ab4-8600-9ab46f30389e",
        "cursor": {
          "ref": "d1049c52-3386-4a21-9334-6fd698caa082",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a949fade-2aad-4aa3-9fbc-1335816851d7"
        },
        "item": {
          "id": "235d8350-c3bc-4ab4-8600-9ab46f30389e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9d5797d8-e311-421d-bdd5-c419e2d7373d",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f2bb43-f925-4175-8bf2-a317b9ab94d0",
        "cursor": {
          "ref": "9105bf6f-0c45-47e5-8749-70c944e08a51",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8b5ed584-57c5-48c8-87e8-10d09e0bfb1b"
        },
        "item": {
          "id": "d1f2bb43-f925-4175-8bf2-a317b9ab94d0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b257d4ec-f85e-4943-b537-25e400f4c32a",
          "status": "OK",
          "code": 200,
          "responseTime": 6657,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a754b230-71d6-49d6-89c6-0fb336dc7ceb",
        "cursor": {
          "ref": "4991c0d7-7931-4182-8d39-1468a3531e84",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "55a33d45-5c10-4c5f-9421-de2d8790259b"
        },
        "item": {
          "id": "a754b230-71d6-49d6-89c6-0fb336dc7ceb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3e666651-9226-4f7a-87bc-44304b7ce2bc",
          "status": "OK",
          "code": 200,
          "responseTime": 2074,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9c1534-893a-4060-b709-d3d23c1c2410",
        "cursor": {
          "ref": "55a85414-2ad0-4236-a343-6f02f9525278",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7c295829-0316-455b-a49e-5c2dcba24ff7"
        },
        "item": {
          "id": "9a9c1534-893a-4060-b709-d3d23c1c2410",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e560077e-ab5d-42de-8ad0-84a4af0a96a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9c1534-893a-4060-b709-d3d23c1c2410",
        "cursor": {
          "ref": "55a85414-2ad0-4236-a343-6f02f9525278",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7c295829-0316-455b-a49e-5c2dcba24ff7"
        },
        "item": {
          "id": "9a9c1534-893a-4060-b709-d3d23c1c2410",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e560077e-ab5d-42de-8ad0-84a4af0a96a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0c9639-3225-42f1-aaa3-d8f77fe55b43",
        "cursor": {
          "ref": "352ba919-fc84-4dd3-b21a-db10594512c3",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7331cde3-0b49-437a-87d0-9563322e9ccf"
        },
        "item": {
          "id": "0e0c9639-3225-42f1-aaa3-d8f77fe55b43",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ed24fde-5d95-4fe8-b153-aef48342ac29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0204d715-9aa1-4ea7-a925-661d4d42f2fb",
        "cursor": {
          "ref": "66644257-7512-4144-b29e-140cfc13cb5e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "738c8d5b-f6cf-47c8-95c4-69f551844c01"
        },
        "item": {
          "id": "0204d715-9aa1-4ea7-a925-661d4d42f2fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a7f56fcf-4fd4-468e-800a-d5069c601cc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}