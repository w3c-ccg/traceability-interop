{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "105ce534-59d8-471e-9a16-c4ee135744b2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b0a6551c-4e02-49fd-84da-1b5b263cab9a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89a35bd0-094c-4d67-a7ef-9e206da0e091",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "af6ecf40-df7b-4e82-a594-2a3ba5805c9f"
                }
              }
            ]
          },
          {
            "id": "f4699a6e-8914-4073-9445-cac5796168dc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd297a4f-533c-4e0d-b6a1-c80f7d059ba9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f54077c9-1244-4e5d-8762-e4dd1ca54b43"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dd3c8c8b-e2b6-499f-a835-7d7f464fe791",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "52a48cc2-187d-43dd-a13f-efcf48a1c3d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4eac61ad-bb94-4599-8d6d-e6d6c2c35f0b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f77bf056-aad5-4c33-97b1-52a49759a4c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67d0a939-cb46-4668-9386-09c92a6cde94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "671ffb44-06d1-43d2-9690-88d4ac3ebf15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e1a3b73-4cd9-4afb-b83c-42da3a013cc5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1c26787c-f10b-4629-b206-1607ac83a473",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e477a93-e558-4b60-b053-f85e657b1d3a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fac40ee9-17da-49f0-87e1-62176b936bb8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5c180350-f4d8-4c42-8e38-984b9e4018f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a33b79f9-f2e7-4d94-8bb1-8d1ae7f9dbc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "457b491a-8878-4b60-bc53-fed72acd073a"
            }
          }
        ]
      },
      {
        "id": "01ce2364-1cd9-4253-b574-ece237ad6aa1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "768abd91-eb7e-4fc2-9edf-2359184a8a93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bcd652e-0d91-4995-a9c1-7010e601d872",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d660a60f-66ad-42cd-8cc0-827ce98ae10d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56054cec-cd9b-4d6f-b2ef-ca2b5327504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8ad2e79-3569-47e0-987e-b208f15edb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1605117-003e-41ed-9dd7-c87872f55d60",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7341a73d-b134-4090-b681-cdd41b8f0575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fc76981-1c69-4043-a249-f65681c00ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1db2083-5930-48f6-8d82-d443340b04db",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4eb717-732e-4762-bbc1-840702745e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a707ea4-8928-4c0a-9776-a99ddc168215"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c18ac678-0158-42b4-b92b-a78347d2c8da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f5d5144-ae8b-4d43-b080-650925f1c949",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef051e-a310-4ce8-88e5-b15f0660e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a83243c-14f3-41f0-a32e-a7584c0e9db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c08aa6c-d11c-4fbf-811a-32a425556846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef643b0-c578-4f80-8766-3b012a2148ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "54928017-788d-4290-880e-cf93d033c5f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7497ae70-32b0-409a-a8b3-864c9868c44f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "217872c4-0219-4863-b4a1-3b2fdb845a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7908ccda-f1d5-452a-b245-0fcf150ecd5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cbeb565-01df-4bb2-a2ac-a66e5736d4ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4a3c27ce-0eef-4eef-bca8-78493e83cf67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f2cc8a4-a3fa-4873-be24-fa68bec730eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d66e84b0-b108-40c4-aa8d-374c2e5afb55"
            }
          }
        ]
      },
      {
        "id": "7e0460dc-5d67-4de3-9e41-a936427037d9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4721b8f7-d58e-4ffa-9bbe-e84cfdecaf42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "368cce8d-6b70-4fb8-8725-25c7843c10f8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0d57f10f-8390-40ff-a16d-a3c9ab4d7a68",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171ff194-5c33-4713-b931-783b0583d4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4af933-b38b-44a0-8d81-8c1958f5a289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9413bb-41e9-4f89-84b8-4ae90aded172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78a47083-2549-4a12-9937-5674eec9d36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6925aba4-ed71-4d96-b247-a85e0ade5947",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bde45e-7fb9-4ae1-a8e1-aa027ea17c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1af2be-511c-41e5-8c7e-a676db0754e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f546565d-b8c5-42b4-b2a1-96aef7b780da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5058ba4-5333-40f6-aa7f-a2a277dd8318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9176bff9-3481-428f-8d22-90e46784a841",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4004d5-6706-4957-b157-3a37805fb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63362452-f953-4d1c-bf15-4b5bae69a3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb268d9-d079-4b6e-8e2a-cfa57b6442f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0130ea7-f2e3-43c2-b02b-f841baefdbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccabc3af-e584-4c10-b7a8-f67f58b0aa07",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4210b4-da9f-459e-9fa9-9bd1cd878219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94997fc5-c163-4f4d-a26f-a9591c1ec41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964b4c07-762f-4c56-b8dd-30aaac69f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7bed0fd-5146-403c-96ac-af5def8cc575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acd2c01-02a4-490c-9f1f-59b3f18e5a75",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5651a582-2341-457f-b722-e53727bea524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6967b3a5-ff90-459f-8789-6d2f91f06b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70470e3d-0b5e-4810-89e5-c3365b7f3046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e62fc30e-d307-455c-b398-78d788e550e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3901e80b-f13e-40ab-aae3-e1cca2c130dc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b238d622-a5de-44b9-b4ca-7a135cbe2ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf27aa3-6b1a-466d-aa05-76e00ddff336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c63785a-b562-4053-8c83-4e6d04091244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282ec82d-70aa-47b9-96dc-98dd9559d60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2724325-fa60-427f-a5cb-889a601e4e90",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36f1e4a-7041-4358-a545-faf38007237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cd2e36-54da-4c4c-be8b-d4d4e6121548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbbc88e-9dad-498d-bd10-657634b45dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63db1cf8-bd69-40df-9da4-9fb25cfc4615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500446a7-a589-4f56-a06f-efbabc6fed0a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d246c2a7-0783-41fa-9d47-acb3004e6280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1836e671-77cd-437d-8cd1-13232ac33ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b350cf13-03f0-4caa-b2e1-8df50d393948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afd01fe7-bd12-46e8-a697-e4c1fb298e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8f3b4-dfb1-4402-8943-7c669d6c9292",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f3d840-a880-4a8e-9bb5-006cc7c2c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6205fa2d-ea5d-4aff-ac33-4cbd8909c91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e3927d-6b5b-4c3e-9fd9-da1d2f51bd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1695023-35c0-458c-9dcd-9d052ba28760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c7811f-3e11-45e1-b4e3-4f1b475e2c35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416712c3-92ba-48b2-b59e-fe3ed58d8c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a973c03-9255-4eca-8379-f34c8ffe7acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9a94b5-0240-4188-847b-a1a9a4a21166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b809e891-dcde-46f9-938b-7194447b4ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292177f-ae89-4881-b061-86014d796a9b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d47dbb4-97dd-430e-a2df-ce0104c72ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164b7d50-9f6e-483e-8b34-d74a0d7f0ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8603d104-9d9b-4de3-a1cc-560efc222996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2322e3b-7bcb-42cc-a90c-8197fb1bca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653a724-96d5-41d6-9355-664fa73b4f9a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd684e7f-210c-440e-8474-9fcda6d3290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c578e1e-62fd-4e69-b730-bcedf5570148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b6b62b-22f3-4a82-980d-5e5bf159acad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc6153ba-2d4b-40ef-a1c0-a001c42195d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60068803-e961-4b40-aa10-5abd36a31d83",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86275919-7783-4421-9fd3-3856b7baeee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c6211f-d11c-4f1b-b8f6-ef802084fd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbc7a75-d225-4c38-896e-5ea93af3a7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5c03b98-4f31-4077-9328-38bc36775c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0394716-eeb3-4f92-973d-0175506c23c5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c2a17f-ea00-4581-a81b-c112b906cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1bbbbf-5a47-4877-8c1b-f99c14e368eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8090dc7c-bb98-48b5-8143-ea7acc88b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b902962-3b6e-4341-a2bf-d29d6a33b3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec23f57-2553-4bf4-ab4a-c927c09e3ae9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bb6184-92eb-48aa-81a0-4d9a16177d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f244b86c-56f0-4634-9c2f-b1cb8a85fd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396363ef-52d0-4e41-a863-ae5265b1217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42b9b319-1c02-4371-a77f-2ae7a032eb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d497d3-cfa8-4963-8a28-182beab98aef",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f81025c-7c21-41a9-ba25-ec9b1a3432fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78182f0e-9bca-44f2-8869-1933d9b46ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a10e8b1-baf1-4f8d-81fc-a3154f5e808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "001e8983-9cd0-4351-98b8-c5b9bbfad662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fa3dcd-30e5-4e70-8e65-43f6f06a0c5f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b53b611-409d-427c-8802-abcecaef8d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f073a0c8-cfbe-49d5-b054-39f284d43ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1db1fc-ffb7-4fd4-8ec9-795df06e016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e70b3d18-cc8a-4a4c-a531-f6bdbf9a41ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4ec244-ce08-4d35-974e-59ae6a748f97",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f62217-438b-40dd-b099-af76b5096058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85f012c-15c2-4c91-af5b-ffd1c5aead53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dc9ed3-ac53-4672-b2a1-fd64784e36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1408493e-309f-4c89-a999-556f1425d9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ff8bb9-9295-466d-93bb-07fea38c4f77",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc2faf6-426c-4bee-a1cd-4bff178d6abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19b7493-0776-4d9b-89ce-d5f7d7b86d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a8a75b-e0ed-4159-854f-b0188d81d5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "755e0da2-0b3c-48bc-a969-273b5293c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427aa182-e08d-4b1e-a507-24d18df19bce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1642444-85e5-4b42-b58d-e306adba4e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ef845c-b344-4b16-a8dc-ea97761481f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db51a3ab-768d-4db1-a043-119110bd3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8febdb3f-3297-493e-89c0-a4fd8a1656b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e57ad0-7e53-4323-93c6-55c2a08e5a03",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c43921e-f784-47ba-95bd-19d2bbbe63e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0ae1a4-2401-4d82-868b-cf977ad61251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff667dd-3844-4df9-865e-780942a2916b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c547c642-05e9-42e5-bbea-bb4387691466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f917b6-e7e5-4ee6-b0b3-41492e4c79b4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be0f87e-8413-4a40-9d86-9c6ed205491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5aa41ac-c907-4dbc-bcde-b4d8b458150c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20824c14-28bb-4812-883a-a6c400a62eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f438636-506c-4650-8315-67f92d27e7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3370afc9-2f03-4b63-a1c4-32f801300962",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cf6f80-f93b-4e26-8bf8-faf3897927c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9e278d-7bfd-4b29-9378-b5ddad002d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b59b0e9-ae9c-471f-9dc9-a455d764b91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d560875d-2229-4ae7-b53e-8327e76c8ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d259271-a5f0-488b-a6ee-e163c7582c1b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd084a-2ced-4e3a-909f-a2697a4b428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f0e44d-ffdf-4530-83ed-39ba432039e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2046a8e-4ab6-4bcb-bfda-6c83eb86ff69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12e1045-f625-4b61-88b2-5a9b0d2bd120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d870693-28d6-4f1a-afa6-b9636d0ae563",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a074fd-a300-4f30-af21-e0acd6476d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7e7026-35ec-479e-a527-2732d25598e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec34db58-ccc4-4101-a906-20cbd4ce4aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b852cae8-7b16-4964-a414-52b536830b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6979e11-62b5-47b6-a4ae-304d2073870a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25620d8b-495b-47ae-924b-78c39d6ef9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1ebd02-3dbc-449c-9905-d0b22b553de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36497960-d725-4424-8205-415ad5fb0bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0226b949-f7c0-4863-8b1c-b666aa49615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5170b4ff-b554-4eed-908b-844bb7751d57",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b92a9f-711a-4848-9063-cdb5bec3888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72138a6-359d-4b25-b1d0-3f3d36e5b911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c34d06-71c2-4a42-b03f-fa52e745eee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaac297-8951-45a1-9565-99ed5a09e5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf268d6-7605-448e-b435-d9d31b990c9f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc96c8bc-1e56-4d9d-a29a-96eb9fd9c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3795ca-5718-4464-84b3-5bf5110cc4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e163040f-6793-4e8b-8ff1-7ce72fe1568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66c5201-eee3-45c8-8efb-43cfb2c2db34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e2613c-1c30-4524-90cb-08c748e92117",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696b6188-e13c-4f42-a8bd-33774d6a62d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143e99a6-27c9-4f9c-a796-e97657a8b8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8974a3ef-34f5-46a5-83af-d492746afe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d2a1a9-d425-4cc7-95ce-44921873b899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eca3f3-a73b-4de5-bd11-7e943d4d203e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff75c2-bd07-4b6a-bf1f-4496e983f0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0948013-9869-4262-b2a7-2778f2d0297a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6cf087-5e5c-4548-9706-09f7539e4aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e0e3a4-a083-4704-a4db-acf80ffe96fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a5b2c1-d1fb-4b33-bc86-7586ff1ac8c8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8cb3de-d0c8-45da-b9c6-38ff16ff5435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e2bc2d-9487-4fee-9489-e2beb9e6df8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc28895-a155-47f0-97d6-af4166de3910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a7312d-62ce-4d84-9070-147fa3724069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ba2f88-b599-4393-a2b6-d3c806d4dcde",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6f9a00-afce-4acd-bd98-2e16ec565744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb56838-c23c-44d5-9078-2100268749f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343da959-745d-4fa7-9369-e4d600456dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a92fda7-f420-4387-a863-9f15d8826357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb52bf4-7249-4c37-9eec-80f6d7c89b34",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4616315e-16fc-463e-b526-2576de86b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4522bd3d-e6b9-4871-a14c-822d86f37e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0cbf6d-2aea-479f-bb5d-daffdfe93cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4abe62f0-1726-4983-a8e9-9c9a104518ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce094d55-e972-4412-9f28-610c9628eadc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e69a65-81a9-4c8f-a965-0d0b89156929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992bd17b-74f4-4a3a-ac05-72872f50e8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956565c0-78b4-4b56-bd42-f292c0b7e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c659565-67c2-4db5-bfe1-33e62f418868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ea0c2e-9698-4bf7-9a3b-fe3913556996",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2ffa3b-25dd-46d4-95e2-513b30b9c05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e41862-b8e1-42a2-8ced-f6465ef564e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0782dae9-a0c1-43c3-a1e2-d08ee29e389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c3856de6-75b4-4066-bf1e-da60574db38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b561b8f1-1225-4442-8b86-c4e8189798c2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf7de0-5beb-47d8-b12e-84c85250c243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38fb491f-cddb-4c83-9d6c-2c1dd40dbb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c096256-d1d5-40dc-af70-3d0955e9cdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3253e276-8b10-47eb-a98c-f2dac1327177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1885fa6-2311-4f1f-afe0-3c6957d18cb8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed56fa6-21ee-4a47-a9ab-5173d84664e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cf83fc-847b-4a56-8183-efd3dcd4e43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc968f1-fa49-466f-bf50-f3412510ce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c283a3c0-fb7b-41ce-8f96-40ed17d57f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c0b6bb-7068-4c31-bcb5-d84b30eac8b9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1392924d-7464-4285-8bc4-a73f90863b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c81233-1fb4-4d0f-87fd-cae9af5098a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88445efc-0a8b-4313-b72d-78c815c69ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82c83a24-f9e7-4e42-9ef3-fd58b12824f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa034b3-bbb4-4c0d-8a32-92eba6c6d269",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d321fab7-58ce-4cbc-9b80-c8fb96c06cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c85bb7-ba06-43a6-9bed-9254c3b2922f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc0f16e-f1c2-41be-a428-9e27c8d6dd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d38cdd86-c41f-4e3c-8c1f-efa567c00774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437200c0-2496-4a08-976c-2dd1fc167500",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c40b6fb-c0e0-41d4-9055-21318ac326ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85706ebc-b2e3-4179-abeb-14477f067879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34f4c50-453f-48a9-87b1-d5726bd8fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d47d0c-695c-4dfe-a7dc-71bbb5057b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa13c594-4637-47da-99c8-b3cd206bf676",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c52061b-196a-4096-8f95-9f31458e9cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37117ffc-ffe5-453f-9850-8a2639a71c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976e0097-6f6b-43b2-a86a-6e7109f195a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b2ba70-5cb8-4253-8290-3663551fbb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e3b29a-3412-4d70-8832-ca70ef18a835",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe9baae-340f-48d5-b23f-e0a2f7f2820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4483a39-813d-41e5-93e7-f35f95fafa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bbb009-e321-4cf4-af1a-d1c09512716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff60bee-774a-4107-a4e1-038e314274fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385e7283-29af-421d-b5a3-a8c388cbe9d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8aa605-fd0b-4a48-8945-38ffc1eba91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd656fd-27b5-4858-932a-f22651abeb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5cfc50-7142-4d8e-aca7-088b3c306a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72bc1efe-9ca7-494d-8f34-5ce9fb89cd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd8a5f9-81f9-4cd5-adf6-d661b904c1c9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72da5e02-d8d3-4a3f-8008-1d7eaf35ca8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e8adc9-2581-45ea-a2b6-8c3951848521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4763db47-035d-459c-9ee0-e1f5badf58f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b62e6a5-5c60-4599-942a-a6cd08429e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a9c20a-8d70-465c-8225-3e1cb430b40c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23e5192-0e34-4fd6-a910-28abce00c8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42820d7c-f3fa-4d16-9f05-603b5b963233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ba8e29-abd9-4fd1-abae-6b93c2daeef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b39062-379c-4d08-8b34-6c9a2169491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed715c5c-4b81-461a-bffe-8d8ae9ee130b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43747225-4002-4446-a317-8ee0f7594a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff6d01a-bd52-45be-94b7-e3fbd05ab872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5730e9c-bafe-4d2e-bec0-c6a3c06c0202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87338514-0ee5-43a8-87ad-3924a58bd042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6590ede-7020-42a4-ad8f-eaba68d113fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8316c7a1-342e-4373-a515-2b30f430980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5793514-e598-4f19-b1da-f2752e6a9116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1767048-8cbd-40e6-aeef-d666d7849576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50637e4-0788-43f9-9a8a-323fb5b3d626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a866ab9-51c4-4256-8fb5-29ced479cd48",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4300de7a-408f-4def-b467-f41faaf73faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65485587-c59f-4174-8b71-27fb135a2b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0586c8-993d-4ce7-83bb-a2d56843cd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a980d388-0fbe-44c7-8a0a-d7919aa49aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c1bb56-9d2f-43a4-a648-87d4ba97d542",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dacdbb2-5370-4ea4-ae5a-b61289e80634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ea3ad2-1193-454b-aa55-7d5768a07514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c1b468-d8c3-4ebc-8107-a1283d3abca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bd6758-ebac-4363-aacc-06171c8d4e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26966cd-dbe4-4ec2-bacc-d8b46753cc85",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a75ab6f-5b9c-4b4a-85f4-90c417c7f8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdb19d8-64de-4c44-9994-bbc9030a8e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7dafb0-8e66-4079-b470-5506b97d1e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec728588-22cf-4d01-a178-9255284a49f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648da5ec-7545-408d-8f52-aa7b8c9911cc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d729524d-9ac3-466c-854f-ac4fbdb11ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549c0700-b991-42fc-9a7b-d9f0b0516e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d478893b-1a60-44e6-8e28-b369cc707757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "66072805-7bf7-4b05-854c-032cfbe18ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa46ba9-df31-4ee8-98bd-b323a2b37c0e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d141e783-e6a2-4881-8f80-cd56b4ef1549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c2a839-a306-4e88-bfcb-f3bb0ce2c373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a40609-051e-49b0-a92d-644981d6b624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86a9472-d7cc-40e1-8f69-f0ee89816984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e27934-8f0d-4731-82c2-23498535d77b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0be26a-8130-4a29-bba0-2bc72d528431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36b3c0b-c0f7-4955-afe9-cedb521ee940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74efd476-6fb2-4fd6-8e9e-4d9000c58ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1a7f57-f28c-4d23-984e-b02859bedadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeb9726-b542-4db5-afc6-8ad2df5718ea",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0efd2ed-0cfb-4c80-bb89-1fefc5ddb871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621035c7-c449-4e89-adde-ca0d6647f8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c936cd6f-adc3-4046-9428-58d726331519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76dd9ae6-d54c-4e1e-a575-5d3aaadff17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182bc79e-7fbd-405b-aa18-09a5c917ffb7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2c2fe2-8797-439c-bffc-98f3a951f7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ff5f23-55cf-4d56-ba41-6a64f2e0ea0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab23031-8c65-41fe-9ce9-0e402d7a2e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96c0a7f-19f0-4da5-a590-da3a71da068e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe6906-180f-4b64-b0c2-0cd3534e62b7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b963b1-9215-476d-892c-6556d6cebae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a51fe21-a21e-4156-a87b-c604ce900b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dfa177-5ef3-4911-ae21-acbeff1d9a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "464ad65e-910d-4194-99dc-6d2f89a291ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed0eb93-90eb-4882-be7b-c468a2deb602",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eced56f-1607-4392-9261-5a8d75dd4348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b01572-2aa9-42c9-8fff-321ff4ec0b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb156ee-d25b-4062-800f-ce6859531d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb2457c-eeb9-4b8f-bffb-8c773aadd70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5b27b1-55c8-414f-b748-9b42d5419e0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08374024-c683-474f-8c6c-bac0d7afb148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530664d3-a3dd-4df5-b355-899c8b362248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c922e7c1-53b9-410f-af07-3d7a81e75f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb70a37-74cc-45c8-9ad2-452a50d87620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89a56ab-b703-495a-a7a5-a0613019453e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb759fd3-c65f-4585-9785-f8ea18719ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24eeb90f-47cc-4ab6-88c4-bf9721ab93af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536f3523-cb4b-4f42-8f4f-e611cfc12d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec856b68-47ad-442c-9a0a-0a6307eae3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193c1fae-7d35-4b1a-8ed6-6328470e2bf8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36adb4a3-b92a-4361-9bbc-3c5f47bf6df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802a7b46-e1da-40aa-a04c-d66097c646f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0537776c-b18a-4dc4-b3c1-fb634277e52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf05703-d6a8-4fac-a955-2d33b3cc8f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33adb6ca-391c-48c5-8d28-587b34503c51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7752991d-757d-4d08-b293-a07edfe4d38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b59a832-8007-4691-89b9-1234a3b0cda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb77b45-bbf4-4553-b23c-0a9e12623344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5444166a-30a0-48ad-b2e1-add17764bf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa62c89-8633-40c4-a6ad-b15960cb66fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486e5701-700b-43e6-a512-832f6d62bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7444a946-5f9b-43bf-a01d-12d187f1e09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebb29b8-8861-4476-82ea-77edfe8d42d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b96206e-9bcd-4366-b8cc-fac3080ed9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49b3464-e553-42b0-8cd5-974943480ad8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ae2957-17f5-4944-a10c-f0cb07c713b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0f267a-999d-437e-8600-263a92694c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683fb89b-b2cb-49cc-8a22-7fddb1d1bf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a656e2-b55d-4083-985c-ae67c097452f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbeedbb-4537-4f1e-bd32-113bbb52abce",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd8aadb-4e46-4079-b8c2-d9f2eb3afdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45b0ecb-0f88-4930-8846-b649d183370c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c8c8f7-f7fe-4b9e-ae34-3e03e4ae4603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6406ad73-eaae-488e-a54b-90af90ec775d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4b8a94-958f-4970-8d75-f11bc9e144c3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df88eec-91b8-494d-b177-11ad3cbdc206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850fdfdb-0799-4a89-986e-61e63678ae1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a83a9-62be-4f51-bd47-8ab65e2f3ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ba3b0a-1f1d-421e-8ee0-24c8aa77efff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179d3a8-d13a-4163-8451-3b6f875122bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca162809-0fba-4a3d-b63a-ae75fcb2fcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd652c65-87ec-4461-ab0c-bba42436a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb457321-e85f-4970-8b42-4a66e74e1b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd4ede0-51c1-4ec4-b306-8988cc8bc94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2374683c-0130-479c-9824-92cc27896efa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab57d340-c428-494d-a785-3f84ae00d44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b256a3-4930-4ffa-93ba-c3d3a2588625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5230b242-3e7f-4f65-9f2c-f44572c6f297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d18900-e21a-41be-8470-d349bdc43cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3f041f-92eb-4a00-bc25-8c4e0244266c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db047161-cd1d-4294-ba43-bc487ea5f722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9716e8b-b9c1-4d14-abcc-e43bff8f64ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a448041-0ec8-40bf-8c35-b480b569e3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdcb621-83f0-4ddd-a12d-0c8300610c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeccb18-1a40-47f7-aa19-061f7323f808",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994fd4a4-28a1-482e-839e-c8f14ce8aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75097706-38e1-4436-86a2-328fca484062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1fe6a3-cd42-4b5a-a86b-b0226286f037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c90f8f4-555d-44d3-8621-6215db6cbe55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ba4f88-252b-4616-9d1a-f35d537ae71e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a35f1-1907-4c42-925a-944888952a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99a8b4d-60d8-44e6-9ecc-c79232945ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca597ec-1bec-421d-a8dd-3a4388793876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b432796-285e-4275-b57a-5b7f852c4659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae538b1-45df-4027-9b98-ed8c13484e4a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f89a2b5-a97f-4d1b-a6c9-a1196acba1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23e5b2e-76b6-43c0-a92c-aff73656df66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b241afed-2ed2-4eaf-bb31-1f8ddf616a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6b776d-59dd-41fd-8bb5-bf2cdbdb49dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e3c9f-44f3-4874-b561-f58ed7cd6564",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d75ec5b-76c4-4848-9c7a-221ee5aa8bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c03265f-ce99-458a-9852-70c963dcdd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f07de2-a9fb-47f2-9f17-f5cad0113643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d343da-b349-4f1f-a891-99a94f836961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc8eb92-a4d5-4c7c-8ea3-972fd25c32bc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba96a9df-e44c-42cf-88e3-bb71fbd77fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f6a8a5-16c7-49fe-b6eb-2146f43c668e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f313a051-09af-4b53-b267-c3ebd502b32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baebe2c6-7548-4843-96e3-da8e96bb0c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341fdbbc-3eae-4a6d-bfde-a1c144a2f374",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f86a5e-557f-45a5-933c-8086f1db0a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c438b2-082c-434f-ab48-58d0f9759b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2653a2-bbc9-4081-810d-99846bbdc410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "272fc5c2-2ab6-475a-b071-d35e212b240d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c6a03f-4a26-4751-b16e-32e184066688",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b434f98-edd9-4723-9acd-066b692b5422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced3dc71-35d0-41c0-a7bd-699e7d0e987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac5554b-ae07-4db5-b6f4-f2e2639e2212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c399ce64-5699-4aea-884c-0ba454525a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3d1f65-e338-4ed4-b26d-4ebe4b15d915",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261b627-5949-4d17-ae6f-8f97ed6a8d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bddfb0-cefa-4066-8534-5dd867955fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fd3e02-95f9-4d57-a2e9-b09e78a761ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13af4f2e-04a4-4ac3-80dc-3e5905375b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66134db9-8758-4d05-a398-0ea5f0f7ee73",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864b7401-45c1-4bee-b815-3f25da6b5c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3b0d87-c070-494e-be88-5734cd22c8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c2ce7f-5f88-4efc-8a3a-4af061e5a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "496450a2-c604-4e91-b935-6dc9c4f78848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45b06e3-0058-4c00-936d-85f7b92464bc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0097d2f-cf6e-400f-ab0f-6e41ac6a770f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8617eb16-0e6e-452e-b411-3b1068cf8c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2537137-3485-4e42-8f22-0f00633e065b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d785f32-b93c-45ac-8f41-62676ce80282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c305671-69ae-4976-8b3d-c415557ecede",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3267f973-2cda-4071-adeb-e399a98b9ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9110d5-2dd3-46c6-9342-6645a075ffc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48599818-60c7-4102-9dd3-893d8666399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80b9c3b2-1204-4122-a794-f5d7d97803e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6289e56-ad89-490d-a502-49ff9c3d0b06",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341f9e40-ca9c-4fc2-ab52-ce3360daca81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cddf5a-99a9-40ed-8cb0-36449473ada7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24129d3-53dd-44ba-aa71-80c939bcbaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80be4c2d-1af8-482b-87b0-25aeb39c95a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295c1fd8-ae5a-4f79-a200-77157219fdd8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d0862-969e-45d2-8d52-95399fec0f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04c3a54-2652-4a35-8d7c-fd0ae4bb0754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652bf193-a7aa-4be3-95b1-ce4b68597370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dae522-22d4-495d-9628-0f52ab1497b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd32c4d-56a4-4bcb-8725-79d512e27560",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2939e-f437-4219-ad4e-8704abd82d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de25f735-79e6-4e31-b64b-6e5025c5e510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451096af-8bf9-4846-8a7a-fd9517e373d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c15bb6-f814-4417-b8c0-1c4faa539dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7732f4a-a155-4d0d-9a16-3ecd46346b6e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b3c43a-c80e-4553-8c3e-b8eb994b93c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591ba964-4879-428b-84c5-88bc29e09150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b0826-4ab0-4b04-9347-1d8412e97153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae94ab77-1947-45ea-866e-994afb27a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a15067-3651-4a52-be19-c72008d647a3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f4e5a8-e847-4a62-b16e-a357d1d047cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb81c85-bfd5-48d7-b0d2-d29e3de561b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a138b069-51b9-41bb-a36f-6391f9e0b933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d68c9e-673b-4fbb-b811-b5813ffaf2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2692303e-da19-4dad-bea3-00119633e7ef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc71b30-d474-4284-95f3-5df6ca242288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bf1069-62de-4bb1-8a9c-6462058f4ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7f9ca3-897f-4874-b321-2467304eddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf82e189-3199-4f7f-be57-eb411446675e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc7b391-dfd9-4c09-a906-3f7623ff5d53",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e8f273-2f92-4359-bb37-d1e2125ae999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6529109b-36cc-46de-a740-99756117cea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3cee83-6616-4dcd-b061-89f8168c3ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76735dfd-f31d-4b7e-b42e-806443e15272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddf0f06-5933-4391-b4a3-f713a8f459be",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd2aeb5-f270-496e-bb66-eaa138a7b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9f456c-327f-4a3f-baf9-08331d380961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cf885c-7f1b-412e-93cc-63029551c74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14249c0f-850b-4454-bf7e-6aa1f9ba1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f63d60-b08a-45d8-afeb-01b9025ea6ca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35ef5f2-e824-473e-b180-42415bc0dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9645a79-4860-4dbe-945f-a3e1b3facabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45de0813-787b-4757-8328-5d17c8d8e597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e074931-749d-48f0-a70f-961e53cfd782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d206d9d-460e-4c23-b216-313dfa382dea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d2a23e-3d00-4401-ba95-3353c4c53ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a26b91c-1b67-4acf-8fc1-8c6164de7667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73524054-af02-4291-aebc-69c30c74b3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8853b252-fba5-45d4-86fa-a2693401dfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d992e4ae-61d3-4158-b279-d873c6a3f536",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12039dab-4325-4727-b8ca-a26ff7d0db78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7a7668-747c-465a-9e9d-577a26c45675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5743ae-a985-4067-8221-4c8110992882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49a3185b-3ea6-4529-af70-a0bbd975122e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3908c184-1dd2-44bc-bb48-334b0a971364",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68a811d-3015-4673-8a81-314f834e2898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce7d731-9d9f-4a69-9df3-92e23582069d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51f8e50-56b7-409e-99d8-4907c0a7e0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8443e18-e25c-4931-a326-ac1cf76cfded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7096674e-2a99-46b2-8d76-63056da4702c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4513b12-5c29-4846-8358-4dc33afc560a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efdaee79-4abb-44c0-82e4-59eb995781bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6504b9-9460-4fb0-a93c-5aa4ff074614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa46e57-ec86-4c3a-9ba3-ec518f0752f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "598730a0-62f5-418a-b550-534b417d22ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c61c3067-6d9e-4892-b176-a511d39e74f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e302c9de-ac0c-45d2-a985-0977613946db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfa4d73e-9037-42ce-a8bd-fb49ade191f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9dba59-eab6-4fc7-bf23-d83de993dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "516f5a82-f6d2-4d19-84e7-1dee63e1b1ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6af83ef-d417-4ba6-9689-2f579cfb7b85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33ae5d20-35f0-48f1-bf69-cc95dcadc6f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97063dc2-6431-4ed7-84d9-8af4db3be42e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2fe953a-996a-46ca-8f83-3cc7797a7a18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6c72722-2cd3-49a8-93bb-e21ed6aee78e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9809b0ea-e899-4d66-ae52-d32efb7f4b98"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60a5f2ce-2540-43ff-a6d3-fbd69fbbf87a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1caa1f8a-1b06-4f6e-92b3-1bb8f36c29cf"
                }
              }
            ]
          },
          {
            "id": "4360ae0c-c0e8-4b69-82d5-84566ecaab09",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b1d479a-b71e-465d-86fd-6aa7bd0dd357",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bac6aa71-02a0-4b52-8a88-f17756763351",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ec4e1-2706-4b3e-85f6-695725fba207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a07703fb-29a5-4d06-b2e4-313e6e9201db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a6ae9d-df87-48c5-852a-e02fb36a6286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a76e8da-631a-4bca-9603-15afbcc7ba2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42538e90-dfc8-4eef-9025-831454330515",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6083ff1e-0b1e-4588-8301-191a70954173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0de894c8-5e15-4e82-b3d6-5ca7efd82e83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e779676a-ce5e-4b15-a9fd-65eecc9b23c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cd30455-7e09-4f1a-93ed-5194a89bd17b"
                    }
                  }
                ]
              },
              {
                "id": "fbbc2ca9-3204-4615-a753-a3efe01c3e18",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b70df3b9-78f3-4fc4-acc6-4f3826021d03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b7ce759-5db9-4d10-a9d3-2005b273a675"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53bc032-b164-46ae-9983-6ef6d3a7888f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c26501f-bcfe-4336-8f23-a55eb03f2674"
                    }
                  }
                ]
              },
              {
                "id": "86b98e2c-0575-4f2b-8c53-8f71f9580c32",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cbde68b-5566-4d08-b0b5-0f05af8a7deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bedb008-b8a0-4fd3-bbbf-3bc90a8b1805"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cebd8b5-7141-4cec-aa3c-7932f4b00f8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d94cff44-ad1f-4d68-bafa-970a325ede5c"
                    }
                  }
                ]
              },
              {
                "id": "a9937a8b-9719-459a-8a61-26d92c9df4ac",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "907d83d6-485d-436b-b1bc-a57d80f74785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "342e404b-a587-4c4b-a00b-854a2024519f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54082453-f46d-45e3-aa8e-1a34bfde2aad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0a691c9-8f53-41a6-bba4-30049439167b"
                    }
                  }
                ]
              },
              {
                "id": "2b13e131-a9ba-447b-8a55-cab2e36d494d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dbb3c8e-4a71-4c49-af32-73f935bc3b55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "887b9c4b-007d-4e0c-95e6-197d4482ccd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2640fb57-1569-4059-9f52-1ff258cd0eaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3f24e40b-52ac-49e2-821d-a5c21cc70d7f"
                    }
                  }
                ]
              },
              {
                "id": "a5d97521-f4d9-4160-be70-f989affc8999",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1370d990-2bfb-44c4-861b-de4bf23ea3db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83f5e791-0778-4782-8e40-36611fdc898b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8e4c1ab-dd3e-42a9-9c44-53a0478a4519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ed790a5-8374-4f50-ba1d-b25379beca9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d5beeb7-ae9e-4868-9ebe-e075aee8a517",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87d9bc04-c32e-4243-9855-7714872411d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64767bae-5ea6-423c-ae1f-339672138807",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35d32dd4-9947-41c9-924d-ffb184f7393a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaaf7e75-4301-4ac9-a588-c4da58ef16b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9ae0f6a3-49e0-43c6-89c6-5b4615e2fc5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7175244e-e099-4751-8b1c-ebfa9d4e5a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be0a1aba-b7b9-4592-912b-a21f580f8770"
            }
          }
        ]
      },
      {
        "id": "a6e7b43f-d6d7-42da-b81e-924f457662a9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c7614970-3c14-4877-8df5-c9d821f66b0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c60eba9-d0d4-4203-8c20-6b156899943e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8671ac6a-6076-4701-803a-aa4a71f90eca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e94c32-5abd-4113-b354-e42e6d6b0dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d437d747-40bc-4e80-9363-8b85ab21ac35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d33d0f-2938-437d-85e7-b64a99fb8dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed87f84-e192-43e9-8fbb-c49793227166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cca71e7-1d19-4a7f-88ec-5df2c1981043",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eea0cd-b09a-4b5a-aed3-679fecff4a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f451a5-3e2a-4e77-ab25-e3c38137c419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f7293-b8f4-4666-836d-cbafba96852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1a8c2d-1200-404e-9c40-6d6de537883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007fc660-f79e-4ad1-86a0-95dbc19938c9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6ffe0-bdde-44e2-8cdc-0f447ec27429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebcce50-fd17-4097-a3de-227969f59846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25467ef7-fa53-474a-89e5-cfcb1c89909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "799af264-f325-45f8-bd09-268f0e87c30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997101d8-33c9-4de7-a4ff-4d005510da65",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7469085-e679-414e-a846-0b838535abba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25881fe9-0923-4b34-96b9-c82c6fcf38d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65688ae2-a1e9-41e6-80a4-9f1bbf2a156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2869e25-f96e-4ba6-a964-f3a2c3c96460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc17f60f-24ff-42a4-94b5-09dd2ae77b37",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db7653e-816b-4e9f-9e3d-fe4bf69c1433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169d5773-b8c7-4861-9e00-9058aa0c4c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ab3d32-14b3-4797-b6df-057f10d7830c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d32432-4cd1-457f-ab5a-39a0bbdd4a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c9f975-fea4-48c0-a8c9-94e2d12297cc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cf7288-d679-4eef-a44b-0c15cb992674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3e9bc8-feef-4fb1-b742-54ae70b9c922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46c12ce-dd13-445a-a7d8-a0b339b8c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "219520db-e7ac-4ba1-9f93-a4d559f706cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544fd030-e272-4cae-a100-f0106cadacf4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfa9b45-cef3-44df-9f79-d3da0792517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca9dc50-fe58-44c9-82c5-8616b8acd7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1125df71-ad33-44a8-87ec-783f0f85e54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e8b7f1-fe07-44ba-b247-5c313ad0a537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec76d0e1-9282-4a5c-af57-51a5a4178816",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8d654a-56e7-49ff-be43-e6570bfd0956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b30b856-0047-4db2-a207-eb30c875b08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdcd5b6-dd70-4cf2-ab61-e15fcb54e006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2807286a-2e24-4743-a63d-1b00efe9b034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d2d98f-fb7a-46aa-a5a9-30ff840b4c38",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f90e35-3013-4f87-896a-b7c43de5fb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059edbbe-47b0-42e3-8e91-c0c926379faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d1c08a-ccff-43f1-98b9-8868a7a79ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52151cef-ce92-495f-bedb-89a160ba0cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c893461-0199-4ebe-af8b-55a837e2d897",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7787f4a3-7ad2-4dba-9039-ac0a8abc90aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bbd13e-8bf4-43f5-ad44-0c7cee53bf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d23e037-923b-4b06-b6d4-3d107dfa90db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d941e1-2dea-4529-b105-3d055772b80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4658d7a9-d593-4c13-9005-39ad87fa5eae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3cf41d-bc06-40a0-9c25-9a1be91356c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3379b67-8e1f-4316-9c7d-bac743455b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dd8896-2c24-4c7a-83cf-2c84765cef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "86daec41-abe5-43de-a21c-52d561ad4045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588668a4-5710-4203-8283-a5442a243524",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb221e3d-6663-4930-b7f4-ff20611d91fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb17333e-3fd2-406a-9f5e-d0257c2475ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbf1805-f74c-421d-b44f-dc5be36fc242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee834e92-ebf7-48f3-94dd-c5a8f87c32ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8b1ff8-2ab9-44c7-9eff-9a453cb225a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3d901c-f231-43a5-afd1-0beccd74df91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0820a7ec-0543-4d04-99a7-47622a13f13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f47e9f0-00a7-413f-9cda-b840b416554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdebe783-4e10-493c-ae6d-5a72a70c851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac443f7-b9dc-4faf-b29c-72617d8a0c4b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf2237f-a78a-46f2-a498-35f8527d1d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecb7886-41d3-4801-8e72-15379d6c8088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcb3abd-d8e8-4e93-887c-5cfdcf162dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b84c3e-2ecd-4293-bd15-92e69ec49ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42c3557-f27e-4e9e-bc38-be0511c84c52",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e6cd9e-bc84-46e7-b01c-af9d68a357bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9575affb-af57-4222-bd72-00f882c2d289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d396596-8d24-4e7b-8bc6-19265abdc3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "339ec3bf-6eea-4be3-95bf-4d57fd0dc6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16652c9c-0134-4c9c-823f-61714b357bff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4ffc0b-8e8c-4ff8-a501-76ada7b0a9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8d2409-efcb-4b54-a975-c631937c6868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a19e56-9f03-4502-853f-3c85954ca904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d7a543-d25e-4bda-958a-20404cba4928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838b7451-5004-42d4-8879-e24b1a9fbe65",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf50125e-ac3c-4f14-ab5c-e290d3ebdd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9fac1e-6025-4703-a30f-cbf7e2847814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f41f8a-d84a-4b55-96d2-f711a97de62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a72520-599c-452f-9f60-fac347555f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582275bd-36a4-45e4-84c9-ce8218ecc6a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2274955-1e97-4463-84cc-dbd3efb5d46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdda9b6-fc9b-4772-ba4f-7e2755c434d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587786f6-b47c-4a50-932c-5747c1fbb926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c942f12-197e-441f-88ba-2df1bfab6eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289c2419-301d-43e0-9fb2-36c568905918",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e710e1-2bde-4678-896b-7879f1304ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8932c54c-3ddc-44f4-b7be-6711737d5c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d92e475-1021-4a92-9de6-7dcb1acf15dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9e2923-e97c-4303-b725-8e77abb06dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1239a2bc-f4b9-4c57-ad41-f111a54f50b9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6cdf0b-5784-459c-b17f-e4b55a486e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866c612b-f8d7-4e34-b8dc-e79e5249ca24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3ef67a-6e43-44c4-9b21-98c43422bb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fd5719-9ed9-4293-a1af-7a72ff7d8c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d01459-c90b-462b-9279-c6d5fb21d4e3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1c0216-fea2-46a3-8ed2-69d2550757dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddeb571-9cc3-4491-b1c4-ae0e6a82c5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20da4fb2-5bbf-4f28-8fd7-9df0b4a1e8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e7f42f-4a3c-48ab-bdfe-a59c3b440d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a35bb1-e02f-4afb-abd1-06fdb4383e37",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54a1edb-0df5-4457-9adc-94643822fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24eac1c-eb84-46d8-8111-e045edcd7679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d3cac9-4fe4-41ad-8fb1-a2f0f21c38d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da73fd2-df22-4a8d-959f-045722cc29cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4d29e2-b6f6-4d6e-ba23-842645b49ca9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0dc5f0-6a98-43ad-94f8-1d95ea760eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e55116-7159-488b-853f-aec0c9df4326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf72f21-a0f9-44c1-952b-14b853701d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06aba8b-56cf-433e-a767-4d9ef674a6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90857fd-afb8-4434-a4e1-9a89835a4736",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dfdcc3-b427-48b1-bfc3-6c8879a3ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dbb903-6835-4126-bb2f-670134a53781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45f9381-62e9-4114-9b2c-c97c2ffecf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d02eaf-9620-4a0a-a4a5-ce18aaa9a477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87e558c-6ce9-4d22-bc5f-08252069caa4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07c816f-c0dd-4071-a9ca-c22b3f4103ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a72c1ec-4dd7-4fad-9b4f-dca67335f0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72465960-131f-497b-9f54-8bb009464ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed128aa1-70d3-4f52-9304-cb4638a1d21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea2238d-5cf8-4f26-bd58-4f426e78758b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed3872-2254-4d9b-a5fa-54ae0e8f00d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62d251e-7cfa-4446-b63a-89270c3480bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d9bbb8-4590-40bc-a3e5-c08cfc4457a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31cd3d66-5c30-4f87-9970-5e8fa3929986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0f0ce3-cb3a-4ffa-80cd-0c5af064d10e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c6d46-3ee6-49e5-8bf5-732021ee598d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5675437a-f114-4eac-b6f2-e3ac182340a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf0ad1b-ba9f-4e30-a713-24ae0befece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b95efae-b207-4750-a74b-739ba7f30871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfae6d5-44c7-4928-94c5-aeffd1d1f5a4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a72e9d-5caf-4385-9cd7-27bf6921b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45995424-1e9f-4284-8436-346663140284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b029b3b2-9d77-40a0-a5aa-d15646fbdb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01173075-5121-4f45-8827-6ce546f094e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de96c71d-ffb2-4741-9ece-1abc6f2618b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e68b466-af03-4868-89cb-7cbe78d2d830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1acf1e2-2459-4e8e-85c2-60264c672683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a8d898-bfa4-48f9-9cf8-601b6730df64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b53bea3-92ef-4bda-af4c-1214c0fe38fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01640ec3-ad86-4127-827f-8ba6fbfb8cde",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd76bf2-0de4-4102-a078-9ace2206b213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6399eb3-9e0e-4aa4-855a-a54aac5410dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc31095a-9736-48a0-a499-15883255b087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d458903b-97f0-413d-a353-8c88e132ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24f7e6b-f6e4-40f3-bcf0-45d395c4bee9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657c0ddd-0844-4fa8-be2e-252fbe55033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a51af57-c52b-4086-861e-65db9748e615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea199ba0-fdfe-4547-bcce-d6699a05c8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0f5bc0-7159-44c8-a720-6406169f9b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d51304-1dc8-4423-ad5d-2dc14093a914",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b1dbb-b6e1-4bab-80d5-151827fcad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab0c514-c9a5-49fb-a6ba-dd542b97d003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8c901c-b662-4310-a8fc-ff8b25638fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "269aa855-4026-4dea-8df6-d971e3c47d48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4a2730c-638a-41e7-9e82-4962562c1f8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8648a527-a3b6-47eb-81eb-de71ae70b2d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa66351-d2e8-4695-aecc-43bf3dc667e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf40d14-12aa-44c3-b22a-1eab9d75d119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06721641-198c-4f80-becf-52a7b16f4bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13c769e1-3e8d-42bb-8784-8f8385fb9f31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b68be9cd-7b4a-4809-9995-1a4d20c4580d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a8b3408-e6ef-4946-a8ae-8cee345ecb30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85c8b067-20f9-4466-8238-9116d3f083d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "346c6eb6-7025-48bb-a42e-649a121ee554"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01b82cff-8be1-4649-8ab3-81a582c04c3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6128b56b-6d56-43b6-b501-e9b2239ae852"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "135a7914-e2cd-4d02-bd6b-494bf49f2d8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97ca7d25-0001-4945-bb7f-2a09e74599d3"
            }
          }
        ]
      },
      {
        "id": "33b8d836-b44d-448f-9974-c202cd91a636",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9a49cb03-0eb8-4e97-b049-aa9531e09ff2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f30ae40-c7ed-4431-8ae6-f92d5e0ad9c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1331616f-f540-49bb-8e62-4d679ae6830a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b4526b-f5aa-4285-9dcd-d9b8843c60a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f201f9c-fb11-4a9b-8867-252cb227c92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e1ac5d-b88d-4133-9aaa-3e9a4361fade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae8c7d2-bfc3-4492-9ad6-2381db417552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752c6afd-8020-47c4-bd26-4bfeced8206a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082cb882-cb15-4137-b590-4527cd158d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb897ca8-563b-4bea-bce6-4f6adf311079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f79a27-97d4-4eab-a103-24fc9f8087bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c15be8-b153-4208-af39-cd9ef92435d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d0a3ba-4ddf-4a31-8d29-875088ebf844",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeab46d-9f0e-49bb-b526-b05bae7ac1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba239b63-cd1d-4c53-b02a-c036e8242a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb34687-9062-4c74-8648-98cde7baf2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "073af949-087a-487e-a623-e6840b3c8a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d44de3e-c3ff-4a9c-ad4d-7bb5b10f36bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9685e68d-8881-4019-9128-cad001882126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb96a73d-0628-440c-ad6f-e61f5ca37900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5a9cfd-4fac-4e25-bd4c-788b9d51cf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e248dc77-b0c1-45de-97cb-00b26f98b5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02c6b53-417c-4301-a711-e3fdb6e78f9a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f98d84-89ff-454d-834d-d04024bf2c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432630fc-ab0f-44b9-9f60-facdaddb67fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a192fce-2e56-45b9-a76a-95217b6b28be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35699cfb-60b1-4a01-a929-f22a09401b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a24e9d3-536f-42b1-b7bd-9b9b3e580384",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c7a83d-7327-4f38-87b6-58d4c6443ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d01a0a-239f-4307-ac52-c230871e4b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0323e6-8c88-40de-92ff-942918120a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "009ed97e-a7d6-44d8-8caf-f556343ec7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0ef8da-74f3-4565-b4f5-893bb73ffdcb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce2fa2c-4da1-45e7-8f02-edba7ef1fe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afff01c7-15bb-4d12-a789-e9fe8c88c691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9baa7f8-6b78-4fc3-ba71-978d8998f58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5819b1d2-dc00-4fc9-b731-2953e0f908da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe42bbc-bf07-47d1-a20a-6f10cf924b1d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ba7fad-5a95-4f04-a935-e1e1de04ead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18099d05-978e-4488-abef-2d74c34983cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bda560-9340-44f3-8659-e1fc1bf83cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "628dbc73-4f03-4a42-b62e-b5ec1d156d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26e8646-51fd-4554-8d73-97e560cf0242",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa16f25b-440c-4bce-83e6-e9494452b13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508a1ffd-0b8c-4ce8-9e90-e6d9fcf612a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c8706b-a42d-40fe-9822-8aaf4b4976f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4acc8e0c-21a5-4a18-9b30-60a74a92c044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ace707d-a63c-4d21-bdc7-316c7fbfbf43",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5562638e-ab05-4707-8313-21665f9207a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6375de-6250-4890-b926-1bfad2df0ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e3169-f7a1-4d6b-844f-807ed677897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be38865c-204c-4740-ad33-09733d0d9147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e72ba9-17df-493e-881b-435d236c0818",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefda35a-1086-41e3-833c-280edbf243c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e796977a-887e-460d-b607-f5e19ab8a9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef75fde-4e3f-4b9c-9cf3-37c869e38bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff20d77-d33a-4931-a95b-83fc0018392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b0701b-1448-4515-8a16-5c06bb5b9cab",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e68d69-384e-47bb-8a36-ad98a696dc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7b2341-585b-410a-82d1-6cc0deec8bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1260fd25-f679-4193-9790-97184ff37dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7347f253-8523-4734-9339-fb11cdbc23cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1df380e-6038-4f43-b0cc-dd43058548cb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19fd2a9-a2e9-4a09-b3cb-fcfc51ec0a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7022ea5-4372-4b07-8308-5820a4f94654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bacb82-8cce-4fa4-91eb-4d9af21218ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0ddb72-0722-489f-9d8c-986b90fdfa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9275672-35fe-4eb1-9647-9c853884f890",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df23b76d-ba22-4ac1-9783-42bfb3c2989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8dcb40-d96d-4b86-8d12-c0ea635b144b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109eedaf-1af7-4373-afa2-a7c62cbe3d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "089efb98-706c-4f72-81ee-136657b480ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3827a40-229b-4f44-b769-e0b9316ccced",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3a6fbf-81db-4916-9c40-e8c309feaf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee46261e-2403-4223-b1a3-95f4eb1dd1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7318388d-fb69-47c6-8793-0e54cbc61475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2830da-ea1a-44a3-9ee8-2c9472698308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3d8925-3864-4080-b49c-26850d480646",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9335acc3-9b50-4f4c-bdd6-eb43e3ca08ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185bc6a2-755b-4617-bc9a-e564c58aee32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1aa4c92-2a36-465a-83f7-c89302369e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "962b1f1f-7756-417f-b34d-4abdd02b56eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc61400-0772-4d65-a24f-0d7d131755df",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6da66c8-f812-4126-ac15-f0187183f7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96ef540-7f7a-4394-82e9-34d95c29b269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239070a6-17a6-449f-bf95-5eeb3b92c003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15cee5e-08e3-4717-b801-3de4ff4402a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16901e82-c74e-4570-9e09-281b4b144812",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9ea29f-5e1a-4223-9fd6-48d811dcfeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caded6e5-edd2-44a8-98d7-5700a195136e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108d0107-6b1e-451a-aa90-1055b51b80fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f5b5ba-f9f1-4b02-8e4c-c77dc2003e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3686cc48-ea4a-4c27-968f-67987d9349ad",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998e1c69-6486-4a6d-a22a-b876518b2fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d554c7-0883-47ed-bc06-6c31356e59b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5189f83f-83a0-47df-99bf-3b718d52479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b39f66-17e2-497e-bbeb-d04041fe03c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803831b8-96f7-41bc-88c4-13e414bc5d55",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaa63db-21e7-4a1d-9fea-9d423feee921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c143b785-a59c-461f-8094-1f5b1538232d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f9d0ae-f8b4-4ca4-bf59-a7180b433326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761426ab-cf89-4b58-a08b-f35dce5039ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d3166e-de8a-4635-b25f-86835772da6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690015d4-5dde-4918-84c1-ae0fbe210f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1104089-100e-45f0-a5f1-f2a937db38af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81b35a6-2971-4cf6-910e-38cd5f59848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "440819cc-b1e8-4813-95af-a664eba2d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e1a0d2-6374-46d3-b42c-2beaa2ce9cf2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc32ff76-4b9b-4855-a1c1-99820b5e37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba6b80f-450d-4060-b7bf-ecb5f7c96715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424796bf-08a4-40d6-aa9f-11170418aed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18a9eb8-406d-4deb-adda-49c848874a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef86012-8175-4d1a-9602-94863cb4f3ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ee7470-be67-4232-8464-0e47b2a6c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82250738-e0a7-426e-acee-2922f5430d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156cf6d8-507b-441b-a071-54a4b299ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1736f1-58b8-424c-a975-c6be72beeb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be21bc3-a843-4c48-8c22-34c529c0b606",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b8971-8eca-4a17-be58-669b2b0ffb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537d357f-df23-4e75-8477-cf36e304b472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3ce156-e5d7-466e-8290-07575d6bd249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce979185-4627-4a0c-aeee-17c07470749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe25002-46f6-4b39-b025-79efa6314054",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d33435-cca8-4145-a32e-fc2d45c5193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e330ce6f-31d1-4421-938b-f39101db2e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322b4b5c-df1b-468c-badf-df8b6e915dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f07926-e0d8-451a-acf4-41c2aa75da6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d3815d-a4f8-40f6-a242-7dc514deea3d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b362e6-ba1e-4475-b16f-99a107dbbb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6552b4dd-a712-4152-82a1-1421f0011e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baa2229-1e18-4481-9ffe-5f3114021679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6320a6c0-7bfc-4d74-9ad0-d602918d175a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5040476f-35dc-4ccd-b6be-8145c2eb6620",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cbb4e8-54d3-4606-84b7-21486c1d8051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577378aa-c97e-4771-af44-f488269736e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e085bfc4-3d32-44bc-93a0-239981913064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417a54a3-e809-43d1-a2c5-3b7bc24692f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a81ba6-2071-48f3-aaf0-00681940a492",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472c37d-db6d-4210-b3a8-e92aaddb52f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749eb681-4217-4a42-b2aa-f2d0451f4b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d32e4-ae0f-4d59-9fa4-1719fa38ea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8f36b8-8ebf-40b5-b342-5eb7b3b04ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ec1102-4a46-449a-84c6-1f45ca43e2c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e1ebe0-6e5c-4528-8f07-1fa1550215f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7617fd-352f-4e84-aaa9-f94d7ca6709d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a6401f-7601-4126-ad9c-b393385d0290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce92fa2-f73e-4a61-8d03-313202bfcdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac2819f-918e-4a58-b574-409a0c57c068",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74e840a-5541-4cfd-baed-f780727b0d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0f3c2e-8b19-40ed-8e0b-612ecf3ac687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a71830-da79-4932-915f-faccdac186d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c426a6ef-11f5-4b03-a029-2fbcff08578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e351b80-56ae-404c-86d4-0135bfd07ed6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac60199f-a6d4-49f7-bb70-c9c9456cc893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4c7bf3-c86f-41e8-bff3-1400d23680af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40126c18-25a2-4c69-8218-d44afe4bbbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae89f2a-22c6-4a7c-8fd2-f10406b429f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cce4b36-b55f-4a63-a97c-72624bd5ae6a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d60ad41-d17c-47d0-a653-e84d0a99f7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39e546c-6d63-4c9f-aeda-0cdb25818518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896638dd-6964-4950-9cc4-9d42490fe65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f854d0b6-6cbf-4b20-ab5a-7578521e0988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7aa0f6-904d-4a6d-9496-799a0f4060e6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b7775a-0268-4868-b621-c89ec21d05b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea76f76-1d76-4172-ae4d-63d84ea5e399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc75063-5c00-4762-8c07-7ec6849177ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05801722-cb0d-4835-8f3e-9ea0202bf8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7cc9bf-baf2-483a-b730-a1d1dc9107aa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0284b842-9473-4aa8-b85e-4267eb7f093a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e773078f-43d3-4384-b50a-9840e07de214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c732bdcd-4876-4efd-93c1-41ab137af515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f2bf8e-7f5e-4476-9ee8-f5dc72193d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada62f8-f675-44d4-9524-8b882949bc2c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea63c3e-89aa-4fd3-a424-35f8fbf096d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2510882b-a799-46c4-838d-ff080f9e5924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529fe313-b8b6-40c7-84dc-17d662bca2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8a0196-8832-460f-88bf-0a5c75e90385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664518fe-ad88-4073-a943-0646727a8a9d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0917251-b023-4fc5-a625-79a897fec91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0133ed32-2728-4b23-81d4-770225bc3d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297eb267-5caf-4801-a45f-79baaa6aee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "575f2bae-05fa-4365-bcc1-62d5d1ac0216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a48d946-8947-4470-8136-f105a9c16be0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cec8f1-3463-422d-ad68-cb7af43b7b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ec2261-065d-4ec4-8294-3862549eb7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326bfe81-6c3e-4a73-9044-2205e5b94e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0ab538-f040-45a1-a9a5-508d364b8353"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56788497-a55a-4771-8125-4bc60ba476c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3077a845-7085-47f2-92e1-e8cb7826f96a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f44092-149e-4e45-a457-c0670274e5a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "136366d4-c239-4ccb-9dc4-0de7d9520f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c1bf2b-c534-4a96-89b1-890b62e90a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f4cc597-a7b0-49f5-a176-1845d14d7fb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57841a6b-017a-411b-b762-bec4450db43b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48df036d-e66c-48eb-8e10-ced24c752397"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58f5927d-0b8c-4117-8e5a-7cafb7caf911",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af8c479b-53d4-4e2b-be85-c9fd036ad606"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20dac581-fe45-4f74-989b-d17ca1220f85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "796718f0-9313-43a7-aa45-f3275ed13ed3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "166209d6-1ef6-440c-ac92-ccb9e69509dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f9238b5-89bf-4a74-bc51-cec729bc1b14"
            }
          }
        ]
      },
      {
        "id": "720daba3-eb87-4b41-9a10-4c0347044d16",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6e4cb354-47cc-4d74-9124-3802755bc2e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2803a18-8874-4e96-b8a5-1f62e6a989ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec0a87a3-7fa3-4c16-a23b-1bd3a2316daf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cb7ed6-5c38-4762-9f89-0fddd56a6c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5ed5da-1985-42de-a3e6-d73b479d11bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b232b9d6-4634-4807-bd72-042b19e69bc7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7c5429-2087-42d0-83ea-c9775f3d0714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d0b549-8a47-4420-899a-732edad95f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7927899-43a1-452d-b164-604d5f56ea33",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ceda2-db1f-48b1-8b70-bde5ef189575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024a5f28-8121-47e0-8187-1e6e977d8cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78952dd0-dfb2-404e-a00a-b4cb8e73a9f9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549bb2d-9ff0-4e3d-afea-af06128dcd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eadaad-b26e-410b-b224-51dc6ada8726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d3df79-8011-42e4-9112-e98d0d6e9a09",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fec61b-3b01-497c-9b61-4dd2bff8f7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72bbc86-8bca-418c-87c3-b44785d57800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e2445d-7666-4468-ad76-687ee65a92d5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e427ffcb-5297-4802-8df1-8869c9ac29a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c390a2c-fa33-4a1e-a274-b94da9dc8b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9562379e-56b0-411c-916c-01024cc96b8d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2ec2f3-e835-4d89-938d-b383feb61d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4715f8f2-259c-46ec-b942-cdc7f711d7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c31d4d-284c-4146-ad0b-55c25294601e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f34b38-54f3-4d81-a9b9-ced99960db10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f95af96-a9e1-4f28-9ca3-a1f493446ed8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc29155b-fe97-46dd-a4ce-3e3616bf1226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df9204f-388f-4638-b946-0124fb274df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf85d3-d101-4d1b-8748-4d0f40389033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61c5792-3b0d-49e1-80bf-3b818460e019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d815bd4-3959-48fd-a5c0-c564eaf4d8d3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cfaa65-a50d-4b02-b6e8-1c4c107163d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6a54ed-542d-49cb-b836-a38efddabfe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11191b3-e5c9-432c-9a19-acdbd1ae87ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d592ee-7986-48b1-a640-3e0172e3f428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc5424-5388-49d4-bc05-68f93e6912c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a62041-cc2b-4d11-863f-8747f3cd9411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b46506-e233-4ed8-ba16-db5ed92805e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216fde89-77e0-4236-a227-235d26aa5b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1e2671-a727-4d34-a259-7e9a4a8dc6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c630fd-00e8-45f1-98dc-02b73b966223",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef546159-567a-4851-9561-3ffa46eb95aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fe5160-4ecc-4075-b202-b1e40b1e83cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d1be00-af70-4b2a-b206-8325577c72d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf8677d-37e0-409c-9692-83e2be5e21df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fd5f42-f0fe-4e85-8db6-140e7ad15392",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aea709-b70a-4a06-91e9-8b1c51a844dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc36a7f8-174e-4640-9b59-eb6485d994c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b862d450-79b6-4ca0-bec2-a8783414a72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8197bf-c616-4097-9fff-86df866fd4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0203723b-8b0c-42a0-9495-ac4e4cd0e359",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee02690c-2663-4481-bf76-7832bef34834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82a483c-d7f2-4342-b8f2-96e32ab00c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702e5c0b-5cf2-4e94-b3ff-412b2cf29bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2d6d51-5fd4-4750-978e-31936e17321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c5506-1b1e-4a80-9729-6b90dafeeaf8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7498045-d1d5-4fac-a66b-a6094a87baf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c7f0b4-8dd8-406f-b030-2a0e9c9a94fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea279cdc-baad-42ba-bdd8-1bb7dc816015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76313a02-e1ed-43c9-884e-caae81355f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56de6886-2da6-401e-807b-a60077731094",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa53910-5b82-422b-aed3-c2826a7a52be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c493823d-09b4-4633-aded-655e4ab9bc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8012aa3-3196-442e-a64c-db2501c91662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1008da-b686-4cdf-9f57-749ad188eacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96faa406-63a4-4afa-89ab-c6bcc1d45fcb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e77572-3c4a-49f7-beed-bc439933fd3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63502227-10d4-4370-ba95-15e343223651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeec6cf-d4a0-4e06-9872-8138758529a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b63a4df-754e-4f75-ba28-06fafa774c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd9861a-b22b-482c-9d9e-4cf85abacee0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fd44a4-ac26-4678-871e-338bff3b78f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f9b485-dd70-4f4e-a910-828a53a320b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa94ee8-dffb-4ee6-b3a6-ed6724d17eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7257e71-8427-4113-a380-8722f29bd832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36aa010-a936-45cd-9ac0-32bca7a75e3f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40db6c4e-cb21-4341-aee5-b4681db8f5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af3e989-212a-4f6d-ac62-99883721436e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b9858b-796b-402f-a9e0-98ca79101e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9b66f0-cecc-4c33-80f1-687276e5568a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e9346f-46d7-4215-8229-2d35fce35ba4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b9e462-5125-4d5e-b105-a39f374a4125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc64e935-485d-4fef-9201-29b057ecbbc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e1a7f5-44f3-4317-b81c-67f4378296d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68112dba-aacf-4e2c-be60-7b4465dc9147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476550f8-4bcf-4eb5-8d58-42600b7eeccc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a810d50-c7e6-4ad1-b76a-1de62b8a0a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc616f7-b62e-40c5-ac2e-91d64ef90104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee9dfe9-56cd-433e-b53e-48c5a61cd244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1535f8-4efa-4a0c-af87-36851a564a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221619b7-e4a8-4b0d-bf4c-c73d78ef0177",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8485ba95-b68a-4500-8890-1fe19a46c81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2af81f8-5144-4a2d-a2f6-a06c18fb5e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc952480-1801-44f4-83ea-a71a2a85d04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b12e64-bd40-41de-bb5b-626a6d4b6d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a511aa5-e13c-4b0f-80a8-f799d4b240d8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55059c0-4ae9-41c2-94e6-7c50440f2e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db403849-e07f-43fd-b7e0-8c85c7bfe22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cec6b-9146-4f71-acd8-706b0cd1c92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d158f3-7af7-4fbf-9515-abf56e1a3fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a4ab32-37be-489a-bbdc-5c3aeca28126",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e958cab5-71c1-4c20-a6b4-5a27b2678260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6961d5c7-64b0-475f-bed6-318fcdf481f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9ea370-c917-4627-b4aa-b7dc31dff409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711eca6c-0873-41ab-9649-650046a3ff51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27a3a54-e933-4511-a59c-bfe401eb0aa1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb64f9ab-d475-4033-b11a-4dcfb2e510f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52c4b34-9ee1-4406-b4e3-fbc8015c0de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a930e2e-0070-41bd-b1e7-d0148871c3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642a9312-1328-4822-b227-ef78101c73c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093a2564-4704-45c2-8848-6b58e5729a50",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e577981f-6193-45cb-8bdf-afd5c6aa8792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5afd03-c425-47ce-9059-aa9335ccee30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79841c3f-4b96-4f4d-bcd8-22ea431b36f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e126a26e-28ad-4f45-82b1-6ffa07669a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceac7fa8-c23b-4ff2-90b3-deab66b44044",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef3b950-1dda-496b-8bee-72a32fd828f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35a0f0f-403a-4112-a9c0-7f46a2a8016e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdab18ae-5982-4681-935e-be5c407e392c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee00d8dd-a8b7-4487-a86c-d2aa50ead8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d3cc1-ca45-4937-bdf1-09225bb1645f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1032ba39-9be6-426f-8e4f-57c077e0d1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddbfbc84-7280-4439-bc93-95de0a745b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d524b-c889-429a-b442-e3fdba427b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a7bb02-92bb-45bb-a467-a760ca7446ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a400a13-7a6b-45fb-95f0-ce86a1032e6f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eddd31-0a62-4fba-a24d-8f946239df5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f6afc1-60c7-42d0-9b80-bac048d0bee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a596c9b5-9b91-4fa2-bf4e-71b50c0d77bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d1add2-a4ba-4437-a31f-9ac22c4d8c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187a9b4f-8951-4d1f-864c-8a98ea0ec330",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9915e72-6d80-4fbd-9871-1e9e84cdbd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7165d5-dc79-42a3-973f-9476a208f315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b70ff98-142a-4b45-ae5d-d1df48a06813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b53922-9886-48c4-9475-fcd7bb4ff094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1bc0a8-461e-4d53-a68e-d3d31edd7c10",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211d4dc6-4533-4b8d-ba10-3a4d019d5100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542fb28d-1683-4003-bf47-fb11dcb7166e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db413523-f8ef-41eb-b00b-f820d95c4f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979319d8-bb6e-4b46-ac1c-49f2f600514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090fb326-daa1-40e1-ad4c-2f5bff285063",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3feaba-cf36-45d2-af59-51fa8433b2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347ee8d3-21da-4a96-9d55-8cd23e3bec27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370e697-7fbc-4335-9822-c1d53f6d39c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ace7431-0ca1-4b9b-8993-d3a03ab4eb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451b9b82-b1f9-4b93-a7a6-a522f9d65c2b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97674d8-a8fa-4bda-9d81-109bee48d677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e061085-ab36-47bd-89b3-a50a9dcaf9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8902469-1d51-4d01-afa5-fe7d702ce7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f00172c-1cee-40d1-8dd1-e1d590b33017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21e7365-a484-4114-950c-96f634c8fa11",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f4d379-df81-46e7-9f66-26ce815bcd07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "729da96b-c06e-4dcb-8efb-a42c67c233aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1d586c-cfe5-4e2e-908c-76d2c88a12d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec9f482-e84a-48ac-af75-da7af4b38294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941c6ff7-cf98-41a8-ac51-e21f8a87f732",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1561c6d8-10ba-4078-b7a0-a9b424df5755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152d8d65-b9bc-45a6-bb5d-eafa3571a29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7916c2-d3ee-4ef6-ad96-3b4b816a6c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f608677f-a006-49ff-8485-262ae9bf47ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86a44c0-e0f5-48e1-882a-ec3006987c87",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f41df0d-e306-4daf-b74b-b099675af026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d69aba-10b9-4b9e-85fa-52bc07647c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9196010-e0a1-48a8-9798-a892fac47be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db18f998-1d59-492e-8af5-57b7480ec2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acfd52a-6bf3-4bc3-aa9d-b95928c3c660",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7ae63d-8942-4e40-a32f-88699b9f4bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2476d9c7-861b-4734-ab5b-de08d34c7027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b92d41-6a34-4a23-b40f-58fcb9a340fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b2728d-8a23-460d-8123-5a79aeea7cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618bef8a-5de2-4c76-b30f-f05895c82163",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6c1680-5bf6-4ddc-b7cc-83e21173d85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec1391c-774b-4325-bb74-5b21afdbb25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b006d90-7848-4b40-b86e-73645e77f42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23484270-ef2f-4139-a7a2-ed09ae404adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c051665c-cc1a-45bc-b122-8521c136a8fe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1669166f-59c4-477a-8385-8ab569904693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c584730a-b89b-465d-96e0-195129bbaea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a55cb01-d78f-4afe-ab31-d7d83c9daa38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0909bb1d-bce3-4abe-aed8-27de3f6a623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fe0774-440d-4c5c-bbdf-6b3a58af71ce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f478081e-6878-4e57-943a-edfbc9f09d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df3338d-ef84-46fa-9851-9d8e79325151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4180a82e-ef71-42e8-af38-7fd74f21e6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc5d84f-f11b-400c-a7df-d225e79e0214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cf5428-46ff-4bd0-8ecc-89c372fcd1af",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e3bef7-23f9-4077-88e2-d8c4bf0f7711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c2b3bf-17a6-4a85-b7b8-a860ba43c011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a7c71d-b011-47bd-9fe8-b915acf07bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdd25fc-9bb8-439b-bb95-a522e5d778b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2473ad4-9653-43aa-a1c1-efc0902c1b6c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031315c9-06aa-4dd2-aaee-a4be09ac1bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a3fc09-5dbf-462f-b442-8edfeb779dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c50499c-812d-4b0a-96ef-1ae10393e6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2190ca10-067d-4cdf-8849-67570e327bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993e8430-01bc-4b6d-b781-f544f440f6dc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9a21c4-7da4-4e8a-bcc9-d4c5f80fbcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80191698-071c-4f3e-be72-671262cd5c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998efc6b-cacb-4b0a-a094-df206b53824f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc428957-04b7-400c-99b5-f9ec7466c99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7050a07-3fc7-4720-b8d8-e4ed557a9d5d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90897438-6a04-497f-8d34-c32923e191b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139d59a3-33ea-472b-9891-779ccbc909fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0c693d-7a9a-45b6-9d48-a93ba6254e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27626f2d-5ffa-4a41-8d3e-f946d2b8b458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ae477b-ef24-4c3f-8529-90125fea7a86",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cd25d6-35c6-4c9f-a918-6e05667a8f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0196a476-3717-4161-addb-f77406fb6283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a97622-10cd-4a28-8ff9-3de10dea20f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5ff8f6-5156-44f0-b8bb-f4da7d661830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379a3a01-6bb6-4736-8671-578a03e50244",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5983ff27-017b-4063-81e8-97dfedb373ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc4d563-7689-40fb-b76a-fb5414539cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2934f2-276c-4d04-8d08-c9eb8bc3977e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ef9c71-d4a0-456f-8eb2-2af805059549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834510f9-c739-47a4-ab48-fda9c7bb33c4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743bf519-9b96-42a1-94a1-79eeba9f4cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d02c237-1bac-4036-8dd0-f289a9faaa50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9326ec90-49a6-439b-b212-29eb50d489d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e78e996-2de8-4d3f-9b30-4a0ef61383f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1743d6be-0f54-4aac-8c13-b9ff67c30d9a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2db4a3f-3276-4e54-9e76-c066064b6ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99f4730-6904-4f9d-afa2-32001deb691f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daf7369-1002-4dc7-870c-405fd4022239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3a2f43-42e5-4f13-a11d-ecfb148a62cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0fafe3-5473-4799-b886-56cce5333e4d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecabfa9-1d31-4f24-89fa-b67996b92c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f158e91d-1472-4a06-bd35-557389f825f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9dd79-df82-463e-81f9-95975aa2e109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81726c16-cfc2-4b5a-ab95-36360c323ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bfe0fc-2b8a-43dd-b9e7-bf13aca14a75",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedf2053-4d6b-4ab7-bc7b-2326737912f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf665af-c309-4763-8f10-61007cf89725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70c25d3-6d4b-4ff7-9ce9-e29a291034c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901e3fbc-400e-406e-bac7-29dc1c93bc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e8cb4e-cd02-40b0-b313-fd7f07e6737f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e0c44a-fa57-415d-aebc-b731df6a08de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937061d5-e49a-4569-9343-b2e2973d7a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18127391-4b5c-4013-a707-681af6b7c97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fea354-a6ed-4958-864d-e374048fccfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cbf438-b499-4f4b-a28d-f98ebd2e4314",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788f7744-e88b-42ba-bcd4-89a91bc1a2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf93759f-d5f7-4032-ad2d-639928fdd085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbf0b1b-97da-42b5-94e3-157803750895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40cdbbf-0b81-4f9e-a6f8-c39c31c2180a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbdbd60-f34b-4a1f-b1bb-2ab9a7e6af50",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ea406-0283-4fc5-aa79-79b3400119ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d52e210-36ba-4467-9142-828abe11ba68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fd3fb4-b037-4655-a316-61e819857916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9aca7d-20e9-4b04-ac65-14a2b50eca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9ff1a1-c49b-40da-abc5-f8579d0e7f50",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6374788-640d-4ebd-817d-285c24564c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2624443b-bc5c-4be4-9721-201ea19a4f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97850881-1c4c-4676-b360-7b3d9e257274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e768d66d-9580-40e2-93a0-a75d6b1c471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f43f15-a341-4870-9a16-9a30bc92fe15",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa88839-cb20-4c59-b873-f1e5eb32383c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08225c8e-7f3b-440b-a2bf-e384517f0533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d94d313-825c-4607-8186-9013700ef584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa07878d-a0d3-418d-8ef7-12d7711cffa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7a3b5f-89a3-4a90-a269-d4edb1d37e26",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b935e66-c969-4d5b-bb3e-99cd52307452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ad37a9-cbdc-46b0-b294-42d48a554a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ce3cdc-69da-4392-bf9c-18173f0e9e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ca030a-ef58-4922-be87-1d8a25a51356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c3576c-06e3-449a-afdc-4fe172bf6752",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75718709-c7db-44b3-b335-f6f466a84cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42001d70-8281-4ad8-8687-f1b670d6554b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62f4e0e-be7f-4032-989d-12e4e9fb349a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab856419-4729-4454-8cdb-cc8d441c19a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65ad954-c8c5-48f6-8a35-05fb4e23e150",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834e66a9-96a6-47f3-b861-960870f6dd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475f5369-4b9b-4aa2-822d-42ee18b4b439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c86c33f-90a4-4ed6-bdf5-e1f5bb707c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5035be96-4457-4cb2-9316-3ef7127e672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcea2ca-2b30-405f-91ba-8e8c355f9af0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d93b3c-dbfc-4cc3-a9b1-9bee0712f3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3aac27-2f7e-4ad3-bf1f-809fba7b7d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30361d22-12e4-4510-9510-bb63bc6c43a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fddebe5-8941-4fad-aeaf-990ca45a2710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9ffb37-65ee-42c1-9222-204f5916174f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c334390b-7924-4689-b6d3-d252fabf0521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60131627-0374-43f8-b9b0-56eb6c1f06ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d13835c-43d8-4dc2-a2ee-ec1994e93761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bb8791-5b0a-4da8-9a7d-bb4b5ab40844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd298275-bcf8-46cd-988f-23b5b50238b2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c50111-46ef-4cb5-a43a-fec5f8620d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a517f880-bad9-4acb-8816-6d2e143ce2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a2aeaf-9bb1-42b7-8559-c744d210f243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71b7ff6-8a82-42d9-a705-65daef4bed7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d57b817-77e7-48f4-9dd0-b8837815123a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965fdd5b-4a11-44ac-9a12-bc9930c5c218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebc3992-57b5-49c7-aab4-d7196ac11e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d358b9-20af-4834-bfeb-2007645d1f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d7e0e7-d676-4e37-9788-42683221468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aef1c0-ea19-4a39-bcfd-4ace50bfc953",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048b441d-ddd5-4158-b429-d7db5a4e6b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9087d784-ba26-458a-857b-7dcab07c2b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9b4879-5b77-4adb-bfd5-cb697aa9da88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb09f09-ec1c-4197-907c-9375c08a15ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996a858a-0ece-435d-b1d1-6100191e196b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebc26fe-3e40-4737-958b-bc7bbe2806dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672329c2-f496-4bb1-8808-be70d393b30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bc093b-9584-4106-99c6-65107af07768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b95abbf-fd77-45a0-9143-09d46391a636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7512f1-3855-458e-9a01-89f805aa8a85",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9e963d-ea15-45bf-967d-311fa5cf8f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630cb2c8-afc4-4648-b11b-1b5342055664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7744cb4b-f128-49ed-9178-d7a709772e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73706c25-739c-4228-bc3a-13d8f844cd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e2316f-225d-417d-bbee-0b0e1bb38f93",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293665c6-e744-417a-b2bd-636c61ed85c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9f3f3c-088a-4d2c-a2cc-fd5292cccc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac76de0e-6423-4fd8-8876-8cf42258bee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58830209-863f-4b73-b13c-1be4cbf29de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f28236-725f-4af6-8d4e-65a782cecf8e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2267a65-7cee-47c6-8f48-8a2481310fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59560843-7a5b-44c2-8f25-9837f66df3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ecf982-979b-4d88-b295-22fff4f83a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44c6565-163e-4a84-9051-09b671ff6fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79a63ca-5994-431a-8981-3c8b35e99c3c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca8580b-24bd-48dd-a4b1-60733b98a83c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e408f68-8ce3-4bbd-a4db-bf46c79988dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dab9be-df77-4696-9bca-a8010c3d0023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8afcf42-d9e0-4769-b062-ae733785964f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc1a2ed-7f86-4491-b6f3-77a96a6838a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc69e815-c508-4f83-90df-ffee3deba7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2e1ac7-2c15-47a8-beab-300cdcadef69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e3c831-fb8e-4619-94f5-8fdd484dc064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e680237-5925-41e7-bdbe-29566df0dcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda3c104-ff0c-4504-a744-7c97a4fbe526",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af903af-77e3-4c07-a82c-f27aa2b18394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa69d57-8133-46c2-adf6-cd7616f05d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaf90e4-d95f-4709-a015-a2b9ca29f14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee395587-5103-4d88-93b8-8f01c9fae92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c1003-e9a2-4aed-9503-667b120403b4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab331a2-dd11-4e6b-9f4d-8cef601e2ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8862cbb8-d8da-4395-9533-f240d0c3ad75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5fc673-4bf1-488d-8a23-a7391a615a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2828be7-d927-4281-b75a-c8029e59712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5834fa00-60d3-41f6-a18d-05f4bc32daad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b5e1bf-0d9d-4cd8-abba-4f142a14f9f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8460e601-3b73-40f5-9d07-a249470c0b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46cb04e-2e5b-4e18-be71-8175fae45ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4e0603-18a8-47c3-9a3e-ba126d4a3cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7df4b-0e2b-490f-8a0c-1c591891da64",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de75e709-9384-408c-a08b-ec626eddf4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d3285c-3c8b-4491-866e-4671eff8062a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b23132e-5596-450d-b4aa-ea920b88991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c067b8-041b-4399-95ba-4acc3a1ddaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54cc889-ba2e-4324-8b6d-025bd76cf42f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf04a65-0d28-4341-8ac0-0dc31717a94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd72eff6-c299-4f29-8fcd-45efdbcca611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd430f06-f500-4202-a257-44c726817b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de024253-cfef-4073-ad81-da1460a8d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eece3a6e-a74a-4592-a09e-7d07c8c30d0a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab9badd-1993-427f-9e95-02f7e5fe12d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76429f70-edb8-4e0b-81ee-e70d6c79e81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4bca90-7fae-4053-b525-17ff7e8ef9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b76ae53-9648-4775-aecc-9ba7ec1a6a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aef4f9-cc45-47bf-9758-08f6adfef2ee",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05405ff1-8ee0-46b9-b0d2-983c1c2cc120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db296662-590b-489c-9e1d-786da0c27486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d50c0e0-7f32-4b6d-8f4e-0a7f451b987d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80693b6b-ee77-457b-a793-595415b723d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1a465b-40e0-404c-b17c-49aff1abbbb4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cca0e8-6b9c-4f5d-ab89-91d61d012be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af1c492-c378-4b5b-a073-91ef6905642f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3274ce9-221d-4d33-8cc1-954a108153bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c04bc5a-f074-44be-819c-3f815f851bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee8f914-1dae-4e38-b055-aa65dffda2f5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88ee213-4c56-4f53-8ec3-744556494e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd50807-5226-4bfb-a49b-fa5db450f3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f4e15-1a00-4e67-a2db-9c6df87d1a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5864d0a6-a92c-4407-8e46-22c8649cf5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eabf6f-82ca-4413-a44d-1d09a446f151",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba64e9d4-a4c1-4ab7-8f8e-431d99c9ff1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae169c7-4996-460c-aaa7-1d9641279851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702db364-e92f-49e7-812a-44a23c67672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0b5e09-cd35-4f54-8144-41caf506e7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b30321-93f8-49a6-9f7a-17e11df74163",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf3d53f-66b8-4aab-a106-dbe812146334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7132aab-93af-4a89-b8ac-ac644cbcf0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81f534d-0c6a-4e92-8c52-669b3428ddf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0636ee54-ec6a-42c6-a83c-353b26c11251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70072ef1-2474-4cac-8c7a-ec019c7f5707",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dd47c5-c5ee-4a52-939c-0fd114cd0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682ab9a3-8c0b-48b7-a242-14921c28d940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caadd62c-889e-487c-8f26-0afb8d948f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705c913d-82e6-48cf-b21a-e2ef63a194c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557acdbe-548f-4f16-8f1d-95503a241aad",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a30182-9421-458c-a0d4-0fd89401651b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f3b13e-fb68-48a7-be4c-cc5b332cd349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44547f70-5f4d-4997-9d53-a0aef3075052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f685af9b-72ec-41da-9382-6283223fb7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf53858-0716-4f69-8916-172cdc068f28",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fb64b6-0b21-4544-9ef1-143fea429e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76209a3d-5b82-46f6-944d-258942f439f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12adec06-5036-479e-94ed-27230298f315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82df0154-ac83-4a9f-8bb9-f9c12f5309b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebe69d0-2451-4c3f-a5c5-34321b8b7d4c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bedc47-0afc-4ddb-b9c3-7c52dd2a4b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6acd88ce-14e7-4e35-a1ed-5f554a1dab02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae5a99e-e95f-45e7-9bf4-db45435f6d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd708bd-06c7-493a-8285-4daafc718a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8087d389-3caa-49f7-88e2-486bcdf5ddd6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c325784a-de3e-4a07-95db-19650f552b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1255084-43ac-44d6-b26d-3ee9f0b85f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e798cb-f5a5-45ce-8cc1-1d4395af9ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a58b572-eafd-4877-a4eb-a5a439767cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df022024-643f-43e1-af3c-fd88ac279873",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71a7a0e-4807-49c2-9274-0201101f47ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640d84cf-e28e-4269-bb91-1c0dd8d2a446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c402074-fea2-4e31-b67f-09b1697be680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d460bd78-73aa-4f4c-add2-179c455c2fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c613749-92bf-4a73-8fed-a017a9a4bfd9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7b896c-cabf-41b1-906f-23b794339aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc894d6-1ca6-488c-a499-f0fbeb5c1457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f44d5-b360-4e8f-9583-d7b3fb30a468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd26df7-d9de-47ee-be06-f08e6ae34203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40463ff-fa28-41be-92bb-ddd1fb09f260",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bb3b36-1161-4efc-ba84-5876cd7e3da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e14eca-afed-4cc8-b899-9d5409cf7ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98c055a-0280-4263-8d29-67bf7c7ef869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a33b3e-95d5-4ae6-a3aa-edb2308b5f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81888e9-1560-4564-94f7-90e93222a5d9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd60968-bb5a-4b5e-b268-de100607cd35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "100542cb-dc80-4c3a-bd80-34a99690c18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6899e9-0b15-4f1c-8187-3136444dbd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bd1508-575f-435e-bf7b-ca95ca89cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33608fc-0770-4d01-bc42-fccd5c7e5308",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d0a567-41d3-4bc8-8dd9-8410b79fd274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3124fe4f-3920-478d-bb72-07f801b241a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a44e76f-6f28-41d5-a3b1-2a5b81d0cbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5271359-c01f-4759-a5e9-b67e68081be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7d2ca1-f0ef-46fb-a837-a83985b9117b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d62238-de3f-467b-b251-5e485b52fffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27acb311-e7cc-4e90-8564-4b63d0130e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ec01d6-32ba-42a1-8638-8ad42d1a9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de910d4e-520e-4094-904d-f6b5d38cfcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4e800a-f7f7-476c-87a4-2ea9d00672cd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5c516d-c7df-45cf-96d1-5c187d0d52fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a317a1a-809b-416c-81ac-33c60a09b130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8063952c-d0d4-49e3-8979-ef8428d68199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1ffdac-6191-4112-80c8-f55faacc31ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1221a-c32d-4701-a42b-ae1e356d87aa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d8cec4-1281-4d9b-a4f7-4cd5f5faec8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c89ab4f-2049-48d2-868d-b176e8b2b1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad68258-0c53-40ee-a520-8d9e492e15c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715ff91e-240b-4491-a713-562f2116cec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ce6f7f-bdbc-4938-bf05-7ba2c743ef1e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4805ecd5-768e-44f7-900f-5bf31f83d61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c238d91-7a90-4340-90e7-bc92ab75d914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7270f9-1ad6-4f5d-820d-e1893ac744b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f24f604-023b-4da2-9e1e-ec10bb65b0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b32c574-b892-4ebb-ad25-9531303a8ff3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdd0c46-552d-456b-b0c0-7085cdbffce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5c4dec-6022-4516-bd46-126ee2bdf17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceafe85-8dbe-4a00-9759-a02d69156002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983c0380-4a61-42c9-a31f-f1083809c929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0e8981-4e5b-449d-8a10-76e609ebd88d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50aab98-e279-4630-9801-0cf051006407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50dccd6c-78e1-49da-895b-8ff40998a446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a31ec0-c455-4cbf-aaea-fcb749a6a1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daddab3-4f4b-41e4-adeb-4f6185bb1e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6bd358-508c-4c5f-8909-c03d68443c9f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad1ea32-d872-4088-abbd-6346c062263e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e045c4-dc4a-4211-9db6-5c370f569041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036b5be8-8917-4110-9fd8-f007a2bb19db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee66239-d883-4e1e-9a7f-7224f5a855dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d86ee7-274b-4d93-8d02-6b85c91cc656",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328b2ee3-d1ad-4f3f-9a04-98a34f412b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c193702c-9990-42ed-abe7-cd761c992b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2373dc-861a-405a-9ef1-c7866d75caca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217f6fbe-b827-46f0-8966-34854e30d9a9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73c92c26-881f-43c0-b2a3-9b7567ae251e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3248fd99-06bd-478e-ac08-a772f32e7368"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a34149e-8c2f-4c3d-a367-dd65fad14db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aff0fb0b-4512-4e22-8edb-aaa5f7c5150b"
                    }
                  }
                ]
              },
              {
                "id": "c8f3ce05-6d08-46fd-b647-f00786679134",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f785daa-84e9-4864-b3e3-56e972212689",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c289e9-c141-409f-a05f-8a0bf0fca04b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c9d63f85-41fd-4b53-a39c-9314fb36d21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c0ca32-1b97-468e-bf96-64edbd2c0ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41fcce96-9547-49c6-a09c-67cd47bb42b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aca7349-7140-4772-b160-ffb1856f021d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3292e9ef-663f-472d-a4ed-db8457703801"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc36a544-6744-4170-bbad-5f597eab162b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5381590e-cc9e-40c6-be76-f9dc1483ef37"
                    }
                  }
                ]
              },
              {
                "id": "a202a252-a612-41f4-b07c-c957d9d92bfc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a07faa3e-7dbb-451e-99bd-b31aa1435003",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82eff87-0fba-46da-b9d7-e5b0f693c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f95ce72b-ad97-40f2-9ab1-7a00dc2857ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6e9ee1-f391-4fc6-be4d-2068739bcde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233a9fdb-545a-4346-95e1-adec2c5fefd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4b0ee5b-98e6-45ff-9029-20790e449421",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00970dee-bb97-4e63-8adb-5637f9cf1cd4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd2343c4-a928-4e12-9b78-3b1f61b24e0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "daa2eec9-f7ef-4f5f-944d-d14951a52ff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46126631-c2ab-46ca-bf52-a1b0ad6fb446",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "307a2a1b-67f7-4047-baa4-5d3fbad41475"
                    }
                  }
                ]
              },
              {
                "id": "a743fab5-341e-4a17-9315-9dbd7798e48c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03b3612f-6631-4443-b1ff-60b86fea3452",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d453838-03df-4f36-94f0-8ffcb995b5ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b8c340-bc4b-43a7-815e-05e848e73cbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eb5faa3-9565-49c2-a274-295af5b84c11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4126966b-5e9f-4982-bad6-32bb6bd300d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1077e6d-f404-47af-89d9-5a68efa2eab0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "addfd2e6-20dd-4101-8184-75caf1113668",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15adb7ab-ba5b-4f59-bfc5-4b7e08cd2b56"
            }
          }
        ]
      },
      {
        "id": "bc68a878-1609-4854-8cfa-8838db271e35",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cdf09536-720d-4c20-b1f5-7c26c3205769",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49b5a39c-f13f-454c-90d2-975f2d8673dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f341d4b6-b2ee-43b7-9996-32825ea32445",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8755d91-394e-427f-ae6a-5dbd1e3367bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2e97359-bb75-4734-94fa-59eea68a43f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8524df-5ca2-410d-bd26-01b3b0e0054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ff673ee-ab9f-4ec3-bb2e-0ec82ad35030"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07bccf30-f4fd-411b-894c-65957a87aaf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "090105e2-b16b-498f-a3fb-f201d147a18a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc53f0fa-569f-4966-baae-dccef702bc49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c34a3baf-6b42-414b-8ac3-c671a1064579"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "678f15b5-b1e1-4f29-9856-ec3462485f6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d1ae2687-e4c2-4b5c-af71-47f43d48a8bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd189bb2-d32d-4753-affe-4531a3ddde75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36c3933d-a558-4e10-b710-40161bb82e33"
            }
          }
        ]
      },
      {
        "id": "2334539f-6b49-48d3-bd3a-5e6a539cdd7a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3e155ec2-b28c-4262-8f4e-3f61d846ff22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01030e0a-a8bd-414f-96da-9da52df94bba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82bee550-6674-4168-bdad-d4d6ad41b80c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf666042-d163-465c-8fad-b3ee12b095d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63fa3c9b-4041-40fe-8f3f-89710906c7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ff9177-f517-41ea-a2d6-78315f1d1a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "833b0997-00b9-4b97-b86c-ccba7f6badc6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58c56e1c-67da-42a6-966f-eaa664fe9b7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57516a9e-9855-4bf7-b508-372899c93ec1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f432c25-574f-4081-8bee-503917988633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1efadd95-00cd-49b9-b78b-bfa2e81a43a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd14cbea-acc4-4166-8077-3a7059b84fb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ac45fe0-5a5c-43cb-98c1-09790e54a891"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dfa06cc-48cb-4964-b91e-8e828db5adef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "426623ea-0aa8-439d-8234-1fe1e0d0069b"
            }
          }
        ]
      },
      {
        "id": "54d19909-9ac4-4fa8-959a-8643e1986187",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "75dbcfa7-c77b-4df2-a061-7abdeb39d50d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de119d9d-41fe-4864-a4a5-9b631ca2f0bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20b0da8f-ae1b-48cd-8ac2-70669123e3c6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b9ef6-6215-4a97-9e81-1cceb3fca112",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5aa8a36-7d32-4057-9de1-0b2320a0f63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ce4c8e-2034-413a-ab8d-b1c8f371741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edce032e-b59c-454f-a5c5-59cb3e84a9ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e82d60a8-46ed-43ce-874c-e6c5c7e827ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "918ae98e-ea63-4713-bf66-d47000cd38c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b9d6987-55c8-435d-a8b2-4682f2dcb01f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97523f5c-8c0d-4744-9016-90eb8af72bcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a660fb53-6d9d-488a-aa72-2707166f4e1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4ea1f22-d857-47f7-aefd-d72629200070"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00cb1b4d-02bd-48ba-85c6-a8b5e4bfe10c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dffdce26-b793-42cb-8e25-2c8b83568a08"
            }
          }
        ]
      },
      {
        "id": "efc3fa5c-2a01-46f7-be14-cf35ff80c8b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73bd8c48-3822-49b7-baf1-89f575ad9131",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bd8f7fa-6a09-4982-a43e-c8e8f5caed15",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aa88e78e-3f22-4257-b713-63a0e30ec047",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25156a30-4111-4b5a-8326-8aa4c79028d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e074c243-d5b2-48e5-95f2-c41275440bff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.71929824561398,
      "responseMin": 9,
      "responseMax": 2936,
      "responseSd": 329.95579472057005,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703032150364,
      "completed": 1703032192781
    },
    "executions": [
      {
        "id": "b0a6551c-4e02-49fd-84da-1b5b263cab9a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d1385f2-9cc7-4e33-805f-7a38be3fda0a",
          "httpRequestId": "dd2bda33-dba3-4184-98c0-9ad99ecfd048"
        },
        "item": {
          "id": "b0a6551c-4e02-49fd-84da-1b5b263cab9a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e5e19e78-4607-4baa-978a-f1397a048318",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "f4699a6e-8914-4073-9445-cac5796168dc",
        "cursor": {
          "ref": "d5fe480a-2cce-47a5-ae12-19c13da0525b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bcc51854-f143-48b1-b37c-e94c639db52c"
        },
        "item": {
          "id": "f4699a6e-8914-4073-9445-cac5796168dc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "77829a99-b762-4626-8a39-b3165cf62f1b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "4eac61ad-bb94-4599-8d6d-e6d6c2c35f0b",
        "cursor": {
          "ref": "d146543f-4f0f-4146-81eb-b220a7074e9f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5dd01ac9-5bd1-4250-9c09-eec238997cab"
        },
        "item": {
          "id": "4eac61ad-bb94-4599-8d6d-e6d6c2c35f0b",
          "name": "did_json"
        },
        "response": {
          "id": "c632eb72-4e62-48d4-a234-9fdcee8e58c9",
          "status": "OK",
          "code": 200,
          "responseTime": 606,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d660a60f-66ad-42cd-8cc0-827ce98ae10d",
        "cursor": {
          "ref": "91d97234-680c-402d-a495-907df3604de9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d7059e02-f60d-48c2-8947-7aaaf52638bd"
        },
        "item": {
          "id": "d660a60f-66ad-42cd-8cc0-827ce98ae10d",
          "name": "did:invalid"
        },
        "response": {
          "id": "82a05fad-6118-4815-b15b-68f1ab7af972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d660a60f-66ad-42cd-8cc0-827ce98ae10d",
        "cursor": {
          "ref": "91d97234-680c-402d-a495-907df3604de9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d7059e02-f60d-48c2-8947-7aaaf52638bd"
        },
        "item": {
          "id": "d660a60f-66ad-42cd-8cc0-827ce98ae10d",
          "name": "did:invalid"
        },
        "response": {
          "id": "82a05fad-6118-4815-b15b-68f1ab7af972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1605117-003e-41ed-9dd7-c87872f55d60",
        "cursor": {
          "ref": "82f1c08b-c6c2-4d32-8c8c-ca014008937c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1a75b8c5-4d69-4509-a991-10fda59b2ef2"
        },
        "item": {
          "id": "a1605117-003e-41ed-9dd7-c87872f55d60",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c73712f1-5c19-4eef-bc05-03149a8e6aae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 170,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1db2083-5930-48f6-8d82-d443340b04db",
        "cursor": {
          "ref": "6422c2d1-18c7-40ab-9ff0-2db05b452206",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c0a042a9-fbc9-429d-beaf-457a77ae6c70"
        },
        "item": {
          "id": "e1db2083-5930-48f6-8d82-d443340b04db",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "26260aab-8f3f-4c63-83f7-36e117d39738",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5d5144-ae8b-4d43-b080-650925f1c949",
        "cursor": {
          "ref": "72959563-fc22-4fe2-b0bc-b4a8d01e07ae",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fdc63cd4-714a-4ecb-9d85-27066c80c6e6"
        },
        "item": {
          "id": "2f5d5144-ae8b-4d43-b080-650925f1c949",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f8af87b4-2d89-41a5-9a3c-3f77f7545515",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7497ae70-32b0-409a-a8b3-864c9868c44f",
        "cursor": {
          "ref": "cb35343f-81dc-4dda-86d6-b978eabcb3ef",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8cd825a8-86af-4638-ba13-2cc0c862ca94"
        },
        "item": {
          "id": "7497ae70-32b0-409a-a8b3-864c9868c44f",
          "name": "identifiers"
        },
        "response": {
          "id": "abdcf8d6-d012-453e-befd-ef56dfb90308",
          "status": "OK",
          "code": 200,
          "responseTime": 346,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d57f10f-8390-40ff-a16d-a3c9ab4d7a68",
        "cursor": {
          "ref": "23e557d4-67e1-41c3-bd6b-eee9699cfec9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d8049635-ce74-4909-b911-36946f0d169d"
        },
        "item": {
          "id": "0d57f10f-8390-40ff-a16d-a3c9ab4d7a68",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f5f5e505-15dd-4604-9676-5372992b3091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6925aba4-ed71-4d96-b247-a85e0ade5947",
        "cursor": {
          "ref": "a502f639-dea5-43fa-84d9-db420875c884",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cdcff579-a6f1-4d1f-a96d-ac06c4b0cbb7"
        },
        "item": {
          "id": "6925aba4-ed71-4d96-b247-a85e0ade5947",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6ca6f1be-4465-418e-af5e-818abf169ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9176bff9-3481-428f-8d22-90e46784a841",
        "cursor": {
          "ref": "3fcb10a6-74ad-4f27-9608-9c4fefbaa6fa",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "af873d5d-b1e3-49af-9863-7a47c4818e08"
        },
        "item": {
          "id": "9176bff9-3481-428f-8d22-90e46784a841",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8cbbdb9c-eb63-4d98-9d50-3d7dbfe61782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccabc3af-e584-4c10-b7a8-f67f58b0aa07",
        "cursor": {
          "ref": "a72ef015-f7fa-4029-a159-61e20da7df11",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2cb3f837-f5c1-459e-8e3f-d83c90b5ae92"
        },
        "item": {
          "id": "ccabc3af-e584-4c10-b7a8-f67f58b0aa07",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "93266d24-f85e-466e-bc25-fcc7507f81e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acd2c01-02a4-490c-9f1f-59b3f18e5a75",
        "cursor": {
          "ref": "0fbb2f10-558b-4085-a27c-196a7115daa8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e3ee9985-4b5e-4ed0-af95-cf59e0b439ba"
        },
        "item": {
          "id": "2acd2c01-02a4-490c-9f1f-59b3f18e5a75",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cc671782-e65e-4b88-bc5a-df2aa8f09932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3901e80b-f13e-40ab-aae3-e1cca2c130dc",
        "cursor": {
          "ref": "2951c779-16c4-4ecf-ad89-3f5f303d2691",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "684fa38a-6d19-42a5-818f-8ade22d6116b"
        },
        "item": {
          "id": "3901e80b-f13e-40ab-aae3-e1cca2c130dc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bbba2d15-a30c-4c78-8174-842145bfd715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2724325-fa60-427f-a5cb-889a601e4e90",
        "cursor": {
          "ref": "9d78989b-fe5f-457c-a15f-d0b10449aacb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bbea08ce-7dce-455a-87ad-8d6746dacc7d"
        },
        "item": {
          "id": "b2724325-fa60-427f-a5cb-889a601e4e90",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "820566ce-2ed0-4bec-af14-144d8151fc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500446a7-a589-4f56-a06f-efbabc6fed0a",
        "cursor": {
          "ref": "8a31037b-9218-4e1c-b360-06fdebc542b8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aff03b6a-d9f5-499d-a33a-aed8e2a6d84a"
        },
        "item": {
          "id": "500446a7-a589-4f56-a06f-efbabc6fed0a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c411cd4f-b9a8-47f0-b1f7-9eab4a3037b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8f3b4-dfb1-4402-8943-7c669d6c9292",
        "cursor": {
          "ref": "de7d1f35-90b5-4c73-9d63-b62625380eb1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1899e0da-4d16-4fb6-b686-011ef5914faa"
        },
        "item": {
          "id": "1bc8f3b4-dfb1-4402-8943-7c669d6c9292",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e5d58075-ccd3-4b21-a46c-9a0fec615185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c7811f-3e11-45e1-b4e3-4f1b475e2c35",
        "cursor": {
          "ref": "33d5e9c4-e2d1-433c-beb1-b41703776805",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "425e1866-aeee-4870-8d76-6b4bf42d87e1"
        },
        "item": {
          "id": "d6c7811f-3e11-45e1-b4e3-4f1b475e2c35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "94c30f2b-939f-4074-925e-2c5ec77c1617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292177f-ae89-4881-b061-86014d796a9b",
        "cursor": {
          "ref": "a99cccfe-1fd1-474a-809b-e77b7b876715",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "af050a1d-eae0-4f66-8bdf-9300eaf0cc37"
        },
        "item": {
          "id": "7292177f-ae89-4881-b061-86014d796a9b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4fd12721-1497-4197-8fc9-d2dc10a1d290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653a724-96d5-41d6-9355-664fa73b4f9a",
        "cursor": {
          "ref": "0f439a24-1a00-4916-9553-58be932d6a5d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "325547a3-106e-4bd8-ae9f-2a381496816e"
        },
        "item": {
          "id": "6653a724-96d5-41d6-9355-664fa73b4f9a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "21592d5a-da86-4f3e-904f-215c856254fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60068803-e961-4b40-aa10-5abd36a31d83",
        "cursor": {
          "ref": "c1d83e69-7354-4236-95d6-230e7b1dc982",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dc493f50-f8b2-49cf-83ce-e261a21b298b"
        },
        "item": {
          "id": "60068803-e961-4b40-aa10-5abd36a31d83",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "05e5e952-2083-4e1c-b295-ec183889bf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0394716-eeb3-4f92-973d-0175506c23c5",
        "cursor": {
          "ref": "0a56b8c1-709e-4088-9ed5-75c94d92d72a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "980956b1-e457-4215-9533-09cbe7d97d38"
        },
        "item": {
          "id": "a0394716-eeb3-4f92-973d-0175506c23c5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "df3e09a7-ef53-4cfc-a127-009700282f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec23f57-2553-4bf4-ab4a-c927c09e3ae9",
        "cursor": {
          "ref": "fa7c352a-d617-48ff-bc2c-6f7235a6f954",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b440d066-0554-438c-9a59-60a76f998626"
        },
        "item": {
          "id": "6ec23f57-2553-4bf4-ab4a-c927c09e3ae9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aa054893-6dd3-4c2d-8b33-03b1500d0db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d497d3-cfa8-4963-8a28-182beab98aef",
        "cursor": {
          "ref": "3e49765c-0ddb-4dd0-bd7e-febd10393375",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cc1e1a4f-e6db-4827-8ee1-e2293de09f56"
        },
        "item": {
          "id": "56d497d3-cfa8-4963-8a28-182beab98aef",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "645ac1d6-02cd-4f93-9d28-00bec59190f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fa3dcd-30e5-4e70-8e65-43f6f06a0c5f",
        "cursor": {
          "ref": "c78492b5-7871-4c4f-9f68-afad7f5206c6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5a592c25-7dd9-4113-91a9-75044fa623df"
        },
        "item": {
          "id": "b6fa3dcd-30e5-4e70-8e65-43f6f06a0c5f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "81fadb83-c951-483c-bc73-f68bf09592b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4ec244-ce08-4d35-974e-59ae6a748f97",
        "cursor": {
          "ref": "87890a44-551b-4dc2-a43a-6efe8eabefcf",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "663780f8-0da3-4c96-935e-3d9c812f6ed4"
        },
        "item": {
          "id": "8a4ec244-ce08-4d35-974e-59ae6a748f97",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "409f3f8c-7484-410b-bb70-6bf6d2ac33c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ff8bb9-9295-466d-93bb-07fea38c4f77",
        "cursor": {
          "ref": "0bd1fc83-166e-435e-9e00-86ce5c670528",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "be4d71e3-6035-4c11-86ae-6c73ba4e8f7e"
        },
        "item": {
          "id": "60ff8bb9-9295-466d-93bb-07fea38c4f77",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d835a202-f8ed-4f36-9602-3946011404f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427aa182-e08d-4b1e-a507-24d18df19bce",
        "cursor": {
          "ref": "4f871525-f59f-4c54-a63c-6ac7eea70d41",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2e870ef4-d911-46c7-8a41-611de5cad7ad"
        },
        "item": {
          "id": "427aa182-e08d-4b1e-a507-24d18df19bce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "728cb0e2-d952-4c81-bd19-4daa8aa2a486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e57ad0-7e53-4323-93c6-55c2a08e5a03",
        "cursor": {
          "ref": "5cb0670c-7e01-42a8-bc8a-346418fc57b9",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ed1289e-89f1-4fbb-ada8-06369688b1f3"
        },
        "item": {
          "id": "65e57ad0-7e53-4323-93c6-55c2a08e5a03",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "13a44c67-8bbd-4cae-bfd5-278c8b6b6dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f917b6-e7e5-4ee6-b0b3-41492e4c79b4",
        "cursor": {
          "ref": "e87532b5-828b-40c6-8501-1f5eada81b2d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9840e8cb-8ba8-468a-bab2-eb4187903f71"
        },
        "item": {
          "id": "01f917b6-e7e5-4ee6-b0b3-41492e4c79b4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4e88fc10-9cec-4159-ae2a-9cd8679aa5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3370afc9-2f03-4b63-a1c4-32f801300962",
        "cursor": {
          "ref": "8e3fdf23-f94b-4837-a562-4a059b90a12b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4af3a3cc-81cc-4f2d-b935-82443658516c"
        },
        "item": {
          "id": "3370afc9-2f03-4b63-a1c4-32f801300962",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f382a9b5-dbfd-4938-aa8d-7e4a38e4dbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d259271-a5f0-488b-a6ee-e163c7582c1b",
        "cursor": {
          "ref": "993868db-6352-47d9-8ee8-9c74ef60aef1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a1ac6d32-8bc2-4cdc-8829-f2a9ac6bdf5d"
        },
        "item": {
          "id": "5d259271-a5f0-488b-a6ee-e163c7582c1b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "27a94e39-0e0e-49de-a0d0-50262fadfbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d870693-28d6-4f1a-afa6-b9636d0ae563",
        "cursor": {
          "ref": "b39e0c02-bc79-4558-a346-079399e0a162",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "80285b1e-3dc9-4978-b275-b29407a4616e"
        },
        "item": {
          "id": "9d870693-28d6-4f1a-afa6-b9636d0ae563",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "547727f2-b3ce-492b-a48c-7677429bb153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6979e11-62b5-47b6-a4ae-304d2073870a",
        "cursor": {
          "ref": "bb4a3e9d-9d7c-41d4-a122-b5afd9d0ee19",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f16687ee-5089-476b-8f1e-ce616cdefedc"
        },
        "item": {
          "id": "a6979e11-62b5-47b6-a4ae-304d2073870a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "acbd770b-4979-458d-9bab-f9b061237f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5170b4ff-b554-4eed-908b-844bb7751d57",
        "cursor": {
          "ref": "61422528-f133-44b4-be25-3c533ad52efe",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "542bf636-48ae-419f-8ae5-43c5ae3bbd9d"
        },
        "item": {
          "id": "5170b4ff-b554-4eed-908b-844bb7751d57",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "71530e0c-b3e7-4c6c-9dc3-e20864a6d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf268d6-7605-448e-b435-d9d31b990c9f",
        "cursor": {
          "ref": "d9c255af-3dfd-47f9-905a-6558a3969ecc",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "042f7f67-9ec3-4d17-8214-b1abed6c5ce4"
        },
        "item": {
          "id": "acf268d6-7605-448e-b435-d9d31b990c9f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f48966bc-ecc7-4780-a6d2-c42024b0f3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e2613c-1c30-4524-90cb-08c748e92117",
        "cursor": {
          "ref": "764774af-c912-426b-b31a-423921311d30",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0044d978-e0d6-446e-97e8-d39700834880"
        },
        "item": {
          "id": "d0e2613c-1c30-4524-90cb-08c748e92117",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "40c4cc7f-8865-4623-9355-6d6f2c15701c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eca3f3-a73b-4de5-bd11-7e943d4d203e",
        "cursor": {
          "ref": "0bf94cec-3c9d-4ddd-9c87-260b7d0fe157",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "768667d6-a8af-4503-bc91-4fbaccc0799b"
        },
        "item": {
          "id": "18eca3f3-a73b-4de5-bd11-7e943d4d203e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6f08f2b6-4565-4016-beb5-91a556cc8791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a5b2c1-d1fb-4b33-bc86-7586ff1ac8c8",
        "cursor": {
          "ref": "14c54de9-563a-4dde-9942-ed88d66c50f7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5fc9ec0a-0eb4-45c9-ad7c-37c1809eec4d"
        },
        "item": {
          "id": "c6a5b2c1-d1fb-4b33-bc86-7586ff1ac8c8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "00c80632-233e-49ef-9d70-c7e081847e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ba2f88-b599-4393-a2b6-d3c806d4dcde",
        "cursor": {
          "ref": "7ba08556-0520-4f29-80f2-9ea670cb1f12",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "056a8d43-4184-4246-acba-b46b633dce94"
        },
        "item": {
          "id": "77ba2f88-b599-4393-a2b6-d3c806d4dcde",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b43ad485-0aa1-40ca-98c6-6dee62e3f4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb52bf4-7249-4c37-9eec-80f6d7c89b34",
        "cursor": {
          "ref": "4c6ad2d6-b88f-469d-bf27-6b4c5119d795",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fbd1c87b-d48d-4d49-8062-a472f726f536"
        },
        "item": {
          "id": "8cb52bf4-7249-4c37-9eec-80f6d7c89b34",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4a3425cc-d9ad-45ff-9a8b-3450cedbb289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce094d55-e972-4412-9f28-610c9628eadc",
        "cursor": {
          "ref": "63e2938e-0257-44fa-9aaa-3024ee35d6a2",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c148aa6-37c0-4467-8b92-a88eec2d339f"
        },
        "item": {
          "id": "ce094d55-e972-4412-9f28-610c9628eadc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9c0e7491-2ff4-42d2-93b1-aa8da0d19432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea0c2e-9698-4bf7-9a3b-fe3913556996",
        "cursor": {
          "ref": "c4acb1f0-677c-492c-a690-29a871c3b7ba",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "592b8306-c844-4cf9-b8ef-9e3252351ccd"
        },
        "item": {
          "id": "52ea0c2e-9698-4bf7-9a3b-fe3913556996",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1acef8ee-e220-41e7-ae0d-b123a2cdd3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b561b8f1-1225-4442-8b86-c4e8189798c2",
        "cursor": {
          "ref": "249079a5-85e0-412e-a49c-5cf430c2c267",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "058fd34e-3ae8-4d95-bb2b-0f92372d26ce"
        },
        "item": {
          "id": "b561b8f1-1225-4442-8b86-c4e8189798c2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a91b4079-9ca7-4f81-b205-e01e787281a6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 338,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1885fa6-2311-4f1f-afe0-3c6957d18cb8",
        "cursor": {
          "ref": "92ac1eff-06c0-4e0d-983a-26347b1d4550",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "20ec9a5a-168a-4994-861d-4393903cf32d"
        },
        "item": {
          "id": "d1885fa6-2311-4f1f-afe0-3c6957d18cb8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c408541-1de7-40cb-8778-bc9ac2dd9043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c0b6bb-7068-4c31-bcb5-d84b30eac8b9",
        "cursor": {
          "ref": "69f2be7b-e28a-4be4-a570-5b596f62916e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "58befaf7-88bf-4349-9f59-5e6839e66c35"
        },
        "item": {
          "id": "15c0b6bb-7068-4c31-bcb5-d84b30eac8b9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4f23aeb1-e032-4631-9839-771aefe42def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa034b3-bbb4-4c0d-8a32-92eba6c6d269",
        "cursor": {
          "ref": "cd74a9b1-3030-4481-aac3-3ec069b6b3de",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "30f20670-e7f5-4673-9d03-46ed03a77970"
        },
        "item": {
          "id": "dfa034b3-bbb4-4c0d-8a32-92eba6c6d269",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9ac05c9-20af-460c-bc2a-3f4a84a42729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437200c0-2496-4a08-976c-2dd1fc167500",
        "cursor": {
          "ref": "66a039ec-96cd-4865-80a5-11510f61601e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3bbd55a5-7824-4d77-99d1-ba248b41cffd"
        },
        "item": {
          "id": "437200c0-2496-4a08-976c-2dd1fc167500",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e2dcf3ee-1e26-4269-bcbc-c87be4b499ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa13c594-4637-47da-99c8-b3cd206bf676",
        "cursor": {
          "ref": "4c74642f-d465-4c53-84b8-b6f77be93809",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13d52db0-c49d-403e-a4f9-98017f946129"
        },
        "item": {
          "id": "fa13c594-4637-47da-99c8-b3cd206bf676",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3174db7f-1536-4485-8d6b-6fdd3110fd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e3b29a-3412-4d70-8832-ca70ef18a835",
        "cursor": {
          "ref": "b3039c80-8397-4fab-86e9-f346bbdfd6f2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "42fde880-dc03-4808-916b-40644ce63785"
        },
        "item": {
          "id": "91e3b29a-3412-4d70-8832-ca70ef18a835",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c41e05d7-6fde-4409-bcd4-e5f7520d3924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385e7283-29af-421d-b5a3-a8c388cbe9d3",
        "cursor": {
          "ref": "a7a0b83d-34c7-42d7-a7e5-0435c1888a45",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "905f9a11-9718-4bff-989e-cc0b581e0f11"
        },
        "item": {
          "id": "385e7283-29af-421d-b5a3-a8c388cbe9d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e9d5f8d8-f098-4cd2-bafd-0875053e5078",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd8a5f9-81f9-4cd5-adf6-d661b904c1c9",
        "cursor": {
          "ref": "450aa347-4d15-40fe-8c55-e6469f1ee696",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "01ecf4e8-6f20-4c00-abd9-ecfe9e79b15f"
        },
        "item": {
          "id": "1bd8a5f9-81f9-4cd5-adf6-d661b904c1c9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "775999f1-17d8-4226-873c-d63c627ab377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a9c20a-8d70-465c-8225-3e1cb430b40c",
        "cursor": {
          "ref": "7f156c94-0029-4262-bf86-dbe09dc4f6fb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b077d847-6c82-4eef-a691-4b524fe50b25"
        },
        "item": {
          "id": "15a9c20a-8d70-465c-8225-3e1cb430b40c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "27696887-5d6e-41ca-be79-f0b0b58925b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed715c5c-4b81-461a-bffe-8d8ae9ee130b",
        "cursor": {
          "ref": "2c108062-ac75-49ad-870e-3837195991e2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4eeb478a-c8a3-46b9-9e6b-0f27f4ffd9aa"
        },
        "item": {
          "id": "ed715c5c-4b81-461a-bffe-8d8ae9ee130b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fcde3881-e478-4a20-a557-91e12e0c3937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6590ede-7020-42a4-ad8f-eaba68d113fe",
        "cursor": {
          "ref": "27083b6e-bf2f-4f41-8e1d-a4449cf87619",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5641172a-cf76-48e0-a7c4-06352a944686"
        },
        "item": {
          "id": "b6590ede-7020-42a4-ad8f-eaba68d113fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc917712-2568-4120-8e92-35e5b6a31d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a866ab9-51c4-4256-8fb5-29ced479cd48",
        "cursor": {
          "ref": "75b1d5a0-8cbf-47b5-b078-d711708bb097",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "801fae77-a2dd-4fcf-971c-6d6625efd95d"
        },
        "item": {
          "id": "9a866ab9-51c4-4256-8fb5-29ced479cd48",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "303b46fc-c577-4006-8d61-dcf8fb02481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c1bb56-9d2f-43a4-a648-87d4ba97d542",
        "cursor": {
          "ref": "e30c654f-4323-43ef-8cf2-e7d32a8eeba2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "026577e6-f493-4370-b690-8bac63654f3b"
        },
        "item": {
          "id": "61c1bb56-9d2f-43a4-a648-87d4ba97d542",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9256bf51-ebee-41c3-80c0-6ab832e1a712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26966cd-dbe4-4ec2-bacc-d8b46753cc85",
        "cursor": {
          "ref": "e1501d8a-6133-49ed-b5d0-6c84c43a23c4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e9d0190-c963-464a-a005-d07b1f5341d7"
        },
        "item": {
          "id": "b26966cd-dbe4-4ec2-bacc-d8b46753cc85",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0c2ecda2-4ed2-4c8c-9821-3f48b5aff033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648da5ec-7545-408d-8f52-aa7b8c9911cc",
        "cursor": {
          "ref": "ee3f6e82-a84e-45c5-aff9-45bba16ec8a3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c3a05a68-9d40-479b-9b0c-39267054106f"
        },
        "item": {
          "id": "648da5ec-7545-408d-8f52-aa7b8c9911cc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9ec03749-0490-43b3-b449-d779ee166034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa46ba9-df31-4ee8-98bd-b323a2b37c0e",
        "cursor": {
          "ref": "404d8cc8-65b9-41b8-9322-ff5781a5f6a0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "77d65392-2c0b-456f-92b7-a57bfad8722b"
        },
        "item": {
          "id": "2aa46ba9-df31-4ee8-98bd-b323a2b37c0e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0dcddddd-6341-470f-92dd-0345f870ea6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e27934-8f0d-4731-82c2-23498535d77b",
        "cursor": {
          "ref": "700ed0a3-c0ea-49e8-b21c-de5c8da0f46c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a112e9fb-6a49-4b3d-8eec-62a307974d87"
        },
        "item": {
          "id": "e8e27934-8f0d-4731-82c2-23498535d77b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "161110e4-5ce6-4539-abc2-f241315b7008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeb9726-b542-4db5-afc6-8ad2df5718ea",
        "cursor": {
          "ref": "c87e37ad-ab69-4cff-9d53-7ad5f2b5100a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "62e7bb84-eb25-4396-bb10-bc78b29891d8"
        },
        "item": {
          "id": "ceeb9726-b542-4db5-afc6-8ad2df5718ea",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "94f625df-7d72-48c5-8684-b3e1d7151833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182bc79e-7fbd-405b-aa18-09a5c917ffb7",
        "cursor": {
          "ref": "914e9b89-9a44-4979-989e-7a53de3d2a49",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1d85c621-f63b-4d69-8b50-9e4b5d7f2aa6"
        },
        "item": {
          "id": "182bc79e-7fbd-405b-aa18-09a5c917ffb7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "86ba8043-410b-4fd6-bd8e-a9cc3f8c5a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe6906-180f-4b64-b0c2-0cd3534e62b7",
        "cursor": {
          "ref": "904904c5-3d09-4346-a79a-dc8a410a7dfe",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4ec047e2-b8a1-4d60-a304-0e1b9c7b576b"
        },
        "item": {
          "id": "fafe6906-180f-4b64-b0c2-0cd3534e62b7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7aa6c490-6c52-4815-b7ab-29a80b404906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed0eb93-90eb-4882-be7b-c468a2deb602",
        "cursor": {
          "ref": "bacd004b-f433-481e-b89b-9665994c2101",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7724809f-598a-4a4e-8956-0f3317603616"
        },
        "item": {
          "id": "2ed0eb93-90eb-4882-be7b-c468a2deb602",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7b64a661-5824-45ca-b77f-f563808ef8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5b27b1-55c8-414f-b748-9b42d5419e0c",
        "cursor": {
          "ref": "95f9049d-b32c-4043-9478-8366a1d6b040",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9471a701-cf10-4f12-a5de-b13a5482e129"
        },
        "item": {
          "id": "eb5b27b1-55c8-414f-b748-9b42d5419e0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b19fdf43-ef57-494b-be81-39d20ee1ab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89a56ab-b703-495a-a7a5-a0613019453e",
        "cursor": {
          "ref": "087ae559-545c-45a8-84fe-f1fac29c0261",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aa0c343d-5324-46f3-89ea-1867cdee3877"
        },
        "item": {
          "id": "b89a56ab-b703-495a-a7a5-a0613019453e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "753161c8-fa09-4f18-abfe-22e948b012da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193c1fae-7d35-4b1a-8ed6-6328470e2bf8",
        "cursor": {
          "ref": "cf9c94ff-b43e-4a1c-963b-9e637c697e43",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7db715b-1a5f-40d2-a7d8-ec27a476f7cb"
        },
        "item": {
          "id": "193c1fae-7d35-4b1a-8ed6-6328470e2bf8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "844e81b4-f4ac-4bd5-b211-c4d0ab2b625e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33adb6ca-391c-48c5-8d28-587b34503c51",
        "cursor": {
          "ref": "613ec891-9fb4-4752-9f4e-519b0e457e7e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81090843-1e3a-49d9-8615-5180ea3f27d3"
        },
        "item": {
          "id": "33adb6ca-391c-48c5-8d28-587b34503c51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b60b1122-5cfd-498c-944d-5455d3d72f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa62c89-8633-40c4-a6ad-b15960cb66fb",
        "cursor": {
          "ref": "95fbd5c2-5927-4511-ac9a-4fc0cf4768c6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88a5e2fd-7805-47d2-8932-d88da9333fd8"
        },
        "item": {
          "id": "afa62c89-8633-40c4-a6ad-b15960cb66fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce2e87cb-63b3-4eb9-899b-3b25b92813d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49b3464-e553-42b0-8cd5-974943480ad8",
        "cursor": {
          "ref": "33175c9c-6d0e-4dc9-966c-d825a1e00d9a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2be2e7e1-639d-48a6-9228-e3171bc2d4ea"
        },
        "item": {
          "id": "e49b3464-e553-42b0-8cd5-974943480ad8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e317ef8b-0fc9-4a0c-b26e-ba292abe9e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbeedbb-4537-4f1e-bd32-113bbb52abce",
        "cursor": {
          "ref": "70adb982-74a0-431f-ab94-02cfc94659e9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "41b1a7e2-50a6-4fa1-b8bb-b549d6b5162b"
        },
        "item": {
          "id": "7fbeedbb-4537-4f1e-bd32-113bbb52abce",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "36300cb0-6df2-42e3-b094-a2b664822f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4b8a94-958f-4970-8d75-f11bc9e144c3",
        "cursor": {
          "ref": "f09622b7-8188-4cdf-a316-0cd76ea73a70",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7d7c6200-be25-476b-a79d-430c128c9263"
        },
        "item": {
          "id": "9c4b8a94-958f-4970-8d75-f11bc9e144c3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d75e95b-c71b-4e7c-8dad-323cf8c1ec72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179d3a8-d13a-4163-8451-3b6f875122bb",
        "cursor": {
          "ref": "29b1ad38-1521-4baf-a5da-ee3466622ba9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "22244d3e-9222-4856-a13d-0dc3409c85be"
        },
        "item": {
          "id": "3179d3a8-d13a-4163-8451-3b6f875122bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7d1f8dab-b8ce-4fa4-b358-6104fcf1cdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2374683c-0130-479c-9824-92cc27896efa",
        "cursor": {
          "ref": "d1cde774-a1dd-486c-93a7-3cac60ad840d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d715c62b-8d44-468d-a1b6-22e44a8dcd02"
        },
        "item": {
          "id": "2374683c-0130-479c-9824-92cc27896efa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "796b5738-8ee1-4bef-baed-815b02d03442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3f041f-92eb-4a00-bc25-8c4e0244266c",
        "cursor": {
          "ref": "a526ec7e-83b0-42b6-9b9c-8b782c8e82b1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aac10703-7ffd-49f5-a755-68d2b283743b"
        },
        "item": {
          "id": "da3f041f-92eb-4a00-bc25-8c4e0244266c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "437ecc44-f830-4edc-bf38-3cdff3764cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeccb18-1a40-47f7-aa19-061f7323f808",
        "cursor": {
          "ref": "ffd8575f-5565-44aa-9578-1a5ddf78661c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "62f41194-2891-4420-98b1-a2f52b52cb7d"
        },
        "item": {
          "id": "dbeccb18-1a40-47f7-aa19-061f7323f808",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5abb6aaf-a0b3-4840-8666-c346cde8f18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ba4f88-252b-4616-9d1a-f35d537ae71e",
        "cursor": {
          "ref": "115f3f1c-c3f6-44db-9ca3-7406bb42593f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "090b0ea2-3694-479f-bde9-4ed87ef926c2"
        },
        "item": {
          "id": "36ba4f88-252b-4616-9d1a-f35d537ae71e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "885a4471-a489-4f0d-9535-3e36911730a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae538b1-45df-4027-9b98-ed8c13484e4a",
        "cursor": {
          "ref": "aa9058b1-b550-4ec8-a541-44f20a40d4ee",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7c4e1d62-bd94-4aeb-8770-af1fcfb29349"
        },
        "item": {
          "id": "1ae538b1-45df-4027-9b98-ed8c13484e4a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a930fe00-86f4-4bb5-8ee6-963f4594ecee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e3c9f-44f3-4874-b561-f58ed7cd6564",
        "cursor": {
          "ref": "d0c2d28c-799a-497a-ba31-a9cafc1930ae",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dd07eeaf-a8e6-412f-8ef1-693f65698f36"
        },
        "item": {
          "id": "0c3e3c9f-44f3-4874-b561-f58ed7cd6564",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b3ef81b3-9dc9-46bf-a1c5-a3291f863bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc8eb92-a4d5-4c7c-8ea3-972fd25c32bc",
        "cursor": {
          "ref": "f499386f-e772-4f1c-8988-3d4c30904baf",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e06657f5-d6a3-4a2b-9912-99c718c56078"
        },
        "item": {
          "id": "5bc8eb92-a4d5-4c7c-8ea3-972fd25c32bc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e84985ab-cc7d-4d9c-a161-1d2f17aa0369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341fdbbc-3eae-4a6d-bfde-a1c144a2f374",
        "cursor": {
          "ref": "4234cd75-2ef9-4218-8e3f-80ca4ebbfd52",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1337c2c9-1a34-4e24-9c80-69298551e4f0"
        },
        "item": {
          "id": "341fdbbc-3eae-4a6d-bfde-a1c144a2f374",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98368c09-406b-481d-a4ee-0c9b3bbb18e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c6a03f-4a26-4751-b16e-32e184066688",
        "cursor": {
          "ref": "4618e0cf-cb2a-499a-aeee-620a6934453b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e3ca704f-8823-42b3-a623-25cdbe790f32"
        },
        "item": {
          "id": "16c6a03f-4a26-4751-b16e-32e184066688",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ddde82a2-983a-4e09-9edb-b1a534bba6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3d1f65-e338-4ed4-b26d-4ebe4b15d915",
        "cursor": {
          "ref": "4eee13f3-4006-4eb7-bf13-35fb6ff82109",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7a97ef46-798f-48a5-8406-5c333a53da83"
        },
        "item": {
          "id": "5d3d1f65-e338-4ed4-b26d-4ebe4b15d915",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "762d7736-e393-44b9-99d6-d2deef1c469b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66134db9-8758-4d05-a398-0ea5f0f7ee73",
        "cursor": {
          "ref": "2eb82c02-7057-4df2-9be3-74307593296a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c8a515bd-f6c3-4234-a11a-6ea439e8b6cf"
        },
        "item": {
          "id": "66134db9-8758-4d05-a398-0ea5f0f7ee73",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f619f020-7a69-4ffb-9978-0b3aba03a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45b06e3-0058-4c00-936d-85f7b92464bc",
        "cursor": {
          "ref": "a8a48b66-a1da-4250-8d02-d34d597eef5d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f3704b3e-b459-421e-affd-591243c171bd"
        },
        "item": {
          "id": "e45b06e3-0058-4c00-936d-85f7b92464bc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "72bb0c45-ae00-4bd6-b12e-a0c766649463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c305671-69ae-4976-8b3d-c415557ecede",
        "cursor": {
          "ref": "a620d822-08dd-46d4-983f-ca969f6a76a9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3e660553-42a6-47c7-8e86-4729e145bf19"
        },
        "item": {
          "id": "2c305671-69ae-4976-8b3d-c415557ecede",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a83e0fa6-e384-4e67-9acf-ae7f984f6241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6289e56-ad89-490d-a502-49ff9c3d0b06",
        "cursor": {
          "ref": "5be6ce19-d7e4-4eee-b60f-cde066510826",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e94d2b3e-76f9-46c9-85d8-edc255916a67"
        },
        "item": {
          "id": "e6289e56-ad89-490d-a502-49ff9c3d0b06",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "76b26c9f-c3ff-4da3-87de-48f41d1963e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295c1fd8-ae5a-4f79-a200-77157219fdd8",
        "cursor": {
          "ref": "479e65ec-f130-432e-9720-0e19148e918a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "49dbccee-5783-4076-93af-05a38c4da6f2"
        },
        "item": {
          "id": "295c1fd8-ae5a-4f79-a200-77157219fdd8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1dec0746-1a04-409f-ab52-5fac7a632680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd32c4d-56a4-4bcb-8725-79d512e27560",
        "cursor": {
          "ref": "e37a0eca-2749-4d9d-80b5-e5a60642041c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ad7794c6-f827-4af1-8f60-7dec85a376d7"
        },
        "item": {
          "id": "abd32c4d-56a4-4bcb-8725-79d512e27560",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3dc29a91-8d4c-4d6d-9c96-a871c98255db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7732f4a-a155-4d0d-9a16-3ecd46346b6e",
        "cursor": {
          "ref": "d4afb8be-1d57-4a37-934b-f1a62f47efd2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4dd24291-8c97-4c34-9c8c-c01778fb7670"
        },
        "item": {
          "id": "b7732f4a-a155-4d0d-9a16-3ecd46346b6e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "86beeaaf-5d63-4b65-abc9-9bf8dabf3bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a15067-3651-4a52-be19-c72008d647a3",
        "cursor": {
          "ref": "f3b0f543-4d20-41e7-af65-bfc315216bab",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dbf2588b-dd0b-4cba-8e42-6465288d16c3"
        },
        "item": {
          "id": "b5a15067-3651-4a52-be19-c72008d647a3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f0b87b92-f7de-40dc-940f-ad5c233ecb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2692303e-da19-4dad-bea3-00119633e7ef",
        "cursor": {
          "ref": "6b405940-e194-4c23-ac62-f57a501bd3c6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "af2a690e-3b21-44e8-896a-4cea9ea77c07"
        },
        "item": {
          "id": "2692303e-da19-4dad-bea3-00119633e7ef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a30e3f20-67ac-4e56-92cf-e843ae858f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc7b391-dfd9-4c09-a906-3f7623ff5d53",
        "cursor": {
          "ref": "c4b0c77f-c13b-4705-83ac-fe348dfd1811",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "82c2a23f-77f7-4d51-bb2a-0efe9e639ffe"
        },
        "item": {
          "id": "6fc7b391-dfd9-4c09-a906-3f7623ff5d53",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b2a5cf73-6b10-42f9-a5ab-c0cc1d54fc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddf0f06-5933-4391-b4a3-f713a8f459be",
        "cursor": {
          "ref": "9b5b0f90-a28d-4719-a2be-b5519dae71b5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "63329a5a-a171-4a31-a0df-56f5e8633539"
        },
        "item": {
          "id": "7ddf0f06-5933-4391-b4a3-f713a8f459be",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ed76b765-9c08-4273-bf78-efc9fd4b6ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f63d60-b08a-45d8-afeb-01b9025ea6ca",
        "cursor": {
          "ref": "4ca27460-668c-4173-8588-6f9a609639ce",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "56a55b47-cd47-4436-8b83-8f97872d4262"
        },
        "item": {
          "id": "a1f63d60-b08a-45d8-afeb-01b9025ea6ca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e18d284c-720e-448b-8e8c-f99df1af9550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d206d9d-460e-4c23-b216-313dfa382dea",
        "cursor": {
          "ref": "ad110b1d-9bda-4b65-ad56-c0691b8f8c6c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f0c2641f-80c8-4508-954e-b37f3d0d86e4"
        },
        "item": {
          "id": "4d206d9d-460e-4c23-b216-313dfa382dea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2745dcbc-bdb0-49ca-af1e-42bbdeb920ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d992e4ae-61d3-4158-b279-d873c6a3f536",
        "cursor": {
          "ref": "deeae3a0-c8e0-418d-981c-a91aff05364e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "add6a7e6-d451-429d-b16f-66e19f7cb244"
        },
        "item": {
          "id": "d992e4ae-61d3-4158-b279-d873c6a3f536",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9b956e7e-f8fa-4ac0-a7ab-8abe5c8f9574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3908c184-1dd2-44bc-bb48-334b0a971364",
        "cursor": {
          "ref": "6a597781-a456-40ff-8e3b-b038a3365fc3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7b5f57c1-bfa7-41dd-a810-6ef56796ccbb"
        },
        "item": {
          "id": "3908c184-1dd2-44bc-bb48-334b0a971364",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ae6098b-cc42-41e6-8786-a14f08fa2477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7096674e-2a99-46b2-8d76-63056da4702c",
        "cursor": {
          "ref": "23910f51-ebb9-4f95-9d7b-1269ce8f678a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c86ba29-a06c-4ef4-b366-fc7235f956db"
        },
        "item": {
          "id": "7096674e-2a99-46b2-8d76-63056da4702c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e9789b80-0430-4c23-a14e-250bcfd5545f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61c3067-6d9e-4892-b176-a511d39e74f3",
        "cursor": {
          "ref": "db7a2aeb-7dcb-47ca-9f0e-69233041ca9d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f069db4-1e07-46e8-ba3d-37697aae6f8b"
        },
        "item": {
          "id": "c61c3067-6d9e-4892-b176-a511d39e74f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "25f76b9c-8abe-4893-a1d5-cbfc009b12a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac6aa71-02a0-4b52-8a88-f17756763351",
        "cursor": {
          "ref": "992f6e34-3807-4f05-b841-db23797ebfe1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9b1a66db-8114-47f1-b281-3c233ff2263b"
        },
        "item": {
          "id": "bac6aa71-02a0-4b52-8a88-f17756763351",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a3d4f4d9-5258-410b-9142-9dce9e5aa0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "42538e90-dfc8-4eef-9025-831454330515",
        "cursor": {
          "ref": "dadf57e2-ee8d-42fe-a592-d0aef4967fa9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5c32714c-dcf3-48ff-9385-eb719f777261"
        },
        "item": {
          "id": "42538e90-dfc8-4eef-9025-831454330515",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6a363be2-8530-4384-89ca-51121b14e459",
          "status": "Created",
          "code": 201,
          "responseTime": 2936,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbc2ca9-3204-4615-a753-a3efe01c3e18",
        "cursor": {
          "ref": "bad48578-6a73-439e-a1d2-b773cd1c7caa",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6f78daf8-3587-42db-a9df-879f6f97a379"
        },
        "item": {
          "id": "fbbc2ca9-3204-4615-a753-a3efe01c3e18",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9078601a-d588-4d64-9014-d2538044e9d0",
          "status": "Created",
          "code": 201,
          "responseTime": 2710,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b98e2c-0575-4f2b-8c53-8f71f9580c32",
        "cursor": {
          "ref": "7a660029-0f85-44b3-96d2-eae682c5d1d1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "699f3cf3-0dd9-403c-8b10-07bf9d871088"
        },
        "item": {
          "id": "86b98e2c-0575-4f2b-8c53-8f71f9580c32",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b7fc3843-0f84-4188-9d61-daca228088b0",
          "status": "Created",
          "code": 201,
          "responseTime": 2193,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9937a8b-9719-459a-8a61-26d92c9df4ac",
        "cursor": {
          "ref": "44c7419b-24d4-42a9-9939-d4f607b77cf6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b4df2bf-3520-485f-a598-6d1370eb3ed2"
        },
        "item": {
          "id": "a9937a8b-9719-459a-8a61-26d92c9df4ac",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "394df47f-4599-4a99-b1c5-086dd3297551",
          "status": "Created",
          "code": 201,
          "responseTime": 2039,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b13e131-a9ba-447b-8a55-cab2e36d494d",
        "cursor": {
          "ref": "606fc858-4791-420b-b976-2127bc711922",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "773c20f6-c82f-4a71-a331-02c7a7ddb020"
        },
        "item": {
          "id": "2b13e131-a9ba-447b-8a55-cab2e36d494d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1960010-83c1-4017-b4c1-673739608c1f",
          "status": "Created",
          "code": 201,
          "responseTime": 2114,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d97521-f4d9-4160-be70-f989affc8999",
        "cursor": {
          "ref": "0b53a849-d7e2-414b-b654-34b17011799c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bb94c8f3-e678-45e5-94a3-a97542c492f0"
        },
        "item": {
          "id": "a5d97521-f4d9-4160-be70-f989affc8999",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c24dca9-4bcb-4720-a960-e128de764eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8671ac6a-6076-4701-803a-aa4a71f90eca",
        "cursor": {
          "ref": "cf537baa-cba1-4ff1-9096-4a500215c647",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7ac70ee1-1db8-4cfc-bccc-2939b7a55253"
        },
        "item": {
          "id": "8671ac6a-6076-4701-803a-aa4a71f90eca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "51068511-926c-407c-a120-b75a50e7cb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cca71e7-1d19-4a7f-88ec-5df2c1981043",
        "cursor": {
          "ref": "7ca7223c-86c6-4602-be4d-a2179c55d719",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bab5ee12-138e-4d2d-baf6-c04f762de0a0"
        },
        "item": {
          "id": "5cca71e7-1d19-4a7f-88ec-5df2c1981043",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7eb6eedb-2977-4d86-8e9a-7bfd4c3e1b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007fc660-f79e-4ad1-86a0-95dbc19938c9",
        "cursor": {
          "ref": "f957254c-c480-405d-b1d8-6fc895275673",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e7cea11a-d537-4a8b-a91f-82d1e64749b9"
        },
        "item": {
          "id": "007fc660-f79e-4ad1-86a0-95dbc19938c9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "61d0e28d-518f-4ca0-ba98-b9cfed8b5a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997101d8-33c9-4de7-a4ff-4d005510da65",
        "cursor": {
          "ref": "a965e86e-3bf9-4d8f-8b39-d5cb9b4a5e31",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "944b5df7-874d-49e1-8234-412d3a6980bf"
        },
        "item": {
          "id": "997101d8-33c9-4de7-a4ff-4d005510da65",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "59b2684b-dca4-4aa5-9236-04ccbb66275f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc17f60f-24ff-42a4-94b5-09dd2ae77b37",
        "cursor": {
          "ref": "7aa495e0-20a2-414e-8333-ff295a19b633",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0c6f229c-bfd7-4def-b1ec-b448e49b90c0"
        },
        "item": {
          "id": "fc17f60f-24ff-42a4-94b5-09dd2ae77b37",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2caddf33-6abc-4ce2-be17-b95810d12fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c9f975-fea4-48c0-a8c9-94e2d12297cc",
        "cursor": {
          "ref": "101cd4f2-8507-41e7-9ef4-b5a974ad4ded",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8807ea53-3c4f-4a5f-a7df-0d9e41940ade"
        },
        "item": {
          "id": "02c9f975-fea4-48c0-a8c9-94e2d12297cc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0db330e-22b1-4ced-85b6-2b439f34c6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544fd030-e272-4cae-a100-f0106cadacf4",
        "cursor": {
          "ref": "25187a2c-b72b-4a65-8c54-662279b5a1ee",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c03196f7-ee4e-4c84-8295-f12ca017dc4d"
        },
        "item": {
          "id": "544fd030-e272-4cae-a100-f0106cadacf4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6ea7a487-bece-48c4-a55a-b696824cef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec76d0e1-9282-4a5c-af57-51a5a4178816",
        "cursor": {
          "ref": "6b91a0e1-3706-46cc-9850-2f1aaf2bad2e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e8b2b6bf-723f-46dc-ad3c-714aab7e8b70"
        },
        "item": {
          "id": "ec76d0e1-9282-4a5c-af57-51a5a4178816",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26eda8b1-469a-4554-b0dc-7b2d03fcc78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d2d98f-fb7a-46aa-a5a9-30ff840b4c38",
        "cursor": {
          "ref": "6dae4f5d-f7f6-403a-b6fa-856d27e0ce7d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a66349b8-5f92-4b01-93e3-1c72b37e83e0"
        },
        "item": {
          "id": "18d2d98f-fb7a-46aa-a5a9-30ff840b4c38",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e362549a-782e-4a9d-b0ad-3b99a135f3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c893461-0199-4ebe-af8b-55a837e2d897",
        "cursor": {
          "ref": "cec8af43-2f7f-402c-97c5-3770a2a80fdf",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "386733cb-068c-4121-a3d0-128414ebee1d"
        },
        "item": {
          "id": "5c893461-0199-4ebe-af8b-55a837e2d897",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c057dcc8-ca77-472d-82c0-f8c6dce9b7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4658d7a9-d593-4c13-9005-39ad87fa5eae",
        "cursor": {
          "ref": "8e43ace6-f63e-490f-9ae9-2564a2e71b89",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa182106-2b27-4b67-bf39-668e5feec2e9"
        },
        "item": {
          "id": "4658d7a9-d593-4c13-9005-39ad87fa5eae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8cd303e9-0ad8-4d03-b693-12991e67e955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588668a4-5710-4203-8283-a5442a243524",
        "cursor": {
          "ref": "c8384aa5-ff20-45c6-9a87-a1ad20c9f4a7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "37a754f8-3831-4b60-ad09-249ae10e2332"
        },
        "item": {
          "id": "588668a4-5710-4203-8283-a5442a243524",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c45ae8d0-55f5-4fbf-a26a-9c8ad141c469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8b1ff8-2ab9-44c7-9eff-9a453cb225a3",
        "cursor": {
          "ref": "e1dd66b3-3431-464d-bed5-2458cc7883d2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "09996630-ddc9-465a-92e8-3d059648b7ab"
        },
        "item": {
          "id": "ae8b1ff8-2ab9-44c7-9eff-9a453cb225a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d8cdeeba-134f-4ab2-b310-72283c568349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac443f7-b9dc-4faf-b29c-72617d8a0c4b",
        "cursor": {
          "ref": "d0275bb9-fd75-400d-9456-0dbd5245feaa",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c74f8dd-3aa9-4c42-b0da-a7ab815acf53"
        },
        "item": {
          "id": "eac443f7-b9dc-4faf-b29c-72617d8a0c4b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f3aec96d-fab1-4497-9e4c-a618a959ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42c3557-f27e-4e9e-bc38-be0511c84c52",
        "cursor": {
          "ref": "eb9e2ab8-685d-4c00-808f-8ed89feea709",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "96ddb964-9581-4398-a2ad-5d0b942a2858"
        },
        "item": {
          "id": "c42c3557-f27e-4e9e-bc38-be0511c84c52",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0a6e302-2149-4e05-8593-7de2eb03ed87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16652c9c-0134-4c9c-823f-61714b357bff",
        "cursor": {
          "ref": "abfa2678-b15a-4422-9508-3b8ffb14c4bc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6ac6e90-a0bc-464d-92f8-b545446ae8a5"
        },
        "item": {
          "id": "16652c9c-0134-4c9c-823f-61714b357bff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ccf247ab-b073-48b4-809c-204ba3982a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b7451-5004-42d4-8879-e24b1a9fbe65",
        "cursor": {
          "ref": "7de2cef5-d38c-40d2-b770-d52f0747b9c0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "020ec2c7-ba8e-4f92-a09b-1fbe91ea836d"
        },
        "item": {
          "id": "838b7451-5004-42d4-8879-e24b1a9fbe65",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18cd3264-9cb4-4153-b629-418cb3ad9a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582275bd-36a4-45e4-84c9-ce8218ecc6a6",
        "cursor": {
          "ref": "4ff69613-56c7-4265-8f68-ce59dc03972d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0d56c4b0-4f9c-4842-a4fa-740cbaa5aff8"
        },
        "item": {
          "id": "582275bd-36a4-45e4-84c9-ce8218ecc6a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "56d4a867-3a2b-4d1e-8c06-09849f9f25eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289c2419-301d-43e0-9fb2-36c568905918",
        "cursor": {
          "ref": "4f49e686-5a96-436d-84a4-be9cbf743f46",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "448a58bf-3a93-4510-9ca4-1c87e059ee3d"
        },
        "item": {
          "id": "289c2419-301d-43e0-9fb2-36c568905918",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f86731f4-21d0-43d8-b8d1-2154c4f98135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1239a2bc-f4b9-4c57-ad41-f111a54f50b9",
        "cursor": {
          "ref": "5753b335-ac19-49bc-8206-7474a0cd9da0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b61db9df-d67b-4b71-a145-b125352e6468"
        },
        "item": {
          "id": "1239a2bc-f4b9-4c57-ad41-f111a54f50b9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "61a4d103-c41a-43ba-8848-f518a108f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d01459-c90b-462b-9279-c6d5fb21d4e3",
        "cursor": {
          "ref": "ea9a4b22-cd15-4185-a496-6e2b3bc904e2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4987d141-6425-4d3f-8028-77c847ac2c8e"
        },
        "item": {
          "id": "02d01459-c90b-462b-9279-c6d5fb21d4e3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8c636aee-c59d-4082-ab27-2f953d4d04ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a35bb1-e02f-4afb-abd1-06fdb4383e37",
        "cursor": {
          "ref": "69d50c79-98a3-41e3-9db9-93ff6fe4105a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "83b7ac39-37ff-429e-811a-d86c4e01f8f3"
        },
        "item": {
          "id": "f2a35bb1-e02f-4afb-abd1-06fdb4383e37",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "236c3cac-c7ef-40ed-b75e-ee0437780972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4d29e2-b6f6-4d6e-ba23-842645b49ca9",
        "cursor": {
          "ref": "45e2ae11-0a45-4dc8-b57b-842fefda7eb5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ece98e71-748e-43bb-a1f9-8b685d6eaf71"
        },
        "item": {
          "id": "2d4d29e2-b6f6-4d6e-ba23-842645b49ca9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a4e392b7-d150-4df5-9208-5ff6c7ab49a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90857fd-afb8-4434-a4e1-9a89835a4736",
        "cursor": {
          "ref": "00be622a-1fed-425a-8f55-f1c84f292f78",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0b9f1c13-6409-4387-b8ed-f9c247174844"
        },
        "item": {
          "id": "c90857fd-afb8-4434-a4e1-9a89835a4736",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4af87fe-1b91-4388-b018-3a0c1333dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87e558c-6ce9-4d22-bc5f-08252069caa4",
        "cursor": {
          "ref": "698ffb71-b1fd-46e9-ab87-ec19fb18898b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6b9707c4-1058-4905-bbd9-96a64e17c385"
        },
        "item": {
          "id": "f87e558c-6ce9-4d22-bc5f-08252069caa4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b339ba5-0f35-468f-a200-8648e1978234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea2238d-5cf8-4f26-bd58-4f426e78758b",
        "cursor": {
          "ref": "3a37473a-6f9a-460a-8e0c-c3f104bc3006",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4975b9ee-3f63-4356-9a23-0f8be7d9ea75"
        },
        "item": {
          "id": "4ea2238d-5cf8-4f26-bd58-4f426e78758b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a0b577b-e606-4953-b136-d85ac33b4aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0f0ce3-cb3a-4ffa-80cd-0c5af064d10e",
        "cursor": {
          "ref": "c726aedb-fc47-4062-8ff6-2723bfe46ec5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "79a7da43-4b8e-400c-b7b5-03ac95bd30dc"
        },
        "item": {
          "id": "2e0f0ce3-cb3a-4ffa-80cd-0c5af064d10e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f924546a-cbf0-4693-b3ea-3f2996c0c41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfae6d5-44c7-4928-94c5-aeffd1d1f5a4",
        "cursor": {
          "ref": "35d8fbdc-e55b-4e73-b69b-af09dc4b8194",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ce21b2cc-8ab0-4908-91a0-a0eab6f68bed"
        },
        "item": {
          "id": "5dfae6d5-44c7-4928-94c5-aeffd1d1f5a4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a712d2db-5158-4a1b-b76b-5535b5494bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de96c71d-ffb2-4741-9ece-1abc6f2618b0",
        "cursor": {
          "ref": "9d816b06-456d-43f4-a959-a647c45eb429",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c3f72575-a45d-4c0c-a20b-c7e73795a150"
        },
        "item": {
          "id": "de96c71d-ffb2-4741-9ece-1abc6f2618b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf29c2e9-121d-4d80-8a06-8fc1e4a82ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01640ec3-ad86-4127-827f-8ba6fbfb8cde",
        "cursor": {
          "ref": "6b9adc1d-6900-47c1-91cb-58d02aabe749",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b4a80f6-0c33-4292-a285-7e9864d23a2e"
        },
        "item": {
          "id": "01640ec3-ad86-4127-827f-8ba6fbfb8cde",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5fa95d0b-0958-43e6-b30d-79612283f4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24f7e6b-f6e4-40f3-bcf0-45d395c4bee9",
        "cursor": {
          "ref": "15e81b90-d44b-433d-aea7-fe7f27a309a6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bc5ac162-3eb1-420a-b3cd-8af2959d4936"
        },
        "item": {
          "id": "c24f7e6b-f6e4-40f3-bcf0-45d395c4bee9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3edfebf5-540b-4a1f-8b5a-e3d03a203039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d51304-1dc8-4423-ad5d-2dc14093a914",
        "cursor": {
          "ref": "2e4cacbb-6200-4dbd-a6d8-c8ddb7b62512",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "edc22c68-b852-49a5-8b4b-3bc6601ae660"
        },
        "item": {
          "id": "c1d51304-1dc8-4423-ad5d-2dc14093a914",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b4c85892-cff2-4a21-b6e2-50d4f6d6a918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8648a527-a3b6-47eb-81eb-de71ae70b2d8",
        "cursor": {
          "ref": "13234a7b-7917-40ee-a8ce-9321ffaa89cf",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c68acc37-f58e-4ad7-bc6f-94369240599a"
        },
        "item": {
          "id": "8648a527-a3b6-47eb-81eb-de71ae70b2d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5eae857-fdc6-44e3-8301-a74a20cd497f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1331616f-f540-49bb-8e62-4d679ae6830a",
        "cursor": {
          "ref": "493bcfc2-ff70-49de-91e1-cb5be23da55e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1efafb7d-74e3-4e25-9699-4ef2a800ad8b"
        },
        "item": {
          "id": "1331616f-f540-49bb-8e62-4d679ae6830a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c5111a8-41cc-445f-8033-7e001d453458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752c6afd-8020-47c4-bd26-4bfeced8206a",
        "cursor": {
          "ref": "89572950-c403-4e50-8323-303139e0434c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e47923d7-5513-425c-8633-2e85464500de"
        },
        "item": {
          "id": "752c6afd-8020-47c4-bd26-4bfeced8206a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fa32f4af-3c0b-4d94-8f9d-a6909d8c3a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d0a3ba-4ddf-4a31-8d29-875088ebf844",
        "cursor": {
          "ref": "8c195511-2463-4a91-9025-c440c6a6bdce",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d1583c22-557e-4035-b8b4-7b61a3da3636"
        },
        "item": {
          "id": "66d0a3ba-4ddf-4a31-8d29-875088ebf844",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98c0b010-fb96-4350-b525-0d8598cf323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d44de3e-c3ff-4a9c-ad4d-7bb5b10f36bd",
        "cursor": {
          "ref": "3165bf2e-9067-40ee-920e-f3fe64976906",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fd4146c2-7705-4a29-9521-663183567e2d"
        },
        "item": {
          "id": "4d44de3e-c3ff-4a9c-ad4d-7bb5b10f36bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb436aa3-0b6b-43fa-b8a7-35efc96903b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c6b53-417c-4301-a711-e3fdb6e78f9a",
        "cursor": {
          "ref": "73a99710-d3df-4d6b-ae57-8148200847de",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "54c943bd-c851-486f-a5c6-079ca2969340"
        },
        "item": {
          "id": "e02c6b53-417c-4301-a711-e3fdb6e78f9a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd7014e8-48d6-4f5a-ac29-13155656df2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a24e9d3-536f-42b1-b7bd-9b9b3e580384",
        "cursor": {
          "ref": "87ebf94e-98c1-4e8e-b9d2-7b2b53201931",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55bfbf70-271b-49f7-83ba-bf2717a8c677"
        },
        "item": {
          "id": "9a24e9d3-536f-42b1-b7bd-9b9b3e580384",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cd254a18-b7ec-47e5-8f85-ec8e3d623848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0ef8da-74f3-4565-b4f5-893bb73ffdcb",
        "cursor": {
          "ref": "e770d9bd-0403-47ba-adac-df6789821689",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "769ef8cf-b43f-433a-9388-130c041d84ee"
        },
        "item": {
          "id": "5d0ef8da-74f3-4565-b4f5-893bb73ffdcb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42a31a78-992b-4808-80e7-5c1b2cd2a03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe42bbc-bf07-47d1-a20a-6f10cf924b1d",
        "cursor": {
          "ref": "3c5b656b-b366-4bae-847f-d603823ae21c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "797b5a5d-b98b-4211-917e-1b2562d7e7d0"
        },
        "item": {
          "id": "afe42bbc-bf07-47d1-a20a-6f10cf924b1d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2b5819f2-5fcd-4fa7-8fec-60cfd2a7d102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26e8646-51fd-4554-8d73-97e560cf0242",
        "cursor": {
          "ref": "371c563f-fe5f-40b4-886f-2829492c434c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "24e57030-22a4-4dc6-85ab-ec382bb93edd"
        },
        "item": {
          "id": "d26e8646-51fd-4554-8d73-97e560cf0242",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bb269fbe-392b-4a5d-9034-41f2d159a8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ace707d-a63c-4d21-bdc7-316c7fbfbf43",
        "cursor": {
          "ref": "6f05d6ed-3d62-4433-a499-4595caf02770",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2f3299d5-68d7-4547-a8a0-e307b88f7d7a"
        },
        "item": {
          "id": "0ace707d-a63c-4d21-bdc7-316c7fbfbf43",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "336ac199-e63e-43b5-886c-00c2c2d6fea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e72ba9-17df-493e-881b-435d236c0818",
        "cursor": {
          "ref": "8f6f442d-c188-436f-8f1b-8a4d4cdc2bbd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "60da560c-092c-4502-8edb-b96452df6ee5"
        },
        "item": {
          "id": "70e72ba9-17df-493e-881b-435d236c0818",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93277d31-3a24-4c92-ac70-f53f1205ef85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b0701b-1448-4515-8a16-5c06bb5b9cab",
        "cursor": {
          "ref": "521002b8-b63d-4e95-84f6-7f7bf9fbc1fa",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "75593cd4-a4d4-4c25-8fbe-2fb7eca6353e"
        },
        "item": {
          "id": "51b0701b-1448-4515-8a16-5c06bb5b9cab",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fa200277-013d-4f58-9e87-63b9f99e4ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1df380e-6038-4f43-b0cc-dd43058548cb",
        "cursor": {
          "ref": "9cb916be-4259-4f89-9615-a885f1ebd2bc",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b62de3c5-73e3-41b8-aa7b-07d5509e5aea"
        },
        "item": {
          "id": "d1df380e-6038-4f43-b0cc-dd43058548cb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4201806-cdbd-4281-b3f2-17f14e2f8144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9275672-35fe-4eb1-9647-9c853884f890",
        "cursor": {
          "ref": "005fd2b5-c6d5-4046-86b4-335b67f79ce9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f6978d0e-db31-418e-8ad8-74ae9a927273"
        },
        "item": {
          "id": "b9275672-35fe-4eb1-9647-9c853884f890",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2a0a9bb-71bf-4e71-97e3-e9bf5f486eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3827a40-229b-4f44-b769-e0b9316ccced",
        "cursor": {
          "ref": "19a24043-130c-4f02-9575-3828a3bdb37a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "760ac87b-f4e5-4304-93f1-c8819a3d3e71"
        },
        "item": {
          "id": "e3827a40-229b-4f44-b769-e0b9316ccced",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a187ac04-14f7-4b5e-82fc-98b57158920d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3d8925-3864-4080-b49c-26850d480646",
        "cursor": {
          "ref": "3cd7bb79-7839-4b2e-b09d-8c80f3da3271",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "03ca4b07-3e54-4658-9fb6-2de85670caff"
        },
        "item": {
          "id": "2d3d8925-3864-4080-b49c-26850d480646",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2a2bf13-d3bc-49b6-b748-48c96539d13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc61400-0772-4d65-a24f-0d7d131755df",
        "cursor": {
          "ref": "5ade5158-93f5-4172-9432-03b08c320f23",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4b0c1c4f-0c11-42b3-8827-858fd546775a"
        },
        "item": {
          "id": "1fc61400-0772-4d65-a24f-0d7d131755df",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "640ac286-366f-4b18-99ea-0ddd57b7e16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16901e82-c74e-4570-9e09-281b4b144812",
        "cursor": {
          "ref": "3ccae87a-fe1f-4311-b837-564f35e86868",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "eeabeaec-ff43-43b5-ac70-f6f78cb1b23b"
        },
        "item": {
          "id": "16901e82-c74e-4570-9e09-281b4b144812",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e8f056e-c6a8-40bb-ad70-eacd45aac76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3686cc48-ea4a-4c27-968f-67987d9349ad",
        "cursor": {
          "ref": "6837cabf-5203-4a95-8d0f-b723612e0b09",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "34da7a09-9395-4679-851c-9c0bbce4af11"
        },
        "item": {
          "id": "3686cc48-ea4a-4c27-968f-67987d9349ad",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f570b081-5c87-42df-a56b-97b75744fb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803831b8-96f7-41bc-88c4-13e414bc5d55",
        "cursor": {
          "ref": "870b43c6-4df0-4f7c-b69e-6101db38b0c0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "efd30bfd-e87a-425f-bf8a-ddfae8f51ba2"
        },
        "item": {
          "id": "803831b8-96f7-41bc-88c4-13e414bc5d55",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c92b6aac-9083-48dc-b297-af5398d91b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d3166e-de8a-4635-b25f-86835772da6e",
        "cursor": {
          "ref": "b0bed71d-dcf9-4b0d-ba80-4796ea6c88c7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "61bea8a1-6db1-42d1-a408-9e9b9528c43f"
        },
        "item": {
          "id": "54d3166e-de8a-4635-b25f-86835772da6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7bcaabc4-7b92-4352-b0d4-684e3ba86d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e1a0d2-6374-46d3-b42c-2beaa2ce9cf2",
        "cursor": {
          "ref": "f0d4649f-893f-4df7-bf7e-f901890ba8ab",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2b54ed46-2cff-4a73-acb9-32a55119cf75"
        },
        "item": {
          "id": "49e1a0d2-6374-46d3-b42c-2beaa2ce9cf2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3bcdd022-99be-4f0d-aef3-62679c7111e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef86012-8175-4d1a-9602-94863cb4f3ce",
        "cursor": {
          "ref": "beb07206-745f-4f8d-8a0f-52f7ab0a9cd4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "969967b5-46c1-4ec4-8715-858667815108"
        },
        "item": {
          "id": "fef86012-8175-4d1a-9602-94863cb4f3ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc9c8fa0-6bcc-4f9e-85fe-8404d1816a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be21bc3-a843-4c48-8c22-34c529c0b606",
        "cursor": {
          "ref": "4c64ce20-935c-46ae-a6c1-bcf30c7b57bc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0b6b0754-3e04-4ce3-b699-53c86c31bfab"
        },
        "item": {
          "id": "8be21bc3-a843-4c48-8c22-34c529c0b606",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a9ccb638-0f8a-4b6e-8275-cab9e461c498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe25002-46f6-4b39-b025-79efa6314054",
        "cursor": {
          "ref": "20304e64-55d0-4e0c-b6eb-09917ad3d80f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "72aa4c81-5c01-4f2d-b098-56911727a2a8"
        },
        "item": {
          "id": "abe25002-46f6-4b39-b025-79efa6314054",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1462a3d6-957a-40bf-a842-ab629078ea81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d3815d-a4f8-40f6-a242-7dc514deea3d",
        "cursor": {
          "ref": "4aada5ea-514a-4101-8305-2e55d70be809",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e0e9e404-52f2-4348-b934-4d31c547e5c5"
        },
        "item": {
          "id": "74d3815d-a4f8-40f6-a242-7dc514deea3d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f33dddf1-78b9-4b43-a6fb-7b01138ebd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5040476f-35dc-4ccd-b6be-8145c2eb6620",
        "cursor": {
          "ref": "e34f6d49-b74d-4610-9d96-e7bf13036fa4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c8b5e35a-d4f9-4f28-88d3-83b983f07ad9"
        },
        "item": {
          "id": "5040476f-35dc-4ccd-b6be-8145c2eb6620",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed04f603-7e1b-48fd-b884-06e4c0cc65b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a81ba6-2071-48f3-aaf0-00681940a492",
        "cursor": {
          "ref": "19321d2b-aae5-4ff2-a186-22c1a7bb441a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8bfdf356-4b66-4cea-97a7-47904a875f4b"
        },
        "item": {
          "id": "d4a81ba6-2071-48f3-aaf0-00681940a492",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "65edf8c2-214a-4049-be0a-a78a54d0ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ec1102-4a46-449a-84c6-1f45ca43e2c5",
        "cursor": {
          "ref": "84c068e3-e573-4d6b-893a-435dba53be9d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "feed1997-7104-4386-8f9f-a6a0ce22025e"
        },
        "item": {
          "id": "33ec1102-4a46-449a-84c6-1f45ca43e2c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a01ea831-2a99-44a6-b720-7a72cc426767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac2819f-918e-4a58-b574-409a0c57c068",
        "cursor": {
          "ref": "ad72a421-9a23-4d45-bfc1-9b9ab14bd703",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9d3f1620-5eb2-4161-96e4-65c67118caf2"
        },
        "item": {
          "id": "cac2819f-918e-4a58-b574-409a0c57c068",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1afce497-bce0-4f4c-ab7b-2df79a42cdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e351b80-56ae-404c-86d4-0135bfd07ed6",
        "cursor": {
          "ref": "1a61fed0-5b0b-42fc-b257-e35682a92876",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "af6ee4f5-2a02-4d96-8d00-fad2f86089ed"
        },
        "item": {
          "id": "6e351b80-56ae-404c-86d4-0135bfd07ed6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "efd9ea5a-e306-46a2-bb6b-81f3556cbac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cce4b36-b55f-4a63-a97c-72624bd5ae6a",
        "cursor": {
          "ref": "6d73db9b-0814-4fa5-a49a-244049eb6d5a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8b551d3f-97b0-4f16-b7af-c017297b612c"
        },
        "item": {
          "id": "9cce4b36-b55f-4a63-a97c-72624bd5ae6a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fad35ef8-4448-407b-8d26-5fa22872fd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7aa0f6-904d-4a6d-9496-799a0f4060e6",
        "cursor": {
          "ref": "f623e752-dab1-478b-9969-8121bc77824a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "be84326e-8373-4bc8-b7d7-f6d60c211134"
        },
        "item": {
          "id": "5f7aa0f6-904d-4a6d-9496-799a0f4060e6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "02e549a9-26e8-478d-8170-565405a17f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7cc9bf-baf2-483a-b730-a1d1dc9107aa",
        "cursor": {
          "ref": "1e28594e-c0d3-46b0-95e7-5a00fa3be1dd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad7ab7e3-d932-4358-813a-a9440db6dadf"
        },
        "item": {
          "id": "fa7cc9bf-baf2-483a-b730-a1d1dc9107aa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4eb81e0c-a1a2-4eb5-9436-d7051c969da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada62f8-f675-44d4-9524-8b882949bc2c",
        "cursor": {
          "ref": "432172ef-07f6-4d61-be57-32303512753d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b269a54c-7cda-4bf4-a5e1-04d7ebd7be1d"
        },
        "item": {
          "id": "1ada62f8-f675-44d4-9524-8b882949bc2c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6d2d988f-cb45-4280-8bc5-59daf1bc1499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664518fe-ad88-4073-a943-0646727a8a9d",
        "cursor": {
          "ref": "ab2711b8-205e-4844-a47b-72e22320295c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7f340605-bb09-4049-97ef-e306728c9e9f"
        },
        "item": {
          "id": "664518fe-ad88-4073-a943-0646727a8a9d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "21aafa85-aca4-4c32-a0cd-c5904a7fcea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a48d946-8947-4470-8136-f105a9c16be0",
        "cursor": {
          "ref": "3656d697-7324-489f-bc4f-119667ce8c76",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cab042cb-f890-489e-91a4-12f1302007d0"
        },
        "item": {
          "id": "7a48d946-8947-4470-8136-f105a9c16be0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a094c272-ee99-475c-b6d4-b90e446c3eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3077a845-7085-47f2-92e1-e8cb7826f96a",
        "cursor": {
          "ref": "9787e2b8-6c74-4432-8ba7-0d6e7a85c9f1",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6665754c-ba89-433a-b297-6ad3501da414"
        },
        "item": {
          "id": "3077a845-7085-47f2-92e1-e8cb7826f96a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "99cf4551-33fd-4dcb-b64c-2746656b3449",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0a87a3-7fa3-4c16-a23b-1bd3a2316daf",
        "cursor": {
          "ref": "7c61e379-e147-40c2-8162-051fcd8e6d6f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "746eaa2a-095b-4495-b1bf-b198d5717968"
        },
        "item": {
          "id": "ec0a87a3-7fa3-4c16-a23b-1bd3a2316daf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "04031866-83b1-49d2-84ea-195294c304b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b232b9d6-4634-4807-bd72-042b19e69bc7",
        "cursor": {
          "ref": "12de36a4-3e79-4663-a791-797553d61a07",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d4ac3098-0480-4ae2-9991-a7965f69d018"
        },
        "item": {
          "id": "b232b9d6-4634-4807-bd72-042b19e69bc7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9206a57e-1d32-41ef-bd1d-87cb6ec27be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7927899-43a1-452d-b164-604d5f56ea33",
        "cursor": {
          "ref": "2ca4f5ee-eec3-43a8-a8fc-ac6ac51b01f4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2a4604cf-f4e0-4010-bdf3-a3bbf30d71a0"
        },
        "item": {
          "id": "c7927899-43a1-452d-b164-604d5f56ea33",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d7541d46-2caf-4336-9a61-8176b09073bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78952dd0-dfb2-404e-a00a-b4cb8e73a9f9",
        "cursor": {
          "ref": "af8958bb-43b2-4838-9ac4-711860b9e239",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "df1aa2b4-36e8-4a93-8e44-d0f2f859b636"
        },
        "item": {
          "id": "78952dd0-dfb2-404e-a00a-b4cb8e73a9f9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fed61c45-a7d8-4e59-a034-aef6e855623c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d3df79-8011-42e4-9112-e98d0d6e9a09",
        "cursor": {
          "ref": "46f23291-ab6c-4f9f-ac64-a03adc332061",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a8ace85-207d-4580-8c3a-0f5125d2bd5d"
        },
        "item": {
          "id": "f5d3df79-8011-42e4-9112-e98d0d6e9a09",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "064ff043-5023-4c1f-95c5-54af291f7fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e2445d-7666-4468-ad76-687ee65a92d5",
        "cursor": {
          "ref": "95058720-6eac-4bcf-9585-b90d3f27535c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9b1ecdef-e4b9-43e8-a58f-50b49f4a0f1d"
        },
        "item": {
          "id": "58e2445d-7666-4468-ad76-687ee65a92d5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3d96bc4-e71f-42bc-824e-d9a01ecd8754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9562379e-56b0-411c-916c-01024cc96b8d",
        "cursor": {
          "ref": "01ef26c0-f0fa-47aa-9d7b-e9fdb0d44bd2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dd6ca6fb-34f9-413b-bb78-394c61ee15ae"
        },
        "item": {
          "id": "9562379e-56b0-411c-916c-01024cc96b8d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d59970a0-cca0-45bc-ae38-adea1268003d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f95af96-a9e1-4f28-9ca3-a1f493446ed8",
        "cursor": {
          "ref": "11c741e7-afee-44b8-b0e9-307bc5d003b8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "90bcf65d-da8b-4e82-bef5-ddfeca49c2e6"
        },
        "item": {
          "id": "9f95af96-a9e1-4f28-9ca3-a1f493446ed8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2400c219-7c2a-4164-aa3b-a680c344f51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d815bd4-3959-48fd-a5c0-c564eaf4d8d3",
        "cursor": {
          "ref": "3b8546f1-5798-464f-923c-11ee66752a48",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4f942f86-5f97-4895-a0ff-ec0f9454eb59"
        },
        "item": {
          "id": "1d815bd4-3959-48fd-a5c0-c564eaf4d8d3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1d933dd0-046b-4dab-936b-1e5eebc3ca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc5424-5388-49d4-bc05-68f93e6912c0",
        "cursor": {
          "ref": "8df3f4e8-f724-4fab-90b7-8b4ea9cab106",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a43c04ba-fe4a-4355-85ff-b9ee55b4b837"
        },
        "item": {
          "id": "30fc5424-5388-49d4-bc05-68f93e6912c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8a821ba7-bec9-4071-a2a8-ec07ad4fa75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c630fd-00e8-45f1-98dc-02b73b966223",
        "cursor": {
          "ref": "3ceb6d92-f0f6-41cc-94a8-2ef8827fe742",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1a0c57ef-1f12-4293-8987-1a90a81de22c"
        },
        "item": {
          "id": "77c630fd-00e8-45f1-98dc-02b73b966223",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c02d4372-c429-446b-b5be-a12217ee0b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fd5f42-f0fe-4e85-8db6-140e7ad15392",
        "cursor": {
          "ref": "cdd24384-3795-4869-8033-d0ec29d0d1ba",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fb9617a1-898c-4369-af0c-91b149a03da8"
        },
        "item": {
          "id": "10fd5f42-f0fe-4e85-8db6-140e7ad15392",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "97a2b71d-8316-4278-bdb2-4173649bf432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0203723b-8b0c-42a0-9495-ac4e4cd0e359",
        "cursor": {
          "ref": "767572e1-f98d-4019-9c22-707aa14b9dff",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fcfd3d17-10c5-44b5-b4df-84484ef7fff9"
        },
        "item": {
          "id": "0203723b-8b0c-42a0-9495-ac4e4cd0e359",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "73607cf3-f778-4cc5-91c4-853dfe0affc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c5506-1b1e-4a80-9729-6b90dafeeaf8",
        "cursor": {
          "ref": "a6170517-d4f3-4832-b6c3-fc2a3f1c2c4d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88ab518b-c73f-413e-8336-fb351e71cdb3"
        },
        "item": {
          "id": "5b5c5506-1b1e-4a80-9729-6b90dafeeaf8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9c2e12cb-2ee4-4852-ac71-8a89aab9aa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56de6886-2da6-401e-807b-a60077731094",
        "cursor": {
          "ref": "1a4f542d-e6e4-49db-adcb-ecf072343476",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "44d3dd4e-074b-4068-bd3b-6a66668b068b"
        },
        "item": {
          "id": "56de6886-2da6-401e-807b-a60077731094",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7d862ea6-4aaa-41ac-b9d9-63cef97efd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96faa406-63a4-4afa-89ab-c6bcc1d45fcb",
        "cursor": {
          "ref": "98b35484-e128-48ad-ac47-c66d2e6e788e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "340ef6bd-8081-4934-94e9-10879ab3bf29"
        },
        "item": {
          "id": "96faa406-63a4-4afa-89ab-c6bcc1d45fcb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fb320fe0-776c-4e67-9d0a-d48af8388fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd9861a-b22b-482c-9d9e-4cf85abacee0",
        "cursor": {
          "ref": "62d763bc-813c-4231-a04c-8f3fc7679da0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c64d763d-b2ba-4ea0-ac5f-c0f9cdc2e671"
        },
        "item": {
          "id": "9bd9861a-b22b-482c-9d9e-4cf85abacee0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b0dcd9f1-0717-43ff-8154-12fcf4208da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36aa010-a936-45cd-9ac0-32bca7a75e3f",
        "cursor": {
          "ref": "5b89cabb-7e0f-4510-80d6-f3b5737cc69e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a705f434-1364-4c22-a1c9-8751793fe63d"
        },
        "item": {
          "id": "e36aa010-a936-45cd-9ac0-32bca7a75e3f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4027a535-de3f-46d8-a9a3-82e652e7f0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e9346f-46d7-4215-8229-2d35fce35ba4",
        "cursor": {
          "ref": "d08a1c03-251a-476e-982d-ef3ba8d66a5b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "18e361e8-ac25-4a45-99ab-6d1698b5743d"
        },
        "item": {
          "id": "13e9346f-46d7-4215-8229-2d35fce35ba4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "70c2fbb8-621f-4c8e-b4bd-6c34832b3889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476550f8-4bcf-4eb5-8d58-42600b7eeccc",
        "cursor": {
          "ref": "58dbad0d-62d8-48ff-a6fb-2b20f1dc69cc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "58c33c16-0a04-4bf1-947f-ce0dd22d944f"
        },
        "item": {
          "id": "476550f8-4bcf-4eb5-8d58-42600b7eeccc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "36e3eb7c-c55f-4253-84e6-e741ae3842cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221619b7-e4a8-4b0d-bf4c-c73d78ef0177",
        "cursor": {
          "ref": "5e87fbb2-30c7-452e-b33b-a4c737eb86f6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "186f9d7f-9fec-428f-9e4f-b70a5d8618e4"
        },
        "item": {
          "id": "221619b7-e4a8-4b0d-bf4c-c73d78ef0177",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b2daa20-bbe9-46aa-a16c-33f419f374e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a511aa5-e13c-4b0f-80a8-f799d4b240d8",
        "cursor": {
          "ref": "920f282f-9c82-42ee-9fed-de39b389cbf4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4edee0d2-948a-426e-adc6-e51c0544612a"
        },
        "item": {
          "id": "0a511aa5-e13c-4b0f-80a8-f799d4b240d8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "880a9e2c-18a3-4735-8855-f75a5d40bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a4ab32-37be-489a-bbdc-5c3aeca28126",
        "cursor": {
          "ref": "adbe2bb6-967b-435b-8c2b-cf1d6c64d115",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e3396bef-8e20-412a-a13f-37d580e3efb1"
        },
        "item": {
          "id": "31a4ab32-37be-489a-bbdc-5c3aeca28126",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e78f3d3d-e145-4b25-bf2e-fa34481d1ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27a3a54-e933-4511-a59c-bfe401eb0aa1",
        "cursor": {
          "ref": "3bc68f9a-cc2c-472f-997d-9246d30c48ce",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "37d043b7-e470-417c-8088-a9cea3d46704"
        },
        "item": {
          "id": "e27a3a54-e933-4511-a59c-bfe401eb0aa1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "19c57887-bdcb-4b15-8ce4-433cb664dbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093a2564-4704-45c2-8848-6b58e5729a50",
        "cursor": {
          "ref": "65517d09-4640-41a8-8615-7d9684ea4cb1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a2d19332-6fb2-48d4-93cd-6910ffedc550"
        },
        "item": {
          "id": "093a2564-4704-45c2-8848-6b58e5729a50",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "109d96dd-a7d2-42d8-bb8b-0a85e957143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceac7fa8-c23b-4ff2-90b3-deab66b44044",
        "cursor": {
          "ref": "50baca62-9b09-4311-8504-9a9233e80db0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c72868b2-05a3-4d44-b590-82ad653fc967"
        },
        "item": {
          "id": "ceac7fa8-c23b-4ff2-90b3-deab66b44044",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "68b32f87-36d8-47dd-aef9-7b0e732aadae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d3cc1-ca45-4937-bdf1-09225bb1645f",
        "cursor": {
          "ref": "2c1f8834-ec8e-473a-a344-d45d23eb9024",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c50a0dd-a01e-4844-bb37-254c012db277"
        },
        "item": {
          "id": "869d3cc1-ca45-4937-bdf1-09225bb1645f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6a5a61d6-32e1-4e23-ba53-6ef6bd2ed8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a400a13-7a6b-45fb-95f0-ce86a1032e6f",
        "cursor": {
          "ref": "aa35ea4f-76a0-404a-af4b-a2b93e65cfe6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eab7dfed-b911-4d45-a4d6-1eced40e1093"
        },
        "item": {
          "id": "5a400a13-7a6b-45fb-95f0-ce86a1032e6f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5482228d-6091-4beb-9adc-5132b4fedd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187a9b4f-8951-4d1f-864c-8a98ea0ec330",
        "cursor": {
          "ref": "fd80dd54-b477-4197-b371-8e96c99b0654",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c1eb3cae-407a-42b4-bfe1-b1adf17a214c"
        },
        "item": {
          "id": "187a9b4f-8951-4d1f-864c-8a98ea0ec330",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "15bcae53-6fa9-42e2-b7b1-882432736999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1bc0a8-461e-4d53-a68e-d3d31edd7c10",
        "cursor": {
          "ref": "00182d0b-47fc-4e25-b270-259399db6d74",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ee156893-6cc9-48f2-ac46-134d16f6e4e2"
        },
        "item": {
          "id": "9b1bc0a8-461e-4d53-a68e-d3d31edd7c10",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9d555ee8-680b-4d55-bf9e-1dbe188de8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090fb326-daa1-40e1-ad4c-2f5bff285063",
        "cursor": {
          "ref": "0c6b5d04-ab17-4721-92b2-74d3a7f30962",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d1efc68-dc4d-4fdf-827a-d522c9f21699"
        },
        "item": {
          "id": "090fb326-daa1-40e1-ad4c-2f5bff285063",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "abbd5e5a-a0a4-4e51-b3cb-e1d5b6f0fb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451b9b82-b1f9-4b93-a7a6-a522f9d65c2b",
        "cursor": {
          "ref": "178e6405-9c21-4666-8e89-9cd6c05bf1e0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad45adca-be3f-450c-b13f-a9f894e57940"
        },
        "item": {
          "id": "451b9b82-b1f9-4b93-a7a6-a522f9d65c2b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c91c4354-cc8c-46b1-a626-29db8ad16c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21e7365-a484-4114-950c-96f634c8fa11",
        "cursor": {
          "ref": "0a2ec13d-3252-42ec-ba5d-cc44d91e3a66",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b86a97bc-ad22-43ad-8082-1a64779e830d"
        },
        "item": {
          "id": "f21e7365-a484-4114-950c-96f634c8fa11",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "328fcf96-3a25-4135-ae77-86d3869641bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941c6ff7-cf98-41a8-ac51-e21f8a87f732",
        "cursor": {
          "ref": "e33d6191-62be-4a38-a534-957f68607679",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "747037d8-0900-4b99-ad97-303210ca09ad"
        },
        "item": {
          "id": "941c6ff7-cf98-41a8-ac51-e21f8a87f732",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ec5bd37d-b54a-48cc-9984-f514145fe4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86a44c0-e0f5-48e1-882a-ec3006987c87",
        "cursor": {
          "ref": "8cfdf348-8d07-4ac5-8dff-0219c936ea87",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5fb89fa8-0a72-4567-a066-dc6ba04e0c28"
        },
        "item": {
          "id": "e86a44c0-e0f5-48e1-882a-ec3006987c87",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "33e4c71f-11fc-4ab2-84c6-e5d1ae587255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acfd52a-6bf3-4bc3-aa9d-b95928c3c660",
        "cursor": {
          "ref": "3a0fad06-50c9-4f3f-84d0-08d1a648d20b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "df55abe1-8284-4606-a4b1-7d8044abd931"
        },
        "item": {
          "id": "8acfd52a-6bf3-4bc3-aa9d-b95928c3c660",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "76c37321-4a50-4023-85b5-c345903534fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618bef8a-5de2-4c76-b30f-f05895c82163",
        "cursor": {
          "ref": "e6d6b055-a785-416d-82d2-d553f5d6b925",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d0a9d01e-de96-424e-b91e-64631f15ed19"
        },
        "item": {
          "id": "618bef8a-5de2-4c76-b30f-f05895c82163",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3b32fab2-d222-43ea-8ebc-6f103df15879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c051665c-cc1a-45bc-b122-8521c136a8fe",
        "cursor": {
          "ref": "700aa5c1-3d18-4059-b4cf-a8a5e8b57745",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7751629f-7ec1-455a-8d02-91f2c1b81d96"
        },
        "item": {
          "id": "c051665c-cc1a-45bc-b122-8521c136a8fe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d9178952-ac76-4202-85ff-65cb8e48cc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fe0774-440d-4c5c-bbdf-6b3a58af71ce",
        "cursor": {
          "ref": "43c7b20a-79b7-4a90-b153-fafc203f814f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f4e410e5-ddce-4b61-9240-573ad2f5ed05"
        },
        "item": {
          "id": "c1fe0774-440d-4c5c-bbdf-6b3a58af71ce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "eb3ff620-eb87-4fbe-80a3-85d3e127b87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cf5428-46ff-4bd0-8ecc-89c372fcd1af",
        "cursor": {
          "ref": "b29e32f6-a98c-41ab-8e4f-8e977522e950",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dabab461-6e62-4176-8d3d-cbefbe270362"
        },
        "item": {
          "id": "b5cf5428-46ff-4bd0-8ecc-89c372fcd1af",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b02c51f4-7391-405a-a37a-8e46f7b2e669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2473ad4-9653-43aa-a1c1-efc0902c1b6c",
        "cursor": {
          "ref": "016822e0-d222-471e-9d9f-dbb43e673702",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fd771ab1-d192-4fd1-b2e2-de6f9c9b108d"
        },
        "item": {
          "id": "e2473ad4-9653-43aa-a1c1-efc0902c1b6c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d8f9a183-2b7b-4b28-a6d0-e18cf2013cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993e8430-01bc-4b6d-b781-f544f440f6dc",
        "cursor": {
          "ref": "f61cb37d-ad95-4f80-91fe-d23d9f4053b9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "866da04b-96b9-46ab-9a00-a30273970788"
        },
        "item": {
          "id": "993e8430-01bc-4b6d-b781-f544f440f6dc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cb8c1001-557e-4ddf-a92c-32cd86830452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7050a07-3fc7-4720-b8d8-e4ed557a9d5d",
        "cursor": {
          "ref": "941cc423-0de8-46e3-9225-5e08f3c48691",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cbe2a61b-538c-4db7-92bc-e6c19c502ba4"
        },
        "item": {
          "id": "a7050a07-3fc7-4720-b8d8-e4ed557a9d5d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "53e12399-215b-41e1-a5d6-9a8be272f3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ae477b-ef24-4c3f-8529-90125fea7a86",
        "cursor": {
          "ref": "910fc972-5a5e-471c-9333-358d4005604e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a113cb7c-e238-45f6-9839-9245b09a17ab"
        },
        "item": {
          "id": "80ae477b-ef24-4c3f-8529-90125fea7a86",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1b4e31ac-66de-4aa2-a40f-bf3b8827c9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379a3a01-6bb6-4736-8671-578a03e50244",
        "cursor": {
          "ref": "70eb737c-d0e2-4d1c-ac31-280d1985359c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1de1fd07-ff9b-4d10-9951-f59016fa0e56"
        },
        "item": {
          "id": "379a3a01-6bb6-4736-8671-578a03e50244",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "74fe4a12-698e-4407-bc12-73686791b6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834510f9-c739-47a4-ab48-fda9c7bb33c4",
        "cursor": {
          "ref": "4ab15f9f-fa0b-4c73-b1ba-cfb727d99512",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1fc6ec71-99ce-41aa-97dc-13f95c3c688e"
        },
        "item": {
          "id": "834510f9-c739-47a4-ab48-fda9c7bb33c4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a83a2a00-715b-4132-8be4-7fdd440239cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1743d6be-0f54-4aac-8c13-b9ff67c30d9a",
        "cursor": {
          "ref": "ce218144-ddf8-4851-a55c-3579f8846357",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9a9bc157-5b9d-4ac8-a50d-49533380327a"
        },
        "item": {
          "id": "1743d6be-0f54-4aac-8c13-b9ff67c30d9a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "020c2b8b-b19d-4baa-a58b-cf771b87bed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0fafe3-5473-4799-b886-56cce5333e4d",
        "cursor": {
          "ref": "e09f8e8e-cfdb-43be-a964-02ab48aaa084",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8e216a2e-2362-41c1-bc7e-4e44b5bb136e"
        },
        "item": {
          "id": "9f0fafe3-5473-4799-b886-56cce5333e4d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "85efac4c-f6b8-4e95-b3da-579c1d842932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bfe0fc-2b8a-43dd-b9e7-bf13aca14a75",
        "cursor": {
          "ref": "1004c342-8c96-44cc-8170-b5649084481e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "96420cd6-b918-4fdc-bdc2-d1cf9f9782a6"
        },
        "item": {
          "id": "36bfe0fc-2b8a-43dd-b9e7-bf13aca14a75",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d0688918-8527-4dce-97de-1e9941ad15ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e8cb4e-cd02-40b0-b313-fd7f07e6737f",
        "cursor": {
          "ref": "cbd11341-486a-4fb3-9adc-585f612e0159",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "069a4904-7fcb-4b23-9961-3fd2e93124fe"
        },
        "item": {
          "id": "b3e8cb4e-cd02-40b0-b313-fd7f07e6737f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "66b8963f-c844-447f-a3e9-f45ed27674bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cbf438-b499-4f4b-a28d-f98ebd2e4314",
        "cursor": {
          "ref": "2403f5c0-5006-4b31-b03b-b1488fa7011b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "daae26ea-2665-4686-afa2-59cb082faca7"
        },
        "item": {
          "id": "53cbf438-b499-4f4b-a28d-f98ebd2e4314",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "deb5953f-8bbb-49f3-ad30-4f56518196ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbdbd60-f34b-4a1f-b1bb-2ab9a7e6af50",
        "cursor": {
          "ref": "ccf9f9f9-4048-40c1-b70a-1cf65927b237",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1f2d9d82-ff14-497c-a251-e9e8881403c8"
        },
        "item": {
          "id": "acbdbd60-f34b-4a1f-b1bb-2ab9a7e6af50",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "17cb0dee-c6f8-40b2-8cb7-cc2b44843a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9ff1a1-c49b-40da-abc5-f8579d0e7f50",
        "cursor": {
          "ref": "89f56af6-dd6d-49fc-ac27-54d7ed694a93",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "22464bec-7c62-4007-95f4-a23ef9e6b7e9"
        },
        "item": {
          "id": "5d9ff1a1-c49b-40da-abc5-f8579d0e7f50",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc90fd0a-8c0c-4a20-9660-7d9cf40a06f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f43f15-a341-4870-9a16-9a30bc92fe15",
        "cursor": {
          "ref": "cb3dee39-483e-4b18-9650-9bb29fce769d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "358721d0-a5d3-454a-9548-df0a61b66c89"
        },
        "item": {
          "id": "18f43f15-a341-4870-9a16-9a30bc92fe15",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dced00c3-bb9a-4d9a-a9e1-72f7f4b583e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7a3b5f-89a3-4a90-a269-d4edb1d37e26",
        "cursor": {
          "ref": "0afb6096-60c2-457c-8de4-d73e8074fa2e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "165096fd-ea17-43f0-9183-ef854a13c88f"
        },
        "item": {
          "id": "0d7a3b5f-89a3-4a90-a269-d4edb1d37e26",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b6ef35e-7eb7-4526-89bc-9caf023ddc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c3576c-06e3-449a-afdc-4fe172bf6752",
        "cursor": {
          "ref": "ccf9b3ee-91fc-4f12-a15e-3b5ef2e27dc9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aecfd119-6ea1-448b-a074-69362a40fcb5"
        },
        "item": {
          "id": "55c3576c-06e3-449a-afdc-4fe172bf6752",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7ddef22f-c82b-418a-9a22-9b7c1e6c3f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65ad954-c8c5-48f6-8a35-05fb4e23e150",
        "cursor": {
          "ref": "c6a48a4d-a6cf-4095-ac0d-6f0b9f155f8d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6371151a-ebf4-4913-afa8-4a89de464691"
        },
        "item": {
          "id": "f65ad954-c8c5-48f6-8a35-05fb4e23e150",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "14f29297-7395-4a10-974a-28605de7d2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcea2ca-2b30-405f-91ba-8e8c355f9af0",
        "cursor": {
          "ref": "f1f98f8a-a592-43b3-8d62-9c7c10db10d1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5cb1a9ac-73bb-44ce-8b1f-b44332c89baf"
        },
        "item": {
          "id": "bbcea2ca-2b30-405f-91ba-8e8c355f9af0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "632550a2-3c2c-48d7-a2bc-f6a6b87f4962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9ffb37-65ee-42c1-9222-204f5916174f",
        "cursor": {
          "ref": "e00a29d6-a376-4753-b060-de0416502fd6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "093ce05f-f3a6-4b7b-a487-8fe92ec73ec8"
        },
        "item": {
          "id": "5f9ffb37-65ee-42c1-9222-204f5916174f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d88f53c8-d9b7-4165-8ed0-936f65deca32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd298275-bcf8-46cd-988f-23b5b50238b2",
        "cursor": {
          "ref": "88662aeb-caa2-4b02-a120-83906502cbbd",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7a3a5163-35fc-4d3b-b6e2-9b383353e293"
        },
        "item": {
          "id": "dd298275-bcf8-46cd-988f-23b5b50238b2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0c0b10ef-956a-4cb3-babd-ca5892b1e187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d57b817-77e7-48f4-9dd0-b8837815123a",
        "cursor": {
          "ref": "788b2009-b869-40ae-bae5-1fe96da6c738",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d30cfb6-c459-490b-88a8-a8887f91fd0c"
        },
        "item": {
          "id": "0d57b817-77e7-48f4-9dd0-b8837815123a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f82f2705-60aa-42e8-8abb-f2fd48bc577e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aef1c0-ea19-4a39-bcfd-4ace50bfc953",
        "cursor": {
          "ref": "f8dd3201-5984-4284-8bd3-9e9cf63efe40",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6020f629-5c9c-44b9-b2c3-eba9831eb67d"
        },
        "item": {
          "id": "74aef1c0-ea19-4a39-bcfd-4ace50bfc953",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cff06621-ca02-4c34-92cb-ab63b40ec5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996a858a-0ece-435d-b1d1-6100191e196b",
        "cursor": {
          "ref": "ad0f9fc3-4e60-4c0c-97c5-0b119801e04e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "21be676e-f594-4b13-aad1-730633e8803f"
        },
        "item": {
          "id": "996a858a-0ece-435d-b1d1-6100191e196b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5857bcf-fa55-4dfc-851c-e65bb88c4527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7512f1-3855-458e-9a01-89f805aa8a85",
        "cursor": {
          "ref": "7e6cb375-4ac8-48e4-b558-6fd3a925bafa",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0e63b555-3ca9-4821-a77e-d2ae0bcaa853"
        },
        "item": {
          "id": "4d7512f1-3855-458e-9a01-89f805aa8a85",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5ba25aba-9c11-4f7b-ae49-d03cd3b2dbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e2316f-225d-417d-bbee-0b0e1bb38f93",
        "cursor": {
          "ref": "d397be43-3ebe-42a4-bb6e-f2c881502485",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0f1cf8be-7901-45e5-96d0-021fc6120886"
        },
        "item": {
          "id": "93e2316f-225d-417d-bbee-0b0e1bb38f93",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af3989ab-17f1-425c-85b0-935d9b2bcae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f28236-725f-4af6-8d4e-65a782cecf8e",
        "cursor": {
          "ref": "370970ef-a6b9-41c8-a125-533ff63913f7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9d69cc00-631a-47f7-a19f-53e24f1d9c67"
        },
        "item": {
          "id": "22f28236-725f-4af6-8d4e-65a782cecf8e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "832af4eb-cbe1-4b3c-bdc4-555b1ffc5de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79a63ca-5994-431a-8981-3c8b35e99c3c",
        "cursor": {
          "ref": "34ec4fcc-1770-4cf1-884a-5b4dfdcd3102",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8063dc1b-7568-49f7-9b8d-456a47451a8a"
        },
        "item": {
          "id": "b79a63ca-5994-431a-8981-3c8b35e99c3c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cdea454e-cf6c-49fb-954a-d9b5cd250efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc1a2ed-7f86-4491-b6f3-77a96a6838a6",
        "cursor": {
          "ref": "230d053f-fdb6-4f7c-9935-c214e5e45c81",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dbc18973-cb9b-48ef-9932-ddf546b59e5e"
        },
        "item": {
          "id": "ffc1a2ed-7f86-4491-b6f3-77a96a6838a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "afd39fc1-bd15-4e37-bef3-59539b0806f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda3c104-ff0c-4504-a744-7c97a4fbe526",
        "cursor": {
          "ref": "af0b3f9c-0686-4023-99ac-623095d88ef5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "032be5d1-3847-48ab-b6ef-268f457d4799"
        },
        "item": {
          "id": "eda3c104-ff0c-4504-a744-7c97a4fbe526",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e4da32dd-24be-417c-9fb9-a7ff1da8e742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c1003-e9a2-4aed-9503-667b120403b4",
        "cursor": {
          "ref": "153900dd-48dd-445f-8f3d-16838fa7ee7b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "05e5827f-607e-4302-b9cd-f3c832246ce3"
        },
        "item": {
          "id": "740c1003-e9a2-4aed-9503-667b120403b4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "901151a8-7bf6-472e-b193-1d605a8b2c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5834fa00-60d3-41f6-a18d-05f4bc32daad",
        "cursor": {
          "ref": "203964b2-365a-4712-85fa-b1b29754fec7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2f968b38-7ead-429b-87d5-c42b0a9114c4"
        },
        "item": {
          "id": "5834fa00-60d3-41f6-a18d-05f4bc32daad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "136bff71-8ab8-434e-83e2-63d7e2140b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7df4b-0e2b-490f-8a0c-1c591891da64",
        "cursor": {
          "ref": "1e8986de-b6f4-4bac-be13-924359c0e01d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b306aba9-a942-4529-aee5-5407931c1095"
        },
        "item": {
          "id": "12b7df4b-0e2b-490f-8a0c-1c591891da64",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d639604d-8155-41f9-93e8-3079f615b84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54cc889-ba2e-4324-8b6d-025bd76cf42f",
        "cursor": {
          "ref": "7c713633-6fbc-484e-8416-63d318e1519c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1f6a582c-d854-4426-bedb-d34a436b38dd"
        },
        "item": {
          "id": "a54cc889-ba2e-4324-8b6d-025bd76cf42f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cc42509e-bfb5-4a20-b3d1-e9fa0939ea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece3a6e-a74a-4592-a09e-7d07c8c30d0a",
        "cursor": {
          "ref": "0d003243-51d6-4f4f-a907-bf41f58ffa44",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ff01565d-90cc-4684-9470-19c4b012ad2b"
        },
        "item": {
          "id": "eece3a6e-a74a-4592-a09e-7d07c8c30d0a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8c97205b-2dba-4a6f-b691-1ddbd756a489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aef4f9-cc45-47bf-9758-08f6adfef2ee",
        "cursor": {
          "ref": "20f2f493-77aa-4241-883a-68d39d6915d4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cc2a4b60-6064-41cb-9e1b-e17f2d88d99f"
        },
        "item": {
          "id": "d9aef4f9-cc45-47bf-9758-08f6adfef2ee",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "414791be-9781-4e5e-8a9f-58497dc350dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1a465b-40e0-404c-b17c-49aff1abbbb4",
        "cursor": {
          "ref": "d730a5ff-1202-4c4b-9fbb-39df2a6d2b5f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2cdc99ab-a2a7-40ba-b9b1-0ee0b28e81e1"
        },
        "item": {
          "id": "fd1a465b-40e0-404c-b17c-49aff1abbbb4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "139eede5-3120-4f66-b31a-ea3709458839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee8f914-1dae-4e38-b055-aa65dffda2f5",
        "cursor": {
          "ref": "d68e139f-233d-4f91-9c3a-52e4dbfdc7ae",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "880e3335-faf1-4956-8dc3-9b98c0090228"
        },
        "item": {
          "id": "4ee8f914-1dae-4e38-b055-aa65dffda2f5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "97ebb290-5207-468a-a7d7-de4559edab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eabf6f-82ca-4413-a44d-1d09a446f151",
        "cursor": {
          "ref": "8490d5d2-3125-4300-b5e8-46b68be08391",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c1c24d20-bf66-4648-9ea7-56676fe2e26a"
        },
        "item": {
          "id": "a4eabf6f-82ca-4413-a44d-1d09a446f151",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "384cb7bd-bb6b-4e0b-ae0c-3b6ec287d7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b30321-93f8-49a6-9f7a-17e11df74163",
        "cursor": {
          "ref": "eb6f891d-3020-405b-8f48-50c296001768",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4679b905-1739-457d-b054-97de0701815d"
        },
        "item": {
          "id": "b3b30321-93f8-49a6-9f7a-17e11df74163",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "31bda0d3-77ce-41b5-9dde-2567b258aca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70072ef1-2474-4cac-8c7a-ec019c7f5707",
        "cursor": {
          "ref": "7507cf3d-d0bd-42a4-a3e9-4d6f320a00ad",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6954ca39-7fd6-4527-9529-ff55a7f5e006"
        },
        "item": {
          "id": "70072ef1-2474-4cac-8c7a-ec019c7f5707",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bf2d4149-a5ce-491f-9a05-46b4fa98037d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557acdbe-548f-4f16-8f1d-95503a241aad",
        "cursor": {
          "ref": "d778cbc1-dd71-48c2-91a6-987e2973faa4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "55e5c9db-5648-4514-bca1-f33caac1da46"
        },
        "item": {
          "id": "557acdbe-548f-4f16-8f1d-95503a241aad",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "430ff7aa-0ac2-4252-8b1d-7449d5d0e16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf53858-0716-4f69-8916-172cdc068f28",
        "cursor": {
          "ref": "607693e4-978d-4c11-8629-fb45c90ea14d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f8c0b5a1-3ce5-4ef9-ba8a-9d00753ccf4d"
        },
        "item": {
          "id": "caf53858-0716-4f69-8916-172cdc068f28",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f35b3a08-ab7a-4021-bb19-f70f6ef03785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebe69d0-2451-4c3f-a5c5-34321b8b7d4c",
        "cursor": {
          "ref": "f976e031-360d-4bc6-b924-c789a1e01cff",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e9c637a3-40d6-40d7-bbf5-4ba7c017de64"
        },
        "item": {
          "id": "5ebe69d0-2451-4c3f-a5c5-34321b8b7d4c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f195e0c8-cdee-405f-8179-cd62e6a6a421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8087d389-3caa-49f7-88e2-486bcdf5ddd6",
        "cursor": {
          "ref": "c2313425-412d-4520-8aa2-7bd085f4da42",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "eb75cab7-3bf7-47f6-a47e-f4a1fe78a7a5"
        },
        "item": {
          "id": "8087d389-3caa-49f7-88e2-486bcdf5ddd6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9807d14e-6c73-4839-b0cc-a548a27f9686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df022024-643f-43e1-af3c-fd88ac279873",
        "cursor": {
          "ref": "d9468d20-6dd9-4d33-9401-f18daa3d6e5d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c3f8b2ae-9abe-4c6b-ad71-48a85adea7e0"
        },
        "item": {
          "id": "df022024-643f-43e1-af3c-fd88ac279873",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a65822a2-7e4d-486e-ac86-8577ce119fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c613749-92bf-4a73-8fed-a017a9a4bfd9",
        "cursor": {
          "ref": "387399ae-376f-4772-9696-71bce26374f9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "be05fd13-d9be-4d04-93a0-74afaf7caf31"
        },
        "item": {
          "id": "2c613749-92bf-4a73-8fed-a017a9a4bfd9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7f58a8bd-dee3-4ab5-a602-81c18fcafe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40463ff-fa28-41be-92bb-ddd1fb09f260",
        "cursor": {
          "ref": "a8df9c0d-d382-4e89-9c90-1d3562ce3c5f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4929f9a5-8238-4ed1-a790-e39e28dacada"
        },
        "item": {
          "id": "e40463ff-fa28-41be-92bb-ddd1fb09f260",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "468c4e6e-e95c-4d3d-8d8a-ee7972ee0b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81888e9-1560-4564-94f7-90e93222a5d9",
        "cursor": {
          "ref": "1c96d4e4-971d-4f08-bd5c-c7e58fb2b9d3",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "08656968-9dcb-42ec-8e15-b3734e3ddf06"
        },
        "item": {
          "id": "a81888e9-1560-4564-94f7-90e93222a5d9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b64496a1-3f10-48f5-9544-dc95715821d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33608fc-0770-4d01-bc42-fccd5c7e5308",
        "cursor": {
          "ref": "9e7503ab-14c4-4c54-a7ec-049cc1a6e3ff",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bd187c51-c6d3-4797-b867-063476eadde5"
        },
        "item": {
          "id": "d33608fc-0770-4d01-bc42-fccd5c7e5308",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5d80294c-bda5-4313-b733-af9e3afd68e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7d2ca1-f0ef-46fb-a837-a83985b9117b",
        "cursor": {
          "ref": "9d47a678-bbd6-4b73-8574-e953625cb434",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1c2aea56-83a9-4248-954a-a71a3723f878"
        },
        "item": {
          "id": "6e7d2ca1-f0ef-46fb-a837-a83985b9117b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4f90e552-a766-4aaa-92d8-1abfd394eb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4e800a-f7f7-476c-87a4-2ea9d00672cd",
        "cursor": {
          "ref": "afa07486-405e-4725-9e6b-986bd5bf8ff4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "971202b4-2d65-48c9-94a5-167db91df7cc"
        },
        "item": {
          "id": "6f4e800a-f7f7-476c-87a4-2ea9d00672cd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eabf959f-272d-4bb7-839f-ba7008b04fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1221a-c32d-4701-a42b-ae1e356d87aa",
        "cursor": {
          "ref": "0eaaf69c-f0da-4edd-9352-0f9c72fc3213",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1798f9ba-1b75-4354-badd-96dc8fa2c188"
        },
        "item": {
          "id": "9ee1221a-c32d-4701-a42b-ae1e356d87aa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92155191-d444-448b-a2a0-1530a6f9b805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ce6f7f-bdbc-4938-bf05-7ba2c743ef1e",
        "cursor": {
          "ref": "a7237abc-aaf4-4d76-a123-e2e4749047e2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8515d26e-c27e-427c-9afb-73f715a883d0"
        },
        "item": {
          "id": "87ce6f7f-bdbc-4938-bf05-7ba2c743ef1e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e2c6c56d-b313-444c-9bd9-2f2d80808f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b32c574-b892-4ebb-ad25-9531303a8ff3",
        "cursor": {
          "ref": "602c9ab6-e430-46bd-995f-dcbd219cef49",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "39182924-893e-4cfc-a94b-b93f14a54e71"
        },
        "item": {
          "id": "2b32c574-b892-4ebb-ad25-9531303a8ff3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a15d4467-5282-481e-8fa7-e4346a45d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0e8981-4e5b-449d-8a10-76e609ebd88d",
        "cursor": {
          "ref": "695300b5-beb7-4bbb-b21a-7255e509be5e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4561de08-f61a-4068-b09e-25d02c6de8c6"
        },
        "item": {
          "id": "7b0e8981-4e5b-449d-8a10-76e609ebd88d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e10a336b-93f1-4919-a113-4ab34f4bac55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6bd358-508c-4c5f-8909-c03d68443c9f",
        "cursor": {
          "ref": "1a564a01-5f88-4681-9434-eebf56dbaf35",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e4881e1e-595b-4eaa-a90b-0f21cab0929d"
        },
        "item": {
          "id": "bd6bd358-508c-4c5f-8909-c03d68443c9f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "45238762-d80f-45c6-8d68-6b418c449c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d86ee7-274b-4d93-8d02-6b85c91cc656",
        "cursor": {
          "ref": "b2873aa5-7660-4c4c-8da0-d338993d6507",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5cc4a37b-1494-4443-92b7-74e730833e81"
        },
        "item": {
          "id": "b8d86ee7-274b-4d93-8d02-6b85c91cc656",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "978fca5b-b99b-42f8-bf05-57077a81327b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f785daa-84e9-4864-b3e3-56e972212689",
        "cursor": {
          "ref": "3b58664c-0253-4069-b37b-994483e19d0b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4b80bba8-2865-4f45-abe6-b72a091463c6"
        },
        "item": {
          "id": "4f785daa-84e9-4864-b3e3-56e972212689",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b2c6b090-eb10-4927-a421-3243bbd26b7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07faa3e-7dbb-451e-99bd-b31aa1435003",
        "cursor": {
          "ref": "da440978-594d-436f-a36b-4b72f6abbd11",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a2777c9f-38f4-4272-9df6-5da301bb6fe9"
        },
        "item": {
          "id": "a07faa3e-7dbb-451e-99bd-b31aa1435003",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "70214f7a-4245-4869-a5ff-ad064c427489",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "00970dee-bb97-4e63-8adb-5637f9cf1cd4",
        "cursor": {
          "ref": "df55bef8-12f3-440a-8f7f-665aa373c442",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0609062a-337e-400c-b268-f73a31911118"
        },
        "item": {
          "id": "00970dee-bb97-4e63-8adb-5637f9cf1cd4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3e83c53c-4ebe-46ad-945e-e9053e9f0899",
          "status": "OK",
          "code": 200,
          "responseTime": 1357,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a743fab5-341e-4a17-9315-9dbd7798e48c",
        "cursor": {
          "ref": "89a21c0d-05ab-48e2-a582-3988239027e3",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "77cf7f4b-c96b-4dca-9435-5ee538692427"
        },
        "item": {
          "id": "a743fab5-341e-4a17-9315-9dbd7798e48c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "09a61f04-1620-47bc-b5ef-8ba6fdaca19c",
          "status": "OK",
          "code": 200,
          "responseTime": 1248,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f341d4b6-b2ee-43b7-9996-32825ea32445",
        "cursor": {
          "ref": "1c3af4a7-3f62-49f9-9aeb-f0f770a57472",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4273fd65-19fd-4f89-9ad6-e4058225631b"
        },
        "item": {
          "id": "f341d4b6-b2ee-43b7-9996-32825ea32445",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47858c7b-ee85-4d8c-bb34-7d64584a0d99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f341d4b6-b2ee-43b7-9996-32825ea32445",
        "cursor": {
          "ref": "1c3af4a7-3f62-49f9-9aeb-f0f770a57472",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4273fd65-19fd-4f89-9ad6-e4058225631b"
        },
        "item": {
          "id": "f341d4b6-b2ee-43b7-9996-32825ea32445",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47858c7b-ee85-4d8c-bb34-7d64584a0d99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bee550-6674-4168-bdad-d4d6ad41b80c",
        "cursor": {
          "ref": "d629e515-f36f-47bb-9253-613e5d631b7a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "06f7b638-1abd-4596-b163-5e1458827276"
        },
        "item": {
          "id": "82bee550-6674-4168-bdad-d4d6ad41b80c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2b1acbf5-9fe7-4752-9b16-21eedfee8231",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b0da8f-ae1b-48cd-8ac2-70669123e3c6",
        "cursor": {
          "ref": "c9e4a3c3-2304-4d2a-a3e8-1f8f718a817f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b26743a2-0a59-417e-a31a-5c9d03c757b9"
        },
        "item": {
          "id": "20b0da8f-ae1b-48cd-8ac2-70669123e3c6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "19dbcb88-3de4-4b38-83e4-29b18f5c1232",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}