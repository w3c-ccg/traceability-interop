{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f6b2c418-f57d-4e70-9fad-b4072b616304",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a0309e50-498b-4ff1-bc96-71da2067f429",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8506b2cb-69ec-421d-a281-0d1ab010d7bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b47af3c8-1855-46f7-9f2d-a25239c4ffcc"
                }
              }
            ]
          },
          {
            "id": "0b30c1d0-d93e-4137-a609-db1b0e4fc9d2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c15a98d1-4aca-4f94-8ca3-37e32b5ec083",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "15ce854d-11c4-4155-82e0-06370a1ffe5d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d7e3553-0e9b-4b8c-82ea-e1eedb7e42d2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "020ef48e-7bd1-4365-8af4-5c54cfba9b8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1d1841b-69cf-44de-8666-3e1325c8dae6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "627d78be-5082-4f41-9271-e985f56153b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f25091d-b3e0-4d67-911c-1ff6f9e23a92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04b7e387-e22d-4b8e-b291-6211beeb2fa3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6d75f7c-605e-40ee-b732-02f9b4f2340e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62015d04-37cb-4843-b436-fe09f690c010",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51572aa7-e85e-4990-a8e5-c228a8133c45"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2901124d-bd1c-4bab-8128-6a29f05d700b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1e8f5618-cd07-4ff1-9e96-b5afc17e0ee0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f49995f-6050-4000-b628-f41b55aecaab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1b3745d-122e-4de5-8708-4f13f51dbd52"
            }
          }
        ]
      },
      {
        "id": "5e820a4c-0192-463b-b04c-47650e345165",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a6dacb35-9b34-4f9e-bb65-47c1011e775f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbc15fb9-8f55-4f73-a621-f0505b4523d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e255963e-5ee8-4306-bfb0-fbf1244d4d44",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e60bc3-98b6-4733-9d13-25733aeb167b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a437da9-0e81-42a4-9f6a-db4495031a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25a2869-2c38-406c-811f-dbdd40d2647f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d87cb2-06be-4884-bcb6-7875c7ccabc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c833ef09-18f2-44e3-8b03-fb5023157caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dfe8e0-f0f1-4438-8659-fe54e64d35f5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b20baf-d42b-4c1f-8fcd-b8f64055b46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48fc85ef-8c8a-4737-a084-6ecadc459697"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98b94b7b-e03d-4c18-838f-5efda4a9fa56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e64c2a06-64ed-414a-973e-def598952882",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371394c8-4dd2-4d02-b3ef-b6491ab88c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beac06f1-4c53-4e00-a05c-b8c12524dcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595d37cf-bcdf-4c83-95e5-0743c4109797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b2c249-834e-42e4-a639-1ffb4a32d946"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0002f217-3c29-4747-b8bc-60a600bd991f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d822717-8323-42e1-a99a-9ee0a594dc66",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77024749-6a85-4ffb-894b-e1e5ea628b42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f81484f2-e8cf-4040-b348-534efd3c7e07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "223e2808-b228-469e-b373-89582d099c27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "89edcbeb-f835-4cca-900e-f29c0d399fba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d209188-047b-4e92-ad2d-fdc80166b053",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bd67525-ad60-48af-9b5c-4fe14ecb0236"
            }
          }
        ]
      },
      {
        "id": "56d66dc5-1fe9-4682-8bed-d764d7f07583",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "82a5b208-e92d-4c0a-a8a3-13216d314c81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9ab0939-ec39-4a4a-88b9-99d4fb4b5fb6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9ed03564-9f9c-4a6c-a7f3-7a723063a3bb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a7f14e-7245-4776-8952-fd22cc43a345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa20f35-df63-4f1a-9e3d-f81db3c580a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463f8a74-539f-43a8-a9aa-c7bb88674a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae0943f5-20c6-4f80-8550-123934422434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39cd151-9664-4493-968a-7d787c031015",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c978bce-6b79-411a-a7dc-f36694b12692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57e5554-6339-4977-b1c6-c1e4d74c798c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f3afcf-f990-4920-a47e-066939d96571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bca8ca41-f0c3-43b0-b93c-71d306a25bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a102a956-03ba-4adf-992c-79f8abd602c9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecbc026-371e-49e7-bff7-eab114932309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320f6144-606b-4189-a958-59eeed124ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82e6b33-1e8b-4557-a78b-21eaf31b793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "021f75ef-2777-4b4f-b18e-23b22a72c1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ad7388-23dd-473b-897a-9719097a1932",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3978b961-3d40-4667-931d-35e380657e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bc8753-bee9-45c7-87cd-c2aa7ebb0026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38e25a2-1cf7-4917-ae70-862ce17cb573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9341ee2-9b94-41b9-b15e-abaa99c7465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a2eb28-6b25-4bae-92d0-33cd9ca0634d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a81153-91f7-4e3e-8f8e-48547ba14079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23057a9-2c5b-4b34-9141-172df2672057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c0a0a9-4c9e-4903-ab36-328f808a707f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a07b228-435b-4082-9a7c-543fc0bed708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59e0268-e83b-4d15-8f38-9a7317039ff0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b533e2a-9d29-4529-80a7-6895dd32cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1289f414-5975-4a6e-865d-126262ef656d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fbdaef-730c-4173-af50-c105b75b79b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d770fa6c-f5c6-4226-9d1b-a126033ab73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8026db-b3eb-460f-bf91-b8a79ea5d338",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2424dcbb-3aa1-4ae2-ae5b-81c0f407f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8805a4-5b1d-4fe6-95dd-183c116835c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6ce9c7-d106-4959-af5c-af21e0d8ed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c4f4605-d3a9-495a-bff2-6050e0e0ff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14196abb-5bcd-4c67-84b1-913dfa934d07",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d861e36e-4b43-4906-928c-eeebcd64c733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19b8079-69fc-46d8-b60e-22e6512b8909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b437af-dab1-4ce4-994e-131b7ea65985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16908ed0-e0a2-4026-a8f9-7f2e23df8ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5546fc6-4113-4a46-ac94-166077bae155",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fef3100-fac8-4f26-920a-5c1c4c43ae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1b9950-5567-4ded-b305-3ccf996005f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d2fc3e-bf65-4f9b-a1fe-dbdfc787a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "440a01a0-f121-4d4d-a7e1-25e68d952699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a9e67-881b-43a1-aed5-ea9d1adf48b2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2c7766-2095-43ad-9fcf-3924572953ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a104ae5-9b37-46aa-b8b5-ad215304300c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75030b5-8051-4f81-9eaf-3556c436c430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "508cf222-5c26-46ce-8464-b798b3af0bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3d4e98-ab40-4122-ba61-eb775259f19a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690cd64c-4d38-4a6a-b06f-7a5cb7f9221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2afd37f-addc-45e5-adaf-25fc22ba4240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9438cc12-5a11-4d60-8137-616c0ac39730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed237277-f4c9-4da6-9012-853d3f21d5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f419b2f1-a377-4da3-a3aa-8a7d460648bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df31870-a9bb-4024-ba60-ecc8ca7a13cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4c1bc8-9986-4585-a806-ba88cbc1acd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3720aa1-f3aa-4487-ba36-c0a30731aa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4469a3d4-c2d1-4f2f-8ded-2cf681a8144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c199514c-7406-4cec-aaeb-41a457ad95eb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ee78f5-4df8-463a-9bbe-315242faca41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b614c5fb-d81a-49c3-8387-246907f45f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d739a6e3-83d4-4fe7-8054-2566049f30d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82fda001-fa76-43ee-966e-d8c0074a1d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cab4d63-4e0c-4b1f-af2b-0f1089fdb159",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf7145e-e4a1-456f-a2f6-8dafcb867723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234aa171-396d-44b0-b488-3e75e1a25a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7597b32f-a627-42a7-bac0-2bca767e94a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8041e477-cfe2-4357-b937-ffb5011df831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c755676f-ebc7-4b5e-a148-1dbb0ab51263",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48daa5cd-6f37-4b80-9ed7-1d3760ee1a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1679db-38a3-494a-8153-561b562b6557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73df4811-e3f0-4736-a199-eb4155bff788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f056b5f-e9ff-4899-ac49-7fbea68c0ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c67d6f-ae89-49dc-8830-e78cb5b86fb6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8175eb-fc19-49f3-b6ea-0fd6e6b22486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2127ee53-1005-4fe4-9aa4-99d3fd1374b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f95a4a5-3e8b-483d-8a9c-b6d376f01b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24972c12-88d9-4014-9a7d-1b951a93c9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75732833-bb4b-4bf6-b71f-3277d47307da",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170fc837-eeee-445a-844e-b71157425bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee34359-7460-47f0-9afd-e308051ae8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4c308e-f556-4b11-bb44-39bda1d314b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e713d723-549e-4244-bc4b-4cd7d6cf624b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478d116b-04e2-472f-8219-a7148a3ee043",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf22735-1650-432f-bde1-0e17289fae09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba845dd1-f746-4a25-8336-936b454b84be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f90a6f4-4e51-442d-a8c8-c4d8a7c16991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80001408-a47f-41ef-89dc-3499dbd1fb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769772b0-dc4a-4331-88d1-30676e57566d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27b3ee8-a396-48b0-b125-135eb06c0270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef54e4cb-a0ab-431d-bde6-a37b044a8a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad69cbb6-387e-4de4-8a02-172de077cd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "407c64e3-53ff-4274-9091-40a7e7d8d3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511b000a-97b6-41e2-b075-a231aba54492",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca37072-958f-4b70-be5a-8f97c125d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a046c75-428d-4dc9-b66d-d3cb7e6b060b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37241b22-1828-4df2-a740-f830f4fe4dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e909ef6-6606-4bc2-b863-dc88fdf8373c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019e63b5-96be-41ee-a7c9-d192c9805acd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b705512-12ec-4935-a0d4-82fe905ac5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329f3b9a-4c56-4b58-8637-7edfeb7d1036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6492aae8-3c96-4586-b7a5-18843d7d1734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5af38ee-0c83-4bb4-b432-a318f3344760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4408cddd-6354-49d1-aa5e-cac246606ce6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ccd7fd-8d43-4970-8d81-68b821990a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6cc938-59df-4825-a112-7b1e2e97634a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b26b9d-42ec-4069-8588-9e57842450f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "987659b7-4c0e-465c-9433-64e812a60add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88ed32-cb15-4c30-a473-73a4f443ca68",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249a9f3-cc22-461a-b6e8-4f75e67a8708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efa74bf-1446-492e-8571-b83b530ec426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dcfdd6-bcbf-4182-8c10-76d913ccd512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5aa549-81f9-4d9a-a2cd-10a3ee96efdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec10468-02d8-4bd3-b92f-d5882eac7112",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d35dbb-6e79-41ed-ba4e-2a2175cd6f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afc1efe-ede4-47b1-bf5a-a4a774ce4c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8e09e8-7e0e-447a-9a51-1bb5bb72e922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cca73af-242c-4d0f-bc28-3403c91a8c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4687032-4494-4ddd-8f0c-e5450de90046",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68b5f1e-a1bf-4e8c-bffb-84aec8698d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d0c270-19f2-4dd7-bafd-d3f542b90749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26adbb5a-2cb7-4ca1-91b9-3125bd6494ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "954e49cd-1778-4651-b849-09b371378acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c2546e-e4c7-4353-ad61-24dd7304f8a0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3139dab-acba-4f5c-a5a4-4d9383666d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108eb0f3-83a8-4d17-bb59-1d3791874ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad87bedc-2907-49a0-b9e7-c3f44a7a1739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4766fb61-42c7-4077-a9a0-c9f5f9740be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35596bf9-6206-42e9-b4d0-166f459c2176",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371f7d5-82cd-41a6-aed0-3f1b6d29e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66096c95-d373-41c4-977d-2f7f7a0c7277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8a6d78-eaf9-4b78-9bb4-c85d768aa6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b6166b-1dfd-4ee4-a7e9-8b4b56e72ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2890862d-f528-41cf-944d-196f340e0dbd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d290f830-0ae2-476d-b445-0c3d0018b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5a9a28-e299-4778-8567-84250aab1651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b219c91f-00cb-45e5-83a6-7c4ff0ed1774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4890043d-362e-4941-87a9-67328e9e725c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba99ff34-7909-4105-ba3e-5f782112340f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2fa24d-0021-4b66-be74-0c0b14a48900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda5908a-d959-4535-9698-269ca55c129c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd421be6-66e1-45ad-9656-58b9e9027922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2aa599e-e40c-490f-b2d7-6091aa2ef8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cfc873-dce8-4fff-a806-4a3e9050cece",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7be65d1-9ac2-40bb-9f85-744b02ad91d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6083a19b-d56c-463e-a29a-cd66bfc6da03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f27c2-87d1-42de-b939-cc562f52fdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f23803-d2b7-4e5e-afd6-f583c2cebd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55cac81-2c6a-4c8d-969b-b7e6a855d285",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b71a12e-35ea-4f92-a0ec-2537fb5e2a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9266c1b-257d-4dad-a7cd-6e331184d6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7695cae-c1dd-4f00-ac7c-798877c3ce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fc745c-a345-40f4-b1ff-0379a926bd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1a010f-4224-4795-b904-279a57eeac8d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b2727-6d54-4e86-a769-76dbda4caf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e421547b-08d5-4591-8841-7122ba4db89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5dea9a-debc-4244-8b12-b1412d4974e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5827ad50-8c73-40a7-9d09-d8c198f3f4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f8e516-85d6-44d3-8a3d-54b544571ca7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6b6d72-eb8c-442f-ac98-ed34161fe430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a48e050-d923-47a0-9af5-aa099443b304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c046d73e-3ed2-44a5-bfef-92cf2ca5d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "379de38e-f24b-4d43-8067-54a5143074e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f808e4-7ed2-4d6e-8d83-db518290bbbf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dd8589-8021-4876-af1b-76534c1313c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd8bdda-cf32-4d17-bdac-4c4f11cb3824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43007f67-177e-4273-bd90-6bfb420ff35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabf9ee2-02d2-4cfa-9ab8-ec7463c3ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a740342d-323b-459d-8ca2-ccc6ca07a0f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a2000-cc09-4062-97c6-659b84074453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cad767-c6fa-4db9-a3ce-f0c8afdd1e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b22d62c-ea59-47bd-b322-d80f688442b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "20ab1ed7-fbf8-4c45-b336-c75bbf62d7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949c7c66-2436-4253-baeb-b127d8fae529",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e5fafc-6bd7-47c2-b515-78ca9282f40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acaa17c6-6c22-4c31-abb8-fe5992095bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a77e352-26d6-436e-ad05-5d0d9fc4b521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "210a32fc-220c-4cc9-aa7e-cdc98fe3ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a735900-9862-432b-a755-5d5de6d83ffa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34059e0f-ea27-4b25-b04b-671e45aeebb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58969610-836e-4528-a3c8-735f8db90dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f7203c-32d2-4694-906a-647924807b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42a4fb9b-1d03-479f-8eda-af6136712783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0132d5a3-8b9f-41cd-9da3-73ba57f4df46",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b39d58-f5a1-420e-bb3f-d6f5ef6edc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91100a9-a407-40a6-abb1-724b8c256ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd1de6d-ede5-4a7d-837b-b2a3f94800b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62fef61c-62ec-4cd5-a413-0cc179414629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fc0e60-3dc1-48a7-8e93-783b9c4cd65c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0572800e-5133-46a7-a511-afe89e408f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2ea8f1-4c07-4441-9a1e-5e76140e4fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b9e526-ec0d-4378-91cd-ecdce2e92baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "191150ef-98b3-4074-9dfe-a163c44f42f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308ab8f8-ed4d-4921-bd1a-2267b77b0291",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a49cf6-0a95-4ab6-ad0a-058dcefe751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771b4264-af4e-4263-9bd6-1fcaf8d56b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf75b996-b364-4810-ae79-8106433a0c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c81bae3-1175-48a3-91de-3eb1bd21b8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d96561-e96a-433d-9fb1-f8dd52531d01",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed0e5ae-a1bd-4e1e-887b-01a7576d7f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a5de7f-2fc5-4907-95a4-76d24ef2f44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95abc3d8-84bd-46a1-8e4f-7d377d7e0aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8cbccd-eb8d-4b80-ac55-f6a14803f204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4830f9-3285-45b7-a81c-1eeb41f0795a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e31b546-e538-4335-8ee3-2ba90a4322a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33527cc-0219-40d8-bb2a-8a6e51b1786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c9fbc7-9b68-41b1-87c3-10f4b7200336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eb75e188-ca23-4747-9eb2-357b05a4fb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a8d863-723d-4a5d-8274-691852f7b1ce",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4927b30-9d52-4bde-9fcb-da3565688e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58322032-03dc-46ff-a120-34907e241b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154e51a-00a8-4e80-b175-c715fc59bde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0e82e4-5f68-4e04-bdbc-0c2d6734974f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140342a8-c393-42e3-bec2-9432098684a2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb5473f-2c0e-4ce5-8900-8602aec53cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504daed1-fefa-4c1a-9a88-89f43740b251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef2bf32-f004-4073-8583-c7f21e0f562a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "be559133-f7e1-4957-8cf9-436eaa817bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2251c82-e78f-4178-9809-a787ce261706",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3753cfb-5cc5-49ec-ae3e-eb5246492c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc09dc8-515f-4cae-aa76-9426e412ff62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9451947d-4371-4067-b522-c20647bdf460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc7ec53-766e-4f9a-aa7f-d3bbc3c5389a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62283bee-4e02-4951-a929-2f3f617c7f01",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1ba286-c601-4ad1-89fe-7105668d1ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53928dae-c53e-49f5-bd30-64885939c4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272bea2f-eb0d-422e-a078-809dc744975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f95e1a3-df89-4534-a6b0-e19e343819ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a981c7-4776-4fbd-a2a5-b7dc231b8eb3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8994333c-692b-49c2-bb27-aadaf375d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1108cc-711c-4c7a-a081-1ce5c461745b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8db5f2-56a3-4d8c-81e6-1ad4aeb11fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af5f6e9-898d-4bc9-bb8f-5936999b4291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f76592c-45a6-4c4e-98c5-cb06e6c153ef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ad15ff-d6f2-4e1f-9d83-3e4dfd402545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149faa2d-b040-4f6d-963e-bd5ebcc27807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b3beac-001e-4e65-8e6c-967963165eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "637dff94-4254-4463-9885-88d8f95a673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1312b9-3caa-41f6-a842-2e3a0c43e598",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68345543-4340-44c8-8f03-14cf9783b2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d54aa02-1204-4b22-b267-87cfc2f92778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc7d09-6def-4fbd-aa4f-d348e49d05f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64cbea8f-5453-4cf5-8440-07344d51a797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c780c7ec-a34e-4119-ad81-fac825ad3461",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ca25dd-f0d8-45fa-a7bf-dc360f288bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75159b19-289f-4248-b47f-8e2fcd0bcf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7b1376-3291-418f-8a02-d3b9b65ebb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec7774a-4938-4f3b-b3c6-f0c038c0956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07389fa1-71f3-4e6e-b451-b4736d9d9513",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab70b8e-a7e2-4565-b20b-dce71f6b5de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaeb96e-53fd-424e-9ee7-29a71f5f62d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dafda09-8927-4a5b-a1e9-9e1a0e5aa72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8305ec42-1da1-4589-b5ee-e699a0c7a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12cdc1d-8f64-4664-bead-d06befb7c118",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e09ba8-87fb-4e3a-8bb7-958d8ac708fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11cf24c-9bb9-43fe-9ef0-2fbde55e8297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c734abb-78e1-4d8d-85ff-52697c28554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f95d28-4d0d-41cf-a43e-25e6d9800b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f9d6d7-dc78-4b89-b162-64c5c0e29b4f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63f0ba3-60ae-4616-8c01-68da6db15d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9aa4af-2e22-4972-9cc6-937f2a60a080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e1c0e8-6dcd-4225-8112-39f12f03500b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7768ac05-9129-4e11-b0a2-d9b8a16f38df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec17c764-b8bd-4958-9a7d-39412ad6d6b0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aef387-9911-4acc-bbc5-719d09327a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948838ae-a844-4ce8-ba24-4ac4ae91fe7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab8eb9d-7135-4677-8ce0-e540f4ab85ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d89431a-4264-4aef-8963-bfc3e7534001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd112507-4113-4e72-9772-17c78e72c629",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae0075f-a300-407c-8697-8ac8800adce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c198c044-c4df-4368-a8c4-c732277bc4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf061f71-a174-40d5-8042-27a4b2df7175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42671ffe-7181-48f5-a472-0e2928609fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15bea0-28f3-4b14-be96-ef3e581973fa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed0863-f285-4d75-9574-6f213879fda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc8de3a-6d3f-40c4-9574-136f913181fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed8ca08-4b35-407b-b552-32600781e30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a99eb508-1a7b-432f-95c4-9d32fe4eb859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06809a57-1c6c-4e88-bef3-a321efa1a284",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa26f6-1249-4cfc-9a76-8f26e98cb531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4453f48e-0c5c-455e-9a91-79dc5a17dc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d2e7d5-9819-4b6c-8156-fc4d55665d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1d9dc9-e24b-431a-a604-504c3ba3a85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915bc8f7-7c6b-4056-8392-99983aeb661c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d12fcaa-72c8-468c-9261-fa5012c52277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b367b62-fb4e-44b8-abed-f1b104c88a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc180996-fa6f-4ba3-a7d7-f93f44eee11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e64cafdc-fa3e-4898-8b13-7fea5f3aa1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e5416b-d23d-4ec1-9830-942afff19131",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32f5bc7-fef3-446b-a180-8e8ee87f5e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a55a206-52a5-4f0f-b074-cabec7e00d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226deb0c-23c4-44a7-84f0-0b4f5e1d1c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "925a5474-b053-45ca-96d4-9acfc5134fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b9eefe-89df-4b46-80ec-0c00d6f2e84b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955dce22-be77-4646-833d-18d4791ea41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec862b8-3a41-4355-986a-f3ba59d5b296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c582624-9095-4424-9219-1a20d52bd28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c326e682-1365-4101-aea1-a24ada69fa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1969356e-cdee-4d17-9143-1f6e7f96d419",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b834827b-fdb6-4c7f-86b6-95c50b0f8dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22dfffc-c442-4a0b-b791-1930cf82ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5497fbb-8842-4dd3-8963-b9a0312950a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f19fe168-df7d-4177-ad13-f5610d3a5b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c5928d-9447-4913-adb9-696e1e05caa0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bd6cc8-6692-45dc-861e-90ec73edb51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7fc6fe-99de-4c0e-af2d-f3a50fafbc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590313fd-055e-4284-baea-b34c0d016360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f2735f-bc4f-4061-838d-e5d0e50f8db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672a15ca-7f43-4127-89e7-290c49a41d2f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2770954d-3eba-464e-9756-c1b1c9967d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b39dde-6aec-4f6b-82f9-f900d97de559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae4f015-1f6e-4873-9eaa-9c7ee74e4481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d76504a9-b0a5-4318-8b0a-d548f5e3adbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cf10fb-8426-4add-802c-d798979e3852",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92c8fdc-b6b3-4f54-9d6e-9a2d1137b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40171699-9ad4-495c-a122-7b5404a381cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0168ca1e-7c74-4a30-96b1-1ee782921125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64fbad0b-495c-4e7a-b674-7f05d05b3536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d87390-7eec-4fa2-b94b-332f6045e6b3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3df8b0-21aa-4c8e-afa3-1ead80a3a17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e4df57-bb03-4b1f-9c3e-a6d2ce999a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2e391f-2bcd-4bff-92f7-26eb2051b5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ab9017-734b-4a85-bb52-477440b3361e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b8645-75d5-463a-9022-71c5a38d86eb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1be1c10-c3c8-4727-b709-bcd4c20521c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670d36d3-c1eb-4d7a-8047-7c40801ba725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a26c70-47f1-4c91-ae71-0b8fcb16928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8817e6f-f4fe-41fc-bc19-14b068489e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a52de4-ca06-4712-bf00-ba35e2fb8e0f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07a7698-19cb-4ef5-8466-6d4e815fbbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2b9956-d753-4f44-96e4-b683813397e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe1f113-0f9e-4c4f-b81d-9ac8f0c6a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a46d364b-fcf2-463c-b26a-2eb04a861525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbb3ace-4d48-40ec-9493-9eea47a32fae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4457cf5-b450-4210-86ee-e4013d064a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194483cf-3f8a-4b33-be93-460ef9bcd973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73627c-ac1e-454f-865e-e73716c94cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bc7d0e-13a8-4129-b289-e3f15d83e423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2182c4-bb14-4493-abe2-d22b5e7618ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d06732a-ead0-4761-94d7-dcf9da9523a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e12217-e9f6-40b9-87e8-6079be5a37f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6955274e-bc33-40db-b08c-5057fdad30cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "902f9d9d-3465-46f4-b74a-1a69a234c3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64511a8b-3ad2-4280-aa71-1fc52ef411fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da5bf17-2853-45f9-b196-6629e104daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca4f4bb-e4b7-4b54-909c-6e51ed54f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96540f12-f335-4d2b-b4d1-148dacf0f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a085a4f-9eb6-43ec-9825-d4fe68fafca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737b648b-587c-4707-9861-ed1711c22cc7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94de480-c551-4ae8-ae55-74e64f19f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f723e779-3671-4600-9f3e-0c488095f1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558bf3fc-00f3-474c-aaf0-11cc78a70fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e207eb-590d-4f00-be6a-7eaaba904645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201147e1-c9ad-4da1-b76c-34f270efe7cc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b545108-e94d-4cde-9e1f-8d470339c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280a278e-f87e-49be-b64f-87bb2984b536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f52cb1-b3ec-4728-bc9f-34959e93e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e444ef3-a081-4d1b-8e3a-882c58e23a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988d8963-0b26-49fd-b93f-4e99f22ade72",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7614b29-3084-4f12-90bd-51d1d065a61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c35928-9ec5-44d8-8176-3436d2b5959f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae9cf9-6559-45b2-a835-8d6a953cc37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c6ebec-b542-4755-97d3-42eef4746235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7091cd-2ea4-489d-9823-1de1b28d340c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af98a4a0-364c-4866-9d51-fd953bf06790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee75fa07-e1e2-4aa0-bcd1-dfd099b7ee2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca560c-2bd8-4c05-9916-50f2424f36bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "054986de-dc60-4816-afd5-eea0857eb1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc949b2-643a-4735-ac33-943b1b515e5e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e560f277-855d-4ebf-8713-69c33d6a6a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4291e0c7-95fa-4d4b-bbf0-35f271a7e79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb3bf64-b5fb-4fe9-adb4-fae20b9ad6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a929fe5-08fd-4e23-bdfa-42908a3e87bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e5593c-e509-4803-9b73-ae1069ef2cb9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fd6212-ce9e-47cc-9d73-a856b462d8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9446e7a3-2254-4e3c-9d05-e8fe103c5812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f450c9c-312d-42da-8411-22ee9602922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a2237d-30a1-47b7-9dc8-2f0715318fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83037c72-1222-4a13-98cd-583c15502fac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85636f4-dd10-40b9-88f0-6251544fd55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b513c57-2373-40bd-81b4-7952b5cbe362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17280625-92cf-48d5-b161-e0cc95145b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3b9441-a234-47b6-8c2b-58e5d0255ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ff793b-5535-41e1-a690-b783b29f4125",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce523ac-9c2c-4278-bcb4-22970c2360d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bf5d70-94e1-48f3-86e3-f4c4fa397a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc848f-25a6-4f13-90dc-78ac99fc6975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a93e4f-cdb6-4e62-9b34-5c41220b3669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3b0556-34a6-4b76-b8d9-d65c1166c8a0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d866df97-44ef-45dc-a009-85114150043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3f5fc5-e513-4366-8c35-4adb0ead55b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923f6170-ff9b-4ac7-ba28-9263ab83dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bccc9f-31c0-4839-81bb-d51d60b43bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9e7ae2-f975-40dd-8925-aea5a23981ae",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956bdd65-d665-4c99-96f0-ea46fff273e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c3ae6a-57fa-49d2-87a5-d4e434346d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb312804-b3a1-4d52-9aaa-c0389fc59c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b127c46e-ea49-48de-a458-73c80cb83c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad324a9-ad4a-420c-81a7-ff742c919ac8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeae747-438d-46bd-a02f-e7173406bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f24808-2cbc-422e-8180-bebb49a23cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2bf9a4-d31f-4bb9-9218-4a92a00c222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc0414c-9cf1-4ad3-803b-f1e8cbd60547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeaeb51-c203-4710-a7d4-df14838b1233",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6592102-cdf5-4d39-b99e-fa1c8c3c3b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b235cd1-c0bc-4893-a753-b2c3a51bf88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2465665-a1d4-444e-ac94-8bf3d1bdd533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df995749-55d2-4a5a-b6eb-36d4e8f89d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f701f12b-cf79-4fe0-965c-966862c98740",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad7825-8a92-4442-a980-eb3a62b6bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327c0804-9bbb-46d9-b0e6-cd4efd1c7f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a477df58-26cf-4d8e-8099-fba223156de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3d827b-e2e1-49f5-b84a-e39b6a0dc8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4686dfe9-dd65-489d-b1cf-e49ab4eccc42",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cde8ee-291f-4fde-8bb7-dce33a45d7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f33537-a152-49aa-ad25-5e9dc8fd965e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41b543d-67dd-44da-bccd-068b3d1022e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc2bf19-d1cd-4b2e-8f4e-5f537a1fbd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4945e0-3ea3-4d28-b0f9-40be82e0d543",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fee7844-2e30-421c-9782-d74d0708d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14235eab-3e97-425d-80d5-4ce288357801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a5100f-07f4-428b-98dd-acad15eaac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f002349f-2b7b-48de-b90b-e971100dce14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526cd881-4e76-489c-8cf3-16888dd0d448",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea8b61d-f218-43ba-aff3-3d45f54265e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa5f090-ed3b-4b26-a072-975cbb557acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7957654-bbb4-4edc-abe7-6decc8efe7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8c900c-1102-4a7c-88eb-f8bb66649228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef70e7e3-7be8-4ee7-9ee2-faa18c603d1f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5699be3d-f60f-4f57-bdb7-ee1d28679559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0536deca-1f49-40d1-b0f7-d29d9118b0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44de47a5-52dc-490a-b3ee-9c1e75cf4c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c31eaafb-a328-4fc0-8710-2f7ef5e1259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec88d6d-d548-40cc-a2fc-1441a3410d7c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d802cd3f-df68-4fc6-a1fc-176e420a1398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5047c991-8825-437d-b589-8d27bda80c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339648a-a501-45dd-afed-3c2c8112c1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02c733c2-b84e-48ef-aa0d-367c049a246b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90df46a4-3d0e-4630-9124-faf7f448bf99",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6592e6cd-9407-4329-a921-2a63381095df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffffa44-eab6-41f8-b224-19b9e3986b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb740b35-16e1-4bd7-b631-c685e5765d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e89b32-461c-4133-96a8-6d13d70b9fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabec28c-efb6-4e1f-a1b9-fb6b2b0fe216",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ee0d87-9d6b-4c8c-b824-2bca63008b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa75c113-be26-49f9-b42e-ccf7b142a2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26f7796-ad0c-4c1a-aefe-367390cb956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "553f4461-b9e4-487c-88f7-87094afc3569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1d3094-b2b7-49d7-8193-d0aa6324cba6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c5fe62-20a5-459a-841d-7537da2c6e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7278d8e1-6e0b-4993-a6ef-23c54af02058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d664a9e2-766e-4b5c-a44a-700f3907e138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c14a17-14d9-4266-8927-bb3f9b3d7fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea596b-d3e2-4bb1-af4d-8dc17266443d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09d8f7d-f3d4-497b-9ba1-8b1c920bfe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75e2caae-1886-4266-8580-095b8479aa89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89edcc0-078d-48e5-8253-d503cd3c6519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "90a53f91-9e35-4279-8387-bea170789edf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed3a2053-c55e-4e9b-80c2-19bec9a73c63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "351fa621-e4c5-428a-b91d-66328e942d6b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b5b72a-f5eb-427e-a5c9-d6658940b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b9d2b48-d85d-430e-bcec-e09c4f32b978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a1eb89-d91e-4f7e-93a9-801e42152bfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa6b79a9-bff1-4aee-80e8-f45a60a995c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a14394a-6a4f-4d20-bf62-e07ebe9e7a69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e4a8ac-2a7e-4b98-a49f-4f3cbb2fa3cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7b618d-4a32-4a26-9b1c-1e99921c02e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a26cb2-dc12-48be-acf7-daaa1d6bcd3b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7618830e-23ed-4d0e-b8bf-dda44bc293f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7582bd43-9f72-4a55-969a-084d8fea7a6d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b41224c-41e4-42ae-bb5f-baa1ac26a966",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e51edd6-ee3f-48bc-abf2-38358d42505a"
                }
              }
            ]
          },
          {
            "id": "690c32a4-583d-4013-9e9d-fd4b99a4e57c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4f23352-c67e-4f44-bf74-ab5a6bd2fad9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0285884-0b64-4400-be70-02522bddc142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "666f5124-8018-454b-acad-ec72b5571340"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c928685-bd9c-493f-bfb8-eea33aebfc98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25c8db1c-916c-4dda-b564-57789a48335a"
                    }
                  }
                ]
              },
              {
                "id": "5d2e395f-ee3f-4a0e-9f16-ea030d45eace",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "066197a3-ea5f-4955-915a-98bf55f9d302",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "865e2994-ba74-48b3-962a-99706cc83ac3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ea0dbbf-6db5-4311-b96c-9e95fd71a6de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9f9abaa-2f40-4bdd-af26-bad86dd5687b"
                    }
                  }
                ]
              },
              {
                "id": "237f9673-dddb-41c9-98b5-39374562b981",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "636dd4c9-e98d-4931-9ccd-610bdd6b3741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13d7dfb6-6742-41bb-8b3c-25ed3548c7cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "991eec73-d78c-455d-a831-1a91dc8e1ab0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41d146d2-b2c6-4b3a-b6b4-9446f4018fb6"
                    }
                  }
                ]
              },
              {
                "id": "4460a6aa-a51f-4e04-83b1-12a5fa917431",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c7a54ec-8b05-4480-a738-d1db3a83ff17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2af1857d-3d73-48bb-a4e4-ab169809d784"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb5cc2cb-4086-477f-89e9-94b882609363",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "781a5730-8d94-46f9-9aae-6668bd0a3db7"
                    }
                  }
                ]
              },
              {
                "id": "1731cc9c-5f0b-4904-b5e7-bed4b7b912ca",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2c96a22-251e-41de-9164-ab05b0bee753",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac806116-22c2-45fb-82ef-a282176008b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "752eadba-c76e-45a3-9a97-54a762fb9d9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8028955a-fc12-42a6-986d-31289c3ea4d9"
                    }
                  }
                ]
              },
              {
                "id": "a04bf778-8b63-4476-8dbc-77cf1182b973",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b132717-a0c2-4b33-a62f-7babb8d69b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6da87c4d-f03f-4274-ac49-bc48cbf09294"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cafae6df-3bd2-4e39-a717-d40541fd8d79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92c7f1fa-47a0-455f-a333-9c36f9a6f151"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2db62dea-31dd-4584-88e9-9fe550b9ff09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af0d0b3e-48e1-40bf-af1a-45461f1747f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19addbb8-861e-441e-9a5a-939420b947fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c12fcf48-cc2f-4bc5-b6a6-730f798a7690"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c426b00-87ea-457e-a2a4-68ef6a885e98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "31af8caf-39fe-4f28-b13d-857ef7fc0a61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e91fa1-1c73-486d-a7de-779edb2d5925",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0df600e4-8078-444b-ba69-9f8b2bda2117"
            }
          }
        ]
      },
      {
        "id": "d7620fff-128c-4dfa-b493-051d1eb0bbfe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e782fff0-b97c-46aa-b93b-82c7049d524f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e5c39d1-20b8-4a92-a286-03cde74cacae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7734fdb1-edb4-4edc-b080-065496528164",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e36433-2e1a-4bb0-ba94-d71e86dcf14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9986d1-e5da-4213-8571-6bf7a2291621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aed935a-7b66-4875-9325-cfc49a983163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e24a71b-08d6-4bce-b099-a49075b6237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965ee711-f216-497e-96ad-7055e771736f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d434a285-b6d4-43b9-aaa5-9e1a82025ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24877c0b-8e54-46a0-bf9d-19fb1ee005bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d8adae-fef1-4af0-b219-67481750f889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd0e1f6-6e3a-44c7-a822-d47fd4020491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b1a145-bec6-48cd-8872-905ad9e58c88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9040513-2e0e-45d3-88ae-789c8804b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e900d1fe-46f6-45b5-98ee-ead0990396db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c50cfc-b0fd-4407-ae45-d3fd32f03c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01dae9ed-813b-40b8-9acb-fb22fcac5069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eead740-587a-42db-910f-b04ab114b812",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cce41b7-6aa7-453e-bb5b-5accb1af0cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99195244-18ec-4f91-9f27-069f8cdac602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e4ba95-78c4-4f10-be5d-46ecc89fcbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbfb0e4-382f-4d3d-942f-cabc0c0e55c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f394418d-bb7d-4c7e-8429-6f2589923882",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862a396a-9055-4686-801f-1d061c6decd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6f3b4a-5dbd-4e67-8d54-7da5d8a27826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c9b530-e973-4eac-ba6b-7fb19278fe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a6e449-2786-439e-b521-ad339b27a63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5654ecb0-b261-4d13-a645-c73709ee5923",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a44fc73-24ea-43de-9c3d-26cce9bb7ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddd0017-c12a-4db6-ac06-6a4f535d9be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f69106-15d0-4275-84e8-7063f472da57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8de5fb-21a6-4e19-b7d1-317dc8044825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7c7d77-7095-4330-9c48-9cc1be5ee457",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dce3ac-0a96-40d6-82bc-1f01cdbee237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8471be9-8995-40b9-bf07-c77dbe7eb3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5ea3df-c5e3-46aa-8239-cf0da66aef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2aae69-aa31-44f6-ba3a-47569ee115e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a741788f-5ec1-4394-9eab-9405817a6bb5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58df38c1-d049-4064-b62c-d6dd495ef8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d7946a-0721-4a29-9ea5-47dd6e0cc270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6443489-4445-4817-a78a-7b71df1e992c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4af884-31de-4f0b-87e4-2665781b1624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9812fb-8e8c-4268-b0fb-bacaa46f301b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2534799d-0fe8-4f84-8893-7bfab3ddddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c001eca9-fe1d-4495-ace5-eb6a4e996f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb78b6e-9631-4629-a310-d0390e1f1561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "764e4ecd-4ce1-4907-80d8-645d6e7208d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7745edd-6648-47be-a85b-1ef7456bbfb3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c9678-9b94-4ab2-9368-878e6b561599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcecd9f-80f4-4bdc-9722-bc9f61f22aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf534c29-4cc2-457a-a8c6-9d8a8112e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f2fdef-0d90-45e0-a6c8-a4317891ce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6cf2fa-0de8-4c59-904a-400952e531ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c78ace4-323a-4585-8499-c27cdc10834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5032a39a-37fd-4ed1-9d91-dfb6cda8a7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b4dc71-9da1-413a-950b-36f54acd25de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78c92c0d-180b-4397-8c06-7e1208c95593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb3c212-b2a5-4bad-b017-0734e46d0380",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb271eb-31d6-4eed-a440-18251ebef161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe3d348-3258-4869-ac80-b86cb0fcf2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb33f3-eb72-4044-a284-e2ad23a5bb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e34fbcc-7db5-4350-859c-794464a5e503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cca41b-40d4-4387-9c4b-999694ee6518",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3b5d40-7940-4159-812f-0c035cbb26d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d071e9d-c97e-4a2a-9b52-5c1d5a465813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18950c09-4342-4b15-b8e9-0049c8f51578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "108fe769-0198-4c97-a6ca-cd684f051d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a698f34e-d1fd-4eca-8976-9eda0792221d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1d7289-b51e-4404-a8d2-b235f8831cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007c6d68-b220-4e79-9896-23fe3d4259f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c53096-eeda-4a49-8462-761fe229048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4922e94-822b-4f1b-b5c9-1a1fdd95f9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc445e9-3b20-4cd8-adf4-54bbe1f0b28b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe2b371-494b-4339-9771-2d6052a1968d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72a464d-c991-4e4f-a1ce-fd2d8106e982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8b57dc-4170-4d2e-81c9-c6fbdc32c834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ea213b-856a-4240-b2d7-cf512525e067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900081d0-160c-481d-bc45-8fff852fcb15",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd0acbd-2937-4b3b-8c42-34dd44316eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa55931-c783-4f50-83d0-7e0dfc20a29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c796b9ef-7f82-458d-936a-0bdafe8d22de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f33e3b1-9d21-4e78-ab47-11a2b50d970d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e5c0bb-5e52-4283-bcde-4bc53e8877d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e3235f-6da0-4abb-9000-ae8f8b998b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f41410-6a0f-424b-abea-b3aabdb9ae2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d5ee10-d12d-4291-8ae8-921fd5e5c04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c22394c-17ca-4030-a91e-240b83ef66c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f484e9-e3f3-4383-918f-9247d3401d02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a488f04-f990-49b1-82ba-7184bd963ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef489f1-c453-4be3-aacf-52cf06a4c179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c807613-0327-4cde-a596-d90a85108d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c0ebab-2911-4cc7-809f-176432d2bbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c05757-c519-4459-bf00-96c0b65c51cd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8c3283-3b4b-4925-b708-a3a43436ff97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22bd3b6-4fe1-488f-b0fe-329aa3cebd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e106ed8c-bb42-41fb-a39f-8377e928d6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "599ec91b-a5df-4421-8fd4-4ecafb75196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad33df9-f511-4649-9eee-eab1ee175ee3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7913e8-87f2-414c-8c6c-33ca48dbda68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d621c9ab-c452-4c8f-9901-0dc1068a65b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747bcb07-ae83-4fe0-be0f-c8576dede7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c27d59-46b3-445d-8c5a-e29aa88763dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfde2a1-5cd0-47e8-aa36-363f6aab0c89",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8750967-b1d1-476a-b1d2-315e420aed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5f1ccd-fa73-411d-8dfa-5cccc2420917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074270d9-a870-42ec-b472-37d82e5274a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f99cd3-9539-43b9-a4a1-bfa3fea2f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebfdc88-5ba9-403e-9f2f-7b97c7870ba5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d01fff-e693-4441-b517-791c708876a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89607257-46ab-4baa-b0f4-1354c6b76ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc9b7c7-d13b-4395-9a56-5b3afcb7977a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc2eb03-7cb8-4c10-ab90-b53a382987ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e5662a-4576-4d52-bf86-3d0f044a9fe6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5387f4-3075-4c4b-a712-8d349029ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf567576-62f4-4956-a464-b4f3c7a8c4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e78b3-dbd3-46c2-a39b-8b461abf91cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b90310-287f-47f2-9eb3-0e2431dc5674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881391db-7833-4c69-ab26-1127c744c6a9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fadac58-da9f-40e3-81e4-efbe3b0d49e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ae5b0d-3f9a-400a-87e9-8882cbbb3c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771d793e-77bf-4109-a2a4-dbb424856f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1da966-748c-4389-a812-428af6f03ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a20fdc1-8be8-4a8f-a4ae-5bc68d274143",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eabb2b-245a-45d5-bfb7-1d46ead02df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07863b76-cfd9-4f6c-b74f-ff019fb65685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d595f49d-b720-4585-b614-bb171ce1510f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8b88e0-3b5e-473b-aace-248dfa482ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd78732-00b4-4f99-82c1-0c20ce5dc02a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8120adb2-cef8-436b-8d7f-fd581b8df67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c64ef78-3db4-448c-8ee5-5f926f042d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2b2d9c-bc10-4ef7-a857-c9bcfab012d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86cfbd2d-0c5b-4fa6-81d3-72d5cf713b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c4693-45c1-48ac-9847-b02934f0b916",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da41f860-3f01-4076-8970-a75011088cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f7a3f4-46d2-42fe-977c-6ac23278a688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9829484-fcee-4d97-8f62-94052f63d3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac8c4cb-bd77-4a4c-9782-d22a617185f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57304490-28a2-4fa8-a394-c8d74221325c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c9796-fb47-4dca-9f78-941da4c56cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec95b5b-e754-4323-83d4-2d249c5c6115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f651508d-43df-4fac-841f-f3291860daad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "445aa850-5e36-4c87-a8d7-d7f4c9bb8e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7736e6e-3088-44c3-a1b5-bbdd9d6b1d81",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf348eb-a1be-457f-b8bf-cd5316b133bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd45b3af-1bc0-4c83-a514-3bf4e95d54e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f51ba6-371d-48c2-bf4b-2944507fece7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a055b1e8-8c6b-4dbd-b482-8c9c4dfb08ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482d734c-77f1-4d68-91da-6fb70d8cb01c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7861a69-852d-4d69-a3f6-2453ba40727c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e418246f-754f-4ec2-a63d-5959353318aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e090c10-9e37-4c5c-8f3f-ebdb38f8c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6473d1-9913-4a44-9cc9-77defc2312ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cb6ed6-f996-4742-9540-4017e1832751",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b1962-cb5a-476b-bbaa-36409440b318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ecf8aa-6278-4203-a0ba-79343b327277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34041fa-5e0a-465e-9d56-923de134e6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "905620a2-941c-40f5-8296-a213ebc09e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ec9128-e8b2-48f5-9b06-29c3097b6161",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c92405b-c814-496f-b5d2-b9d79e97900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364b2ca8-d5b4-4879-8496-f8530e6a0702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5aaec6-9acb-4022-be45-15e8af1aabcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7187d67-f5ed-4c0e-b116-d69fed57ecf7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d51f19c0-1ce9-4565-9d56-d93cd13ab165",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "665e3b79-0a7a-43be-be5b-ff706ab5a188",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d2388b-1e97-473b-87db-4f13c06c7691",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53245a9a-1d9d-4b13-919f-dbda6f72de2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65422702-2882-4d77-96e9-038f5431ec30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a59a8e37-914d-43b9-9029-7e69b06adf1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eea3b1ed-b326-46bf-a739-485b6d4e85af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "702bb948-8bf8-4b1b-8b9b-7e3107a63a2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a041633-8643-48aa-8718-48759516f028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06303d91-5409-4298-9f48-90c0554b7134"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2440ee40-ec05-4ca8-a04b-a99e980ce3cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b2601eb-8ae1-4795-8218-162c06ffec65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d9e9393-9ed3-4fb0-a6b0-1d5576eeebc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "567b200c-741e-46d0-84af-b21d1d971854"
            }
          }
        ]
      },
      {
        "id": "90390e29-3b44-429e-80d9-13f2658ad1ea",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8992a373-2dd3-44ee-ae10-95c737449198",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7e96539-e659-4480-a33a-3ab8e3063f94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d0f183e-22bf-4a79-bf93-25e0be61293f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a520be-32ae-4b5c-aadd-d5a3c6997cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600b690b-9b31-4f38-8c76-ef34c2e10317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827a1397-b64a-4e05-b55d-1b1ef37d9fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a97773-6bc9-4439-a465-255ec19dab01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c291623-774d-4142-904c-5ee69a216d33",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f4a5a-8a1f-45c6-b6c6-973d9c1f3a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbec4d75-a416-4126-949d-72825942c74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecb7dd1-dd38-4a32-a7c2-f646f975b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d169171d-afb6-4e21-82ac-8ece2df55ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614a4e92-b5ed-44b4-a1a4-0b61cde6e6f0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c0fe5b-1f3a-47b3-bf31-2b01348d4ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b797bcd-1a52-4c91-82f5-770271abde4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8b697d-0f5a-4bfd-b01b-731efceb3975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdc1408-d735-4ea8-8ed7-f0b15f64abd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370c9e0e-c5d9-47b0-8a7b-79fa195081a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6122785c-5269-4916-b5e9-448b555b8f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e7caf3-931f-4db5-ad6f-31e6abd8ed8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9271a0-d9a0-4d3b-bcd7-33bb5fdd80b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6ddd0d-2e51-4ceb-9638-8f72cd11411e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f915432-ee14-4937-ba15-a5d6f71f0997",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b3af5a-99be-4511-a1ff-6955ca870a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba663c8-f959-447b-a499-e05bee32e8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0533da5b-d038-4acb-a1b5-1461f277ab66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "718f3352-530e-45e0-a02c-b6477d38122f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71b65c3-8c41-4edb-bd64-e04111b7c0a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3471ff05-b59d-400a-bf3a-3c4f4607dead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb4c34f-6327-4e97-a140-69a349a183b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64684d0-f168-4a00-9219-3bc62f704137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0ad98a-3167-4bac-9598-39215d84eb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b18cba-5b47-4a1a-b125-8f62fa984ae7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c883369b-8e2b-4691-ab2f-00c55d3e7e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f223b94-8cd2-49e2-b846-6d55b8d3a61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba8f99f-cd20-4cc0-9025-f6400e0e7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "359ca108-7945-4094-a774-651d4f48ec5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44357212-bb84-42d4-96dc-b3ea45d56520",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f4a5e-d09d-4cf3-a8c9-269af94d9951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f0d308-10e6-4ffc-80a4-4b12ae241d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a539cd-a8d1-4d28-9e01-6426f9b04540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b5daa7-f4e7-4433-bfce-719c9b2708e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930ef8b6-3687-4cf9-bd37-734a48e66fa1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e85b930-641d-4941-8200-71d298bdfa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfbc791-7387-4f0f-bb14-b7d76cbef88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eda2dd2-e2a3-4097-ac31-17192edb1be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01312fb6-883f-41ab-9f2b-2a0fc8e2531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632e3769-e44c-47ed-bf66-33098b524535",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935570b4-5cfc-40b7-bf42-4131db435881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7e3ebc-f531-4854-87fb-fdbb9dd4b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df513126-cbe6-4f3e-9b44-ee0e0ee92f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa0d7be-a86e-41c9-8465-a869eecbc5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbb2809-f5ae-4a2e-b2f7-2a08d309c64e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eef23be-c7f1-4439-81a0-08e51754ac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7f0034-0c48-42c6-8b5b-f953c35a4cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232790eb-27ea-46ab-9678-8c1b97de5e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "804682e4-d5e4-4996-abbf-e401ff3776e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e660c1d9-989c-4b8c-8c1a-0863609e2f12",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b6745f-c6c0-4cd4-abb1-23528f6ed9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78f6383-1e10-4287-8d61-bfb0a5af3474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bb90bb-20b7-49c6-aff2-3c3e2c9dc9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f37b851-4c36-43b8-b3c6-845fbf017bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd2288a-312b-4c7a-ad8f-af5a77a570dd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20786d9-02a1-426c-9c9f-a93914ae84f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6defafe2-93fd-4954-a8a7-9e81d6e97484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edc58e5-c07f-4ea4-89aa-d15ada592d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a1c143-fcf2-4eb5-99e8-24602bc0e25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fa790a-c824-4530-883a-5b49826bb7b6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ba6d07-199e-429d-8cb2-c2ed4e64a155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84a5fc0-e1b4-4890-85bc-4a3bd3fcec8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cbc601-c9b2-48f3-9c37-a045c58f8279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "90f30ea5-9da1-4872-bc74-8ac61ea73ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd74443-6088-490b-842a-426d82445795",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdedb407-7608-4264-8a3d-8b1c78acebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec8229c-7afb-48d6-9d0a-fb5afead1c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6cdf48-6d43-4ced-8214-34be60a00153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "315cac42-1c4a-452b-b88b-36a62813eaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a430a-6b0b-4e81-8a41-147fb60ca7bb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7edaea9-fa2b-4cb5-a4a3-c26a973295da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4bcd0b-45aa-4f40-b80e-296625f88c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d9ccaa-3acf-4050-90c8-32372b3c1da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d5fc0a-07b0-4231-a4d5-5a883fded416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b48053-34e6-4f76-9d5a-f5ef533ef4e1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a45b8ac-5af6-41ba-b636-9333c9d6ca85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acc65e7-e5fb-4427-8cb7-24ec0fcfe57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2ad8b6-af36-42ca-b0b2-bef3b7869419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8937ef91-064a-4526-8fc6-fbdcbf2112bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f8018c-8fee-44d7-bb47-2afa875c1fc4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941af99c-8b68-4fcf-8e46-0591103aba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11d4657-1f6c-4315-a6cc-d5b5aa5acc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619358b7-b8b4-4ce6-9ccc-d98764f377c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15dfbc0a-e0ab-4584-9ca6-16f1115a03b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf51083-0ab5-40cd-8b13-618857ab644c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba143c56-4e25-41a7-91ea-038b9ced8964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ad2307-506f-4057-8f35-436fd97be6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6323294-e08e-4df8-94a9-f9792ecdcb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf83d7f-9407-4d4a-ad33-ab5cf8a9f11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b11a3d-68ef-45a6-98e7-065383ce50fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8901871-d5c5-4abd-8930-6b4997a8d175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b35e145-8bbd-458f-8462-c837a7769fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626cecd6-31f7-4aec-93fc-397d191c265c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e265130c-3277-4b2d-b1db-0fce3bc31b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d341dfbe-897b-483b-9855-0e0bae8eec24",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2ce540-057e-47dd-92d7-d4612443caa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db831841-bde8-4cb4-bd9b-da1f261463ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8d482d-c000-4edc-a821-5f53a9fe5de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b971381-277f-40ac-be7c-9b64cd4c1f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc967d1-636b-494d-a5aa-9d627decfd31",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9afeaf-31f9-4175-87a9-879f7bf02471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecefffc-2cd3-4192-91af-64762a4a4e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbf72a4-f05b-48e6-bc15-e775c1d8560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcbe0cd-dffd-400f-9cf1-49130f83a01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b033b4a6-c01d-4b06-997f-701ed01670c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebe99d8-21b7-46bf-b0c5-3196def3496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7518dff8-a59f-41f6-8410-916528c00ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a173b7-74cd-4525-bbfc-93d412931d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cb7a95-548c-429f-b68b-f40e7b36cdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd19036c-48db-44d3-90ed-2e01f73991aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51852b8-7057-4268-a2e9-cccbfab1c2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8856a6-cb92-410a-aad0-e06b64893560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b251196c-4560-46a4-ba0e-c30a8ab28e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c764404e-7a42-4146-89f4-9f9b7ffc8c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b927ac-22f3-4a97-ab11-4ee6b92ceeba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204fbcf1-f243-4b7d-9569-cde0865aa40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d4b435-8294-4b38-8d5b-1085d82c76e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5726a-f784-44b2-a0d3-5c9152c9fc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f471724-5057-4a93-b7d4-1ef7a2fbea11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e78bb44-3dc5-4220-a677-86c19f2b42d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45a2ec9-1714-4d5f-85b6-f6b71aac14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862303b6-7422-4fdd-80c3-eaf95aad007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6307e31-3f07-4506-b5c0-7fc665abc559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "399f5f93-8c30-4fee-a920-82f2900d7739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5da873b-4626-432c-8253-27d52321ec8f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026a9545-6c0c-4225-9901-4eedd372943c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02037b35-d54e-4322-add3-dc33389ba5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7fa747-fbd7-48a1-8059-6edc1af14af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "299071af-0289-4275-a0ae-5ae5407dc943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e43f236-11af-4a67-b1c0-06d235df6e9c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47739b6e-f7be-4e79-b84a-a1e55d026f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7937a9d-f0dd-4748-b0e0-d8318714b4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868526e7-9498-4f0b-82d1-ffe4f12816ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341fadd3-557b-49b1-8cfb-813734331982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0896d0ea-5006-446a-acec-681a318e6e86",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e13ac8e-1864-499e-89b4-b67b29f2d367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c58897f-5717-4e83-9963-879131be23fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5f74fc-b76d-4e3b-8fc3-39101086b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe79cf01-5dd5-41b5-91e0-9a2c7c8a554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabab03a-9486-43a5-89a6-e9538d06a570",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2786eb9d-f2cc-4911-a917-21229aa2c1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70114db8-142e-4fcd-a7b6-2836b6e68a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842e7fdc-b990-46eb-af76-1043df750c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "302be108-0bd1-43d8-a188-40e7e0299ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd1929a-4414-4ce9-823f-8fbae31d4056",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c562bf9-c87b-4611-a1dd-67a7803ac7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d11082d-4203-40b7-a608-fd677c92faff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2c82a5-b264-4887-a452-fbe174493598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "199affad-80a0-489e-aea1-70d7de9f33d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdf8c50-8764-4cb0-bd87-e07939279424",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e33ee47-c648-4f2e-a0a0-818b9c4c0745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa893c6-aa7c-4987-b51b-c88808010708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbd88f2-3ab7-4eee-904e-2d51c30b720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50299415-147c-4965-b559-6fb81f878c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65a1612-5f7e-438d-ac61-854875549017",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ff8303-19ba-49f3-b974-7e656bec7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847db315-bfe2-4535-942f-042892971529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e20224-13f5-481b-a1f0-4b470381755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0638fe-6fed-40b0-8371-c9f167847418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81bb0b-cd7f-479e-9f67-34652f286788",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa62b3ae-2454-4fef-94b4-6f7caabe9e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71694aad-d0dd-4510-a675-cd8079a5d449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8552a4-f8e1-4245-ae93-818abdf93ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d2abe5-7d8e-4805-9134-a9552ca0f04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028169ce-422f-4ebc-aa8a-5bc64b2df151",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0c31dc-66ce-4aad-8af7-baff2651eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d092c6bf-dfc4-4027-9bd7-1f32ae95616a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f02ee8-6aa0-4f59-971a-c49782fb6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ccf83d-4929-40e4-a3ab-6bf3a004915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b498cd3-9105-4ba5-b54e-da2a433434f4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed305387-42a8-4096-b438-acba1aeb2e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac578196-b976-4822-a366-56dda7e7d700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadca5da-5eff-4bd8-aa16-e82f716858b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9edbad39-c754-45b2-a23c-38c0f1c64065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d05b1b9-ce8b-4729-9366-ec200b6c39c1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95328fb0-b534-4e0b-9b8b-c5f22c056b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37153235-1cfa-4139-86f7-fdc5dd2cb17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae157ad-6179-492e-bd44-f565a6f5829d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d1f935-6d17-46c9-9998-de2c6d406910"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1d5cb45-7b76-4d8e-96ca-0d20d9cb0d8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1315fbae-4c58-4ad4-bced-ae946d3eddfb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b4ab9-d23f-49e1-a832-d9637a22fcab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbd2dd1-4a0f-4b2d-ae3e-fedb5efa2ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b746c-8c18-45c2-b7f9-117fa16026e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91508113-6004-4ede-b5ed-b7446ee960d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da225fb8-1b5c-4bf7-a610-8e6d04fbaa6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1170013d-350e-4716-8a22-44b0765e0f62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f130a467-64a4-4e4f-99a2-465191f6b72f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b9aa586-4b4f-4660-b0ea-17c91f9f2d96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6352615b-1f67-4a20-825c-ede552cea66b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8b80eb38-b00e-41fb-9e3f-0d31493dcad3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b28527de-aac3-4dfa-8862-a9ce84a98d10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c37439d-c227-425c-aa9c-0252f3158a34"
            }
          }
        ]
      },
      {
        "id": "f1a58d6e-b076-4a91-a7fd-c0397ceef9d1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4788b1ff-b592-4114-a362-df370e16dd0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18bfa785-e11a-429e-b65f-0d84a1fff33a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5500369-cdef-4f15-9acb-5232d7186da0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130304bf-bf3a-40c2-8faa-75783e39c703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df94f79b-1dad-462c-ae4b-919196b470f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923fe606-faad-4232-9140-12e0fc42c39d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20d47bc-589a-4788-9fac-06aadb7b3639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20432559-492a-4d2a-8d7a-67fbc600e943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc5f390-fc1c-431d-947e-8bac60018460",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee891c8e-dedf-4763-85c1-8742c96dd8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3667206-a498-4cac-a838-cd30f0bca7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455655b9-99c0-455c-8495-a435c88a2ab6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8368aac8-d2bb-4eed-b0ae-ba8bc06e1486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07287409-6f00-4ff9-8454-d53ed8a88a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b687ede9-d6de-4ddf-8dc1-1f8bf3e069b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f941fa-8bb7-4e60-a2f8-b16a0e9c5983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641f887d-080d-4d8c-8073-f239f661c9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a9d0a7-634d-4d5c-98f8-1427f354f135",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c818ca0-f0de-467a-b7a0-2df384940490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef024d7-6c94-410e-bd52-dd1e68debf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c90ef2-c2d5-4ed0-aa8c-e6f0d3982434",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6075429f-5c83-4cf9-bb2c-00b52bf575ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c075e9-8ce9-4fa9-a77a-f9c419322fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c617b93b-a740-4ebc-a3d7-be291f09bc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8708cc2-4469-4f3c-8029-68a3ba58208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7750eef-bd33-41ef-907c-13d145cc3313",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b03f38a-2af0-44f9-901d-622847ae2c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b62f74-111c-4e21-8a71-f0d5c9df141e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe83b79-4622-44bc-b06c-54f9b6b00402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16da4034-88ef-4e85-b243-35f9ace7ae0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2012f5c0-4ccd-40b4-baf2-238af93341c2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a6362-b062-49a7-8830-2c7a7dc330f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd1529e-e061-4f71-88ab-1dca36d1f9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ef8f49-aad8-4614-85bf-7ae5f3c8147e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c09db8e-0bb3-48fd-bdac-347b6f475676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1619ffeb-a900-412e-9cea-5e3b6ec0330f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef0e243-e8e1-4584-89e3-0cabbb07499f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60030d02-295a-4a65-9c32-33d49b83de45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647e4c1-2372-473d-91aa-c0f18addbb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed074de8-c589-41fc-b1c3-182e2703da73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392b7fed-6a73-4052-b955-81da2df38ea7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2179efaf-8e44-449b-876c-817926671d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2d30b1-a629-4127-ab03-2337cc99d731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b18b22-cd10-4941-8d6e-095a10a2445f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa1e686-0b4f-4576-8e17-ceb590db3e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fa20ea-ea5c-4064-89d8-3810ffc6b395",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9363ad-54a6-41d1-b6e7-9b76e46f27f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a021d50-e628-4183-9fb7-86a8e44be0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8dfbd8-75ec-48ab-9f22-7ace1b742b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd3e6f7-b8a2-435a-9f63-0687095bea39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970a71d7-136d-46eb-9b81-9bf20b9a5d38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01895c06-f4af-4fef-9cf6-29a6643c5cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2f8a3c-94fb-410b-80eb-efbfca40ba71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aebee82-f5c7-4b25-bc37-59610829528f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a7b61f-98cd-43c1-a46e-ea31e5d97b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f1eca-c838-4198-a383-4a1bb85bd94e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bf9971-a1dd-454a-930f-9426c85b4d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a244b70-7112-4e8e-b39b-0f4af207e579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c083e43d-10be-4c6a-a78b-19b5c373993a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847bb851-d8db-466c-a2b8-34171413db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a297801c-4892-4d27-9445-8c3f1fd6a60e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe77fd0e-04bf-4c82-a268-f96879038d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582de253-843c-4185-8ca8-69c9fa96b7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15434a18-bc26-469d-8fa3-c4a5c1593aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f32ed19-f4fb-4b3a-be0e-3f0045ae53a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7e91ae-4f1c-4403-82ed-6ee18e0f896a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeb2069-78c6-4b79-b8c4-730840c0f483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c580099-968a-4185-bb32-bbf6c7c1405c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c25b9b7-c5dc-4124-ae61-82a2ad3e0528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b611e3-4bdf-4923-a32e-84dc980c0444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9784ef0f-52fb-4a2b-81a5-3b884cf938d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d3f03-cf2f-4fd9-9440-7fbd17811492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33cae49-f327-4a62-afa2-0ec78a6864f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e73332-7c5c-41d9-890c-195e1181010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60938a1f-f612-4fd7-b4b2-b81bf81de71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb314705-c62e-4c8d-b5c3-75b5ae788672",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ae965d-79aa-4c44-9cbc-f3ca25749469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66a44c6-3b5b-49c7-8196-124ecd028e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f83a62-eab9-468f-911d-f41000e26b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a09bb0b-6e8c-45eb-a5a9-b64849aca2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334e74d8-f25b-446e-8ebe-b83aee295ee1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9735662-f03f-4934-9805-2dffd956a7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86620017-2320-4524-a546-fe28ba45146b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f0f3f8-ef17-439f-a4f4-3b63c68c7bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13572cbd-a7e1-426a-ae06-88eb4469095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e53cb6d-5477-42a4-8495-bfcc8f856d68",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12cadef-c810-47d2-915b-3051736de462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ca4393-bb9d-4556-8f46-32cdd13bafd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d091cf1b-a2dc-4d6c-8978-c179bbd8d8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035e1751-4345-442b-a4c6-cc49d18db6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d902eea-7941-4b03-82e8-dc0f05037484",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70cf8df-f8d1-4c52-8740-9ccfb97fa896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a5665b-4114-41fb-95ec-57afaa3743b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8de1c0-2661-4f95-9145-f4133fe63325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae8b00f-2450-49a1-8c6c-38672c93c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f0a8f-5e75-4e60-83d4-d003fda3fcc1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c1a544-643c-41c4-8399-b55c7ce4a0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d47696-bf0e-4168-8a88-70f4c6eaba49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade8eab2-7681-4f2d-a7e1-e7531757a58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54ef04c-54a0-436c-bab1-e186c7c89028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95be6351-df07-4295-8542-3ff20b890b94",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3ebfc2-dfa1-405d-af0f-c219c51ba7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76dd2a6-23ae-44d4-b819-356420930e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf18346-840f-4926-816c-c66378bbcad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947f3307-2d30-4597-b17c-2fe3c620d419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffb0e32-ef19-4bb3-a3f3-71331d0a714e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cc8145-6cf5-46be-9eb8-3a4258d9e59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2acdbc-1e5c-49f8-a7a7-20c55bc892d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea4f38a-f865-43e0-8957-0016072c3d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908a9585-6b35-46c3-baa1-5c44ff208275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee25b534-bdbe-4605-b035-67131849a048",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f4632f-1d35-43e2-8768-d75b4a8059dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b8cd1f-03b0-43e6-84ed-87419df5e770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc8a1ff-e646-4d84-9a9a-a25ff645b859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4173afcf-4f03-4396-b574-72e47299a571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb87dd3-3bf7-4f7e-a6bb-e917ab042130",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351fd25e-729a-4797-8739-0b415ee7a872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "704bdaae-90ef-4af7-8922-1e80938e33e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0176243a-5580-42de-aff0-3b8168272f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c257b94b-f4cf-4f9e-a4b6-e76613e5f8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1c8366-8ec1-4ee1-8729-9e31a0a89ee3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e71579-ea65-4da8-bfb3-ea6b891f9ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ada6849-561a-40fc-bedc-c00657f11d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a87a879-785f-4ab7-873c-d599b55aca0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9364484e-d547-4643-8556-1ccb2d93a3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0b8f82-7fa8-4aee-a86c-dce3c20b82f0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b903ee99-178b-48ba-a502-eef3826160fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b4793a-a6f5-4942-841d-07d6de968341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaba795-14d3-4db1-939c-c64542a86ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5ea99c-2bee-4b23-96c2-f471a5001de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72eae69-6a09-48a3-b55e-69ca39c21727",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b42f276-2aa8-472e-b164-774bb17970b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f714b4-58f6-4dac-80db-d906cd6e0b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001fba21-7e7b-442e-ae8f-9dfeefb778ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a3427b-d8a4-41d7-9975-c29fa7717daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5c2a25-f11b-4f2e-8262-ef645ae538e0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfdb056-cbd7-40d5-b440-b8bfe2113695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4243e04e-9197-417f-ba36-9bfe22fdedf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f98d1d-40c9-4f89-8812-fed930e322cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dd6289-737d-4a8f-806c-012ee7f57022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fba8d8-9441-40ae-8ee7-7c0149ff3957",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a06933d-9d9e-4a07-8fde-59cbef45ab5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07853d0-6aa7-495a-adbf-8a71cbde31c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc46982f-2e9c-4c20-9c2f-e171882b43bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa79eea-ade2-45f7-936e-12c58d05f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa4417d-57c8-42a9-910d-7fe7d8cbbb1d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa5b617-b2ec-420f-8524-b28288ac48f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e5b816-4820-4a1b-8597-c303cda1c2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda5eb45-9963-4ab2-b585-f73169381db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a653fc-05ae-4a39-8d65-9128c7d3a99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50713e9-3b83-4bfb-9263-9908044bdd50",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf5988c-991d-4c00-889c-9eff6e19eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e191efc-9efa-4698-a89f-e07f461089cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f545a65f-558e-4c73-b808-11c75cdaff6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0784b1-011b-41dd-9859-7ba6ddd6eb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed044fd-55cc-40f0-8759-6432cf0f2c1d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f7d3c8-23d2-48e3-a058-01aec1d692b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf9f31e-48d9-4e9b-a79e-be366c803ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cf15d5-64d6-4ffb-98af-95b93a5b6072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b4283c-ac1d-4e53-8076-45e83293eb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02d057c-f6ea-410d-8ab3-114f322a49f6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d991efdc-3596-4f9d-8466-b812b2f20e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dbf864-3139-4899-bdb8-ba644f4a6a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b723908e-4d5f-462d-b0b2-669268fd6f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe8c85b-5e96-41d3-93cf-2d1a5b04d3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcc6d67-beaf-458e-acf2-8230cb90c343",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f5eb2f-3e7e-4e61-8d98-acf054cde974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7650aa6-d6cb-46c7-bf7a-94f289a3349f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9546a355-7d19-42ef-a07c-a85803526970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f6fbc5-e8f7-4179-9ba7-b35084a62bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3218d1-9a3a-42a0-8237-6d83ba138566",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418294c0-59bc-48ae-b45b-1f113659976a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19dd363f-c9cf-4965-a59e-9bc87726d9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0052b0-7941-4d6f-8194-e5341cd6eff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68547992-f246-4d75-aec6-cdbc8b937c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c82c997-c659-42af-9c41-c4e4d00e4f90",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11124107-4789-44de-b280-7477988e005e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af363828-f9e1-4052-9ea5-2f954cb3dc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c935d-11f8-473d-a1f2-eee6e22b2e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729151e2-8d68-4568-b5dd-eeeeccaaf2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0219510e-09a2-401d-a4b0-3941134362dd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a59e28-d2e2-4ff8-a290-11915904fcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91aedbf4-c71f-4d05-877d-0d99efa22e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51657974-ad0f-4d25-b161-645ac5ae248b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b526b42-f41e-4a42-81a4-19997b150e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7a357b-3570-40fa-94be-9d781d94677b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255a5a22-4903-43db-bc4d-86f11eab1c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f391eda3-482d-4b9c-85bc-60402d59ba2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44fed6f-f308-4623-bf7d-405ed97c9cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2fc4cd-4fd1-4a1e-a1ae-058e8b8441d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f432b6-7149-4b97-ad43-93549de21601",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecaeb6a-0d37-4705-95be-672b42f9f725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a1d896-8099-43fe-8e74-94670705a804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9fd0f6-94ed-494b-ba4c-97298bfc33bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae13163b-641f-4280-a0c4-faff99d89288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc885b4f-fc78-4593-a6d6-fa31c1cba6fb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d83755-25ea-4ce9-826a-fc7865fd1215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68119ab-e672-4355-8f32-f7c265b7bc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f7a0b4-fa2d-4d5b-9762-92fad4769607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e92be3-a1ac-4ca1-93d5-18d243182a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f396da-12ad-42fc-9487-f947d64c2d29",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802b41df-35ed-4eac-b5af-a6737c4bb146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7217251d-935a-4acc-9efe-4245e2fc6260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9936c347-fb42-406e-8bd6-d85968d8f13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0f3cb2-8c38-4a7d-9e3d-250f06c72d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c536d5-30f7-4f93-bcbe-ac3c6f7570e6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c967e86-a68c-41f0-b96c-799ba4d565f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badf9d2f-037a-4c0a-a774-d3d000b73611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4c2063-3d60-4312-b6bb-475f18e04488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4150a007-2bfa-43a3-afff-c0236a94081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc652d47-2e87-4791-9cfc-403a42dd7c11",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0bb28f-c68a-4450-8607-0cf21f125b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ca7d9a-4e11-4d20-8062-eaf16d0ac5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d736674-34b5-4f80-b1ab-339decd9993c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad62333d-74bd-47c3-9ed8-ef1cbd3c674e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a092909c-d8e7-46c7-ab16-b96f43115530",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae5b161-dc19-4258-9ee2-05ce8aa05afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f121d12-5ed4-4ee5-abb5-55dcf005377b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23a28b-864d-4056-9f91-0e970f68aacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34d669f-f90c-44c8-a450-d21f3549a12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81030c95-c653-4040-b18e-2ab8c2aca283",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f02af82-1084-4d90-8f47-25be21fa7bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86216cbf-dd61-448e-bded-93d042c7172d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d5e40d-55ff-47ef-b888-da3cc7ed31b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89916f17-9439-4891-9ce0-dd43c3d7b662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869010c8-1054-4514-b3c2-0ae6ccbe60a5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86522a7-462e-4d65-80a1-42cc25a5d2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cefe6d-228e-46f3-8eb5-30896ce44b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635285d0-78da-4cbe-b80f-eaf4f06299a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8b9f7f-4ff3-4f46-9316-15e9aabebeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbe9b98-6b93-4a3b-93f7-fa1e6b9305fd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7856c02-f0a4-49a3-a6ca-459b49d85309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6aebfc-5ba9-4406-bc13-64aca6c55d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ffe6c3-4e2d-4031-8d5c-2ae137c2e5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc95dac-713d-426d-990e-4b706df3ea3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd483a59-db3a-458e-a7a3-39e3f1595eff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954cea2c-3f2c-40ab-b95a-9c6cc93d0e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6b6ace-0249-4e77-86d2-409c87361e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd75f9-572f-4773-863e-dff3675d30d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6132d4-2968-44de-bae6-adf94655b407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3040ea29-43a5-4b74-a927-f4f9ee366114",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421bddf0-f199-4f68-af5e-e3ff03449608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8959d0-1b53-473e-9c4e-63bbc21a4973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8042330-9232-4425-a952-644f6afd0039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7827a4b-1470-464e-81fc-2bb7e65e5241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d21d0d6-b3b1-4f5f-9be4-dd3dea2390aa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6879b4-1d81-4eea-96ca-3b74582d5646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502c31ae-c017-4ff9-82bb-1f5cb0f5f103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca666c6-25d3-4349-beb2-cf9e05c96d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760b77d7-2a61-4b1a-a04c-58f8b5f82c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faba7944-6927-411c-a60a-02ba1e378144",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090a0d28-69e2-426b-aeb3-870cb5330fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35db389-a207-4223-b48e-98f909414f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92df2824-fd21-4e6c-b6f2-c31bf9499b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f778606c-38c4-4877-8451-17944e0b0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097d4253-98e3-43cd-a528-aa19903859f7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fbad1e-6a75-46f1-a26a-52a5a079d20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb21db73-6444-4c94-a65e-0e001e1d1dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea5895-3649-4de3-8346-e2f9dc0f6738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10c64ec-4d01-49ea-b9fc-b0389284978e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b7e331-084a-4b56-9812-a8ac0acc3502",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a75bc2-20e9-4666-adf7-f93ee65c532c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb84ac8-e7d9-4177-9fd8-6e257b3141d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f400d69-57e1-47ed-9c01-f70cc570cc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160c92e5-206b-4956-991c-b18ed64b6cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70624d78-2aac-4e07-a16d-a76d9a8dbaa0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb1bcc-7279-462f-9e6d-c40da92987e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdda234-86eb-4504-b344-973ff57533de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623f050b-4953-4168-b572-0a40d04928a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec413577-3f10-4fca-9ad9-dcb429e92ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2786e6f-cd2c-4d85-a0fa-29363192a824",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80405e48-7cdf-4f14-b999-7dec58a68a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aa6854-c557-454a-be66-01e44550ab14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f20dd7-3776-4d0d-8d62-daa1f1b93b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50996219-7d43-4c22-b58f-0dd5905705c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4045925e-4a01-4155-8d44-820307a4ea88",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03631def-b9d1-4f05-9f08-a3ddceafed73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7795154-2277-4fff-9365-eef84f74c16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bba007-31f0-4777-844d-2fef2d61f9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecc2931-49a0-4e49-950d-116af7665120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33c4527-e444-4a87-88ba-e9c777ca9c04",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3724b0e7-fba4-4bfa-91e5-16036e3bf9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e54cd70-cc85-49d9-8554-e7c81ed67d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40344cc5-dfc5-4a1c-9163-189651edfc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3670d4-d561-4882-bc88-6df7b67be0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dda037-05d2-4adf-89d8-617ae29b7d70",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02226b7-7e6c-42e4-92dd-af8fc88ed879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f24f385-47c9-40ed-b1f4-a2f0315f2d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93641c95-2e6d-4c1b-87ab-e95d7121e90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecce877-a8df-40f5-8562-6474ff67b7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7605c269-383e-4edf-b216-579215119b98",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739e0242-aa74-4708-ade0-72a88e2aa1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103c3b10-8f7c-4c69-b3de-2a25825eedc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdd00dc-0611-4411-9498-e788fa16d2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1f20ca-dc0d-4567-9a4e-1d3f4d28d13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1caa78-45ac-4889-8bc5-29c999a86204",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411754dd-47ca-4df3-8d8e-beadf7b133e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d14582-225d-43e4-934f-2b7dad15f8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d9cb64-87d4-4fd2-91bb-3fb28ce7ef5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87557d64-a82f-4626-a1e3-4de7bdac45c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663dc017-b37d-4b76-8f4e-f2a7cdae9c5f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001192ee-df2e-40dc-b176-67b37bd63b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48a39f9-a5d5-470a-b54d-c11bfff16db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31874a5-c1bd-45af-9bbe-61e8d5a85dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c8e1c1-1c27-4605-9b16-caf614f9e486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa1c48-2bb0-4b1a-adaf-be512956e890",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98357084-258d-4541-bb4f-748ca1b33a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d442ad-b226-4e29-ac3a-fa8349825860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1fd3ce-90bf-4f4d-bd98-070ef4d420fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9292d6bf-198b-4ebf-bc6e-88f37835c1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf6fc1f-4c6b-43ba-bbc3-1f3c3eeb50e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7a72e6-97f4-4b77-ad62-d16733c097dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509bb77b-4e7a-4e6f-aebb-ba8cd85a48c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3ad891-c03e-4229-bddd-0088c7e366e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911308ff-4007-4294-845c-b8a5ee42d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae50298-065a-4eb7-a691-7f490d6443d5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265cac41-efdd-4cb5-8f54-93757ff79a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ced5b9-c40b-4dce-8bbf-e3225203ff20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5685d5db-4269-4005-886c-d3b997254fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1608b342-e8bb-4d58-b1f1-6f163647e08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b51a8a-b088-47a3-8665-9344f1ff67de",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3857f3b0-cc2d-45be-a047-9c9bc4950656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1e9c54-4bcc-44c6-a942-243058fa3291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc318c1-f871-4bf8-98a2-05830fb53b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84eeca70-0f66-47f7-b876-d08c6c1839ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdb7472-061e-41ee-a533-754858dcc304",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96debbb2-7792-4532-97ad-d766acfbee43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d947eb-35f5-407e-9957-8419a6cebef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52858a48-3d98-4323-92b3-bc3a6aeb7463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77888134-bbb4-44ce-85cc-eaee9326851e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bbc286-d5d4-47c1-ab2e-700616eeb12f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4f4935-d3ab-4543-a9fd-dc040e323f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b14f9c-59e7-4e6c-80d4-440541eca983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14162ee-9ebc-41ba-8008-be75b0a32889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61998f63-5de7-4932-b037-2a528bc90fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d0ee17-be07-49c1-aff7-b63f176fef0b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce918f4d-1400-4902-a3cc-184018fb4961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69daa2b-4adb-4205-a033-86571f45d272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e55afd4-09be-4bdc-8081-291520115400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4af8e57-284d-4be6-ae2c-0ebf81e513b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33515d39-cabb-4c84-be5e-3b6febf06bac",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc7636c-b1ea-4be7-b022-35d0ae560a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3547a2-080a-4a3b-8437-1a014bb103a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb16808-51bc-4601-af15-8e713544277d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfee211-9d92-40b1-a6f8-7109702313bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ef9cd-c19e-4264-a6c4-a141e1748c86",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeefd12-621c-47cf-9bf3-efc1ae2358d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbeaff1d-fc76-43fa-9d81-39e139eb68e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad850c59-3bd8-428f-ba65-df52f7352aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bade3d85-b7d8-4828-b8a3-565ea6eb4396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc59d9b-0b4a-4ce4-a431-d635d366dde8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98228134-0cac-4d05-bc0b-514877ed86cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45afdd79-79d7-4163-ab56-0e9394ee62bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f73d40-ff28-42dd-bfc7-e8c31c06091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ba149b-fa03-4f30-b101-7e5af8a46a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3e4e70-2cca-4a2c-9660-c7941c8c7d70",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95883592-614a-4e79-85ea-39d9510c4c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433095ad-5fe3-4e02-8903-98b55f875c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581ca2f4-3c9b-44a4-8896-30b35b36439e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fa8656-4466-4402-a043-17f331c63c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5243813a-7756-4aaa-afb0-2384e2c43348",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a912d38b-910c-40d1-b194-fa6057d5b7b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd4fd7b-a2f7-4d5e-b8cc-a97f5f64402b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7609b0-f3a9-4662-a9c5-e6af51604591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9084f3bb-37a8-4b84-9da0-e6dd5dbfc1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9576b81f-cfaf-40a4-8a9e-084e0639afbc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a245fd8-e39a-4ffa-b82d-ee6665a1a2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b412a16f-f131-4c3d-9f16-95e95d66c5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e4831e-f0f8-4283-9ca0-a44eb86b990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b7edbc-7879-49ba-b7e7-32dd6675ab10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8b08cc-9434-4b19-aefc-9756f3cbea43",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbda617-8f5e-4031-a089-ec1a81ee80ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b3244d-98d3-4bdc-916f-b7c431cec653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0aaddd-c39f-4821-b3ad-6d028780d7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34afcb25-586b-4685-8938-24c154b71519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9b80b9-8e1f-47e5-8894-2707b745cc3a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5937a301-32c1-41f2-9c5e-1a34d08307a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b5900a-0960-459c-8641-0f736d3b66fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9a1cbe-b807-4f56-acd7-501b13938f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ea0684-8a9f-4676-bd27-47eb925995f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ff7d55-9d8d-489d-9d2b-b565cb3db8c5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b64b78-8447-4d13-aea2-39e9b063a55f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f510137-f269-4d09-9248-c70d1b8ecde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62188080-d6ea-4bcb-bee5-3d8f7ee468f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d8f1eb-c43a-4430-9b0c-813ceed4e8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113eb7a2-d10e-4e6f-86ff-89a69cfe325a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b39983c-01bd-42a2-ae14-36535a70c866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df0c5ac-99dc-4da9-8317-072052149e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f2b88-48a6-44fc-b1f5-797d528dc485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e949b0c0-6025-4171-8554-40628d7fc2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fd9da0-43f5-46c0-b0c3-7d8a2effcbc7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb7d2f8-adad-4488-b328-3f8893421b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1117da7f-136f-44dd-b4f2-a641ea34e033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c315da-056c-4221-80d8-04398066f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068d014a-2136-4640-91d1-96aa24f0246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4d1396-f33b-4cc4-ac80-7b7f54e27464",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b85505-d75f-4024-b45b-9949991947d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b5c0440-59b3-43b5-b83c-86e1752a89f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09365ca0-90d5-46f0-81ed-f86fbc74a072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7695c2-389a-4a97-8433-12d94d24f3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0304c170-3001-4bcb-b3b0-8a5627ed7604",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c807c4-c4d0-4148-96f2-3f11d0059a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acef7a0a-d619-4b25-a2b2-ac3abdda3aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f685c-1d9c-4a60-862f-5c38a8c4fad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee21c511-7cb1-4d9e-a68c-3e46f6eb2878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236367fc-59f5-4bf5-94d6-9107af7aa50d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c234d4-b17f-4438-8e2c-2f7aa7c7cb07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bb8366-6dda-4ad6-ac79-81209ac940ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a2200c-becb-45cc-806e-ecba5a553e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3f42de-2e96-44cb-a4ed-4ec8b0b79891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf9af7a-cb26-4685-8511-6e44b709b02d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dce588-2c31-4ec2-86c4-c9fc14707531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6089bce4-b441-4630-857f-726dd347cb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2d8cc-15ea-40fe-8b22-5fcb3950b433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7043e98-d49c-44bf-8294-dab0da0d4c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d236d3ca-ea2d-4706-9890-65830df9aa22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2cadb7-6ee4-49f0-b6d3-d060385e964a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d66e652-e5ee-403b-8c1f-8ac7bb440ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b481c4-3c9c-4656-8e4b-3f0a04e2e823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d21017-6cd7-4e4c-864f-d82accea4690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0b8431-9e6e-439d-8c7d-5f51c9b83bc5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed49a570-f536-42f3-b018-6507a8350354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f27b15-e725-4a63-881c-da7be5901282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd58a0e3-24fe-4d83-ba3f-da40b549237a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938dafbe-9e82-4af2-9d29-e5b9426cbc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe34e58e-6143-44e2-b8db-20716caeb73a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0dab3a-700b-411a-bd03-643fca7867e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6bb7aa-42e3-4a7f-af92-b454befd7a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d3abcd-4b43-492a-bc36-355652442927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1302a6-eeb9-4e35-a1c9-2dd64f9c1020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df887abc-a78c-4b89-b014-f8a78c2c9c3f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad6a4d1-a7b3-4184-9cb4-b213728fa1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161ad8aa-0cbd-4015-b010-ea7fec28a2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f071dd-91e5-4dfe-9baa-4f89985b8283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b3dc94-a09e-4537-a92a-16663436a890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16523fbf-fe81-4e5a-9321-acfca4d98995",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270f8a9b-7469-43d8-9221-05b7bf191676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e032448f-98c4-4cdb-aa0b-ea6e515ed9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76c72d8-83da-45c1-ab74-ca7f4c4ae247",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e2d637-b72a-4a69-86d1-709f30485346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fed0208-f4e0-4377-971d-359992dddd2c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e30825-948b-43f5-aa41-739ded749a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44eb9a98-dbcf-4fb3-804b-a0433ce1e4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f93b199-d0f9-44a0-b170-478627d786fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543e108d-3b0a-424b-a6b5-2aa158c5a7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a443d523-26b5-4c22-a0a4-835667424e2e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21aa67b-a5a4-4425-8975-68ddf1ed3d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea45552-c443-4fb3-b019-8110b3a95cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d3e67a-a389-40a0-b7a4-c38445d130d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2462c4-a75e-4f73-b123-9bb33b7db109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30f54ca-4ed1-47ae-9acf-a616f096a616",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c7b88f-abbf-4004-9a9b-fd6937eb5e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdb0ca3-c5e3-4aca-8824-eeac62414264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f64174-21bb-4175-ad61-837dc06ef228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1844854-c911-4636-ac98-274651afe308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729e80bd-0cbb-4929-9702-014e80f8a7ff",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0983700-0a64-4591-a173-0908a677a5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1599b6cf-8a75-401d-a929-9ae39c97523e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125c4e13-39b0-4647-9ad3-935b80da1a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58fb1c1-a6c3-4c1d-9739-f36b89f4fdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea43a747-81cf-45a3-987d-781c6b1863f5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8668c330-e991-4bc2-9737-73ecfc3d9872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc5fdf9-6d48-4cd8-9126-67cd85e1d2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45670c44-4d0a-4494-ac3a-e4570bcce258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecd6665-5a3c-46ef-b09a-2daf7a4d15f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64030380-2be3-45fd-a72b-18cc3b5e4ba2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f223b491-ebbb-4775-a717-9e390a15f7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87be4d74-a58a-4eb4-ba9a-08f70370e5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a560a73-3d79-44c8-b5ab-386fa1f08348",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729a2f3a-9d54-4cbc-acbf-d49fb35d2134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69febdf9-917d-4aa5-a8f9-f489e38eb03e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdf7fb2-fa97-4804-8c5e-49f535c2d018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55da895b-b8f5-4514-816e-ded152526f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f026e6ab-d5fe-49fa-8fe4-b10dcddbe313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf15282-f7b7-444a-8757-c21f2746b253"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47bfab3c-e08e-45e5-925c-7dc2d47e6f89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0d6e4ff-a0e9-447e-9f11-6ee635d92795"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17862fda-5413-42f6-8e85-b50f59d30b1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc17a0f9-3782-44ee-940d-45f2c9eb379f"
                    }
                  }
                ]
              },
              {
                "id": "7cedf94a-4b0b-4ae3-810b-adf609229a66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "765a62c9-a9fd-43c7-b8f6-2ebb688910cd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6a67de-57f8-426a-8249-37f0b95761ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "428129c4-6b67-45f3-b3bd-139ade272283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f80aaea-0b16-43da-86fd-5ebf04aa3da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c508f73e-ef58-452b-90af-fd8b7535c928"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf323985-534e-44bb-93b6-93729a936379",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34aa9903-4ad1-4f4a-8515-b21c1eccb70c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87c0d8df-5b36-4816-b929-6d35f1f2a25f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8248f7-c2d0-4cbe-9980-52ecfa8423eb"
                    }
                  }
                ]
              },
              {
                "id": "30ddc87e-62ee-411b-a75a-2a5595bd18a7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "290de1e3-4611-439d-b53a-4b7fea93f79f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70fad2e-38ff-439b-bc4c-5b7668626682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a0db3ad8-8011-413c-b14c-fd3de29d50e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e435df43-8e18-4334-b32d-fd1b67baaf45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cebffe0-2616-4650-a181-962a6a21add8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e721b614-443e-4f66-9c7c-ad68ed8d1d9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ab9b055-9a55-41b2-b8d8-b13bbdad665c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eea16de-7552-4f89-bded-df7e2f1781ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "198ca5c9-7615-4855-acd2-76ed4cb4e7fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "071a50c2-cc68-40ce-8c5b-fccadbf3407c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9999c2b9-46e7-4cee-864e-f8c7437e533c"
                    }
                  }
                ]
              },
              {
                "id": "8cb576d6-cc85-4dbb-b747-6ecd263fabc8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed8ec99f-76b2-4b36-8329-7b590c16575a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6c0f03a-4d05-4610-af1d-c30ec9d7bcb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dde66f1-668a-4348-a6b8-ef6984a85a10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f213472e-a722-4550-a05f-e0e676333355"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7954b6bc-6152-4768-900d-d2478465eb8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7713005b-c42a-43bf-909c-2ef0e94601c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07708a1a-1dbb-460a-aae0-c21c99c2c3e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "632da728-08b7-4963-a6ca-95925ec3ebfd"
            }
          }
        ]
      },
      {
        "id": "4316fbc1-15de-4c3b-af9a-75fb069542fa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "72b50e84-303d-466d-b378-3d922edf19cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "908ff40d-9a28-4947-af94-3e5bf6616690",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b6eef9f-c929-4b81-92e9-b92a49b4ddb0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c8eee2-7fa5-4729-bfb8-629c9665f516",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a34edd0d-9c8a-425a-a32d-7177ced81a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57d07fd-7a23-4888-bbb4-2d1090153d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "278856c7-f78c-478f-9e95-1c9adc99957f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2ea1602-a84b-4416-8212-82d66f5345fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc145642-164d-471c-b6fa-fc14b5a15c90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e20401d-7d1d-4203-9cc3-8d2ab753516b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0d0bfd2-8aa3-4632-9ba5-3d760872a31a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bad3f3c1-5c72-49e0-8760-465c7ef299cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3bfadcbe-f5cc-4daa-b13b-1fd42a65c2cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf5f52c-0549-4ed9-9c57-a242cb013db5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4a50bb5-30e2-4dba-919d-ee325445925b"
            }
          }
        ]
      },
      {
        "id": "37e31241-4927-4f51-80ff-39a65d7cf37d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "043a7b4c-fbc4-4570-98be-eb8acc7633be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ba52b37-e8b5-4dee-85a3-20406af14367",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3084a837-1643-40f8-aac8-1cb5bcd298ad",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ed004f-6d63-4888-ada6-e36049ad218f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8742ca85-6c45-4160-83f0-ad730c2f0d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c43c3e-c893-4661-ae48-262ec8f25f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e731c81d-8618-4d42-9767-53c74695b53e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66d01f6f-32a1-4fb3-be63-e74f7f200afb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e4e27c0-b2a7-47ff-9069-b35674145b29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7caa469d-66cb-4598-8ea9-cc66cfc6f84a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5449e966-d389-4079-a466-4712becd01d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "119f775c-46f7-4835-8295-416e7718bd90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "deed502a-1aa9-4144-bb67-8faa15ac4fa4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a0791e0-043f-4993-b62e-838f8d40e1ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e68b7135-c7d0-4c3d-b523-a9b7b05d3ebb"
            }
          }
        ]
      },
      {
        "id": "7de42505-d55b-461c-b1c6-96af5a41fd28",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0db3aa8f-a294-4db0-8e34-5b42a840cda6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d4f711e-29f1-4808-80d8-3f1be823a256",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4148df8a-a00a-40cf-8b1c-6f24b970f70f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03016d4-ca88-4dce-8ccb-386f8b687ce0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f930787a-ad81-4ac1-84b0-94e5107c73ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a3ed3e-8a5b-447d-808b-619f27fbc567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b75234a1-c3ad-4a7e-99f8-084c190164de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f598145-12bc-41aa-88b2-78362dd6f345",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5497242-c070-44f7-9f44-6d757dc5bdce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c57a1d0a-c0f5-4b28-bc6f-470a418a8f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce67ebc8-ba8e-4c74-b599-d7734ce8f4ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff6a05b-91f3-4990-a600-5b9a28effead",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78f3021b-31c3-4527-9095-5cb0419585d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c348d232-9d2c-49f0-abe4-fe9cad21db25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb576fc4-cc84-4696-bdbd-0527af8f962a"
            }
          }
        ]
      },
      {
        "id": "065f9c09-c843-4938-a12b-cc630f77c9ad",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebc33f13-e024-4121-8913-7070f2f1bb11",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "955c2359-08e9-4315-9cd9-c1f3a8140e0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "71c2abd6-d8c7-44b9-ae83-d3b62f8f509c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1c0b435-5dc9-4ef9-b762-43b295da77ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16923ac3-cb42-49d2-9b8b-4d535d991e2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 249.01056338028158,
      "responseMin": 15,
      "responseMax": 8115,
      "responseSd": 832.2195398838404,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689986498466,
      "completed": 1689986584563
    },
    "executions": [
      {
        "id": "a0309e50-498b-4ff1-bc96-71da2067f429",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5535e6b6-4a14-40c8-83d8-9585ed31760a",
          "httpRequestId": "bbd4a191-3094-47d1-a3bf-638403b725f7"
        },
        "item": {
          "id": "a0309e50-498b-4ff1-bc96-71da2067f429",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "05c0be52-0a0e-4321-bc16-7fab84be70f3",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "0b30c1d0-d93e-4137-a609-db1b0e4fc9d2",
        "cursor": {
          "ref": "041b94f3-f14a-4729-9bea-ce54aef5a025",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0d67b62c-dabb-4080-848c-ab9407664e10"
        },
        "item": {
          "id": "0b30c1d0-d93e-4137-a609-db1b0e4fc9d2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "35551b98-8e5b-43c6-a65c-c682efaa7d69",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "f1d1841b-69cf-44de-8666-3e1325c8dae6",
        "cursor": {
          "ref": "aed64cde-9bca-421a-80d2-1a3d3076bb3a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dc7619f9-433c-4e7c-b3b7-f0c99131980d"
        },
        "item": {
          "id": "f1d1841b-69cf-44de-8666-3e1325c8dae6",
          "name": "did_json"
        },
        "response": {
          "id": "ccc7ecfd-b5ed-45e1-b48a-831624290244",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e255963e-5ee8-4306-bfb0-fbf1244d4d44",
        "cursor": {
          "ref": "ab506bfe-4bb6-46ec-8ec5-10f97e16736e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24c24a15-8135-4c2e-8ac1-28553d8e2882"
        },
        "item": {
          "id": "e255963e-5ee8-4306-bfb0-fbf1244d4d44",
          "name": "did:invalid"
        },
        "response": {
          "id": "1b3e878c-e721-48ac-ab64-82dc2f040e40",
          "status": "Not Found",
          "code": 404,
          "responseTime": 716,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e255963e-5ee8-4306-bfb0-fbf1244d4d44",
        "cursor": {
          "ref": "ab506bfe-4bb6-46ec-8ec5-10f97e16736e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24c24a15-8135-4c2e-8ac1-28553d8e2882"
        },
        "item": {
          "id": "e255963e-5ee8-4306-bfb0-fbf1244d4d44",
          "name": "did:invalid"
        },
        "response": {
          "id": "1b3e878c-e721-48ac-ab64-82dc2f040e40",
          "status": "Not Found",
          "code": 404,
          "responseTime": 716,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25a2869-2c38-406c-811f-dbdd40d2647f",
        "cursor": {
          "ref": "8c7376db-7f38-4d65-8846-dc04a58ba920",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "305ea74e-3da3-4a67-93e4-34f2138a39b3"
        },
        "item": {
          "id": "f25a2869-2c38-406c-811f-dbdd40d2647f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ef176cbc-7f06-49fe-ab8d-5692b03131e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dfe8e0-f0f1-4438-8659-fe54e64d35f5",
        "cursor": {
          "ref": "d4abe251-bb2d-402c-be28-4611567e3938",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2eeb0574-7f07-4c2c-9a80-a07ca45a5412"
        },
        "item": {
          "id": "d3dfe8e0-f0f1-4438-8659-fe54e64d35f5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "119d9d0a-c9b7-433a-8fe3-7eec93b0cbde",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64c2a06-64ed-414a-973e-def598952882",
        "cursor": {
          "ref": "6647d4eb-80e6-4ac5-8a03-aed8316d12fb",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7511b199-cf1e-4aec-8181-71c396ff7a55"
        },
        "item": {
          "id": "e64c2a06-64ed-414a-973e-def598952882",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f3ccda02-fa78-455d-bb42-86a538c2c552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d822717-8323-42e1-a99a-9ee0a594dc66",
        "cursor": {
          "ref": "1f95951d-079d-4280-bba4-5ad17e29c229",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d8caa15d-86c5-4c1f-8fe9-2e7b771e0475"
        },
        "item": {
          "id": "0d822717-8323-42e1-a99a-9ee0a594dc66",
          "name": "identifiers"
        },
        "response": {
          "id": "f13bfb09-5cfa-4082-8c15-4bfbceef5c86",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed03564-9f9c-4a6c-a7f3-7a723063a3bb",
        "cursor": {
          "ref": "1052b955-b50f-4d6b-8131-45b7395e1a2a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bc9128a1-8ff4-4138-90f8-a860dcdf2a09"
        },
        "item": {
          "id": "9ed03564-9f9c-4a6c-a7f3-7a723063a3bb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ebd8929c-8bc0-4637-91bd-217a191dd62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39cd151-9664-4493-968a-7d787c031015",
        "cursor": {
          "ref": "c7337731-bdd0-4f3d-901e-e15f52ad054a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a64d1662-b005-49b7-a014-b64e4f1e6749"
        },
        "item": {
          "id": "a39cd151-9664-4493-968a-7d787c031015",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b7f18cff-7246-4f69-b31d-e961620025ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a102a956-03ba-4adf-992c-79f8abd602c9",
        "cursor": {
          "ref": "8b035185-01e7-4f75-807a-019489d008de",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "da94b8bb-a7e1-4633-b24d-82dddc841da4"
        },
        "item": {
          "id": "a102a956-03ba-4adf-992c-79f8abd602c9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f38cb9f-1722-4419-be94-cc5d31897fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ad7388-23dd-473b-897a-9719097a1932",
        "cursor": {
          "ref": "146a099a-14cc-48b8-b0e7-ea6068a8bf04",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "39e544f8-286a-4b86-a76d-d4b676981a4f"
        },
        "item": {
          "id": "84ad7388-23dd-473b-897a-9719097a1932",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3d4fb6ac-4fd5-45db-add5-f68d9c6eeee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a2eb28-6b25-4bae-92d0-33cd9ca0634d",
        "cursor": {
          "ref": "0e185f59-e1ec-40d3-988d-7def26c3b3c1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "21c2b6ac-0770-4c2d-93fc-a0a23230ceaa"
        },
        "item": {
          "id": "29a2eb28-6b25-4bae-92d0-33cd9ca0634d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4ceacc57-0cbf-4a2a-9d3f-184b44d66c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59e0268-e83b-4d15-8f38-9a7317039ff0",
        "cursor": {
          "ref": "79114b5d-9f52-4a46-8a1e-542a1d207fa7",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "63c13abd-5ae7-4359-b9b0-145ff0d3d39f"
        },
        "item": {
          "id": "e59e0268-e83b-4d15-8f38-9a7317039ff0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f3b612ce-7a97-4b08-8439-47f964eda001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8026db-b3eb-460f-bf91-b8a79ea5d338",
        "cursor": {
          "ref": "16a709d9-eeec-4081-90a8-c570ec3bf085",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7bef1ab1-5519-4d19-8ade-9fe5766008cb"
        },
        "item": {
          "id": "4b8026db-b3eb-460f-bf91-b8a79ea5d338",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "df31b842-ad4f-4856-b0a6-0e1b25037fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14196abb-5bcd-4c67-84b1-913dfa934d07",
        "cursor": {
          "ref": "19e6d3ba-4dc6-4c03-854c-87dcf00cbee2",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d5fb32bb-0085-4a2d-80ea-de952aeb3896"
        },
        "item": {
          "id": "14196abb-5bcd-4c67-84b1-913dfa934d07",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6d30ede5-d513-4329-a13d-a2e363f6d2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5546fc6-4113-4a46-ac94-166077bae155",
        "cursor": {
          "ref": "32788246-9a58-472f-9c5d-41cf66e2046c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a3a6d123-9d71-4f96-a6cc-b29c62fd363d"
        },
        "item": {
          "id": "b5546fc6-4113-4a46-ac94-166077bae155",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "34955c6b-f93e-4112-aa2a-7c0d005a90fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a9e67-881b-43a1-aed5-ea9d1adf48b2",
        "cursor": {
          "ref": "edea7b3e-5869-433b-addb-bab8da9eba65",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "561b3f6f-fe90-4a32-a371-b98e4b424cba"
        },
        "item": {
          "id": "a06a9e67-881b-43a1-aed5-ea9d1adf48b2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "66c57e0c-9d82-4d6d-8eba-15b6baef80b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d4e98-ab40-4122-ba61-eb775259f19a",
        "cursor": {
          "ref": "08aba0a7-c875-4db6-96a8-8b51b3820ea4",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "77c9ec12-a53e-4869-9f7f-17f69c3382ed"
        },
        "item": {
          "id": "6e3d4e98-ab40-4122-ba61-eb775259f19a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e91fc92a-b180-497c-a2b1-fe6745b2c887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f419b2f1-a377-4da3-a3aa-8a7d460648bf",
        "cursor": {
          "ref": "f766e6c6-e790-481e-ba6e-be9d576ac4a2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "60679377-bee7-47c5-ad2f-6d4b31aaa17f"
        },
        "item": {
          "id": "f419b2f1-a377-4da3-a3aa-8a7d460648bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2f7d4ae9-2e12-4709-911f-e7fb46e9ad0a",
          "status": "Created",
          "code": 201,
          "responseTime": 570,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "c199514c-7406-4cec-aaeb-41a457ad95eb",
        "cursor": {
          "ref": "d7ce7918-1455-4c59-b327-48519ac58324",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "df785f9b-56dd-43e2-a069-da1ab70cf5c7"
        },
        "item": {
          "id": "c199514c-7406-4cec-aaeb-41a457ad95eb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb15b830-f16a-4bc7-a96b-ea2a0c7373dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cab4d63-4e0c-4b1f-af2b-0f1089fdb159",
        "cursor": {
          "ref": "01dec2d5-e482-4a93-a91f-d526bbe02cde",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "70518a4b-f259-4671-a9dc-e85762db3306"
        },
        "item": {
          "id": "2cab4d63-4e0c-4b1f-af2b-0f1089fdb159",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eef35cc5-02c3-4829-a3d3-dc3815635e64",
          "status": "Created",
          "code": 201,
          "responseTime": 5981,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "c755676f-ebc7-4b5e-a148-1dbb0ab51263",
        "cursor": {
          "ref": "73034ad6-cb14-45a7-b316-95aa6ced6f08",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3785cee5-a4a5-49f4-9c3b-e921411878a0"
        },
        "item": {
          "id": "c755676f-ebc7-4b5e-a148-1dbb0ab51263",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b68cc552-09da-41ed-b921-7855b74d8658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c67d6f-ae89-49dc-8830-e78cb5b86fb6",
        "cursor": {
          "ref": "f5412c32-71ca-446d-adf5-5f56ca32dd0f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fc49c3bd-6fed-47ba-94cc-776868dd55a9"
        },
        "item": {
          "id": "31c67d6f-ae89-49dc-8830-e78cb5b86fb6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "60963599-da30-4202-9a67-07f5f1abcaf7",
          "status": "Created",
          "code": 201,
          "responseTime": 3065,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "75732833-bb4b-4bf6-b71f-3277d47307da",
        "cursor": {
          "ref": "33cb2888-b427-4e9d-a7cc-f38baf8abfbd",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dc6d864e-0d19-46bd-ac48-14f37ff5b9c4"
        },
        "item": {
          "id": "75732833-bb4b-4bf6-b71f-3277d47307da",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac809180-17b1-4118-ad56-a9ef471b4792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d116b-04e2-472f-8219-a7148a3ee043",
        "cursor": {
          "ref": "ca92a908-c222-4370-9d0e-016829d0dbd2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0d38f828-057c-4a2a-af2d-586d461f1cb9"
        },
        "item": {
          "id": "478d116b-04e2-472f-8219-a7148a3ee043",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07cb5cb8-6b10-448f-aab6-8afed9f25e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769772b0-dc4a-4331-88d1-30676e57566d",
        "cursor": {
          "ref": "0e16a5c8-3682-4ae0-85fc-c66f0758dd18",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8a754a14-bc7a-4e2f-93c1-5f0fc31fa63c"
        },
        "item": {
          "id": "769772b0-dc4a-4331-88d1-30676e57566d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b46f5856-8f6c-4ebd-a4fa-d5e856a01304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b000a-97b6-41e2-b075-a231aba54492",
        "cursor": {
          "ref": "a4ae18c0-4b3c-428f-82e0-1065174d3911",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f7190d1e-1d14-4c0e-aaed-fb369c780a46"
        },
        "item": {
          "id": "511b000a-97b6-41e2-b075-a231aba54492",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f29e9c8c-9aac-4a10-8b24-639fecb06864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019e63b5-96be-41ee-a7c9-d192c9805acd",
        "cursor": {
          "ref": "c9d21d69-a7d7-47ba-9455-b15b6d55a72c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e060cbc1-a52c-4193-ade5-6078a638ed39"
        },
        "item": {
          "id": "019e63b5-96be-41ee-a7c9-d192c9805acd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "beddff1c-1af8-43da-9f2a-ffb78260c9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4408cddd-6354-49d1-aa5e-cac246606ce6",
        "cursor": {
          "ref": "51eec708-3a71-411a-bbd9-50b455421e1d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6e5ac388-d3e3-42b3-838e-e70df63e19a7"
        },
        "item": {
          "id": "4408cddd-6354-49d1-aa5e-cac246606ce6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5a78d184-d7a8-4b12-b680-0967cc7ea802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88ed32-cb15-4c30-a473-73a4f443ca68",
        "cursor": {
          "ref": "94f03660-1be0-408d-ba9a-bd0c288b48b3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0b94d9c1-a0de-43cf-9388-80ef9e040c1c"
        },
        "item": {
          "id": "9f88ed32-cb15-4c30-a473-73a4f443ca68",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4191d56d-3259-498a-87fb-1355116c9848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec10468-02d8-4bd3-b92f-d5882eac7112",
        "cursor": {
          "ref": "39a85afe-f9ef-4d5f-b9eb-7ddb5a478475",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "13ccf666-0085-4443-b917-2d5163127328"
        },
        "item": {
          "id": "7ec10468-02d8-4bd3-b92f-d5882eac7112",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f7fdd982-fe83-47f8-8731-e07a477e4f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4687032-4494-4ddd-8f0c-e5450de90046",
        "cursor": {
          "ref": "b8ab9c0a-2c53-4cde-9fbe-3ca9220b4c55",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2f3d1809-1fd6-4de4-b8f8-506f58e46f90"
        },
        "item": {
          "id": "a4687032-4494-4ddd-8f0c-e5450de90046",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd04f932-ce00-41e7-8cff-e58205caa329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c2546e-e4c7-4353-ad61-24dd7304f8a0",
        "cursor": {
          "ref": "3d8d21c0-6f1b-432c-b2bb-358a6eeee95d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c7d4b1ef-2cef-4616-8360-8fd96eb34ecd"
        },
        "item": {
          "id": "73c2546e-e4c7-4353-ad61-24dd7304f8a0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dac40251-ec12-455e-8ec3-9cd9fd0fa141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35596bf9-6206-42e9-b4d0-166f459c2176",
        "cursor": {
          "ref": "b1a1db52-0f22-47d9-8a1d-3aa08d321221",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a1df5ba2-b981-4bb6-a436-811645cd845d"
        },
        "item": {
          "id": "35596bf9-6206-42e9-b4d0-166f459c2176",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4fd39444-f1dd-4d7f-97f8-9d983b748b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2890862d-f528-41cf-944d-196f340e0dbd",
        "cursor": {
          "ref": "db9573a2-36c0-4689-b783-73e5b4cda5e4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9f37da1-bc52-4e46-825c-9eacca161c38"
        },
        "item": {
          "id": "2890862d-f528-41cf-944d-196f340e0dbd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ef0f6665-2ba3-46ca-a028-0bacb64e82c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba99ff34-7909-4105-ba3e-5f782112340f",
        "cursor": {
          "ref": "51ec8f7c-ce38-4254-ae5f-3d670863f17f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e8a7500e-b44e-4c39-9878-33a011af20f6"
        },
        "item": {
          "id": "ba99ff34-7909-4105-ba3e-5f782112340f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4decf15f-2be4-415a-90af-553e0bdfa4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cfc873-dce8-4fff-a806-4a3e9050cece",
        "cursor": {
          "ref": "7efb8930-b0be-4b1c-9b65-fb0ca9d5c556",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c046853a-ffc9-4ec1-abef-00322af816fa"
        },
        "item": {
          "id": "83cfc873-dce8-4fff-a806-4a3e9050cece",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c31eb700-6da5-46d8-a86b-2b4863dbff59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55cac81-2c6a-4c8d-969b-b7e6a855d285",
        "cursor": {
          "ref": "2403903c-54de-4e0e-8764-942b3b779d03",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ec8be244-6874-42a0-bbb1-6560fc64f316"
        },
        "item": {
          "id": "c55cac81-2c6a-4c8d-969b-b7e6a855d285",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "397a6ef6-4a94-48f2-b3ff-aa35dd6d666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1a010f-4224-4795-b904-279a57eeac8d",
        "cursor": {
          "ref": "bde51f80-49fe-4b5e-b8e1-66b2e74ea931",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d42b7260-6dc8-49a6-8125-9816f7912d95"
        },
        "item": {
          "id": "2e1a010f-4224-4795-b904-279a57eeac8d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4d38d972-4a74-49e5-b82d-3a38acbfda66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f8e516-85d6-44d3-8a3d-54b544571ca7",
        "cursor": {
          "ref": "4ce67a37-0c32-4011-ab93-cc8e4866e736",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "96674214-d3d1-4a69-b98c-6fa8020f5d57"
        },
        "item": {
          "id": "c8f8e516-85d6-44d3-8a3d-54b544571ca7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "62779273-f654-4b69-bc64-1a7453f5d59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f808e4-7ed2-4d6e-8d83-db518290bbbf",
        "cursor": {
          "ref": "74243295-dd4e-4969-9f27-510573486635",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b5f38394-e5e6-4a92-a2d4-4ef6bd3ff68f"
        },
        "item": {
          "id": "05f808e4-7ed2-4d6e-8d83-db518290bbbf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e252ff64-2be7-49f6-8ba2-caf30968c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a740342d-323b-459d-8ca2-ccc6ca07a0f2",
        "cursor": {
          "ref": "4c615855-7104-4545-98bb-4f39eb2cd5b4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "980c24b8-a3b7-47f1-afb1-9adb7a24166e"
        },
        "item": {
          "id": "a740342d-323b-459d-8ca2-ccc6ca07a0f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1116b3a0-1b4e-475c-99b9-78941387f22e",
          "status": "Created",
          "code": 201,
          "responseTime": 3218,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "949c7c66-2436-4253-baeb-b127d8fae529",
        "cursor": {
          "ref": "331978ee-22ad-4c4c-9080-a094c3a39f26",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0e16afa1-f9bd-4ee5-8906-24baeea2120e"
        },
        "item": {
          "id": "949c7c66-2436-4253-baeb-b127d8fae529",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0e1bf48-7e9d-4d5b-a6ac-fd783e306b15",
          "status": "Created",
          "code": 201,
          "responseTime": 2957,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "7a735900-9862-432b-a755-5d5de6d83ffa",
        "cursor": {
          "ref": "c46a3c78-7a0c-471f-9a7c-1ce5e3a6f094",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b9efd2b9-dd8b-4bb4-91a1-daae829138fd"
        },
        "item": {
          "id": "7a735900-9862-432b-a755-5d5de6d83ffa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4cde82c8-81c5-46e9-a014-f10a4783506e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0132d5a3-8b9f-41cd-9da3-73ba57f4df46",
        "cursor": {
          "ref": "350f5ca8-3e14-40ff-a7ea-f8c7165ef011",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "abb7d8f4-c226-482f-8bc4-00a6ce5e88ba"
        },
        "item": {
          "id": "0132d5a3-8b9f-41cd-9da3-73ba57f4df46",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1fade309-18a9-487c-b2ae-7274d6cbec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fc0e60-3dc1-48a7-8e93-783b9c4cd65c",
        "cursor": {
          "ref": "9a82427c-bc56-4895-810a-13cae80d6492",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "555f2a26-38a9-4ac7-bac0-9d34f048b7cf"
        },
        "item": {
          "id": "75fc0e60-3dc1-48a7-8e93-783b9c4cd65c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "54a30bd3-84d8-417d-8985-f574c9044bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308ab8f8-ed4d-4921-bd1a-2267b77b0291",
        "cursor": {
          "ref": "62560307-4a8e-4f60-9a74-465459e49dce",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0ef3d9dc-40c9-4e40-94f7-463ed3a55911"
        },
        "item": {
          "id": "308ab8f8-ed4d-4921-bd1a-2267b77b0291",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0c65d6cd-dda5-4745-823d-6874430bf53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d96561-e96a-433d-9fb1-f8dd52531d01",
        "cursor": {
          "ref": "905e93b3-0e97-4e8e-91b0-fca2ef451ef6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cad78ad4-9961-42cf-beff-344522efb1ae"
        },
        "item": {
          "id": "d3d96561-e96a-433d-9fb1-f8dd52531d01",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8c5ca3b-30e1-4d0e-8fb6-5c8a945d5bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4830f9-3285-45b7-a81c-1eeb41f0795a",
        "cursor": {
          "ref": "8fc77a5b-5b2f-4850-a646-5cbc778611bb",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a4095087-3080-4d3d-ad81-43fa999a71ec"
        },
        "item": {
          "id": "ba4830f9-3285-45b7-a81c-1eeb41f0795a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bf21bc5b-7b7e-4eaf-964b-593559e661a3",
          "status": "Created",
          "code": 201,
          "responseTime": 3639,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "41a8d863-723d-4a5d-8274-691852f7b1ce",
        "cursor": {
          "ref": "0d1a87fd-cbec-42ee-9ad7-657db7a548bd",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5a401870-364a-4945-8888-8bb91e79d54b"
        },
        "item": {
          "id": "41a8d863-723d-4a5d-8274-691852f7b1ce",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b4be49f-bf35-495f-8d53-a18bc9bf1dea",
          "status": "Created",
          "code": 201,
          "responseTime": 2889,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "140342a8-c393-42e3-bec2-9432098684a2",
        "cursor": {
          "ref": "37f60d5d-9506-4811-b496-b94cf8c83940",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a80c32ad-b727-4da6-bd18-41ccfda71690"
        },
        "item": {
          "id": "140342a8-c393-42e3-bec2-9432098684a2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "acab36ab-4069-434c-8e8d-70dd691c5b54",
          "status": "Created",
          "code": 201,
          "responseTime": 3912,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "d2251c82-e78f-4178-9809-a787ce261706",
        "cursor": {
          "ref": "53714627-03a4-43d5-a468-9f6c12ec4c53",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "191f9fb5-1138-4a28-b87e-90bb3bc760ed"
        },
        "item": {
          "id": "d2251c82-e78f-4178-9809-a787ce261706",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fb0b6879-aec3-4bd6-a40d-dc52f397b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62283bee-4e02-4951-a929-2f3f617c7f01",
        "cursor": {
          "ref": "f86899c8-0d90-4e98-923a-186d650c5af8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a814112b-f553-4968-ba48-6801e622f2e3"
        },
        "item": {
          "id": "62283bee-4e02-4951-a929-2f3f617c7f01",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ab0bb0fb-efdd-405d-b990-945ff5b4c29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a981c7-4776-4fbd-a2a5-b7dc231b8eb3",
        "cursor": {
          "ref": "4ba50d14-f425-4dee-9305-64bc47ad57aa",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "974bbb93-1548-4594-978e-f6dbf8d1c584"
        },
        "item": {
          "id": "27a981c7-4776-4fbd-a2a5-b7dc231b8eb3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01a5e42a-9227-44bf-be02-c4aca118de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f76592c-45a6-4c4e-98c5-cb06e6c153ef",
        "cursor": {
          "ref": "c68885c3-2a1d-49e1-87d9-c1c5095e4578",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d0778a34-a57a-4d2c-aff5-177c8547d145"
        },
        "item": {
          "id": "5f76592c-45a6-4c4e-98c5-cb06e6c153ef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "92c744bb-e0fd-4592-9f68-36c3c2bc8090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1312b9-3caa-41f6-a842-2e3a0c43e598",
        "cursor": {
          "ref": "f653c24c-085d-484c-8d0e-d6e63a842a7c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "10120c7f-b790-4ff8-9a8e-fba4eda0171c"
        },
        "item": {
          "id": "1b1312b9-3caa-41f6-a842-2e3a0c43e598",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "164941ad-da78-4eb3-be23-151b7e0cfcc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c780c7ec-a34e-4119-ad81-fac825ad3461",
        "cursor": {
          "ref": "787393c1-7479-4fd2-8a58-97cd60fbcb98",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "415c1527-40cc-4e89-ae95-bbe88c90b633"
        },
        "item": {
          "id": "c780c7ec-a34e-4119-ad81-fac825ad3461",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4208aec9-90a9-4f0f-a0b1-c923a70e6f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07389fa1-71f3-4e6e-b451-b4736d9d9513",
        "cursor": {
          "ref": "6acbdff9-22d3-44b2-b9c3-26c170c28a06",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8f6eeaa6-0aaa-4f71-9f6a-a6b2b2e6e521"
        },
        "item": {
          "id": "07389fa1-71f3-4e6e-b451-b4736d9d9513",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a7223b20-45e0-4ab0-bed6-fb53ca018d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12cdc1d-8f64-4664-bead-d06befb7c118",
        "cursor": {
          "ref": "c3d96e0c-604c-4e02-b421-2df96f89f9da",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fd829724-8ca8-4092-a074-18b55f21144e"
        },
        "item": {
          "id": "f12cdc1d-8f64-4664-bead-d06befb7c118",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d257b54a-81dc-4f53-9e28-94abec0d9bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f9d6d7-dc78-4b89-b162-64c5c0e29b4f",
        "cursor": {
          "ref": "2e3d5f7e-3e90-4505-ba07-ddbc5ed477f8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7fbfcf9a-2055-4a29-8899-18ef2c271313"
        },
        "item": {
          "id": "45f9d6d7-dc78-4b89-b162-64c5c0e29b4f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6186055c-ae93-450a-b2d6-eddd5dc2b711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec17c764-b8bd-4958-9a7d-39412ad6d6b0",
        "cursor": {
          "ref": "1319efa3-8638-47f8-afe6-fd2abd29622a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "727dcfba-2570-40a4-8377-3daad09bca30"
        },
        "item": {
          "id": "ec17c764-b8bd-4958-9a7d-39412ad6d6b0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fafdb316-583f-41df-8de5-f7242fc0912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd112507-4113-4e72-9772-17c78e72c629",
        "cursor": {
          "ref": "9ee6553b-af73-492b-ac75-4eb851cf7f66",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1fc601d9-431d-47d5-9352-3f5639ce5de3"
        },
        "item": {
          "id": "dd112507-4113-4e72-9772-17c78e72c629",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f17779f5-8816-41ae-8feb-992fbd4fffe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15bea0-28f3-4b14-be96-ef3e581973fa",
        "cursor": {
          "ref": "0bcbba1c-d08a-408e-af0d-de4b194a56d6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8654adc0-ce46-4af1-b602-649cb17c5258"
        },
        "item": {
          "id": "ab15bea0-28f3-4b14-be96-ef3e581973fa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "285df510-3d5e-448b-a661-5dfa744167de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06809a57-1c6c-4e88-bef3-a321efa1a284",
        "cursor": {
          "ref": "82bf2026-e286-4642-b38a-e9f08514e4a4",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c0bd0e7d-3586-4c87-a95a-b7a71fb118f4"
        },
        "item": {
          "id": "06809a57-1c6c-4e88-bef3-a321efa1a284",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6d9e020f-8b5d-4eee-bc7f-f2a987a7519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915bc8f7-7c6b-4056-8392-99983aeb661c",
        "cursor": {
          "ref": "41a48d88-5efa-48ea-b214-b3029bcb1d86",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2f4b3ee4-4975-481a-aa60-93e8cef60dd8"
        },
        "item": {
          "id": "915bc8f7-7c6b-4056-8392-99983aeb661c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4b49af6-e4d6-45f4-a428-88c3f75d00c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e5416b-d23d-4ec1-9830-942afff19131",
        "cursor": {
          "ref": "e4191d91-373a-4218-bedc-568b8d8542a9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7332e864-7538-4da3-9bf5-d7c59768e709"
        },
        "item": {
          "id": "27e5416b-d23d-4ec1-9830-942afff19131",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ecebe0b8-1ef8-413d-a7b1-d1bb3552dabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b9eefe-89df-4b46-80ec-0c00d6f2e84b",
        "cursor": {
          "ref": "9849077c-3274-4c35-ad2d-5de7ca9199a7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0d7e4894-9f9d-4f55-92dd-7adbb51d1bd6"
        },
        "item": {
          "id": "e1b9eefe-89df-4b46-80ec-0c00d6f2e84b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8b0dc038-faac-473f-b745-f29a650cc2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1969356e-cdee-4d17-9143-1f6e7f96d419",
        "cursor": {
          "ref": "932a6a01-fe9f-40fd-abd8-02cc2d25b124",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5d1922f6-d5f1-40ae-948a-7645f3b0ad8e"
        },
        "item": {
          "id": "1969356e-cdee-4d17-9143-1f6e7f96d419",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "76af7391-78a4-482c-8a9a-43393a9d31cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c5928d-9447-4913-adb9-696e1e05caa0",
        "cursor": {
          "ref": "41c642d3-bee1-434c-baaf-636264221f73",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e7b682c4-e0ea-46b7-a5f7-ad1abd25db24"
        },
        "item": {
          "id": "11c5928d-9447-4913-adb9-696e1e05caa0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c5f7a0ac-f8c5-44dc-885f-b8a8cb553d7c",
          "status": "Created",
          "code": 201,
          "responseTime": 8115,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "672a15ca-7f43-4127-89e7-290c49a41d2f",
        "cursor": {
          "ref": "1b689d37-9640-4ca8-8047-5f4eff8f9564",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a1cd98b6-e054-4855-9cab-8e3f6ca9bcec"
        },
        "item": {
          "id": "672a15ca-7f43-4127-89e7-290c49a41d2f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4193e764-11c8-450e-8c1d-2da7a4dac7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cf10fb-8426-4add-802c-d798979e3852",
        "cursor": {
          "ref": "b9d4937d-1314-4941-9d75-218def52de79",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "349752ea-bafd-432c-a2a1-8a22e23dcdf2"
        },
        "item": {
          "id": "72cf10fb-8426-4add-802c-d798979e3852",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9e0920b2-eb1f-47de-b722-0f6540a7ff7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d87390-7eec-4fa2-b94b-332f6045e6b3",
        "cursor": {
          "ref": "3aea0e8f-5fd0-4e5e-91d5-3befcfafddec",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c8e26c73-3724-415c-baf9-f6484ee5a6ce"
        },
        "item": {
          "id": "75d87390-7eec-4fa2-b94b-332f6045e6b3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "690db8c0-a5fe-4555-8658-b2903b9871ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b8645-75d5-463a-9022-71c5a38d86eb",
        "cursor": {
          "ref": "f4c894ca-0345-4f6f-81da-2c6bd22b3b20",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bf49fea1-0a42-4b43-a5a1-cd97ba5b017b"
        },
        "item": {
          "id": "a32b8645-75d5-463a-9022-71c5a38d86eb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a9e5d44e-cfa0-4de4-b8ec-5cd56f783e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a52de4-ca06-4712-bf00-ba35e2fb8e0f",
        "cursor": {
          "ref": "e0d77a0a-8867-4e06-a35a-bbefdee616b6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4dab2f7f-b7cb-48ab-9ae4-a79c86c3b739"
        },
        "item": {
          "id": "e4a52de4-ca06-4712-bf00-ba35e2fb8e0f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "02c5bcc6-fe6a-4213-ad65-0fd969bc7a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbb3ace-4d48-40ec-9493-9eea47a32fae",
        "cursor": {
          "ref": "2057b2e5-fd92-43b0-a2d1-058367512f7c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e2acace8-2cd0-49a0-b75d-d5917b5bb9cc"
        },
        "item": {
          "id": "bcbb3ace-4d48-40ec-9493-9eea47a32fae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b18c8b0c-4136-4b13-8063-8267cd0aaadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2182c4-bb14-4493-abe2-d22b5e7618ef",
        "cursor": {
          "ref": "fb4de044-d1f9-4e9b-856b-a2e74d6151cf",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "757cf541-2191-428a-87b9-693d3ca7f84b"
        },
        "item": {
          "id": "8f2182c4-bb14-4493-abe2-d22b5e7618ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bfbc1cc9-37d4-40d9-8ed8-13f306148cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64511a8b-3ad2-4280-aa71-1fc52ef411fd",
        "cursor": {
          "ref": "f4275ce6-43a5-41d3-a540-2a7f483a119d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9741f8a9-f85b-4b3a-b06a-93101b210585"
        },
        "item": {
          "id": "64511a8b-3ad2-4280-aa71-1fc52ef411fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0ab3cfbd-52a9-48aa-b387-3925a9f12ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737b648b-587c-4707-9861-ed1711c22cc7",
        "cursor": {
          "ref": "419f17fc-c719-412c-aa63-bc391c924052",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "17c9d508-170b-465d-bf4e-86db004e569f"
        },
        "item": {
          "id": "737b648b-587c-4707-9861-ed1711c22cc7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a77ff418-0138-4977-a83f-097fc6a757ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201147e1-c9ad-4da1-b76c-34f270efe7cc",
        "cursor": {
          "ref": "dffaf5c1-1f42-40d2-b5fd-2f8b8304e105",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "23a8d7f6-bd77-4144-9434-495675b10628"
        },
        "item": {
          "id": "201147e1-c9ad-4da1-b76c-34f270efe7cc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a2e4af89-66e8-4074-8350-8402bd1dd2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988d8963-0b26-49fd-b93f-4e99f22ade72",
        "cursor": {
          "ref": "d4701473-494f-41b8-b500-45be546d988f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b5de0aa-f628-4a0c-bab0-a387a3874b9b"
        },
        "item": {
          "id": "988d8963-0b26-49fd-b93f-4e99f22ade72",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fd6442dd-6019-4e22-8bb7-e1d38ccd09ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7091cd-2ea4-489d-9823-1de1b28d340c",
        "cursor": {
          "ref": "fa480a00-ddb7-435c-8139-5b8cf616283e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "db1a5e00-97c7-44f4-b864-df8b2acf4fef"
        },
        "item": {
          "id": "6f7091cd-2ea4-489d-9823-1de1b28d340c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e38b45df-8989-45e6-9eb9-1a5793603340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc949b2-643a-4735-ac33-943b1b515e5e",
        "cursor": {
          "ref": "6ee1bb60-4d1c-44f8-bbde-11a4c190d119",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8602f832-6c89-4d20-a520-62fa62ac7f71"
        },
        "item": {
          "id": "abc949b2-643a-4735-ac33-943b1b515e5e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "632154ef-6b9e-4499-981d-1e01aeae6253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e5593c-e509-4803-9b73-ae1069ef2cb9",
        "cursor": {
          "ref": "78923403-d4e6-4cc1-af1a-c7bcb2acba88",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "85c536e8-cbc1-4057-9489-1d0704cd8f45"
        },
        "item": {
          "id": "f8e5593c-e509-4803-9b73-ae1069ef2cb9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b85a8c15-7b5f-45bc-bb91-714abb957d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83037c72-1222-4a13-98cd-583c15502fac",
        "cursor": {
          "ref": "e908e013-54e8-4e0e-91f3-2bd80e253ceb",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "676d2484-d242-41a9-824a-fd65a46d1db9"
        },
        "item": {
          "id": "83037c72-1222-4a13-98cd-583c15502fac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "22b356d4-9e79-434a-b0ed-2aeeeb7cefa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ff793b-5535-41e1-a690-b783b29f4125",
        "cursor": {
          "ref": "c6b71d67-6cf5-4dd3-abde-aef0f4d4bb9d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4bd8f0d7-21fc-445e-b9cf-2bcd3017cbca"
        },
        "item": {
          "id": "10ff793b-5535-41e1-a690-b783b29f4125",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6208e68e-f492-41bb-9f43-19fd90fc02ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3b0556-34a6-4b76-b8d9-d65c1166c8a0",
        "cursor": {
          "ref": "71669af7-8390-4c5c-bd2c-4f93b960c7eb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56df7223-4c35-463a-b629-aafd522c4b8a"
        },
        "item": {
          "id": "cb3b0556-34a6-4b76-b8d9-d65c1166c8a0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7eee115b-e720-4ebe-a9ab-697b27ff545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e7ae2-f975-40dd-8925-aea5a23981ae",
        "cursor": {
          "ref": "a6b77628-1e93-483b-99b2-251280e15f5c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9539e972-5b70-4d3b-917c-0a1e2ee313e6"
        },
        "item": {
          "id": "dc9e7ae2-f975-40dd-8925-aea5a23981ae",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "02c65b07-406e-47fa-9986-4d78f3963fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad324a9-ad4a-420c-81a7-ff742c919ac8",
        "cursor": {
          "ref": "5e5aa9eb-9d9a-48fe-9bc1-a709f08715b0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e4e1ecda-2e58-4efb-9cb4-2fd8a710f31c"
        },
        "item": {
          "id": "3ad324a9-ad4a-420c-81a7-ff742c919ac8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "37539b07-131f-4cca-8952-4ecf762c6833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeaeb51-c203-4710-a7d4-df14838b1233",
        "cursor": {
          "ref": "5c8cdd62-4055-4dfd-b3c0-e34553ccbcd9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1cb68d9d-987f-4581-a5d5-930d61bf6993"
        },
        "item": {
          "id": "6eeaeb51-c203-4710-a7d4-df14838b1233",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d99a9d89-6bdd-41e7-b9ba-ee1ae141b939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f701f12b-cf79-4fe0-965c-966862c98740",
        "cursor": {
          "ref": "058fc99b-c5e0-478c-9fef-f8d619f73f98",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "11a5ab43-ea8d-4e57-a9a0-38e661046070"
        },
        "item": {
          "id": "f701f12b-cf79-4fe0-965c-966862c98740",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eb87eaec-da66-424f-a9b0-d01f0a63f70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4686dfe9-dd65-489d-b1cf-e49ab4eccc42",
        "cursor": {
          "ref": "fe7c20b1-e5ad-4986-9886-11115521b844",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5664756e-e8e6-4442-8f3d-2aeff6f29300"
        },
        "item": {
          "id": "4686dfe9-dd65-489d-b1cf-e49ab4eccc42",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3c64485b-dfc2-4793-9314-96d7680ce13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4945e0-3ea3-4d28-b0f9-40be82e0d543",
        "cursor": {
          "ref": "02c2afe7-2688-4666-8875-c2021ce9f816",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a72329b1-ee46-45d8-ba38-0585cc7e0a65"
        },
        "item": {
          "id": "af4945e0-3ea3-4d28-b0f9-40be82e0d543",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f1f56673-a0dc-4961-a303-9c450a633067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526cd881-4e76-489c-8cf3-16888dd0d448",
        "cursor": {
          "ref": "f77a8fbc-e827-4fa1-a674-7ef67c0ca3d6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "39334cf0-e059-457e-9f0d-71c6b1d3f94b"
        },
        "item": {
          "id": "526cd881-4e76-489c-8cf3-16888dd0d448",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c92527e8-0b7d-42d4-8904-42aafff10812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef70e7e3-7be8-4ee7-9ee2-faa18c603d1f",
        "cursor": {
          "ref": "8db8ffc3-7081-4062-9667-b28808dab2ef",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3cd9411e-1951-4c4e-a2d6-0b5d4317e121"
        },
        "item": {
          "id": "ef70e7e3-7be8-4ee7-9ee2-faa18c603d1f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "916bf1b4-8d86-441f-955c-0e9cfff712c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec88d6d-d548-40cc-a2fc-1441a3410d7c",
        "cursor": {
          "ref": "128d80c9-bff3-412a-a1d4-2d1fd2e19242",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c1c39907-6396-4abd-98bf-88fc8dcf3e34"
        },
        "item": {
          "id": "aec88d6d-d548-40cc-a2fc-1441a3410d7c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eca603e6-9a9e-455b-831f-67b9b1748e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90df46a4-3d0e-4630-9124-faf7f448bf99",
        "cursor": {
          "ref": "2ea5116a-9248-4fa4-8441-d32015b2b7f6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "88ca5140-0315-4215-8f5b-a297d84c1a93"
        },
        "item": {
          "id": "90df46a4-3d0e-4630-9124-faf7f448bf99",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "580fbb0f-9f50-4a26-ad92-889da4224aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabec28c-efb6-4e1f-a1b9-fb6b2b0fe216",
        "cursor": {
          "ref": "3f37cda7-5f2d-43c5-9cf6-8299fc0e822d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b75e84a8-bdf6-4b8e-a175-896d70f2c446"
        },
        "item": {
          "id": "eabec28c-efb6-4e1f-a1b9-fb6b2b0fe216",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0030b273-c535-4a38-bc7d-eb71a4b19073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1d3094-b2b7-49d7-8193-d0aa6324cba6",
        "cursor": {
          "ref": "b45c1119-6f23-46c5-9e56-81cb99ed9aec",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "682442f7-7f26-47ee-a047-7633b18d82b3"
        },
        "item": {
          "id": "de1d3094-b2b7-49d7-8193-d0aa6324cba6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ca727ea2-909c-4d1a-8dc6-00ef8dbbba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea596b-d3e2-4bb1-af4d-8dc17266443d",
        "cursor": {
          "ref": "bf75bf3e-f238-4a4d-850a-812441df9127",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e9ef79ef-56bf-4913-a43a-a68b5d036ac8"
        },
        "item": {
          "id": "c2ea596b-d3e2-4bb1-af4d-8dc17266443d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7b0bc61a-5155-45fa-a77e-4a61ba96bffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351fa621-e4c5-428a-b91d-66328e942d6b",
        "cursor": {
          "ref": "1b44afa3-7784-4fd5-aabf-47dd204a494d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9ab4a01a-6a63-485e-b293-4b05baa52f73"
        },
        "item": {
          "id": "351fa621-e4c5-428a-b91d-66328e942d6b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a3c0818-7214-401a-b6f7-be08b2828067",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f23352-c67e-4f44-bf74-ab5a6bd2fad9",
        "cursor": {
          "ref": "380fce59-a0c8-4cc2-bb5b-475a3ea205e0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "da7c3e57-004d-483d-ae23-ef55af498d68"
        },
        "item": {
          "id": "c4f23352-c67e-4f44-bf74-ab5a6bd2fad9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cbc7ebac-0fc9-4ab8-a15e-17216b2f2187",
          "status": "Created",
          "code": 201,
          "responseTime": 2216,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2e395f-ee3f-4a0e-9f16-ea030d45eace",
        "cursor": {
          "ref": "6e99e6f0-c22e-4fbc-b47b-d0a951314c86",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5cebb861-f43e-4952-be7a-5c08537c8982"
        },
        "item": {
          "id": "5d2e395f-ee3f-4a0e-9f16-ea030d45eace",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d06674a6-7d5b-4b75-9524-d99c885ea312",
          "status": "Created",
          "code": 201,
          "responseTime": 2421,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "237f9673-dddb-41c9-98b5-39374562b981",
        "cursor": {
          "ref": "9199c570-7307-4678-8a17-d9876463e280",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b09d3b4f-58ee-40f6-b52b-2c593ceaaa12"
        },
        "item": {
          "id": "237f9673-dddb-41c9-98b5-39374562b981",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3102018a-17fa-495f-b28e-d2cd97b436a3",
          "status": "Created",
          "code": 201,
          "responseTime": 2527,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4460a6aa-a51f-4e04-83b1-12a5fa917431",
        "cursor": {
          "ref": "c311af5e-f7a2-4da9-9857-e07408ef3d27",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cae52632-9910-4d07-9922-119a87a53721"
        },
        "item": {
          "id": "4460a6aa-a51f-4e04-83b1-12a5fa917431",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6fbfcece-52f2-44b6-afd3-dba4c89182b2",
          "status": "Created",
          "code": 201,
          "responseTime": 2666,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1731cc9c-5f0b-4904-b5e7-bed4b7b912ca",
        "cursor": {
          "ref": "8530c146-dd8f-4e41-a7c2-528aa3b8f5b0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "431956f6-0db2-4e14-bb22-dbafa7ae6fbc"
        },
        "item": {
          "id": "1731cc9c-5f0b-4904-b5e7-bed4b7b912ca",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7df81145-9912-4a1b-933f-8b3d4a2585b6",
          "status": "Created",
          "code": 201,
          "responseTime": 2684,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-22T00:42:39Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-22T00:42:39Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a04bf778-8b63-4476-8dbc-77cf1182b973",
        "cursor": {
          "ref": "413fac88-4fd5-44fa-aa5c-ebc0aa36f47c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0e4df001-32db-408d-9af1-b47b15175835"
        },
        "item": {
          "id": "a04bf778-8b63-4476-8dbc-77cf1182b973",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "688e2803-884e-4f3f-a14a-f46174d026ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7734fdb1-edb4-4edc-b080-065496528164",
        "cursor": {
          "ref": "b71bb4df-cc8a-4946-a07e-6c7db6f86bb7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dce4ff26-0e0c-4e04-842f-d6ef9935b627"
        },
        "item": {
          "id": "7734fdb1-edb4-4edc-b080-065496528164",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "644afef5-e86f-4939-9696-753537f7617b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965ee711-f216-497e-96ad-7055e771736f",
        "cursor": {
          "ref": "385e1a77-5ba5-4759-9d56-7db22f416590",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "50e11b23-2596-4c4d-b311-da4d7e9058e1"
        },
        "item": {
          "id": "965ee711-f216-497e-96ad-7055e771736f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc29da21-0552-4cc3-9120-b0d016fb42b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b1a145-bec6-48cd-8872-905ad9e58c88",
        "cursor": {
          "ref": "0ff1180c-30ba-426e-a4d9-d292c6e571d7",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4928e2fe-ae95-4658-9b6e-5f486f335640"
        },
        "item": {
          "id": "c3b1a145-bec6-48cd-8872-905ad9e58c88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56d9ebd6-039b-4abc-b142-2eb15821bd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eead740-587a-42db-910f-b04ab114b812",
        "cursor": {
          "ref": "8a2cc971-d097-4665-ae41-c225f829d7d0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "17c999bb-ca77-4338-b822-a323de03d64e"
        },
        "item": {
          "id": "0eead740-587a-42db-910f-b04ab114b812",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0cc04e78-176a-4b66-b9ea-2a3b92cc8d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f394418d-bb7d-4c7e-8429-6f2589923882",
        "cursor": {
          "ref": "0345f634-42a1-402d-99b9-73f879b4d347",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5a6385c4-c749-42b1-a4cb-fd5661c2b892"
        },
        "item": {
          "id": "f394418d-bb7d-4c7e-8429-6f2589923882",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bf572e57-e9ad-4cf3-995d-306542dae69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5654ecb0-b261-4d13-a645-c73709ee5923",
        "cursor": {
          "ref": "74e082ba-23df-478c-bbcf-c71196edee30",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1e04fad8-8f19-45d7-af2e-1a701abcf54f"
        },
        "item": {
          "id": "5654ecb0-b261-4d13-a645-c73709ee5923",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3da45a31-3572-4175-9f94-7921c3aeddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7c7d77-7095-4330-9c48-9cc1be5ee457",
        "cursor": {
          "ref": "e600f8da-15a0-4bac-9036-0e6420e7f87f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8ef148ca-7fc8-4bc2-9b5f-cda7322af37d"
        },
        "item": {
          "id": "9e7c7d77-7095-4330-9c48-9cc1be5ee457",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1633ae91-3b05-47a1-b081-730486331d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a741788f-5ec1-4394-9eab-9405817a6bb5",
        "cursor": {
          "ref": "004acb2f-503f-422b-9e2f-15c4d1994dca",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5de96a3b-7e1e-4de3-b1ae-63a4b5942f6c"
        },
        "item": {
          "id": "a741788f-5ec1-4394-9eab-9405817a6bb5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "49c088c9-85fa-40bc-89c4-617dfeac4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9812fb-8e8c-4268-b0fb-bacaa46f301b",
        "cursor": {
          "ref": "086b1e20-e928-4c31-9be5-04d47f0d6917",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bbf51471-9e3a-4063-bd10-2494f5f084a3"
        },
        "item": {
          "id": "6a9812fb-8e8c-4268-b0fb-bacaa46f301b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3365da15-b9a7-4750-adfb-ab1f4443908a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7745edd-6648-47be-a85b-1ef7456bbfb3",
        "cursor": {
          "ref": "232635dc-a71c-4532-9f61-e026fff113ff",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "887b09d6-16b4-4498-b41e-8d833f9366e1"
        },
        "item": {
          "id": "c7745edd-6648-47be-a85b-1ef7456bbfb3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03cb433f-edb9-4839-ab7f-39a106fa858d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6cf2fa-0de8-4c59-904a-400952e531ee",
        "cursor": {
          "ref": "8e3dd7a0-b29d-4146-bfbf-298c085fd9e3",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d32fa0d-ec71-4015-8d11-0832c68e12fa"
        },
        "item": {
          "id": "cd6cf2fa-0de8-4c59-904a-400952e531ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8737d39c-bd2a-4d00-87f3-26298e7371d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb3c212-b2a5-4bad-b017-0734e46d0380",
        "cursor": {
          "ref": "8aa252a3-c86a-4b95-a249-dac985d816c0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e85d19f9-1a8b-4e08-a9eb-08ead42e0f1d"
        },
        "item": {
          "id": "efb3c212-b2a5-4bad-b017-0734e46d0380",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b797c23-363a-4fbd-bd90-31df50eeb392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cca41b-40d4-4387-9c4b-999694ee6518",
        "cursor": {
          "ref": "aec90f64-6712-418e-8d1b-33c3b40b4c6a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ea1565e8-5ee3-446e-9616-aba137f7b893"
        },
        "item": {
          "id": "f9cca41b-40d4-4387-9c4b-999694ee6518",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "adc0bd42-c830-4b9d-8c4b-e45c945b9472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a698f34e-d1fd-4eca-8976-9eda0792221d",
        "cursor": {
          "ref": "1e66b8ff-7596-4de9-9b54-7c1fc53f783c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6436e271-e09d-4a6a-9a68-fa6c37a213df"
        },
        "item": {
          "id": "a698f34e-d1fd-4eca-8976-9eda0792221d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5fa1d268-2fbe-4666-ab6e-adfdff0efd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc445e9-3b20-4cd8-adf4-54bbe1f0b28b",
        "cursor": {
          "ref": "b325b4f0-031b-4fc1-878e-5fd4b62b1a3c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "07f84c11-2c8f-4ae2-87bf-d30254becb89"
        },
        "item": {
          "id": "7fc445e9-3b20-4cd8-adf4-54bbe1f0b28b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "833bbbe3-a4e2-4553-8ca1-8f3de6506846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900081d0-160c-481d-bc45-8fff852fcb15",
        "cursor": {
          "ref": "c5336ecb-9768-492a-8b65-80d8cebddfac",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "95867d53-c908-4230-ad24-ae475ac9069f"
        },
        "item": {
          "id": "900081d0-160c-481d-bc45-8fff852fcb15",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a4d857d5-961e-47a8-9ccc-89e56f6ecd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e5c0bb-5e52-4283-bcde-4bc53e8877d7",
        "cursor": {
          "ref": "cf9ce024-2312-42be-9e55-0b45b33b2519",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6b5240e0-e504-4a6d-b356-17892f8e0e31"
        },
        "item": {
          "id": "d6e5c0bb-5e52-4283-bcde-4bc53e8877d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f31b0d68-f90c-4fcb-a4bb-53b3205ab979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f484e9-e3f3-4383-918f-9247d3401d02",
        "cursor": {
          "ref": "98fbbdbd-4d3c-44b7-87d6-4051f959cb11",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "35056e5b-7acd-4d20-bdeb-94ecd8e93580"
        },
        "item": {
          "id": "07f484e9-e3f3-4383-918f-9247d3401d02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f94a18e0-a0c1-42c1-bfcc-71f9a6c764f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c05757-c519-4459-bf00-96c0b65c51cd",
        "cursor": {
          "ref": "7c5b5900-f654-4e20-88e9-0e332b754c8b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fad70b45-1826-41f6-b08f-aeb7889a92f3"
        },
        "item": {
          "id": "24c05757-c519-4459-bf00-96c0b65c51cd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e2c6bac-8146-4f67-91e1-07b41c52ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad33df9-f511-4649-9eee-eab1ee175ee3",
        "cursor": {
          "ref": "6aeae6ab-75db-4471-8330-535187b6f3a5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "596eee6a-9e9d-4209-a6a5-1ac9c39cf4bb"
        },
        "item": {
          "id": "8ad33df9-f511-4649-9eee-eab1ee175ee3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eff97dcc-df96-4bf1-9b94-b8d00bd38d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfde2a1-5cd0-47e8-aa36-363f6aab0c89",
        "cursor": {
          "ref": "395d2464-87d9-4a3a-b9b2-1143023c9943",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "955d490e-4b02-4562-9178-3675b76ca259"
        },
        "item": {
          "id": "8dfde2a1-5cd0-47e8-aa36-363f6aab0c89",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "63a6b3cd-5619-4c6f-b1c5-25c9a777347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebfdc88-5ba9-403e-9f2f-7b97c7870ba5",
        "cursor": {
          "ref": "a3557865-b292-4f26-a710-6edbb7032fb6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6f144fb7-b34d-472b-a50a-20ef0f97ec54"
        },
        "item": {
          "id": "1ebfdc88-5ba9-403e-9f2f-7b97c7870ba5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "af7ac795-b32d-42a7-9447-81fa2c08f7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e5662a-4576-4d52-bf86-3d0f044a9fe6",
        "cursor": {
          "ref": "f2991bc4-61f2-4629-a311-1699417f1587",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3a5e2a6f-d437-4e96-9009-74cbcb6bf56d"
        },
        "item": {
          "id": "59e5662a-4576-4d52-bf86-3d0f044a9fe6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5b652c29-27e4-458d-b845-f1d14870be1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881391db-7833-4c69-ab26-1127c744c6a9",
        "cursor": {
          "ref": "24aaf6fd-ed8e-48cb-973f-d73d8cc398e3",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "03f96956-f541-400b-b074-3065ccf6ecf1"
        },
        "item": {
          "id": "881391db-7833-4c69-ab26-1127c744c6a9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30996b73-1349-4832-8ddd-963198d160a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a20fdc1-8be8-4a8f-a4ae-5bc68d274143",
        "cursor": {
          "ref": "5e89a5b4-b413-451d-b76b-6f5f4ac50004",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f2a319f8-5944-466f-8fef-33a85696bf77"
        },
        "item": {
          "id": "3a20fdc1-8be8-4a8f-a4ae-5bc68d274143",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "374bbceb-b157-4e20-bd37-80d6f3205e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd78732-00b4-4f99-82c1-0c20ce5dc02a",
        "cursor": {
          "ref": "ab787b4a-47cc-4811-87cc-ed4f38e58e72",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "74ac8654-d6a1-43f7-b020-da40022fa9b1"
        },
        "item": {
          "id": "3fd78732-00b4-4f99-82c1-0c20ce5dc02a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7dc3f362-7c91-4039-9247-957cda4cc305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c4693-45c1-48ac-9847-b02934f0b916",
        "cursor": {
          "ref": "308a716a-d223-4f2f-aed2-e1fd4f014c95",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0898814a-36bb-4728-aa7d-6b50aa281c07"
        },
        "item": {
          "id": "e09c4693-45c1-48ac-9847-b02934f0b916",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "340d1375-7ed8-43ad-99ae-27dfca40baf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57304490-28a2-4fa8-a394-c8d74221325c",
        "cursor": {
          "ref": "8f15d2af-1f7b-471e-ab33-f68fb482ace1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8a46577e-5edd-4956-a423-c66a399a629e"
        },
        "item": {
          "id": "57304490-28a2-4fa8-a394-c8d74221325c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "095def89-cb39-449f-84d9-72514810f432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7736e6e-3088-44c3-a1b5-bbdd9d6b1d81",
        "cursor": {
          "ref": "6b580c09-ea20-46b5-a189-c9479d385534",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ff007efb-4bbc-457e-a70a-02af7a5e616a"
        },
        "item": {
          "id": "a7736e6e-3088-44c3-a1b5-bbdd9d6b1d81",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "82f060e9-a135-4eaf-a6c4-6e16a9368213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482d734c-77f1-4d68-91da-6fb70d8cb01c",
        "cursor": {
          "ref": "6ab3d2d5-4f24-467e-8e60-87671457d42f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f26b086d-77da-4fba-a32c-25276403ba3d"
        },
        "item": {
          "id": "482d734c-77f1-4d68-91da-6fb70d8cb01c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "76705be4-9a5f-4a7e-af16-950434ce64b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cb6ed6-f996-4742-9540-4017e1832751",
        "cursor": {
          "ref": "b1bb6f56-b91c-4684-9d85-a94febd4d0ac",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "50e4b28d-82c0-4af4-89bb-00b868322774"
        },
        "item": {
          "id": "70cb6ed6-f996-4742-9540-4017e1832751",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e652304-dca1-4c03-8104-4cf0ea33664d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ec9128-e8b2-48f5-9b06-29c3097b6161",
        "cursor": {
          "ref": "fffa2781-818f-4fc9-a183-c74c98e64e52",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "71d38784-a486-4231-988e-ae64a7b81fd6"
        },
        "item": {
          "id": "a0ec9128-e8b2-48f5-9b06-29c3097b6161",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "67fe2ed1-36c5-4541-a534-c059ff94b0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665e3b79-0a7a-43be-be5b-ff706ab5a188",
        "cursor": {
          "ref": "d0b4aa44-b2a0-4479-96a4-9258b21d2179",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "23388a2e-6989-4848-be37-cea2f08fd8c5"
        },
        "item": {
          "id": "665e3b79-0a7a-43be-be5b-ff706ab5a188",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4330bc72-3ec9-4fbe-b236-47e3763c6cc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0f183e-22bf-4a79-bf93-25e0be61293f",
        "cursor": {
          "ref": "7e8b4553-7a08-46cb-a519-b904885ffe22",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5a20acea-75c8-408a-acad-251ceae9d5aa"
        },
        "item": {
          "id": "3d0f183e-22bf-4a79-bf93-25e0be61293f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dbf3bc37-da0c-44d2-8d6f-1621d8b4be95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c291623-774d-4142-904c-5ee69a216d33",
        "cursor": {
          "ref": "2f482ce5-bd3e-4e54-b47e-6ced4db682a0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eb0e6dd4-72c6-4e5b-934c-d290500a607c"
        },
        "item": {
          "id": "5c291623-774d-4142-904c-5ee69a216d33",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b9f801d4-384c-4ada-b71f-1fe0e4907eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614a4e92-b5ed-44b4-a1a4-0b61cde6e6f0",
        "cursor": {
          "ref": "110f5665-8862-4b49-8c02-6ca21d6029f2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9053fb99-3689-4284-ac65-8fd24c392d91"
        },
        "item": {
          "id": "614a4e92-b5ed-44b4-a1a4-0b61cde6e6f0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5615c0f-2cd1-4ec2-bf2f-0ea9ef8b6c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370c9e0e-c5d9-47b0-8a7b-79fa195081a0",
        "cursor": {
          "ref": "99965604-03d9-4975-9320-1f978907e717",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "82192c8f-d383-4b7a-829d-55ac486a0df8"
        },
        "item": {
          "id": "370c9e0e-c5d9-47b0-8a7b-79fa195081a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b85ce2d3-7db8-474e-81a4-bbe0389b51f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f915432-ee14-4937-ba15-a5d6f71f0997",
        "cursor": {
          "ref": "d035f988-8173-4064-81ae-35d31267822a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9e96fb7c-341b-4216-9b82-a4e050c0ff0d"
        },
        "item": {
          "id": "9f915432-ee14-4937-ba15-a5d6f71f0997",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "756fba52-13ce-46d7-be69-81774e5d7bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71b65c3-8c41-4edb-bd64-e04111b7c0a8",
        "cursor": {
          "ref": "c450d967-04a8-41ed-b706-d04bdd74444e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cc66f44d-6fd0-4f17-847e-9ef6e18cb84b"
        },
        "item": {
          "id": "e71b65c3-8c41-4edb-bd64-e04111b7c0a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "27546d89-ccad-455a-9edf-531ffa006d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b18cba-5b47-4a1a-b125-8f62fa984ae7",
        "cursor": {
          "ref": "7bacba8c-e6fa-4276-8572-734c64ff81fb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9e1b2fe4-8c23-4d7b-9a96-047e949ccf79"
        },
        "item": {
          "id": "36b18cba-5b47-4a1a-b125-8f62fa984ae7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a1a68295-c92d-4670-a760-011e236d0de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44357212-bb84-42d4-96dc-b3ea45d56520",
        "cursor": {
          "ref": "5f84daa7-029b-4f19-8cfa-1c651c66d46d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6fd6b6a1-e4df-46a0-a8dd-689b6d8b960b"
        },
        "item": {
          "id": "44357212-bb84-42d4-96dc-b3ea45d56520",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3e92ed91-d530-4c07-ba31-66e5a725b6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930ef8b6-3687-4cf9-bd37-734a48e66fa1",
        "cursor": {
          "ref": "9f41dfe3-4ee7-41ea-9654-243f0062b751",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e97c992-cfaf-4a0e-bcdf-80233f5d5c32"
        },
        "item": {
          "id": "930ef8b6-3687-4cf9-bd37-734a48e66fa1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5cd6c401-dcc2-4327-a702-f4e4a6af698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632e3769-e44c-47ed-bf66-33098b524535",
        "cursor": {
          "ref": "dc5a7b92-08c1-4eab-808f-dfa7f3797e0e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "adeb10b5-6768-417e-b0af-ddd6c36dd7ac"
        },
        "item": {
          "id": "632e3769-e44c-47ed-bf66-33098b524535",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6d8917b-a093-43de-9aba-200818b2a43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbb2809-f5ae-4a2e-b2f7-2a08d309c64e",
        "cursor": {
          "ref": "7d6e513b-b10a-4cdf-9846-8f06ae168eb1",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e17bdecf-012a-4b83-a604-6878d919c8fa"
        },
        "item": {
          "id": "4cbb2809-f5ae-4a2e-b2f7-2a08d309c64e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ae12b1e-f875-4c68-8702-ef89f54f3b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e660c1d9-989c-4b8c-8c1a-0863609e2f12",
        "cursor": {
          "ref": "b769a1fd-f00a-4123-aeff-f4eb83c493cd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "92fb62d4-1708-4f27-9202-e74c21e1dc0c"
        },
        "item": {
          "id": "e660c1d9-989c-4b8c-8c1a-0863609e2f12",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db509b43-863d-45d0-86dd-e87b06ef5b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd2288a-312b-4c7a-ad8f-af5a77a570dd",
        "cursor": {
          "ref": "5cc6901c-6a50-44c4-8639-8a6cae6e99c7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b8d99524-b202-4ff1-b553-28956b3a89f2"
        },
        "item": {
          "id": "6fd2288a-312b-4c7a-ad8f-af5a77a570dd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "53e46bc7-880f-44fe-b669-4d320b848e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fa790a-c824-4530-883a-5b49826bb7b6",
        "cursor": {
          "ref": "1d0dc0fa-ce05-429d-ba86-2b5678b2c5a7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a579f592-bf55-4d5d-a9d6-df4252397cd1"
        },
        "item": {
          "id": "48fa790a-c824-4530-883a-5b49826bb7b6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ac7a24a-1dac-47ed-bcdd-d48471b6cdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd74443-6088-490b-842a-426d82445795",
        "cursor": {
          "ref": "35f821d7-9282-4e4a-b144-1c966a465298",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "54289205-68a3-4405-9751-e21ab53605f5"
        },
        "item": {
          "id": "8fd74443-6088-490b-842a-426d82445795",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9ca19db9-752a-400e-8793-4357d9086283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a430a-6b0b-4e81-8a41-147fb60ca7bb",
        "cursor": {
          "ref": "6f52ab21-7aeb-4b48-841f-e377c0682208",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7372fb4-e85c-4f50-b659-96ed477ea032"
        },
        "item": {
          "id": "b05a430a-6b0b-4e81-8a41-147fb60ca7bb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6584ec0-5363-436b-af1c-639bde903da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b48053-34e6-4f76-9d5a-f5ef533ef4e1",
        "cursor": {
          "ref": "b469e371-dba2-4b29-9b2b-ef939b4ff914",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bc39443b-03a6-4bfa-807c-72941b105e1b"
        },
        "item": {
          "id": "87b48053-34e6-4f76-9d5a-f5ef533ef4e1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "474ec6ba-2d7d-4b83-91f9-b0788b34c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f8018c-8fee-44d7-bb47-2afa875c1fc4",
        "cursor": {
          "ref": "38109be3-ebf2-452f-a6cb-4bcab8365f0a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ed555d21-ff37-42f8-b922-39d73758f2b2"
        },
        "item": {
          "id": "38f8018c-8fee-44d7-bb47-2afa875c1fc4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "370d88b5-ece8-4006-86fb-6c9cc4f56346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf51083-0ab5-40cd-8b13-618857ab644c",
        "cursor": {
          "ref": "526707be-a395-460c-9fc9-e6ccd05396f2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a82969c4-9a6d-490e-add6-3607c8063552"
        },
        "item": {
          "id": "eaf51083-0ab5-40cd-8b13-618857ab644c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ebfa713-145b-4dc8-8b66-744752c329ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b11a3d-68ef-45a6-98e7-065383ce50fb",
        "cursor": {
          "ref": "a95f1172-79ad-4f99-8fde-1987d1fac807",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f0d59304-27bb-4c47-9828-62d696875ad4"
        },
        "item": {
          "id": "f0b11a3d-68ef-45a6-98e7-065383ce50fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "158c4458-8e9e-4889-a9e4-175fcdc6b0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d341dfbe-897b-483b-9855-0e0bae8eec24",
        "cursor": {
          "ref": "ea7b492c-78f0-4438-b72f-e780c199b8b7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "480283f0-b51c-4b3a-a0c4-ef55140df061"
        },
        "item": {
          "id": "d341dfbe-897b-483b-9855-0e0bae8eec24",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04c33bdc-a1b9-4b2e-87cc-316f6d4b51dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc967d1-636b-494d-a5aa-9d627decfd31",
        "cursor": {
          "ref": "9439949d-5c5e-4e0b-a4cb-abef910c9e10",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3d34e775-dd32-4fc5-985e-1d8a31497a85"
        },
        "item": {
          "id": "2dc967d1-636b-494d-a5aa-9d627decfd31",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b55a34eb-5dc6-473a-a9cd-91c7c223bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b033b4a6-c01d-4b06-997f-701ed01670c7",
        "cursor": {
          "ref": "a80e4cd7-3f53-45bc-b7cb-b263bc51d838",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8ba12390-d7a2-4c49-8c62-6919a331ba98"
        },
        "item": {
          "id": "b033b4a6-c01d-4b06-997f-701ed01670c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eca809c7-6c31-4be3-80d9-2bc69e108a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd19036c-48db-44d3-90ed-2e01f73991aa",
        "cursor": {
          "ref": "4d968547-7244-466b-b6da-cdcd4c5e0d6e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8534efa5-7688-4502-b951-3420c86edaf0"
        },
        "item": {
          "id": "dd19036c-48db-44d3-90ed-2e01f73991aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "72936965-1e88-40a0-915b-ac577e75038c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b927ac-22f3-4a97-ab11-4ee6b92ceeba",
        "cursor": {
          "ref": "aa9bd6f0-e2f9-4c9e-89f4-77f4f212437a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "80425854-644e-45d7-913c-da923e4e0767"
        },
        "item": {
          "id": "14b927ac-22f3-4a97-ab11-4ee6b92ceeba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aab24201-daa5-4027-a63a-a94ee29cf3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e78bb44-3dc5-4220-a677-86c19f2b42d2",
        "cursor": {
          "ref": "90d9cda5-ba86-4b8a-be55-61fbc2bcf83a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a65ac96e-1620-45e0-a36d-cc113a277eb1"
        },
        "item": {
          "id": "5e78bb44-3dc5-4220-a677-86c19f2b42d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60847794-7f75-4309-a181-32641f576843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5da873b-4626-432c-8253-27d52321ec8f",
        "cursor": {
          "ref": "d9147e41-9a38-4806-805d-890d9bc1895d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "24545d9f-6b16-4d3f-9273-927ff0363eb5"
        },
        "item": {
          "id": "f5da873b-4626-432c-8253-27d52321ec8f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba7d5dc3-40fa-47f4-89ba-08ed8a4c2132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e43f236-11af-4a67-b1c0-06d235df6e9c",
        "cursor": {
          "ref": "0dfebbb0-9e2f-4174-99ff-17d335b65e34",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c82cc08b-ea08-45a1-9af9-a7dbe55eab3f"
        },
        "item": {
          "id": "8e43f236-11af-4a67-b1c0-06d235df6e9c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bfdf163d-d576-4a99-abaf-dbcb1237e893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0896d0ea-5006-446a-acec-681a318e6e86",
        "cursor": {
          "ref": "0d329608-33b3-4894-bfe0-5c6059bfc13c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "01b89a8c-d48d-4d26-b64b-1176a1bb3a2d"
        },
        "item": {
          "id": "0896d0ea-5006-446a-acec-681a318e6e86",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "debba076-52fa-471e-99b6-7be0a7c7b7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabab03a-9486-43a5-89a6-e9538d06a570",
        "cursor": {
          "ref": "a6da5a18-4590-476c-b861-76c072d462ef",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b3ef1ecb-3c0d-49a7-8f84-eda270d0ffe2"
        },
        "item": {
          "id": "aabab03a-9486-43a5-89a6-e9538d06a570",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "77b5d96b-f0b4-4919-b8d6-4a855d38f859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd1929a-4414-4ce9-823f-8fbae31d4056",
        "cursor": {
          "ref": "773132b5-0db2-49fe-bbc6-9416d52fbb55",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b16a5ef1-1b57-4053-b9dd-b06706f46ff8"
        },
        "item": {
          "id": "4dd1929a-4414-4ce9-823f-8fbae31d4056",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d076f98b-313c-4a2f-ad3c-8007d4ef61c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdf8c50-8764-4cb0-bd87-e07939279424",
        "cursor": {
          "ref": "cc41a54d-6267-4e22-b5fd-29c5fdfb4946",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8154f20e-b61b-4625-9be6-537300666332"
        },
        "item": {
          "id": "7fdf8c50-8764-4cb0-bd87-e07939279424",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b4b07dbf-4032-4982-a52b-cd49f4fadd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65a1612-5f7e-438d-ac61-854875549017",
        "cursor": {
          "ref": "e497db87-b5b9-4ba1-80c2-b84605e93e8f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "533f50d5-e038-47e3-bf41-2379a448c615"
        },
        "item": {
          "id": "d65a1612-5f7e-438d-ac61-854875549017",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ad85becf-09b9-43f9-9dd1-6ed6872fb9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81bb0b-cd7f-479e-9f67-34652f286788",
        "cursor": {
          "ref": "70cdc7d9-9e09-40d1-9ecd-dbd8b84033b9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f6b8e796-ca9f-40d4-9ff5-f0e891aa5651"
        },
        "item": {
          "id": "1b81bb0b-cd7f-479e-9f67-34652f286788",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "46bf1f17-b75a-4d9d-9875-961649135548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028169ce-422f-4ebc-aa8a-5bc64b2df151",
        "cursor": {
          "ref": "6684bb29-6af1-4c3d-afa3-715cf67fe30f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a28ad483-b18b-458a-a954-694bada24134"
        },
        "item": {
          "id": "028169ce-422f-4ebc-aa8a-5bc64b2df151",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cd4fe20c-d9df-4c8e-823b-663077bbc8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b498cd3-9105-4ba5-b54e-da2a433434f4",
        "cursor": {
          "ref": "e4a7ffa9-9802-4bfa-a9e0-2cff14bec97f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e831440f-42cf-4da4-bed0-9de2a0b57552"
        },
        "item": {
          "id": "6b498cd3-9105-4ba5-b54e-da2a433434f4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d95f361-7cb1-4df2-91b6-1233f464a1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d05b1b9-ce8b-4729-9366-ec200b6c39c1",
        "cursor": {
          "ref": "d53b55eb-fc3f-4690-baf3-921dd1fd7a34",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "31224fc8-1501-4e67-9732-2fffa646e473"
        },
        "item": {
          "id": "4d05b1b9-ce8b-4729-9366-ec200b6c39c1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "85160c32-c2f1-48fa-b6d8-6d5edcf7b349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1315fbae-4c58-4ad4-bced-ae946d3eddfb",
        "cursor": {
          "ref": "330173c5-af94-4b9e-a489-8ae87f7248cc",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d5c6a30-6342-443b-adef-bbf443586239"
        },
        "item": {
          "id": "1315fbae-4c58-4ad4-bced-ae946d3eddfb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1119e247-943e-4035-95eb-b83f957de8fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5500369-cdef-4f15-9acb-5232d7186da0",
        "cursor": {
          "ref": "ac72e1bc-793f-402a-8117-f0601c6de35a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9c34bc5a-989f-4e88-9452-83d8fc7f8a0a"
        },
        "item": {
          "id": "e5500369-cdef-4f15-9acb-5232d7186da0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "567a695e-9441-4bb7-b6c4-46ad5f0bb244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923fe606-faad-4232-9140-12e0fc42c39d",
        "cursor": {
          "ref": "a8771b72-c0c8-4be9-9169-325e3c55d96f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e988309f-822d-40e4-aa4a-c30ce06b07e0"
        },
        "item": {
          "id": "923fe606-faad-4232-9140-12e0fc42c39d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a975d8ac-8ca2-473e-ab5a-169f8cf7937b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc5f390-fc1c-431d-947e-8bac60018460",
        "cursor": {
          "ref": "07e78c94-36a3-4f6f-afb6-25a980ad3201",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0269c79e-13b4-44a5-bbe6-396601f120c7"
        },
        "item": {
          "id": "efc5f390-fc1c-431d-947e-8bac60018460",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2099bdb3-050c-419d-bf4c-1119edc8c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455655b9-99c0-455c-8495-a435c88a2ab6",
        "cursor": {
          "ref": "a1909766-5a2c-49c5-b887-ae00196fd79c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4f4fac42-6e09-4c47-82b2-36cfc39ec895"
        },
        "item": {
          "id": "455655b9-99c0-455c-8495-a435c88a2ab6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f552d1a6-af51-4f11-b7c3-53ef40f95e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b687ede9-d6de-4ddf-8dc1-1f8bf3e069b3",
        "cursor": {
          "ref": "1bcfb107-28d7-44e1-96dd-06e235db1c72",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5f7e3d24-441f-42bd-afda-b9a4fab2ade4"
        },
        "item": {
          "id": "b687ede9-d6de-4ddf-8dc1-1f8bf3e069b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5bf8e370-a96b-4443-b095-f21fe43dfbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a9d0a7-634d-4d5c-98f8-1427f354f135",
        "cursor": {
          "ref": "57417037-f9cc-4cff-952d-102e15d858fc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b417fc44-461d-4677-8e49-b4983c4479fe"
        },
        "item": {
          "id": "45a9d0a7-634d-4d5c-98f8-1427f354f135",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "353e0f78-345a-4ce4-9410-b6c8a7ca26d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c90ef2-c2d5-4ed0-aa8c-e6f0d3982434",
        "cursor": {
          "ref": "a836687c-2310-4160-8248-d9cad4638ec7",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac4ccd8a-e274-43f1-b7b7-c6feee9a0a54"
        },
        "item": {
          "id": "a7c90ef2-c2d5-4ed0-aa8c-e6f0d3982434",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82b5398d-00ef-4907-8898-2b7095c7e192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7750eef-bd33-41ef-907c-13d145cc3313",
        "cursor": {
          "ref": "e2bb3345-065c-447c-b060-44d8108963d4",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "65245c36-10a5-41f5-b2fa-38c4b1ccf2d1"
        },
        "item": {
          "id": "a7750eef-bd33-41ef-907c-13d145cc3313",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f701dee3-a322-48f5-b121-fdb013afaf12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2012f5c0-4ccd-40b4-baf2-238af93341c2",
        "cursor": {
          "ref": "d44fa8b2-3244-4897-8ac2-643000d97aaa",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93b2b474-77d2-4976-8931-800c2045ddb1"
        },
        "item": {
          "id": "2012f5c0-4ccd-40b4-baf2-238af93341c2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eba30cb7-7d33-48e9-8ebd-0817fbb2b87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1619ffeb-a900-412e-9cea-5e3b6ec0330f",
        "cursor": {
          "ref": "832b13dd-2119-4de9-8913-56060a5694a0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b6acf06c-2cc0-401b-98f4-0af00f6b390b"
        },
        "item": {
          "id": "1619ffeb-a900-412e-9cea-5e3b6ec0330f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a72025de-4e54-4805-8f05-43f123ca5623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392b7fed-6a73-4052-b955-81da2df38ea7",
        "cursor": {
          "ref": "9afb2344-d3c3-428a-b741-b0f7343a56c8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1ed89a01-6a9c-46a5-8319-699a02b616d7"
        },
        "item": {
          "id": "392b7fed-6a73-4052-b955-81da2df38ea7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "af4aeb80-e91b-4e11-8482-221256bf514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fa20ea-ea5c-4064-89d8-3810ffc6b395",
        "cursor": {
          "ref": "cf8a6d54-9167-4c7f-bb41-343bd00d06f1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4a2af15f-d7ad-43ee-b612-6c1d415843d2"
        },
        "item": {
          "id": "f1fa20ea-ea5c-4064-89d8-3810ffc6b395",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "25423df8-7670-45a5-83e2-be78214ed6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970a71d7-136d-46eb-9b81-9bf20b9a5d38",
        "cursor": {
          "ref": "dfd709c3-ce6c-4df9-8f48-58530a29e0a3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "32b17715-4367-4bd4-8b57-1ef9d5fe300a"
        },
        "item": {
          "id": "970a71d7-136d-46eb-9b81-9bf20b9a5d38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "476e50a3-07ea-4813-9ebb-7fb01dbcbf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f1eca-c838-4198-a383-4a1bb85bd94e",
        "cursor": {
          "ref": "4784e82e-447a-4624-8df6-0655c45bd741",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a868ae13-da45-439b-a09a-d95a76651279"
        },
        "item": {
          "id": "6c1f1eca-c838-4198-a383-4a1bb85bd94e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "962ecd4d-244e-442a-a2ab-8a59c493df27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a297801c-4892-4d27-9445-8c3f1fd6a60e",
        "cursor": {
          "ref": "0c172e31-1b4f-4a33-9b35-f2d28e7a05db",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4672af15-d0b9-4898-8e00-eea0c76b8a3d"
        },
        "item": {
          "id": "a297801c-4892-4d27-9445-8c3f1fd6a60e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c356aad0-fb0a-4374-b13a-cd68464cfb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e91ae-4f1c-4403-82ed-6ee18e0f896a",
        "cursor": {
          "ref": "a6e9d9af-4b3b-45d4-bffb-69c030d450c6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02af66e7-f781-43d4-b4aa-5d49f9a123f8"
        },
        "item": {
          "id": "0f7e91ae-4f1c-4403-82ed-6ee18e0f896a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3037c83c-f4c1-4f17-a1d3-263f5cdff3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9784ef0f-52fb-4a2b-81a5-3b884cf938d1",
        "cursor": {
          "ref": "e0ced07d-43e4-4894-864d-1b0dc07e9aae",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e585a511-1908-4927-b4a0-7a730d69b6a7"
        },
        "item": {
          "id": "9784ef0f-52fb-4a2b-81a5-3b884cf938d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e6665b49-4211-4f67-b883-4c5e89d0b126",
          "status": "OK",
          "code": 200,
          "responseTime": 241,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "eb314705-c62e-4c8d-b5c3-75b5ae788672",
        "cursor": {
          "ref": "8f1a10cf-e91e-4de6-ab60-e5e1f3c8806b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d062ffb-d05b-48e4-9127-bb5433e198ff"
        },
        "item": {
          "id": "eb314705-c62e-4c8d-b5c3-75b5ae788672",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e1b7ad0a-2e7e-4d6b-8d85-f0dbb66743f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334e74d8-f25b-446e-8ebe-b83aee295ee1",
        "cursor": {
          "ref": "c4a79582-4dbc-4f45-a110-6256e803bbd5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b6e16d41-b7f3-48c9-861a-cb4e63a3f41a"
        },
        "item": {
          "id": "334e74d8-f25b-446e-8ebe-b83aee295ee1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3454e28e-d765-45b5-a8e7-e7937bdf130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53cb6d-5477-42a4-8495-bfcc8f856d68",
        "cursor": {
          "ref": "0878e4c4-5bc0-462c-92d7-b339c066c204",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d0f12d6c-7513-4f48-85bb-aa065c9ff748"
        },
        "item": {
          "id": "0e53cb6d-5477-42a4-8495-bfcc8f856d68",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7393873d-cbe2-442f-a244-4299adbc612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d902eea-7941-4b03-82e8-dc0f05037484",
        "cursor": {
          "ref": "047457ef-aa5a-442e-a661-5da391b5dab3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "87df5515-bfa4-4a60-8a49-6a89eb9df962"
        },
        "item": {
          "id": "4d902eea-7941-4b03-82e8-dc0f05037484",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "edabd3b8-d58e-43b2-8fad-a57647742a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f0a8f-5e75-4e60-83d4-d003fda3fcc1",
        "cursor": {
          "ref": "0afed748-e771-4b47-a0eb-35649e78e945",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5dbbd9b6-9d23-4389-8f4e-c575fa60aa03"
        },
        "item": {
          "id": "b34f0a8f-5e75-4e60-83d4-d003fda3fcc1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c115345-5350-4dc2-a88d-4b5eb179d76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95be6351-df07-4295-8542-3ff20b890b94",
        "cursor": {
          "ref": "9a16e047-877e-47a2-a4d2-63d2b9825738",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e9dbb699-7ecb-499f-b82f-998237cb863b"
        },
        "item": {
          "id": "95be6351-df07-4295-8542-3ff20b890b94",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f05297da-8d75-4bef-987f-7026871c2af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffb0e32-ef19-4bb3-a3f3-71331d0a714e",
        "cursor": {
          "ref": "7cbd8e92-39bb-4555-b42d-0fb21cbca9ba",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "43697c16-d44d-4a54-b824-16c4b4cb615b"
        },
        "item": {
          "id": "5ffb0e32-ef19-4bb3-a3f3-71331d0a714e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7e7dd0f1-f62d-4a32-9f1a-07099433fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee25b534-bdbe-4605-b035-67131849a048",
        "cursor": {
          "ref": "f01e2dac-82f2-4231-8d3d-f25cbd8ed779",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9dcbd7a4-dc79-4c47-ad60-a0632bbd8baa"
        },
        "item": {
          "id": "ee25b534-bdbe-4605-b035-67131849a048",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a2deb2c5-3eaf-4cb7-b333-f6a62a8ed490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb87dd3-3bf7-4f7e-a6bb-e917ab042130",
        "cursor": {
          "ref": "4dc74dcd-61be-4034-88ea-f5723e2dcd54",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "446cab9e-d6ca-4d23-8dca-30b28d3cb36e"
        },
        "item": {
          "id": "8cb87dd3-3bf7-4f7e-a6bb-e917ab042130",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e8bb0236-0191-4c20-864b-f1c127d1691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1c8366-8ec1-4ee1-8729-9e31a0a89ee3",
        "cursor": {
          "ref": "fc143687-8984-46bd-812d-03cefaf63049",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "645c57e1-3e38-4be0-9f34-de9c40a12ff5"
        },
        "item": {
          "id": "aa1c8366-8ec1-4ee1-8729-9e31a0a89ee3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bf0f1df4-46ee-4476-970d-22d08f9f4e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0b8f82-7fa8-4aee-a86c-dce3c20b82f0",
        "cursor": {
          "ref": "c9b6f8e1-d03a-4e78-96b5-cc2710320076",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bb3791c6-da91-431b-9cf3-0436c343dcab"
        },
        "item": {
          "id": "9e0b8f82-7fa8-4aee-a86c-dce3c20b82f0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "849cc57f-c9fc-40e0-abb3-672a40617fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72eae69-6a09-48a3-b55e-69ca39c21727",
        "cursor": {
          "ref": "7bc1b85d-3e99-463f-a076-62b2a41879c9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99032d91-e215-46ef-8f89-56520442cc65"
        },
        "item": {
          "id": "e72eae69-6a09-48a3-b55e-69ca39c21727",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f150e052-5de6-4a04-849a-827f773cb53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5c2a25-f11b-4f2e-8262-ef645ae538e0",
        "cursor": {
          "ref": "d70759c6-d5cb-42cd-9e57-e43c46c8dbc1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8da4ed30-e762-43e9-b58f-48512580b192"
        },
        "item": {
          "id": "8b5c2a25-f11b-4f2e-8262-ef645ae538e0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "503a2d5b-ff79-4a6d-bb05-2e3ba4e376be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fba8d8-9441-40ae-8ee7-7c0149ff3957",
        "cursor": {
          "ref": "70e84ae4-4f15-4f81-93df-7d6a3facdceb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c0006a8d-b8fc-464b-b653-9c44277ed400"
        },
        "item": {
          "id": "d2fba8d8-9441-40ae-8ee7-7c0149ff3957",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "37ab5509-04bc-4e48-82d6-2b36c5201256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa4417d-57c8-42a9-910d-7fe7d8cbbb1d",
        "cursor": {
          "ref": "1a82e6d7-f70e-4dbd-8b69-655548475040",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fd771bd-cfaa-4fdd-bdf2-71a9ab98ab41"
        },
        "item": {
          "id": "3fa4417d-57c8-42a9-910d-7fe7d8cbbb1d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2d469ba0-41b1-4eca-b855-d713106bbe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50713e9-3b83-4bfb-9263-9908044bdd50",
        "cursor": {
          "ref": "601467de-48b7-4264-bffd-802704ae8443",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f5a59beb-b174-4f87-b44a-f5f72ed53b17"
        },
        "item": {
          "id": "e50713e9-3b83-4bfb-9263-9908044bdd50",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "22206e34-0b65-4b06-8779-e0c1e46dc5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed044fd-55cc-40f0-8759-6432cf0f2c1d",
        "cursor": {
          "ref": "56cf367d-5429-4225-a364-bb7ce187a5cb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c596de57-9197-4e39-989d-dadfebbaec28"
        },
        "item": {
          "id": "2ed044fd-55cc-40f0-8759-6432cf0f2c1d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5e9cb4a5-129b-4992-a26a-0a7e144f5a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02d057c-f6ea-410d-8ab3-114f322a49f6",
        "cursor": {
          "ref": "853db219-9a4b-4411-9ca7-4c80cdb47e7e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fbe7f48d-ac43-49de-a7a1-ecc7f263382a"
        },
        "item": {
          "id": "b02d057c-f6ea-410d-8ab3-114f322a49f6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1dcb934d-cc0a-4bd9-9382-f00eb9893624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcc6d67-beaf-458e-acf2-8230cb90c343",
        "cursor": {
          "ref": "1f44977c-33d2-451a-bd50-26123060c3da",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9a6a8484-f16a-4e69-9c97-d8366b10c765"
        },
        "item": {
          "id": "9fcc6d67-beaf-458e-acf2-8230cb90c343",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4a75640b-02b0-4386-8102-7ce18e7b2fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3218d1-9a3a-42a0-8237-6d83ba138566",
        "cursor": {
          "ref": "ab32070b-c8a4-495e-9b00-441e440c0619",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c92d25ff-930e-44e6-bc99-16f69627cfa3"
        },
        "item": {
          "id": "9e3218d1-9a3a-42a0-8237-6d83ba138566",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ecb1ec77-b861-46f3-99a4-0dc909c6a0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c82c997-c659-42af-9c41-c4e4d00e4f90",
        "cursor": {
          "ref": "d7a921ff-88cf-46a5-bc17-194868369c65",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "10112ea4-3e95-4a09-a367-428b07979751"
        },
        "item": {
          "id": "7c82c997-c659-42af-9c41-c4e4d00e4f90",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f7501b9a-7227-417a-a4f9-60406ffb0df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0219510e-09a2-401d-a4b0-3941134362dd",
        "cursor": {
          "ref": "e551b811-7e54-47d5-8d36-931c51844fe2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e7c57681-c347-44f0-ac5b-1d3a35a5a87e"
        },
        "item": {
          "id": "0219510e-09a2-401d-a4b0-3941134362dd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "457591e4-338a-4b57-9923-bd323262ddc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7a357b-3570-40fa-94be-9d781d94677b",
        "cursor": {
          "ref": "4d700255-5a53-4a54-a274-af05b848f706",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "86ae8468-0390-4804-9d52-2d1750feb5f2"
        },
        "item": {
          "id": "0d7a357b-3570-40fa-94be-9d781d94677b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b1b704de-e89d-469d-a4be-2f5d6789b583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f432b6-7149-4b97-ad43-93549de21601",
        "cursor": {
          "ref": "966adecf-20e0-4054-b744-9dd03fe6874e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "497190f5-c605-47da-be9f-1e87805c051d"
        },
        "item": {
          "id": "73f432b6-7149-4b97-ad43-93549de21601",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb0646ec-baca-482c-b303-bd5da135ceca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc885b4f-fc78-4593-a6d6-fa31c1cba6fb",
        "cursor": {
          "ref": "fa7028ab-3bb0-4a3b-ac11-969c08b732a0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1e034cdd-838f-43f2-8aec-3f4fa4d7809a"
        },
        "item": {
          "id": "cc885b4f-fc78-4593-a6d6-fa31c1cba6fb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "01e12037-8b69-44b0-a01c-2e0ea55de329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f396da-12ad-42fc-9487-f947d64c2d29",
        "cursor": {
          "ref": "bec87821-b876-43a9-a67f-7da487d67506",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8de55851-7fcf-46a9-a9e4-7fc4c5aaddfe"
        },
        "item": {
          "id": "10f396da-12ad-42fc-9487-f947d64c2d29",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "42a1d75b-e801-43cc-a477-550a37d1481e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c536d5-30f7-4f93-bcbe-ac3c6f7570e6",
        "cursor": {
          "ref": "6065c1c9-7d6d-4768-9b5f-4fed386f53dc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f9a00249-1489-4528-a5d1-35f06a4392de"
        },
        "item": {
          "id": "03c536d5-30f7-4f93-bcbe-ac3c6f7570e6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4b2b7102-119d-46ee-b05f-07578e5122e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc652d47-2e87-4791-9cfc-403a42dd7c11",
        "cursor": {
          "ref": "86f0ae05-8982-4cc4-81c6-f425b1281b77",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "875428c1-a50a-487f-8004-898f22661eed"
        },
        "item": {
          "id": "cc652d47-2e87-4791-9cfc-403a42dd7c11",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a7e63a7-7f05-4cda-bda2-c71ad9318f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a092909c-d8e7-46c7-ab16-b96f43115530",
        "cursor": {
          "ref": "6ad9d32d-e462-4b72-bca8-920ec9114f12",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c10239df-b365-484c-9b8e-015cf765e657"
        },
        "item": {
          "id": "a092909c-d8e7-46c7-ab16-b96f43115530",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b905c53c-a3bf-47ec-b16d-ea7f5315b76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81030c95-c653-4040-b18e-2ab8c2aca283",
        "cursor": {
          "ref": "bf9a718e-68bd-418c-99af-e1781941ec45",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e2ea85ce-9207-4ed3-aa5f-6635d53f4030"
        },
        "item": {
          "id": "81030c95-c653-4040-b18e-2ab8c2aca283",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a6f6c656-21c5-4fed-9ad5-9d9acd756faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869010c8-1054-4514-b3c2-0ae6ccbe60a5",
        "cursor": {
          "ref": "70f7c7ef-c70e-4d55-9fce-6915ce555611",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "827cff24-d216-4095-bb39-a4baaf5f5928"
        },
        "item": {
          "id": "869010c8-1054-4514-b3c2-0ae6ccbe60a5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d88b3450-d3e8-49af-89ef-7bf1e910f273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbe9b98-6b93-4a3b-93f7-fa1e6b9305fd",
        "cursor": {
          "ref": "371296cb-4a35-4406-8951-317caa0b7d28",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5c51ad52-0efa-4993-8c9e-6fa781b02358"
        },
        "item": {
          "id": "6fbe9b98-6b93-4a3b-93f7-fa1e6b9305fd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "db172335-1ca9-4111-95c1-4963120f58d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd483a59-db3a-458e-a7a3-39e3f1595eff",
        "cursor": {
          "ref": "fc6a529e-a200-46e9-9501-8ea363320a74",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "83d07536-2ddf-44c6-b995-202ec13997c5"
        },
        "item": {
          "id": "fd483a59-db3a-458e-a7a3-39e3f1595eff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc9d38dd-0947-4b03-bf73-6cd3a1849f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3040ea29-43a5-4b74-a927-f4f9ee366114",
        "cursor": {
          "ref": "25bfb1b5-1034-456a-8571-4ba896a5403b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fc09c74d-87a3-4c8f-a09a-2f1fe96b00cb"
        },
        "item": {
          "id": "3040ea29-43a5-4b74-a927-f4f9ee366114",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ae0f35eb-8875-41e0-be25-3c90bf4b71c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d21d0d6-b3b1-4f5f-9be4-dd3dea2390aa",
        "cursor": {
          "ref": "12ad3e44-adba-450c-af8e-076bc856ec73",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3e9153b0-7eaa-4031-87a0-8439f1e143a6"
        },
        "item": {
          "id": "4d21d0d6-b3b1-4f5f-9be4-dd3dea2390aa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "29e83df6-97d5-4f79-a922-44bee723cb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faba7944-6927-411c-a60a-02ba1e378144",
        "cursor": {
          "ref": "f8fa1fc2-e881-4d2d-b00f-89b9cefdb3f8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "35825e90-4093-4c28-9834-d67e7c595f1e"
        },
        "item": {
          "id": "faba7944-6927-411c-a60a-02ba1e378144",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8c3ef543-e22a-4d8a-aa1f-4f0fb06f0374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097d4253-98e3-43cd-a528-aa19903859f7",
        "cursor": {
          "ref": "1f6a1b39-f2d1-4983-8e7a-603633707b6d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b0850403-10ea-4c59-a5fb-aec6dd82672f"
        },
        "item": {
          "id": "097d4253-98e3-43cd-a528-aa19903859f7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1b8806b9-5aff-43ed-baf4-8d64ed8cab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b7e331-084a-4b56-9812-a8ac0acc3502",
        "cursor": {
          "ref": "23603e3b-9b8e-4a72-9d59-281f94ebd9a8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "587ff674-ba2c-40ec-b780-07055d536945"
        },
        "item": {
          "id": "67b7e331-084a-4b56-9812-a8ac0acc3502",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "95420288-428a-42cd-bd1f-d7223d41078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70624d78-2aac-4e07-a16d-a76d9a8dbaa0",
        "cursor": {
          "ref": "24993448-f2cd-4dea-a483-3a438a6cb638",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "43000635-6df8-45d9-9fda-f399058160a8"
        },
        "item": {
          "id": "70624d78-2aac-4e07-a16d-a76d9a8dbaa0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4ef0f900-16c4-4b2a-a32b-5904e0b200f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2786e6f-cd2c-4d85-a0fa-29363192a824",
        "cursor": {
          "ref": "dfbe5048-943f-4921-b3e2-95dce1f16c48",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67924624-6562-4a01-93db-a9939de0706b"
        },
        "item": {
          "id": "a2786e6f-cd2c-4d85-a0fa-29363192a824",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4fcf0e8d-3bb8-4203-8f42-dc54fadf2650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4045925e-4a01-4155-8d44-820307a4ea88",
        "cursor": {
          "ref": "b31c2f21-834b-43f3-9d21-798ffe3e84a9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a3f779b0-2745-49aa-a1be-e125a6690e06"
        },
        "item": {
          "id": "4045925e-4a01-4155-8d44-820307a4ea88",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "97e81279-5571-4fa8-9765-0b6227176cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c4527-e444-4a87-88ba-e9c777ca9c04",
        "cursor": {
          "ref": "00a10736-1b86-4bcd-ba83-00dbb640594d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "acc6f0bd-2117-4ae1-8283-afb3428f8a0f"
        },
        "item": {
          "id": "a33c4527-e444-4a87-88ba-e9c777ca9c04",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "764501d6-d6ea-4ee2-8a7a-597f04666f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dda037-05d2-4adf-89d8-617ae29b7d70",
        "cursor": {
          "ref": "3440a814-1cfe-40b4-ae52-8c0676d52449",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b496a624-1525-47c3-aea7-c5700a79c609"
        },
        "item": {
          "id": "49dda037-05d2-4adf-89d8-617ae29b7d70",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "abae6bb0-432f-4575-bcad-76a644c30bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7605c269-383e-4edf-b216-579215119b98",
        "cursor": {
          "ref": "243161c4-6b6d-4b11-9079-c4cdc87552fc",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "854a8897-c729-4478-97ed-c8611511a2cb"
        },
        "item": {
          "id": "7605c269-383e-4edf-b216-579215119b98",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cfac56de-3184-4af9-a4a0-de98bb9c6687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1caa78-45ac-4889-8bc5-29c999a86204",
        "cursor": {
          "ref": "f6ddfee3-49e4-4c55-97a6-a8b7fe6d6679",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9fb6ccba-b0be-49fa-9d6d-7019b39b6869"
        },
        "item": {
          "id": "4a1caa78-45ac-4889-8bc5-29c999a86204",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "90c24e5b-9d13-40c7-b1f1-945eb5ace12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663dc017-b37d-4b76-8f4e-f2a7cdae9c5f",
        "cursor": {
          "ref": "a5aa435b-5f6b-4f42-b231-6e80b3ef29ec",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "900a438b-974f-4549-981b-271d10fc164f"
        },
        "item": {
          "id": "663dc017-b37d-4b76-8f4e-f2a7cdae9c5f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "339b8bf0-98a6-43c5-902b-b5ede43d8e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa1c48-2bb0-4b1a-adaf-be512956e890",
        "cursor": {
          "ref": "2972292f-d2d9-497e-b4e9-60e26b01fa7b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "94c7c203-c75a-4608-90b2-f7b055ba1e95"
        },
        "item": {
          "id": "60aa1c48-2bb0-4b1a-adaf-be512956e890",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20969b99-e770-4bab-bd3e-6366f22c4031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf6fc1f-4c6b-43ba-bbc3-1f3c3eeb50e0",
        "cursor": {
          "ref": "c05d2ec7-64ad-4089-815e-6b14667dba66",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61f2ad46-dfda-4169-9ecb-975a21426f24"
        },
        "item": {
          "id": "9bf6fc1f-4c6b-43ba-bbc3-1f3c3eeb50e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "daf3742f-aeae-43de-a26d-10f635235d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae50298-065a-4eb7-a691-7f490d6443d5",
        "cursor": {
          "ref": "8a406628-bbbd-41fd-ba29-66a2fb6a6fc3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ab5f962e-9194-4cd9-bb30-632508c57c21"
        },
        "item": {
          "id": "5ae50298-065a-4eb7-a691-7f490d6443d5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "efd9f800-96fa-46f6-8b43-6424c7b9f936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b51a8a-b088-47a3-8665-9344f1ff67de",
        "cursor": {
          "ref": "72c83666-dcc4-4847-b1ae-0ca1318e88e2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6ae411c4-c3bf-4c43-8189-4d5385325129"
        },
        "item": {
          "id": "a2b51a8a-b088-47a3-8665-9344f1ff67de",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "aa75ee1e-4bc0-4421-9323-ee919f5e5714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdb7472-061e-41ee-a533-754858dcc304",
        "cursor": {
          "ref": "6e3c9523-11bf-4c58-b18c-bf122ec8a091",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b3f6e4d4-6eb7-4cb6-82a2-01ac00c8ae2c"
        },
        "item": {
          "id": "efdb7472-061e-41ee-a533-754858dcc304",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf7d290b-a26f-4a09-ad47-5261bdf9b6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bbc286-d5d4-47c1-ab2e-700616eeb12f",
        "cursor": {
          "ref": "fc85345a-f717-4cb6-9ffe-e34e8d1c6184",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3ffe799c-94a1-478e-9ef2-9ea103e228c9"
        },
        "item": {
          "id": "74bbc286-d5d4-47c1-ab2e-700616eeb12f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0f39105e-f4fc-4ed8-a5ca-ba45f5361f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d0ee17-be07-49c1-aff7-b63f176fef0b",
        "cursor": {
          "ref": "02245c93-6272-4b5c-adca-59786aa2a54b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b8a87e5-df67-4894-919d-d3bb1aa2adf9"
        },
        "item": {
          "id": "d9d0ee17-be07-49c1-aff7-b63f176fef0b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "54e68a36-d10a-46b1-a553-a338ce369f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33515d39-cabb-4c84-be5e-3b6febf06bac",
        "cursor": {
          "ref": "404c7cdf-25de-4752-a450-20024c24df63",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "eab84350-d1ad-445b-ba0e-fce7e2bdd81c"
        },
        "item": {
          "id": "33515d39-cabb-4c84-be5e-3b6febf06bac",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8ef1ad40-10d9-45e2-8b28-8eb400b2a13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ef9cd-c19e-4264-a6c4-a141e1748c86",
        "cursor": {
          "ref": "79e86611-bf2f-4585-a6a3-647360091193",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2756a68d-5a60-4c0c-b1c1-df94a20be330"
        },
        "item": {
          "id": "b33ef9cd-c19e-4264-a6c4-a141e1748c86",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2b98558e-409f-4629-a431-e9c9f1bad8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc59d9b-0b4a-4ce4-a431-d635d366dde8",
        "cursor": {
          "ref": "7afb03a2-6077-4ef9-b7be-c51c7069cc18",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "92372f1f-8ca3-4c16-8706-7c32b5fab92b"
        },
        "item": {
          "id": "bbc59d9b-0b4a-4ce4-a431-d635d366dde8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "687309d4-4733-4e57-a35c-9271a3c6f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3e4e70-2cca-4a2c-9660-c7941c8c7d70",
        "cursor": {
          "ref": "c1addac8-c32e-41de-916d-4675e7c9956a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0754ed1a-260b-4781-bb17-799723f869bf"
        },
        "item": {
          "id": "6a3e4e70-2cca-4a2c-9660-c7941c8c7d70",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4cd7ce63-6afc-49ec-9cfb-6ddfce981860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5243813a-7756-4aaa-afb0-2384e2c43348",
        "cursor": {
          "ref": "e35af741-f3ca-4c97-84e3-175fe14a5f10",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0017de4a-a0ea-4f09-b716-89221518d98c"
        },
        "item": {
          "id": "5243813a-7756-4aaa-afb0-2384e2c43348",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6a901536-5e84-4562-8e54-c1027b429046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9576b81f-cfaf-40a4-8a9e-084e0639afbc",
        "cursor": {
          "ref": "3869a044-aa6f-4474-adef-489b187c933d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e58126ed-f9e6-4b20-84ca-c6e4a0f5686a"
        },
        "item": {
          "id": "9576b81f-cfaf-40a4-8a9e-084e0639afbc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7102100f-cfed-472b-b091-ae53ceabc32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8b08cc-9434-4b19-aefc-9756f3cbea43",
        "cursor": {
          "ref": "b6fc809f-dbb0-4aa7-853d-1c8bf0cea843",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d496b118-7c16-4ae6-879f-d3bcc4ced43d"
        },
        "item": {
          "id": "fc8b08cc-9434-4b19-aefc-9756f3cbea43",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "abf88dfa-060d-4bbb-a3f6-153d3276a760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9b80b9-8e1f-47e5-8894-2707b745cc3a",
        "cursor": {
          "ref": "c1a3ea8a-70b9-4040-b28e-32817fd427a1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b12ece7a-03d6-4f84-9e0d-c162a2fe2e55"
        },
        "item": {
          "id": "fc9b80b9-8e1f-47e5-8894-2707b745cc3a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7b4b2bbc-c7eb-4d17-bc6f-8e1ad22b8bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ff7d55-9d8d-489d-9d2b-b565cb3db8c5",
        "cursor": {
          "ref": "6b077f46-2015-4e64-bdc1-80cad7e7b66c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0a02dbe9-07fb-4a35-83eb-a8171b08d081"
        },
        "item": {
          "id": "55ff7d55-9d8d-489d-9d2b-b565cb3db8c5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "903423fd-5878-4d5d-b547-d76968737e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113eb7a2-d10e-4e6f-86ff-89a69cfe325a",
        "cursor": {
          "ref": "5f2a2d1b-4c86-4602-b3f6-555d8e771518",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3307f6f2-2475-4296-8367-6ea6376db897"
        },
        "item": {
          "id": "113eb7a2-d10e-4e6f-86ff-89a69cfe325a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f9f81da2-f192-4619-9614-bc28d2c7d3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd9da0-43f5-46c0-b0c3-7d8a2effcbc7",
        "cursor": {
          "ref": "8fe6a63d-c0b6-4368-9b0a-55f8ed2291ce",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f2b96a1-bcb8-4912-adb3-6f155fa1dcf4"
        },
        "item": {
          "id": "36fd9da0-43f5-46c0-b0c3-7d8a2effcbc7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "788d6006-fc4c-4775-80c2-f22ebc9b9096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4d1396-f33b-4cc4-ac80-7b7f54e27464",
        "cursor": {
          "ref": "8b1e96a4-9a53-4e50-a9b3-b39d7fb9a1da",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "db9df1ab-47a4-49c9-bc38-cc320d1da02b"
        },
        "item": {
          "id": "3a4d1396-f33b-4cc4-ac80-7b7f54e27464",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6b9b600a-5533-49ce-b413-0abd3ead7b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0304c170-3001-4bcb-b3b0-8a5627ed7604",
        "cursor": {
          "ref": "b286431f-8748-44b3-afce-143b458e1595",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7cc19f81-a926-48c3-a378-731b728034a5"
        },
        "item": {
          "id": "0304c170-3001-4bcb-b3b0-8a5627ed7604",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a3775761-e881-41e5-812b-10e9fbf10713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236367fc-59f5-4bf5-94d6-9107af7aa50d",
        "cursor": {
          "ref": "6ffc851e-ac0f-453d-86b5-e11aa786eb21",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8a3ce161-36fb-4700-8a25-319ba6100e92"
        },
        "item": {
          "id": "236367fc-59f5-4bf5-94d6-9107af7aa50d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "65482a2f-653e-4443-a0ae-f6b7fe100ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf9af7a-cb26-4685-8511-6e44b709b02d",
        "cursor": {
          "ref": "d82d6331-ea06-4dd4-be8d-5318251d4c0b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f206e46a-37be-4dc9-9acc-3121b086056a"
        },
        "item": {
          "id": "abf9af7a-cb26-4685-8511-6e44b709b02d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1e84af75-e2cc-46ba-8933-0b830035a4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d236d3ca-ea2d-4706-9890-65830df9aa22",
        "cursor": {
          "ref": "fbb019a6-16f4-462f-b62a-7606796dca53",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7c577821-28e1-4cd5-89ec-c59e095a8b4c"
        },
        "item": {
          "id": "d236d3ca-ea2d-4706-9890-65830df9aa22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "97a074a9-9f78-4906-91f9-49cc62ace7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0b8431-9e6e-439d-8c7d-5f51c9b83bc5",
        "cursor": {
          "ref": "3c8196b2-4244-4df8-aab9-8a9c4430be35",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1fff5bc0-ad9f-4eb6-b252-9e445d5e1833"
        },
        "item": {
          "id": "4c0b8431-9e6e-439d-8c7d-5f51c9b83bc5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4d432952-c73e-4122-9d94-e144dcfbb5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe34e58e-6143-44e2-b8db-20716caeb73a",
        "cursor": {
          "ref": "ed184e68-6d4d-4439-bc60-6ab4b10398a8",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f843a2d2-1165-4f20-8079-09d752c307e8"
        },
        "item": {
          "id": "fe34e58e-6143-44e2-b8db-20716caeb73a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2f12b783-a4f0-4915-b689-692d076aa28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df887abc-a78c-4b89-b014-f8a78c2c9c3f",
        "cursor": {
          "ref": "bd4ba4b9-d6cf-4453-9489-05b7df4a2982",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0dbba5d9-20c5-48d2-a538-1137542a4cf4"
        },
        "item": {
          "id": "df887abc-a78c-4b89-b014-f8a78c2c9c3f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4bd64f11-ae0e-416d-a18a-e14b7d86e8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16523fbf-fe81-4e5a-9321-acfca4d98995",
        "cursor": {
          "ref": "7b54176e-a918-4f49-92e6-f3ad9ef0dcfe",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b4562a02-a7d7-432e-84d5-adaf1b79f4a8"
        },
        "item": {
          "id": "16523fbf-fe81-4e5a-9321-acfca4d98995",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8e0c83cd-b518-4129-8229-a5fad2d3947c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fed0208-f4e0-4377-971d-359992dddd2c",
        "cursor": {
          "ref": "a82a09d0-305c-4f9e-9f3f-b4e1afb0e736",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "77ea6bf4-9b67-4ba2-8142-2d3944d34105"
        },
        "item": {
          "id": "7fed0208-f4e0-4377-971d-359992dddd2c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0d14f84-6fbe-45c8-b973-249ea1d57f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a443d523-26b5-4c22-a0a4-835667424e2e",
        "cursor": {
          "ref": "3d2633be-7d7b-4426-846e-3d4dabf43b13",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7d248ced-fb94-4d66-85ab-e5bd2c081424"
        },
        "item": {
          "id": "a443d523-26b5-4c22-a0a4-835667424e2e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8839748f-0b5a-414a-afe7-81f017139750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30f54ca-4ed1-47ae-9acf-a616f096a616",
        "cursor": {
          "ref": "e7f9ad2e-eef8-426e-8cdb-8dc45093dc2b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6a6ed1ba-b975-4fbf-a57e-c465b0de6cf7"
        },
        "item": {
          "id": "b30f54ca-4ed1-47ae-9acf-a616f096a616",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "78b18d7e-d126-40c8-b0ca-802d99311075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729e80bd-0cbb-4929-9702-014e80f8a7ff",
        "cursor": {
          "ref": "e0e909ea-3f8e-4a61-875a-0dd146637307",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c6768a5f-38d8-4cca-a3a2-56204d3f9b20"
        },
        "item": {
          "id": "729e80bd-0cbb-4929-9702-014e80f8a7ff",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d872e205-7e56-4d3f-9563-d7677f855a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea43a747-81cf-45a3-987d-781c6b1863f5",
        "cursor": {
          "ref": "487aac3e-affd-415c-a48e-c702a67e3fa0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f9e0243c-3db3-401d-9f03-b720ca8fcd66"
        },
        "item": {
          "id": "ea43a747-81cf-45a3-987d-781c6b1863f5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "634d5cec-2663-4e9e-b0c4-682e3857f0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64030380-2be3-45fd-a72b-18cc3b5e4ba2",
        "cursor": {
          "ref": "aa9af36f-991a-411a-8e72-aefc0d51d91b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "df1db1fc-773c-4b76-8fe2-4dea205eb6a6"
        },
        "item": {
          "id": "64030380-2be3-45fd-a72b-18cc3b5e4ba2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d0976bcc-6d56-4dad-8f79-30482c8b464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69febdf9-917d-4aa5-a8f9-f489e38eb03e",
        "cursor": {
          "ref": "67781c30-7041-4ac3-95a5-70debbb75eb5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a7e8dc76-f737-47e9-b505-015c6c36b416"
        },
        "item": {
          "id": "69febdf9-917d-4aa5-a8f9-f489e38eb03e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f5c1bbc-537c-489d-8f64-84b4b8362abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a62c9-a9fd-43c7-b8f6-2ebb688910cd",
        "cursor": {
          "ref": "e8bf33fb-4f09-445a-80bc-e93ce76fbe4b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3cb46ee5-5f3f-4d1e-bf6a-3b8516ffbd12"
        },
        "item": {
          "id": "765a62c9-a9fd-43c7-b8f6-2ebb688910cd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3a1992bb-f2ed-4b34-a019-ff26eb7ffdbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290de1e3-4611-439d-b53a-4b7fea93f79f",
        "cursor": {
          "ref": "6e662ae5-4ce4-42e9-ba68-7e06b540f933",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8865af6f-15d9-4066-972c-7a4d05000820"
        },
        "item": {
          "id": "290de1e3-4611-439d-b53a-4b7fea93f79f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2674e29d-3768-4256-b6fa-bd7659cb00be",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab9b055-9a55-41b2-b8d8-b13bbdad665c",
        "cursor": {
          "ref": "5de3d39b-a087-4545-8666-14be409ab499",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9dab7489-76bb-455e-a8c4-54d2c925958a"
        },
        "item": {
          "id": "5ab9b055-9a55-41b2-b8d8-b13bbdad665c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "02100800-2ca0-4d2d-ad4b-b41868fa17e2",
          "status": "OK",
          "code": 200,
          "responseTime": 2620,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb576d6-cc85-4dbb-b747-6ecd263fabc8",
        "cursor": {
          "ref": "f2ba81fa-3a9d-4af4-ac0e-07b36edda952",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fb3d02c1-892d-49ef-a2ed-63884d4facbe"
        },
        "item": {
          "id": "8cb576d6-cc85-4dbb-b747-6ecd263fabc8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b2b2a988-7b02-412b-8b1c-fa3dc520eff5",
          "status": "OK",
          "code": 200,
          "responseTime": 2349,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6eef9f-c929-4b81-92e9-b92a49b4ddb0",
        "cursor": {
          "ref": "8f860e7d-98fb-4d69-958e-49e4402a5b29",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7e48c4e4-9bf3-4dd6-8878-1b7e11f0537e"
        },
        "item": {
          "id": "5b6eef9f-c929-4b81-92e9-b92a49b4ddb0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a2ba095-5761-45b7-ba6d-332f4924326c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6eef9f-c929-4b81-92e9-b92a49b4ddb0",
        "cursor": {
          "ref": "8f860e7d-98fb-4d69-958e-49e4402a5b29",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7e48c4e4-9bf3-4dd6-8878-1b7e11f0537e"
        },
        "item": {
          "id": "5b6eef9f-c929-4b81-92e9-b92a49b4ddb0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3a2ba095-5761-45b7-ba6d-332f4924326c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3084a837-1643-40f8-aac8-1cb5bcd298ad",
        "cursor": {
          "ref": "bf8b3b79-fd20-47d0-8de6-2c696b0210bc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0e2453d0-f79f-4d42-a648-c028302da3b3"
        },
        "item": {
          "id": "3084a837-1643-40f8-aac8-1cb5bcd298ad",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c9a5b58-20df-4a21-9fb8-f3140d4faa9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148df8a-a00a-40cf-8b1c-6f24b970f70f",
        "cursor": {
          "ref": "e267e414-bb28-4ffe-aac9-1579d9c7bb83",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d30a5cd2-3aa6-4716-89e9-0fe92b4d1a77"
        },
        "item": {
          "id": "4148df8a-a00a-40cf-8b1c-6f24b970f70f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d52866a3-c850-4b1c-81b0-2630541576aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}