{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7b337488-0738-40a7-8ac5-01077d80945b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7a897d1b-07b6-440f-8ab8-59a611ea8f52",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cdc299f-5cfa-478c-9b8b-cf64b719a588",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a55bb2a9-1694-4f26-8020-7a4b127a6a1a"
                }
              }
            ]
          },
          {
            "id": "9e1fe2a6-0717-4042-a428-1b02fcc2f474",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4942d697-dcf5-4456-81de-d2dbbea76f90",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "55a6a2d3-93a0-4a1f-bfc1-2c51b5da359f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5796a182-4736-4c32-af09-c54d0d023b1e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fd09d034-0c90-45ea-befa-8e64e82e5cb0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3e8214d-bbac-45dc-adfb-1f2c094e2d9d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58cfd2e4-2421-4a84-99b3-150ed2a7ab7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1929986e-629c-4ff9-bd29-a3bc0791def9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59e30bf7-8207-4ba7-a0b0-ec1ce397d409",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0aca3cb-7ca5-4b62-9d0b-223930f8e414"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85e154cf-82ed-4807-bf6d-e2df4f9ca9cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "403d6ea9-02bc-4940-9683-809dd5447f86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e877a53-8133-4e50-b359-a079424733d9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bce96552-f28c-427e-be2b-9e83aaf42de8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "275187bc-8f27-4885-ab2d-0795150175bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ff23fb0-0dc3-4230-8cf9-e3f498b8b8e0"
            }
          }
        ]
      },
      {
        "id": "c8cee84d-06e1-437b-8f39-99d01bb37156",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "176722bc-5a92-44fb-85f5-e1db722b9a87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa45a317-f71f-4d9e-80ed-f39bd2580bf9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3150e7c2-eede-4d8d-a40c-a488a13edab3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2c5e21-615f-4dfc-99c4-178b5d04a9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1859639-1f2a-4dde-b7fb-5d7bc1bc3752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb290fc-6ded-4e1d-b85c-d659327f5a64",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb4039f-9801-4c00-9775-fc74e7c6b3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acf071b1-074c-419f-8e04-82acb5c241b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa20d35-aa68-4ca7-94cf-3449ecd4fe78",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abebdc-44e5-4043-bc3a-3cd7531d4aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74d16dd8-6b22-47b0-a906-bafae1a59fc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b56a7f6b-daa4-4f8c-ae71-4b0ae0ffb7ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74f0100c-17f4-4c6f-894f-8db4b65a95c2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d28b3-197e-42fe-a81b-f7a4600f82d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c31510f-3baa-4e9c-9f01-97f912e4c1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e0623-9e2c-4614-8565-fcb9734c1003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3461f8b-da20-444b-85bf-4e7ce9434876"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2680bb0-8b32-412e-918d-5f574cd6d02e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aa02628-22d4-4099-a4a8-ccb437150329",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5527e678-79cf-4c58-9a40-78aa05670f66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "163f3e45-a551-41a3-9b4d-6a1d5313b34c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "212d228d-723d-4ce2-99d9-9cd7937cfba2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "59702fdd-e339-4488-8c3c-f49cbabcacab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e71c1e61-12b6-4c6d-a336-99ef0e551e85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05219152-a816-4618-8b4d-04414cdda2d9"
            }
          }
        ]
      },
      {
        "id": "da428688-988d-45c4-a3b8-962a81622433",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a2f13e19-2523-4deb-9b76-c974cab79b27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "380111b0-7619-4ee0-93fd-146f80d518b3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5b8f5e74-7b63-40ea-8a85-eaa8d3e36c5a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d03e58-c601-4e39-aeb7-5a885eb75908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02aa410-7912-4601-b89f-46530de8a3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049b5b0-7f27-4b0a-a79d-8f87227e79be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "496b44db-ccdc-455e-b2e3-73650a665cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ed10ad-09e2-4ea5-9714-7ce1f2f42b6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c37934-99f9-43ce-96d4-22684d37ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd6852c-1226-4f16-b3f7-2851c3ba51f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0400c4b8-8089-4f52-ab33-ccb8325b5155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55579a9a-967e-4f6c-bc88-2131e9329cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b653fb3-6929-4e23-a7b1-ff4d829ad8e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdd4dfd-150a-4c8d-87c6-f0f785023fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f790c68-a69d-4681-8740-516f8dbccec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8a768e-bb25-4d93-8db5-880ee7faa04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00ff87bd-b2c8-453a-96b2-c582758bd10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0541d831-0b20-4c15-9779-c61e36f660ab",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b763b23-7c97-4e4e-b835-b474347f2ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf9a08e-f553-48a4-8bfb-9d3acd6760ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bcc8e5-fdbd-4d59-8907-5587cd49ccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "924503e7-f79c-4399-89b3-be12f0e2c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fac03d-e3f8-49b7-a4ec-56c097191d99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7136953f-7b7a-4898-8ba3-86c7f42f7fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472cb8a5-7bcc-4704-a231-f660e08f0f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369d0a52-da17-4f68-8349-bea4eb29c5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c918b7d-223d-4572-8440-6bfd1de09cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b924e8-4af0-4a0c-870f-f101e1967755",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d9722e-4ec3-4323-9d60-66aeb18ee060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2c7115-f4a9-4dae-89f5-5be1a49e5bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e62deb1-30e0-4ea5-8b5d-5833b7f6404f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd4a784f-1ea8-4bdd-af14-9920f1afd78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cdf57e-a4ab-41bb-9536-a80cfcd33adb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a96ec3-82e9-4605-a323-6a74463f308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef702015-761e-4edc-acb1-a3579d02ab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a4c2db-8c3f-4736-ad00-3012f9104fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2917bcff-6a90-4d60-a4ca-0c0c4b6137a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d962508-24c7-418e-9cde-d50bb2ac951a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c35624a-5f6f-4612-b9e5-fb65ef6aec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a314088-1cf6-4cdd-a2de-afa22b54af57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca451ef-4844-41ca-994f-e0d8e68cb9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a2c4751-f916-4fc4-831e-370b86a62dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5815f006-17a2-4ac6-af8f-9f8185963f53",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26862ab-4d2c-4b94-b335-ebde684c3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddd55e7-813a-4395-9461-1f50fad43e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6c454b-b4ce-4dc4-b1fb-3c2dd2f23958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d69c1f5-3217-434b-bae6-5f5bb2d999d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161f8caf-94b4-4cb1-9275-93bc1a14b91e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d02542-5d1f-4e86-b5ed-89f3d7a7bee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51e4898-98b3-4849-bfcd-d67fd7d6d285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecda9a49-f9df-4a47-923d-d1575326ef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09f3d82c-6445-4d73-962a-f2c699387534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc6b583-8435-446a-bfa0-bcdb78c7e690",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cc5959-dae8-490f-9e01-d5a18ddb1862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06b0034-1c71-43b3-994f-2c3bdc47e122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46585402-f428-4361-afbb-3307a35e4a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a4ba10e-7993-4a51-96c3-61498a77da04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3793c70c-4cbd-4c58-900b-6e2177cff51e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5b6068-2b8d-43f7-829b-c1ea09eb4ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fd8ad6-ab40-4441-ae24-69356860c7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7024f6fd-c468-42f1-87ab-aee485e88d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8bb248c-18b0-4f67-a3c1-ba46644f333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7825dd-13ce-4af0-a801-1bba7c69ae92",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4d5fee-3ce8-4149-8778-bf20e5a6a7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ac1530-27b7-4fd7-b49c-918e143a755f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb8a358-166f-4817-b859-55c1e59bd926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba34254e-bd98-4874-88ef-987e5d7f28e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c784acf3-6d2b-4ca1-b972-daf62695fa7a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71521b3b-a607-4d73-971e-0c6cdc7191b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc46e46c-5f2e-49b4-981e-116cc89c470d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392db3b9-b9c9-4891-b7ae-335348e36509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b93237cf-cfaf-4b2c-bf5c-4b6ba582e080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ba70e9-d8d5-4403-a53b-96cb4824cc40",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8faa1c-a7d4-40c8-ac47-759b972041fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e0ffd1-0517-4467-ae45-f753e1bf6cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c835e6cc-bc31-4e7e-93ee-77227ddb5e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ee7b74c-8d4d-4fc2-be62-9ec63a9b2fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1236cb4-f912-400f-ae2b-8cd444ae20c2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b328a8-52a2-4177-99bf-a5eee6ec6511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a3542a-8717-4996-a69f-fb3c07bb4a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0c4c86-89ac-4b1e-ab84-eaff0ffcee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3661e73-6017-4bfe-a2e5-009972f47a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27cf829-a572-4cf8-bc4b-1817d9bb4e1c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17989c79-cb45-4111-971b-4d057013f47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07f32f7-7c5e-4a51-b9f6-efb2816f84df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957118e7-a074-4216-b7d8-42b204a2e79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ee36553-cc85-4159-b536-c8693cde01e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cca09a-9c04-429d-a9a0-22500df172fe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735d4edf-6adf-483c-8fb3-8241671036a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4144bda7-5fe8-4bbe-af0a-b2ed0396608d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4913c2c2-b31c-4b0d-b971-c2a37cae15f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f0098-8743-40f9-8856-9a576fcf110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bd2160-cee7-4d3b-af1f-7a0aec5cb2c9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d622f36-a727-4a5e-a52d-0de4d3c9d6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c377322a-cd54-4457-a4af-1ebe278ab6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12903e7-5674-42a5-8d33-d3cdff83dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6453654d-e1c2-4a38-8a0b-b5f941d762b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d6c3d7-d9e7-4099-adc3-1681b15cf3da",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8201c2-a6c8-487c-a461-6774a4636c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152db1ad-3442-4e32-877e-5e250e24c883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db841d4-63d8-4c3e-b3a9-397e78e4af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71ea590-0f55-4d96-adf7-8cb6c9e74694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99f188c-5b05-4dd4-a4aa-7dbf553c3e19",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8dc2e6-3072-43bc-a1d1-f3801364e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168a1f3f-4023-4b7e-bd58-a7b0343eb075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1784c5cd-785c-4dfe-9e4c-bf60e5f351c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f654f1-1fec-4367-a77f-3bdff11d8ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf262dcb-48b7-4fde-8f7c-d8de7f70b294",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ef8bcc-6fd0-4512-88b7-19e864cb4397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7aa306d-877c-4b25-86da-b860efa8f24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d72498-f6a5-4b8c-9226-3bb957cafa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8f482b-e3e3-4052-a0b2-937d5accb0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c5788d-7d12-4e3c-bce6-f2fa8c92bbfe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a495a027-aca3-480a-ac17-507b5afaa650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e3b460-66cf-4901-b372-d8d7b013f417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3ed691-b081-4d73-939d-ce16957a6b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "163300fc-1460-4078-9de1-a87f594213ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aa5eb6-496e-4bcb-b11f-a37d2e6c3a9e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beb957d-d33e-4977-86f6-6818da9d1516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c454bd-55a9-4779-9ecc-599e57861321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a425f5ab-3397-4766-b831-5f6c1a15880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9590ecc-dc07-4a3b-ac03-f9cf5a759186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b90959-578b-4bc7-acf9-733166a2f382",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c879d7d9-a511-440a-94df-5e4c176171d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444c1d75-9024-4601-b0bb-01ecc8b72eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa8e120-b821-444d-b711-4dc5a71ac7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32321c1-76e8-4706-ab9a-4ee67a601938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2685b841-9e04-437f-a639-ada5229b464d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead69141-cb80-45e9-96e3-87b91131c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b744bf52-212a-4db5-bff3-226da3b89bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802b2359-c6f7-4533-805b-f4aaba2da452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "948e14ba-1461-4e95-a0e2-a29c61a2ccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f337bc40-0c36-4385-b674-2f230f07e0bc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00abecc-f876-47d9-9b43-6e6b37fa8c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3d0a8c-621b-4dd8-a4aa-9655af1d49a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15aee28-f51c-4035-b6e7-d3a0f4792d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3410ba87-7999-4ed9-92a4-a175bef6b104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5002f41-22d8-4dc9-b12a-4022750bbbdf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0d749f-19a6-4262-a3be-9ea122462053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdc2000-d8c6-4769-962d-a3903382635a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3ad196-b9c8-4080-a285-0a4315404f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70b2e97-543b-4c5c-93ea-4d8f998ae1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb9b40-46b6-400e-8a08-b446c636b8e9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f63cf5-6cfd-4d4a-bb65-fa13e9bdbf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221cf77b-11d0-4955-8151-8ac46e3f58c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d17a9b-0a16-4bd1-860c-75a1c5fc7ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c7e9c9-80c5-4b78-8340-9d67a8f13c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb962846-8788-4947-bc2d-c6d129188991",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7a72ba-26b1-4853-92a0-0ccfa287f1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a91f88-2bc3-4984-8ed1-2fd1a24c110f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf46e5f-b46e-4865-ac89-079ed1511eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6aa7cb-520e-4492-bf8d-2142e61d608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b052cc-05d7-4d7b-9ef2-74e72d623504",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47add966-1d4c-4688-ad2e-e320e818b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08177a97-798a-446e-9d46-d3d918b5d992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c11df1b-84a7-4237-b85a-89a4ad422c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f94aa98-2f1d-42dd-8097-1a8361ea8e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ee9a72-5e5f-4314-9638-e68cf8f1183e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b53ff33-cce1-439b-9af5-68607b65d9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc957e45-770e-4cac-90f3-fd5e9b90f335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b57e08-2602-482d-afce-4f19855c4849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a596a4-34af-4686-8b1c-699cff75e6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a0666-63cc-4ca2-9615-52acdb4b7bb0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874070b-10a4-47f8-9885-0f9e8a194861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e2d292-334e-4414-a3e0-2f76e5d719f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565abb8b-ef02-412b-889b-04bf85ff4a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20313a90-4fff-4a8b-908d-7d62c0a36f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3286d5-2a00-445f-9d29-ea15eab05c01",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dfee1e-16d8-4be4-b78b-048d7acb824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d577de1-2b80-453e-8b6d-c8e570da7766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eb5783-2904-4d43-8786-5f5ad0e2a801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92b796c-f6e7-488d-81cc-7e72bb4a1991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31820bf-4640-40a5-8a71-19f010e2a6ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdbe23f-3a55-4610-a7f9-1b0686b9407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3955a4-dead-4727-9dd3-b283ecad804f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeba364-3240-47e0-a5ed-43a5e991937f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9ebd21-dda1-48d1-9f3f-5e6d8c7bd592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375ab061-063c-4965-a61d-d251abc82a12",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af62e122-3446-4cb2-84d9-7760ed6ae50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "063349ba-f9e5-45f3-9d7f-3a019cee353a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a560a5-6811-47a7-86ed-592f0a9c13a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3afe64d-d878-4221-8381-1410d0c71e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f60aa6-680b-4604-b921-8c96191d8d76",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebef08aa-bb7c-4352-b120-12a5a8dea576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2db704-2ef9-42e2-9825-52d8fae16a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578e3985-1c20-4cf1-ac3e-b09412302c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2586eca2-4447-438e-bf06-29e35d9e4e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eabb566-b5e8-4df5-90ee-8ca27ed0b556",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f876381-5f0e-4dc0-8a39-4a5417569e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75befcf9-0aab-48f9-b934-27dcc90bc869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56af1bc7-9841-4e4b-9f15-9242c2743537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4d6530-1540-4816-a36f-193acc16f430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2c7b40-bea6-4a49-88bc-0da4a8eaf1f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1d4c79-10bc-4cae-85c6-1beb13b712ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5900e590-0f94-4e2c-a8ae-5e04bf4f938c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9263844b-e74a-49d5-8f93-c130c960909a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c7b94b-c74f-40c4-ab1f-9ee7fe4985a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0774400a-8545-4702-9c4b-5b8ccbca3e4b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43da6ca-1033-4d30-9cac-3506a5597c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1556bf81-1bc3-48fc-a3e9-c91194967a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72b5af-63bc-44a4-b220-dea3f6e4252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3903be-a7c1-457c-a636-b264dcf91463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253d7e92-c7bb-4558-9b21-3149671f4e4a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c62d5b-5eea-45c6-8cf3-3dcbb6e370dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b7b040-b9e2-4994-b826-e27f5f9d4e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80ded3c-b639-4931-8835-f520003c9cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7f98db-5df4-47b1-8d27-ede97d696ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f5cc44-1c27-449e-baf2-5a465a7ec44d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2dc100-38e8-4285-bc26-4363de62c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7df8c76-8584-4ec9-bf0f-26952b1576d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccbda9b-ee1a-4ea4-9e1f-b81e950e668c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "045a9e33-c040-4cce-8651-ff9a6a91b00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5b69a-e774-4f1e-9ead-fe2052494711",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22daa58f-5ccd-4084-a2e0-6a75e82f16cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a66f1b-0505-49ac-bc3a-2ce5ea23eadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78bc436-e415-4eeb-bc4b-4bdf4fba297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbccba1e-e76b-498c-8ab4-faa78fad3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b91e51b-6766-4a6f-9ab5-c6b18739c179",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fbab42-4bc0-4d9f-a256-e7ef0f13831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8265d5-08c4-425a-9093-855632a2bff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d0900e-ee95-4883-970c-4e3bc7edc883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2e18b0-a111-4373-ac8f-48333a3fd164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ebf735-418c-479f-80e1-308f69355b15",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a274bf6c-06aa-4de2-8a3b-9e8c1675cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8191bf3b-ee3c-428a-b0be-385d98de408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf99ec1-3537-4fde-8815-43e86942c191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8256a485-d549-4606-9536-57091844d522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c98dd4-c740-47b2-b27f-a9c4f625528d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd38c5d-3fc4-467a-8c94-60f1b8da2ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c2524b-30b1-4ce5-84c7-1e53b796caff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ebcf60-266d-4931-b8a3-e34097512f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c909f93-1067-481c-a37b-47307999f1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f1a3e4-5c2f-4f4e-bb70-f4d51fccdf53",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ec860-347d-4137-8ba0-a1369e229bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb29c07-5450-4793-86cf-7a1e00060036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d815cd37-9df3-4e2c-924c-f404fdc153d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2db998-d586-46ea-8ad9-b49471b4daf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c332bf3e-1bef-419d-8f1f-1da2812edaea",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8391ec9d-d54d-485c-9e76-7bfb1b30e23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd98d83-ef34-46e3-91a8-ec914002626e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243f3fbe-ef29-432c-ad12-5e993282dc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7bc781-84bc-43dc-900b-7eddcc5234c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066de8d8-c695-4b64-8b8c-17b7a0706504",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6206dfe6-c72c-48f7-ac70-ea3611368d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f920d9a6-e802-4b37-aa36-1b31b7c67385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbd71f8-ad7f-4a18-aea0-1e370715fdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be02c35-4601-49b2-80d8-de549711af4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c487f48-4338-42f4-b5b4-5ba0eaa26fa8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ea0fc9-7bba-4260-b6d1-668b703ba870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d72b76a-0a15-4e51-ae11-7191bfc6b224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8656f391-5e2f-40e6-a65e-cf4397903dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e17b56f-8e38-4ec0-b109-41fcd166fc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7270d9d9-e1f2-4544-914a-9150781c7d2c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9f957b-9cbb-4a2d-9bae-4e56528f3a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e38eac0-0af6-4be2-ad08-f850c69735c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e256ad-7e3f-46dd-8d4a-319ab65ae8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8256fd33-0446-4852-a75d-c015f3423ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7516e015-dd8c-4aa5-8c3b-289c81c1a0bf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa35e88-8f2c-422b-87c6-e3e39622105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e7f3fa-1de6-4848-93ac-766b97739553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abc3961-9a0c-4c57-8705-ad2cdab2bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3faf6b85-103d-4868-af09-a4719dc43af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef1b6fe-bc27-42f9-8f21-868151285174",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5165d7ac-e830-4b6b-b5c2-826fd6ffc681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ed9998-e052-4b7a-a21a-df1152d83293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcebba43-97b3-4bda-861e-72700f6254bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68cc5d2-b38b-490a-9ec4-f5428a7cf6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b0d9b1-78f1-4179-ac37-d7b07ef8fe84",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778ab118-cde0-45fe-8647-083d30587f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5436b123-200a-4c21-bc37-007653d0cb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f20d70-7399-4f47-a241-6a1b3b8aa882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "237d50a8-63bb-40a4-aa04-0c46c04bf206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408f7660-aa33-4ae9-98df-2e8ea6d745dc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dcb8c2-2be1-48e7-8fdd-4af425636552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e24ad9-54ae-445f-9e5b-a8a91c6e2d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaba719-844a-4782-abda-a9b7e434bfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cd5e17-0fb5-441e-9fc3-cf81be5ebb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d0316e-4b28-4b34-a4a8-559903b2e21f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c46846-ee09-468a-ae0b-9049c7f89a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4e3b54-4862-47f6-b0a9-a9e4e9ba2d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0df84e-d6f1-41f6-a4db-51773f941ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c57e46a-09f3-48ff-b35a-cef92adbabd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488c67a7-3e06-49df-9af6-55f3a6589e4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e575b9-5c81-4b63-b602-d3cbbee7d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30dc393-3715-4d91-b0fb-b7bf9ca42846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e24e38f-f5a7-4103-8f9f-b3518a06347d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56fe5484-efc7-4fea-8011-074a43e97d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d70cb6-d413-4a86-b8c0-74e42d12d7ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d0561b-6fbf-4319-9d05-69ed6f1f1162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf5d13e-f1d9-45b0-8eac-a7072f9db3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89fb0bf-3de0-4afa-b234-3a63f3836ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6c11b8-88de-4614-ba5a-00a69fcb214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015ff64d-7e67-4da9-95b9-ac5aec88e292",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de95bedd-ff8f-4d75-ba67-3dd0b0de565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ddfc6b-643b-47b8-b9a6-ddb84fdb2832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1ce02e-01ee-41fa-91ad-921795d6b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c966853-4223-4ba1-9c78-42b752b56254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cc7f5f-fc3b-457b-9180-d5f4347811bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588903ab-6705-439f-92ac-cad10ac82f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4b3158-259f-4512-aa8b-ceebe68bdd5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beff828-dc32-44b6-85ba-b0e3b5aaa643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5919dffd-bce5-4403-b2cd-2263f1581749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d96f0d-a892-4a05-bcd3-367d2c953f5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed29b0f-383f-4b64-b1e9-2e7c6f1bb33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1583119-ecc1-4a28-8fd6-3e650bcedb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ba9444-19a0-49fe-aafa-540d03ef04da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7205278-b84b-4bfb-bf77-2082416a2e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197e4fa5-3d9a-48ac-b68c-9fe0a8115be4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4313ac2a-f353-4e06-8ee8-930c6bae76bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4d5ff2-9276-40cd-a532-313de7fa797c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d939716a-b26c-41c2-bb98-e1c37cb23298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e41363d-4ed9-4f0e-ab0f-0abf9fcaf2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360c597b-226e-4a22-a20d-e53b4be452ec",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf84b43-d6d6-4495-a717-7ad27ef4fea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b1cc29-5773-4f00-9514-76951116553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6bae4b-8398-4bba-91eb-e184ce8e21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a27ce6-a0ef-4e6a-a710-092cf47ee55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dd6790-6bf6-41d9-ac81-c7470960bd14",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12112b18-c538-48e9-ba9a-eb335562d158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a8989f-654c-4a84-b2fe-f1a2d1424f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aae65b-49ca-4e0b-bfdb-a5afd8198e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e454192-eb77-414e-8797-8bf5041077d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ab56c4-8979-4050-a654-1ca95ed2e502",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a67d586-4776-4950-8f0f-35556bc60662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e541866-b951-4bbb-b0d0-891c341ceec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0de7705-8914-465c-b9b7-948b6fa20607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad9c52b-0ec5-42ea-b89e-612073b58803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981346ec-ab26-4ceb-8931-c421809cc14f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f4cd5-9ede-4387-9a31-c6a83da7370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f16ce3-d145-431a-9801-c46ca966328f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36aed1d-08f3-4577-8e5a-06096849f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9df71e-0835-43cf-a260-48c35325f4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eec5d6-5f19-4e1c-b96c-b9505746d6c5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a1c22d-2464-41c8-86cb-0ca6cbf14d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c4aacb-c544-490a-ae69-c6becc3e109f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfcb4db-ff1b-45c3-8156-033b6496ec6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0a8536-85e0-44ae-af29-2f0a96db74f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f37dfd0-5e69-46d0-b86e-d696f503460e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa11a9d-a0f4-4801-b27b-818b318a5e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93c6c8d-6a6f-411b-a064-845e0d860c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec48d9b-4f01-4c8c-a8a2-f3849e7d8283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2516b4a-4249-47c2-99f1-e86b03272f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b594e8bf-9921-4137-840f-d62d3bb47b94",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b2c39d-21e8-45b1-b9aa-71a1424351cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523c3eea-e305-4f1d-8eef-80a9d7b6da1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b17d93a-89c3-4b40-95e6-a5ea7a46a231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0179f0f1-8e7c-414e-a486-c2afcaa759ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f797a027-755a-438f-a7aa-414411c4a2d8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf54b003-ed48-4250-af86-cfa2f3a1b645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97782bf-8ec1-4815-83f1-817ec4736f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d87866-5ada-4130-aeb1-de89a9cf279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfe2653-3f16-4f2c-b558-7cbb793b6d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63b87ae-fbd7-4e7d-acb5-d1dc1692cc87",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238f28cf-6fdb-45c7-82b4-4da592f205d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bd4dd9-1245-4b33-979f-2294c852f17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97605dca-ed1b-4fdc-aad3-6fcae832de44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "beee655e-6ef9-484d-9bf3-b720b9bd7982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3e9338-fdef-475a-886c-1264d6e336e6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f275107e-6038-457b-9288-4d20a01d9498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef72a94-1826-41f9-a756-c19847e67c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2dac41-17e9-4d93-917c-19e818b8cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "626119f4-528d-4c0a-89af-1a3abd94b00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dbc3f6-4b3e-4ed4-8660-8dfaa05550c5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2d65d8-9c57-4ff2-b1b0-18a638190a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6118de25-2616-4c11-98cc-cfa54d265ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c384a18a-badc-485e-9a5b-7fdae33de469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51bd527b-a9ab-4f0b-831e-82dbc1faae34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612f9fe9-ad9b-4a73-af22-8a0c4ccfda9d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19752fc-4ad5-496e-8756-1e4a50952d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d47ee9-7b68-49ca-959f-136fe73f93e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f574178-ab0f-439e-8bff-f7ede6b474c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c236691d-25e7-4849-aed7-842cfa120707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e42dcc5-56d9-4181-8ea6-639f86f9ea78",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73009371-f829-40f3-830f-8a8e77ff32fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dc8c7c-c15a-447d-965d-f4a441557a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c390156-2d56-4dac-bb5c-6610f4ad5012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a4037b-732b-4575-a73c-e461c25638cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e976f11-468f-457c-bfc2-547949e44f88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4782fa-a67a-48c9-97d1-a16356ee5a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ce55e5-def7-405e-985d-3802bca4b551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b89b9f-0a96-41dc-824a-38142450d3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07222b8-17a1-4fb5-b7ae-0c521bc05a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d274b7-3ad4-4a48-aad9-aa87c1d0414b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e771a0d-bdd6-4558-b4b5-7e8643e52ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07334f6-de71-4288-948d-0963532e0376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597dc5ea-5e93-42d6-8567-567a3b1223f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39a9168-fca3-44fe-a738-0ce27eba4510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975d8bc4-2250-4f8c-a4fe-dc2aff9c4632",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a68f98e-0361-4f75-8b26-572f93fc2dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5e55ee-321c-487c-9e3f-2acdfdbd9d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7ed7f9-bde8-43c6-90f4-743a8ba97fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1403dc26-60d3-48e8-a81b-7f4b4a6caf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3deb358b-5da2-4471-bb4f-692716e8ecf9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74f2053-eed8-4a76-8285-72cea5dba78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a54a2d-5cc4-4132-92c7-01a254660354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd68c0ef-7684-45a9-9ca8-17799daf916d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a46c7912-bf19-4e1e-969a-6330154ac242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2670e5-13a1-4f25-b250-26e5a2dbd218",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de000bad-d06b-4376-8ba6-2f0c6e8ee8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864b5ea3-d167-49cc-82e7-06583bd335e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91220886-c30a-4ffc-8c08-bb600a90518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44d5a31e-01e9-44c1-a82c-c51a80bd8c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07fa62b-4102-43db-b3aa-3a163497eeb7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2313e0de-79c4-4063-977b-21c561aa62f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91d5bc9-6818-4805-b616-7bcd051d07ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aea24dd-5fc4-404c-8e91-fc8257317af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3431f37-174d-4047-b382-ac1f82fc4162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb003686-7185-481a-9f33-24840df20c80",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f19569c-14fb-4266-81b2-c17584d0bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac540d6-cf12-4581-8b15-93609964e944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970b4426-57b0-4aa5-a65b-93738fc1540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9933edb5-0e41-4fc7-9e06-f1beec2734de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b811f57b-c4eb-496e-bff5-73cda3708922",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc8e72e-08d4-4a2c-9370-49d24d3872c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0d615-980f-4b59-8585-b445694079c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817cfcc2-19be-4a77-ac68-7bdc15d77bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d696da-f288-488a-9031-67dbeba17d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decde63c-5118-4af3-8d03-7d3690725940",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6e5090-0b02-47cf-a616-aee445cc20ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4700408b-e3d6-43f4-acfc-ad3dba6389c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353eef83-3de3-4aaa-9ced-337f7358e846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1a059e-1f0c-4ea7-bb83-365ad69782a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9497d7d1-ab2f-406c-b1b9-a60dcf7887b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0988199-2f4a-4ad4-897e-2416aa4fdd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90bfbb8-1c4c-49d2-8198-2ee8c89256fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a57bf0b-d45e-4699-bec0-0127962d23f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "966993f3-88a5-4d43-9fb0-c4bebbfc44ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65232ca-51af-4ba8-9c71-b63ffe27606c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08adc93c-3ad4-4633-b0eb-7610e9ef7680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228b4c9a-c958-48a8-bdec-6475bb9d3960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbb48be-930a-42e2-ab52-40179ab15824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba915958-de58-4dd0-8926-88641b3f8087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b75568d-46d8-41b5-b77f-4dbbd3206a82",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4485f8-03f5-431b-b04f-0a35c6d3c8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9034953b-b556-4a3c-a6e8-9535e5d00d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec77cfbb-abe6-4231-887e-292a135d5c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "951effed-817c-4d6e-a193-63761a45e2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e653d0a1-7052-4426-b31e-91370d1d7828",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ecbcc1-262f-41e6-9899-46e3349fd81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee559e30-fbd8-4ee8-9b5e-d3bf37a71f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec9500-47e6-44a0-ae9f-5e4b40efee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "518af6ed-25a4-4eb2-9abc-3d3100973523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e84ee7-1b2d-45d4-ab10-309a882976f2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a47c2-b9ea-442a-91d0-c08a2b1bca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d9ebbe-6ab4-4237-ba70-7df46bb60981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef58484a-541c-40c2-9419-b30fb722d1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29309b6-1d00-4798-82c6-da83685c89af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e4b382-0b33-4c55-a689-25e0902cfcbd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bc2218-0745-49cc-ae93-1ab028462a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae503dc-d1ea-4f15-9878-02e92a74d7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e878ff-51d3-4c40-b1d4-163dd3f59fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4c445a-eeef-4b52-bbc7-fe643a750ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b85ae5-80e3-4c05-826e-4bda505ce872",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bc8222-203e-4072-b4c3-bf12b75bb245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a3fd53-1733-4f06-9417-9fa9982c5675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9f6f30-13a7-497a-aa0a-0de8cbf555c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da34e9cd-06d7-41bf-9c5f-6f04aa7b283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945e3a1-942c-4c15-903a-6c936615543c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666ebde5-70b0-4a7c-afc9-53d840a34c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "570c3648-cc95-4a2b-848f-0784fbc34926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3f9a9d-7728-4ea4-a5a6-d35dbc781d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "603dd2a4-64d6-459d-8f77-a0ea1cb1591b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e28a051-9f48-4285-a756-6feb92023fd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88820f46-9777-4e9a-b729-d4f7b1bf561f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537d4692-38e5-4f38-8597-d7925f280bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c6975c4-28e1-43c8-8fd9-f936def0450c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a972bb0-3f1f-4a5c-9354-bfbf3b3f8dfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b66aaa8-c593-40e0-9633-494b0b7d476e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1fa1ca8-5342-4bc7-82c0-f940a205a7d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd17b507-72e6-4917-bfba-dd0a6a77bf74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "494fcd21-801e-46c8-96c6-74634dcbabd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c09bdb79-753a-404b-b2ea-7090ac67136e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5571c958-6479-4963-9a49-689559f57dd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "691461ac-dd21-478d-9e41-0c438be6bc72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d051d61-d748-460d-9d2d-224fa1549d96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fc5583f-de6d-4ac5-85d0-b8c9c1282112"
                }
              }
            ]
          },
          {
            "id": "50e35214-7cff-4f70-80ff-48ccb0f3c596",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4177dd17-d3e2-43c2-bafc-5224f9edb178",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57cb0f27-d205-4a1c-b622-a0c0a0df87f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82aed21d-7876-4173-adb8-c20d05f1cfaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9d60cc3-dde2-40a1-a72b-8151c1455c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f445e8a4-89e1-4fc5-a7c6-ca79de0be6bf"
                    }
                  }
                ]
              },
              {
                "id": "38ded4a4-0118-4170-b9c2-9fbf58f16f9a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd59e966-4940-4177-a60f-e9fc86020f2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "375ec33f-ce37-4743-b696-e48448e1f4b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5c9e89b-4469-405a-a4ab-6cbdbadf6222",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1eab45d2-cbcd-46f3-9859-0d8748de8c14"
                    }
                  }
                ]
              },
              {
                "id": "7599bf9e-c87a-415c-8642-76ee2c7265fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef9fa8d8-44dc-4813-a75b-c1a67a40b25f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b63882ab-d25a-4695-bdfc-cdd70a3c3f4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73370fdc-cf31-4cfb-a14e-99df9fb5d1a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "793c3bb2-5855-4e05-9107-6f142f905b30"
                    }
                  }
                ]
              },
              {
                "id": "35c09bb5-ef89-4d44-a8a1-b95945e3e754",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfaa1c67-78a2-469c-bfb1-3b5bf0ce4a8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "299ffd75-621f-4795-bac5-4585718c928d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7dca8b0-158d-483d-9088-2ac69232e9c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "60dbfb0f-6349-4387-acde-9e96fddf742f"
                    }
                  }
                ]
              },
              {
                "id": "5fce69f6-debd-449e-8502-58b93e3987af",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09382780-2508-4a00-a3c5-93e5662f2f31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1706bae6-a133-4456-884d-4447fd31ed74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "792913a8-1946-4b25-a8a1-85635c64d349",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8d783824-3303-4898-9e7a-8e736bc3aa5f"
                    }
                  }
                ]
              },
              {
                "id": "059db990-db5b-4b0b-8526-66ff913357d4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7336b39-b727-4b75-9985-57651ef3faa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "209e3f71-d2db-45ee-86b6-b62aaaedddca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4995262a-665a-43c9-96d2-66a507ab509d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33d2f960-c877-45f5-b6fb-b04321be5564"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72a32e0c-023e-40f3-97bf-d3572033e091",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2afff87b-47cc-479d-aada-05c0be9d7a32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5f071e9-7f01-4546-89f5-72c8970ba066",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11454906-a407-4905-a598-f5f56257f53b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14a54e6d-e2a1-488b-b196-2de0591ca0bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ce593428-c17d-486c-99ca-8ff0d7308da2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "701c92fb-85bc-482d-918f-41d355afa397",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60aa511f-e68f-44a7-a93b-34798cdac2a2"
            }
          }
        ]
      },
      {
        "id": "51ddc211-76b3-44a6-a6af-44097216a4fa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d8d13c18-ae72-42ef-bd09-2818b8c534d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7837bbbd-ff16-4648-8070-802e2502f6f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c31166c1-251f-4dcd-8ad4-b800c48dc119",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3aa698-9763-4fb7-9f67-3bd6af4718a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14b7120-81ac-4197-9d9f-8c6dee36e44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df68903f-56b2-49bf-8f2a-405b4df2d20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4876ddc-bd5d-41aa-af59-54a2ab25af00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d384a3c2-24e7-4a4b-9619-8089decad93c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990e731e-1c58-4393-906b-9a02f36be98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641a7f7e-6f88-4b92-9b77-d89984bdc292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9de66b-45c6-4b97-af24-e86aced187cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1d5d07-a846-4ba6-97e7-2c1c9428d58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e381bb-08e8-4ef0-8dee-92e528f0865b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ed9c9-b4c5-4dc9-a40b-356209abf6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a035e6a-4472-4170-a352-5a74cb6356d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2563100a-98cb-457a-b8b6-be9bb84ffd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "807072b9-5920-49a1-b811-e79efa26d46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6d43c6-6f3a-4e07-af1b-5785cd00efe4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268e0082-4122-4deb-b2ce-80d1dff341ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cac4c4-13c6-4e4b-ac04-55488d0fccb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb49f2dd-51f6-4fdd-bc8d-cf555dde4204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4986945-6df2-423f-96f1-84d181120d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b80b64-908d-4602-b434-db712bd05dab",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb0ab76-c4f8-4645-a616-b7067ca27087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a813114-4589-4be5-bd31-4d82f229ddd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8948b68a-bec4-4e21-85c7-e8dd15c9a67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b54df90-e1e5-4a69-b83e-6955f4b9fe7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fbcd26-61c9-4f6d-8889-5ac3028b00b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8767febc-cd65-4b4d-9b16-478382a0ddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811e562d-19bb-4d09-a10c-1caebe0e8225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbcaf2-c325-4a46-8441-0051df36ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5451ae51-5bdd-4a11-a80a-a8badf930b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710b84e5-9414-4b1a-8b3b-dd1f47a0c25c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a71255-54a7-4584-9e40-adfeb1bbfe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646cc1a4-6416-4988-8e60-e7041856ef05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeff199c-e993-4117-9a26-0dd3a6262c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5f9be5-9f47-4d68-9aa5-e1ce5b0a145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3b41d3-c3bf-4713-b046-824341587fa5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6670ac6f-6437-49f3-899d-3f02298f3bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eab98e4-b224-42e2-8f66-ded097a2c490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4721f06-d929-43e6-b3b0-ce0afa8b8014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47dda796-d1b4-40af-b73d-37073352051e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270310f6-c78d-4dfe-a18e-6c614a6fda4c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69d0da3-2ebe-4df2-9523-4d28747f655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805ac6ff-3093-416c-ae9f-a3d8b2488714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4008bbb-7903-4f1e-909a-975a07e2e4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e1c698-3582-4b92-9502-93d14cb21571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da655831-9d73-42d5-b9c0-0cbfb636fcb9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6ae420-8fcc-47af-95c3-2ad48b97f669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee305ec7-b9a8-4927-aa01-b7fb394f8ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837118da-390b-48ee-aea0-2c3f3d02dc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b81594b-efc8-4099-85cf-017dcd843a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2088bb-26b1-43b5-9f29-088f29f4cf8b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1433b90a-69d7-484f-b930-57a67b1f4371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9c9970-5e5d-4746-b307-c2b2223058f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b292e4a-19b0-4121-9040-3f3cd4e8a7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0be2d0-a451-4c0f-acfc-cc9dd46ae62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ec2659-31a0-4a73-90fd-dece2bf1b131",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a836a1e9-c4ca-4bf0-a5fc-3ce8971b5146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e9b145-9ebe-490a-a5d4-45cceb1429d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bf94cb-6009-4a9d-ad46-bfd03648c226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9478c3c-23c7-4cdd-8202-23b520e4a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebab8eb8-31be-43f9-bc98-ad19efc29cb0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55944ab7-f06c-43ba-94ff-e06b6d5555a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504e7fcc-8efe-4cd8-aa46-f26495fd4fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2a8703-4b14-497c-aea9-0cc3a33cc5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3938f618-c863-47c3-bf0a-11d51e3d1380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cc21ed-eb4f-45f0-9df6-1f42f5c070b6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41833fc-6cf0-4cb8-816a-3941554b69c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181e2c76-e7be-4287-8029-4bf64c0d8889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eb9758-5308-402d-8fd3-b7ac0c0a0704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0b375f-c662-453b-883a-996916294648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50375ac2-e7ed-4b08-be03-7d5b585964bf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc47f23b-289d-4128-9ecd-fbdada5607d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51fe728-2500-45c4-97f6-eca474f4fc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f422f1-774c-49d6-bdb6-7165ea3a6414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be112dae-d45f-4f4c-9b7c-11b855979867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b95f45-8bf8-42ae-81f6-60b5a88bcbb5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65978d0-3ec5-43e4-be91-ef1e624b8f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13117df8-1c20-4888-84c8-fd5583cb7437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30946365-4234-4d7e-a27c-10894c2ef717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9c9970-ae1e-4110-8d87-1d46c0fe70a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a64d105-a738-4769-8990-5b2e125cc42e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf70576-de9c-4b92-a433-84ace6d6b089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2d382f-1b9c-4a04-a486-773b086f3401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e024c48e-7db7-4d84-92a9-742670c97008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54454dc-cc23-478e-98cd-93df1438b938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cce99a-3fb5-40cb-91c3-ab2195d30e22",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df51f535-fa35-4a5c-9c35-c45f39125aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74e7ec8-eb20-416a-93da-35b25f15d204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7db35a-de82-44fd-a194-0b56033befd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16b614c-be38-4c2c-9833-f5bffdad6f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79562b9-1fd6-4634-9af3-e7912fd1b5c9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464725c3-6006-4937-9897-7741bd1906a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5512df1c-013d-4418-b21b-2d5f722a2329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa49224-540b-4616-87ba-79c1af07d2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbb2467-7209-4b27-aac9-6ac4cfd9feaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9975b06-bb4e-4394-ac0b-3d9adc8bd796",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c0d85a-ea82-4917-95aa-e9c919118b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ac5081-477f-448c-8fba-423d2b763e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0566a0-5ca1-4450-bb74-09112312b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29bae53-56ac-447a-80ca-ea5452440598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d1a4f9-9fac-4fe2-a121-8e3f1a175b92",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e85b129-c41a-4ab5-8177-170898fda64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889579d1-e40f-4f18-bdc0-baeb5f9f571a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59c8492-a807-4dbe-9358-dc1ef2646e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2584713-d5cf-4a7e-9a40-353f7dadb97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d4202d-0e67-4e38-81b2-aae179c16d5f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7879c5cb-54bd-499d-8000-d11508b9f821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0928ded8-2048-4798-92b4-81378cbbc576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37019414-6131-4c44-9c1e-03edaecf15b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8d870f-07fd-4b56-8e80-7cddb5ed4485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4f4d3c-5fa6-4a60-9b84-cf25754afa2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7cc2db-0596-4515-849d-f504e5c20f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059f8600-7cde-403b-aba8-ac7b4ded6d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b00081-9aeb-40a1-92d5-6f74acbe7899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "931cb903-3d26-40b9-90d6-d3b2b83caf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6be9ae6-06d3-4dff-959b-0b47377fa116",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3b70aa-a21d-4304-9ce0-3df4ad428273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb1bfcd-3a22-41e0-a0e3-314542e02ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d515cd-cd49-4e32-9ce6-2f7412bff21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a959a5ca-e497-436c-bce1-2727cc2b15b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c587a7-e3c0-43a6-ac6b-d29952e4c91c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0946329-4891-4c0e-b4b5-b468a8992734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d754720e-b939-4c0d-8f49-04f061c9ebcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4599008-9163-45cc-af50-19a08016c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ac64de-d963-4bb4-afd5-e48cc4929fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba55027-ef78-4346-8bda-09c63435d7ad",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8da404-6e43-418e-99f8-cb0a00778f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbac5f3e-4265-4cd8-bd73-048872f382b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484a10be-dc16-431d-8d31-bedd5529a1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0387ee2-d197-4fd8-a7bb-4a213d8e1dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f333d-0fa8-4887-af0c-cce70e18a965",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10290552-d8f8-4ed8-bec9-4b5bd0217b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbada4f2-d58c-4af5-8f0d-31bcaa60a070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad97715b-6a2a-45ae-96cb-e8fc1a31faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "313d55bc-a351-4517-90c7-f7b23985b14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e64fc4-f014-44c4-ba21-1e7a4d9f7a28",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bf4f7b-7bcf-4475-8d55-a75b9ce1364f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90b18bf-660a-40e9-b401-84a264789ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530b7fc-acb4-485e-a30f-126a9784c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2acbf86-f301-437f-bdfb-baba929c1f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accfdbae-49b3-4551-a177-e7de459d5bff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c48ca24-e869-4e24-ab03-df74c480bfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab3391a-d06f-4872-aeca-31751335e53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23769bb4-29bc-4d78-80ec-570917b642f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff4993e-77e3-40e5-bc84-592e084d2182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd358b57-bc06-463d-b2eb-bd5ce60b20fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013ef5f0-f824-40ef-b7f2-ac5aa494be61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf71d54d-fa02-479b-b5e6-a17fca393ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241adb26-d3e2-4c2d-a4d7-e8368e83783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb37c341-e3c6-4953-be8d-c58d9fff2145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a90e80f-8242-45e9-81a7-c7522770edd2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9d4a24-cdae-45de-b2b3-734be77458aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a3088b-7bef-4e59-bf54-a0aa74e6c48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7bafb7-0701-48ba-974b-fbf779d9a28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60305dce-ea08-455f-b6a3-4fde2959ae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a75dc5-fd2c-4dcf-a5dd-2ed9f8aeba01",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e06f3-a631-44db-8f16-c5f401bf7ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bee16fb-336e-4ee5-aac4-c1ef66367989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da49f24f-18cd-4f8b-9efc-64b544513a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c188b7-615b-44b6-bfcd-7795bf522acd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69c26070-eaf5-4b16-8831-3a1f4a126509",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08cdff9d-4a90-41c2-b991-c569950d1ce4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db62dfd-2139-433f-9b04-111ea2fd7c1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54dee5e6-52cc-4e7b-8334-24caf5086f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eb83eb-eed3-43a3-b6e1-4b3f083c2fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5afca213-e14e-4e6d-b6bc-86484bc15da2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47db677c-4d7b-4bf4-b6cb-d48f78992bf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39d5a115-698d-47d9-97a6-4ca4870e0aa5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e0faf18-3969-47c1-9377-04e4a7be271c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf5cc62a-998e-473c-a86a-92db6b934438"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e763efb-b54f-46e8-9254-afb5e056339a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b590f070-ab14-473f-8fd0-1ce499fc6cd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a747c30-cd8f-4553-af13-abd685eab924",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42c0e164-0a3c-415f-979c-be02330c6fea"
            }
          }
        ]
      },
      {
        "id": "659fadd5-ff1f-4e67-8f9a-f211254efeb2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "18d8eb4f-3881-497c-a8ba-a588820b2f35",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88a7bc19-374f-4677-b53d-afe256017981",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e9ebff1-fd58-460f-bfa5-449b073fc4da",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e67d5-b0cd-45bf-8339-c789dfa6e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e14051-fae5-4756-ad0f-7a6ad6f1a235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40928e6-5230-417f-b205-39dcdbe46eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd9cc75-805e-4d02-b9e5-34ff0394dacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb00bd78-ae9f-4619-8ba3-9ae189e5046e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05be4cf-46d9-4d2a-b839-94f68e515e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca48d6e-18a5-4d3a-88d9-befc95e7d92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76fffd3-cb1c-4829-98a0-76ff28b708df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a59868c3-5455-4bb4-a368-f0f24ecc5540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7325eb4-02a1-4d5a-ab91-ec942b859f73",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde99e6b-6bc1-42f7-bc75-bc3c62024d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e1aff2-6846-43a1-8b70-1f8636f06ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fef80f0-ccae-4050-9275-0992eda848e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eedb6ee9-b178-4a0f-92a4-3bf4b1013e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd53f169-d1b5-4490-9bd7-bdda9230061f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5383dba4-bc67-4508-982f-d6b954959e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61d4044-9697-4584-9ec3-750cb4c3a1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96188e-3d83-4ac7-9c7c-b32c99fd4495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a384b4-1cf2-445a-a10f-6f302fc28126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feccf45a-6ed2-456a-be65-933ec43c0e6c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e7e3dd-231a-4011-8f76-a4be04813510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b98222-7c70-4122-9180-557f016640c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24898ef1-980f-4417-9b08-b96e0b58736d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9dfb6d-a53a-44ae-bcb4-a56562dd91a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc69ef8c-7077-45d5-8e33-fc069df812f1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ed2cb6-c072-4e88-b2e0-321c4b1eb15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab965e47-c362-406d-aa59-23ca39db58d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf781edb-b246-4bdf-b093-4856b059ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5787c53c-1d57-4932-ace1-aef186308a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dfad1f-a026-4077-9481-649ae69cad05",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64962eb3-d789-44c9-86f1-9fd4dbbd5016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c684d62d-4c55-4025-bc67-da767fc97af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2e0e63-1aaa-494e-bf9a-a4517ac85198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc463c2-9fa3-472f-8fd1-953edd91b3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa50f4-6f50-4c0a-ab1e-3ba834b2002a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ec6d32-b745-478a-a84d-02e71624f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210f74ec-11d5-4253-ba39-b57133271d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68657144-9a91-4ff3-afc6-22c7dfd5a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b911944-b491-457b-b8e1-21e4e63075b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0223d9e0-c546-4a5d-b75a-917a0a259c73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2e5948-60ba-42a0-b1e6-09db2c984ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4618446b-b1a0-44ff-a538-a6ea2d8d2dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab375d0-0801-4c60-9f27-59a2e95c06cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca2cf5c-d7ed-4be9-aba1-a3b7e6fca95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6370b79-a3ed-44fd-b0af-80f8f002f54e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba8b5f9-846e-4856-9bbe-d2b756039bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1204364c-7552-452d-8a29-66fc5920e2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c3a924-9b85-49a1-92fa-2cda07ff67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6703ea-9e0d-4d6d-a024-7ea14453faa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c462c7-e5ba-4b81-81f4-47e2f0dc16e5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0dc87b-e089-44ff-bab1-35ae3e418865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3d4bb9-1cae-416d-a7f0-ac3c56022851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284436c7-647f-42e3-bf29-a9a9b207bd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "652c365c-901a-47ec-85a4-76e955f1d316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3a4b50-c5e2-4983-8449-9548dcf4ee23",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d0abf5-31e7-4763-9da7-8b9764bd30f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab66654f-a2ae-406c-b8aa-256fb33eb3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd60fbf-1c40-4ec5-8984-fc91d30ee008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01fc05c7-f08c-4f11-8922-8194bc65f14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c61fb5-f31f-4046-87c0-b62982944e6a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceca2f3f-39f5-439a-9d9d-b78757c9bff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c53c73-aa3f-4d6d-b3a0-fb92ac205d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53079203-6879-469d-9522-eed8bfcce3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1eacce-163a-40f8-886d-6536db357462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b02a2a-23c1-46d6-8dda-06e44ce8ed59",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab256e9-0a92-4229-a97d-7a2d8a8ecf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2719b686-580c-41e8-b014-01f18c628c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440e701-ab59-4b1e-84b2-70f1cd836673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c97af5-cb7f-4427-b26b-6582c7127fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a004c6c0-a804-4be5-a85b-7ad0acd100aa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a372ae-6564-470c-af0e-0239f4b7fbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0064d0e1-cc13-47f9-88c3-c4705a22ef9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73293958-6546-45a7-941f-7ba9461e8b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc51425e-a827-43fd-831f-f595376a73ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08d9042-8919-460f-b61c-659bf692ceae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a71174-a115-4cc0-aebd-05ddbd46a309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f29aff6-c29d-4c06-a5cb-b6d4cf47e480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c2ef5d-f957-4a80-8a3e-c3b3495576ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0940ae7-e8f9-4c0f-a734-61b533b2e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd164d5-84cc-4a30-9cce-1d79463a507a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b69ed6-3fc0-463e-850b-bd7dfd982288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7848d40-f606-425e-8013-032310fcd6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9395953-34f0-4c7e-8e96-84722ac4af81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b904cba0-ebd6-485f-adee-632e6aad6e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb9e062-ebab-4efd-b104-f15e3ce4ac20",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62351c41-3868-4ea7-a406-5982c0f73063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914fe5cb-6e15-4b81-8fa1-31bcb3df530b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70325c97-bd78-4025-b4b1-6b9eb0d6e77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa3aec0-8480-4580-a5fe-edf6d3f9455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd926a5b-c2fb-4511-992c-5f0b79e4c74a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264af313-905f-4297-b0ea-8fbf352e0d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756df1ae-29f6-4f4d-8d6d-0536cfbe6ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc2a52f-2a53-40e9-a9aa-102fc529a25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1157852-4ea8-44a6-bcac-99a4b5f9643e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a62e179-7d1f-49a8-af12-6341816d26a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b622bf57-5e27-4b46-b986-aa4de2587a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de434531-6bc1-46cb-a7a9-bbf5b24a92ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3cece7-79a6-418b-b883-f13fdb481135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab71509-8769-4b0e-85ea-c8e93bdc15bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8082ed53-fe29-4c09-890e-8d65509c31b5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68bb847-3fe7-4010-806c-bd34a547e8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f85d155-0f36-4509-a1ec-9d73b6ffe353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf26e84-15e1-4f6c-8207-4a392d9a5759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d7e025-3b3b-4200-afd8-f34b3fb83ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda93270-7e17-49c2-8535-1fcf86bb9acc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89719999-e83a-4a8b-93f3-345c85e2bf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791bd60f-8fa5-4e02-81e2-6255779861d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f217348d-4fa5-4f5e-8804-add90bec2f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e4a170-d7fe-48c4-99c5-5f575983815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c43d2b-7439-408a-9a17-b88440d5fd68",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84496786-b5fa-4f81-b775-2c0e16f6677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a8fe48-58c2-4bd9-adbd-f4f94a3b3c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bf0572-48e2-4bc0-be9a-aa93df5bfe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2213f399-7bb3-41dc-8d37-a1e0552e6f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9facba-6adc-474c-a8b4-01f1ddb46a37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a061d73b-b08d-4322-80c9-a54e0a77bee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5478493-f80c-4994-bbb4-1e7a700a3392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8778f16-b925-4c24-872d-20e9b6c5111d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b58fa1e-8f53-4c70-94cc-8440b2c52603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d784eb9-d43c-48c7-9a71-358f4b294fcd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af239c54-fc43-4fac-a8dd-e8e9bee40a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f30f9e8-ac27-4e77-a8db-6d69e06c2bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264500e0-2aad-400e-9638-690c42c63aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aa4491-52fb-4eca-9711-83e4ab7d62a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd621a03-6521-425d-9a0f-831090f81333",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61587bd9-bbbe-4bbc-addf-4ad2df41a54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25299a5-3cf0-4f89-8364-2923e6b90344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec25f92-b073-4217-89ad-d9bef73c55bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c88e3e4-7067-41e3-8c86-689d431d6b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af868a22-a166-4c0c-a4e2-63f91b231144",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f573a1f9-5397-40b2-afc4-48fc04c8ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fead63-90fa-4137-b942-907c66f80e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbef9e2-a429-4d41-8475-78be9f4cb938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9deef6d3-5853-468a-9067-b43c4a755dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9820135-537a-4663-81e6-71ea21009273",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d00c86d-395c-4bf5-b0ca-77780bc29d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd27671c-7235-450f-aa4f-52f82ef64ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dd0eba-2c23-4c73-8eb7-e9bed1599aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe28dae-5502-4410-96b7-75f21b2c77a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04fe520-08e8-43ce-bb95-0641b2753603",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c2fe3e-8b23-4208-8b6a-63203084b1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eea1b7b-1df7-40a7-84eb-016f5860a576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90be438-e777-4f13-8e06-04b6a1ac680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20522047-c5b1-4e73-9de9-203f88f11566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3684e23-90dc-4349-bb03-07805176b1e1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392880ca-e7e6-4789-b9d1-fd98c5df5639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e582e5fa-011e-4331-9994-6c48bef7278b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e068e35-9259-4736-883c-8fd9beb5860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e60273-9a91-4079-8870-47551bcfd9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d12985b-9814-4b36-b9ea-f193591c7a0f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4c06a8-de8f-43b2-ac82-82637fa6daf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8942d44-765a-4fd3-bb4e-757caf20b3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689d31ab-cb18-4b39-b9a1-5eb82aa8490c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9f9763-44d2-4431-aaea-bbd2e58ff598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68ce849-8b65-4c52-9606-62731dc0a589",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e9c71c-60f5-469b-8e1a-8d6f5f0ef2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5101237-c5a1-4b7b-8496-4203f7a78d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab029261-608d-41ec-910e-0bf4487c6b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06d6685-670b-486d-95f1-7b2a71a29ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325f5e64-b26f-435a-8537-635524182e04",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7c0143-bb8b-4f72-8434-cf5825d61e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f43193-8f7f-465d-9a7e-f101c7757f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1b0772-8a23-46a9-a71f-4c019fa79976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f5b4f5-710f-4255-8633-59f6d09b6a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31b1132-d92e-4ab0-848d-13c3588b1acb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100fa645-9246-48a3-80e2-2c5ec321531f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b028c329-194c-47cf-baf2-5a43b0879694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3badcc-1277-4bb3-853d-1d31ce100dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef036ce-9a97-47dc-9c00-e754328194d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c870acf4-868c-42a6-8427-93a2aa2e22da",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd6cf66-1a26-4a14-aa81-ba3cf2ac2396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cb4583-a8d0-416a-974d-dc23ae2a1330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cd3c48-9630-46db-9e04-d688d481b5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37807afe-d448-4c5b-a21d-985bb23c9be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99aed1f-ea5d-4545-9f8c-7b92c1d2bee8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce59d1-6427-4004-9394-4fce237a7aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296937a3-cb12-42f5-bd13-a7ce62c3c27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345b2e68-63da-42a2-adfd-5279a98a9212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a56536d-8fb4-4d71-b3dc-2112ec70614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26faaaab-65c9-43de-8917-49dada094e08",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d878aeb5-35c6-42ba-8303-6195be91e794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69072f3-4671-429d-949c-5440f36d0ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc61e26-3cf5-4675-b06b-dd9d61466d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff404d6-0beb-4d7e-9a9c-59f7173b8e6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d86207e-a25f-4d8c-a345-588b76e63d12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "971f8fc3-8987-4e5b-b63d-86f96fb505fe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eec53ac-cee5-4f58-8eea-c0eb7a44f617",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ac4770-2bc1-466f-a53c-7a3308041556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3aa9c9-fd1c-4834-8daa-8c4c839c64b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4e33779-a8d8-487d-98b7-6063faeae32a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0bb1c50-3dfa-4f12-baca-448e3e2f83b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f7c460b-a811-4168-a1f3-b35b78ff8908"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d84d216-b9ed-4c7f-a6ab-d232b14c263f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86536994-043e-4434-b53b-dc4b6e4cf133"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f44d0331-1804-4f27-8ec0-ff0a6fbcc5f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6aeba75b-3dab-4458-9836-d7b7777070ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "109e3230-48a7-4449-90d6-bff1450c3db0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a90b2a5-ce2b-44b9-8de1-964d0721fef4"
            }
          }
        ]
      },
      {
        "id": "0c77db58-65ea-4ef9-be37-e2d5890cff25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "363f39b4-5280-460b-9dac-056a58b3800e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbb2933a-88f9-444d-a5e7-5534ec474da4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54b40bb2-3303-4a55-87e4-00d8a76e6b3b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a928c70-2e3b-460e-b3ac-82dbbfc5b607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b42e6a-0207-473c-9abf-04630dad53f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62313065-2131-486a-9dde-6ccc407f37f4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b85e3f-889e-402c-ac7b-6195bf4f8232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90028b3-3ffa-4fbe-9552-0844c573527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3005423-9f4c-44a5-b287-1bf4022726cd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc035a8f-536d-4589-9ed8-6d0e44f6701c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac112718-bbb4-4145-afa9-a3a37d83d3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c0beb8-2317-4947-8281-bcd9003e177a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3416ffb-83f6-48a9-af71-f6a275a67b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98babd46-7d4d-48b2-9b30-ae534d0c3f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a39cab6-d5cf-4f03-b012-bd19a5b4481c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf2b279-3e38-4060-b5e9-a4d24a4c662e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d19533-ff25-4745-987a-9a4a23ee38b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ac34e5-5fed-4739-9a75-09e6d38f4244",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484b5c7f-96ff-4430-b0b3-5daf11b1767e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee45be1d-3a06-41bf-aa74-06f198dbe8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b810f057-c3fc-44c4-8f47-5fbc31077569",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c015393f-6574-4ea1-af70-35a3f3f4938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5498b1-f450-45a3-a6f5-3a40fa5988f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae7d1a0-454d-4c75-828a-d9379c75ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c4f9bc-1e40-4aeb-bd8b-0d4bca86e176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a486e55-a700-4e96-ba52-88d908c8bddc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c0b0ec-947f-419a-b62b-451114358c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97f7e5c-78a3-4dae-abed-68c9cd61e9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0040799e-fc28-43de-879a-32bf04d3b22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c6ba63-e425-42d2-9a68-6756930af919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbd33a2-1141-42f1-8321-33cfdcbf73c1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370ec665-9a27-4854-b286-f3be50cac7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "749de1d0-d316-4ef9-a274-66bfb8921e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1f36bc-2469-439a-a5fd-59f7e19fad9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3285dd0-8b8f-4ea2-9a0e-1570c1f8339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db031fe-856c-4f49-a45a-09bba6129730",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2693a8-277c-43cf-bfe1-1fda9b847985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96202a27-2f18-4585-81fa-e1bd407650d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748c0985-df13-45be-b5e8-91315042914d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82090b5e-ef68-416a-a6d5-ed96c63bd824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff21df-d036-4850-a655-586dd206538c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8250b81d-10c2-46f3-b73d-645599ae0463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2aca23-a982-4e10-a79b-1ebc8879a2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f791dfc-3a34-4690-a8e8-19aec5241ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf4f6c2-bcc7-433f-8bc9-6a4909afe153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc0b0bd-b4aa-4011-adf7-a726ba21cabc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57ad99d-205d-4941-91f2-f1ab459a22ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4621d168-7208-4be7-bdcd-b51c65e7ed3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0588254-068f-46cf-b111-d5b11e4b5fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58aa94c6-86b8-4905-86f5-587ede3e95e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b96cf9-651d-4a59-a3ee-12caca859631",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d39a34-c509-4a5a-99ee-1e5c89494038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "320e4f45-a45b-4793-afda-32b90ef90602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56917bcf-719e-48b5-b493-12e051bfeeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd543f58-eada-43bc-8048-58d9467679de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e9d326-1aef-42e6-bc3b-33d03c5381f2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ea69e0-5130-4f8b-8c76-cc5c69bdc5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3d1b4d-2f21-4dec-a4da-bc4ee958a4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2545df-a5e8-48b3-91b8-e8c7e11d61f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95332ec-6b6c-4075-b069-a58e7ae91baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fbef8a-24a6-4c22-af2e-2e3e5c3692f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ee95af-87c8-45e5-a7b9-6aa01bd6a75e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658359d8-1057-4e8f-ae57-52df3ce74805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82d7d2b-3e7b-4206-a629-911e16acfeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369e2856-0ebf-4883-acdf-24837a0bcb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6ffaf-1e98-4e34-b102-db7c78116360",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872ceeb1-78b9-4950-82a9-ca34f5b22c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a362e6e-88d3-4ffa-b9e5-9c539fe81f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf86681-7664-4aa4-9a22-be30338736be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed84f1d3-28ec-4d2d-8b36-6a5aabec8cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584e3bec-78b5-494d-9973-dadc0ce8055d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d0241c-4393-419c-b1a9-12fbd7701d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9a5f48-b34e-4dd7-b2c2-7941d780a214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138350d3-015d-4cc6-be3f-69809219765a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a65699-2360-4412-9162-da59f9010c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8500c847-3432-4fd3-8b0b-ebe3452e7883",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbe97b0-bc85-477e-af86-be855ccf8036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831b7ade-3421-4cbd-ac68-9c730940ad97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad65b42-2323-4a80-8db4-989d62334ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3dbc52-8d38-4fd9-8ba5-511d21f7ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae1c0c5-3a78-4c41-b801-f8c23e248eca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1173c12c-322e-4cc7-8889-b1bc24eb9ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890b6468-cd66-47e5-b425-a60e26663812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e515dd2-5865-4b2c-af6b-a134bf1a6322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd502b73-d4c1-4f29-b118-a093ded28ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee697d56-8ff0-4d71-aacf-faa6117302df",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b88761-32c8-4cf0-a4b9-ee560c026ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156c8c9a-cdc1-47bf-9cff-87893251ae18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3a832a-79c0-4784-8989-bf6234ee8c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f179051e-2590-4ce3-87af-90b898930ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bb6bf6-0905-41e2-93d6-b75cdb6cfc0d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31681afd-fd87-40d0-86e4-73dcc70a866a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30371e6a-331f-472e-b63a-6b5b859e3f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2ef3fd-c111-4c69-88ff-209347c536a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec02e8e-aef7-47ce-80f6-e70822446f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37451d05-5151-4651-a51f-d2fec0e3b491",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c685bb1-700a-4eca-8189-4088c5b6d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ffa692-3aa0-49de-9c61-0f0acd33c2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6560a35-d715-44c8-88d9-a61dd40ae42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b64acf8-ca4c-4520-8d89-2b6322967c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb9535b-7b74-4e31-9584-11a1bc487bc0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b600774f-6ccc-4d4e-875c-b2fce6ab547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4819b7a2-55f9-4cb4-b121-e984bb5f6805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea3e9a1-aa08-4f85-bb96-de1f83259deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4543123b-0c70-4973-ad98-f6ab80713087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb5de9f-029d-4bf9-9b9f-d5b8d088ae5e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d054a29-d33e-4606-885c-5fba4644d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db76b97-a1ff-470f-98fc-97cfa067638d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7632f2d-f63b-42cf-b0f0-5d6280648ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bfbc35-4148-4cbe-abc9-3769b63a4db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1820167-a73c-42d5-95fe-40e52ae70b20",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e63d028-a0d3-4324-be47-0ab0f3daa4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d869fee1-f3ca-4c89-8523-dc3a8d7f0ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f48b3b0-0da7-4204-9860-dd9f76e09632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312481b6-b657-450d-b030-6b1954484f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23988784-d897-4c09-a524-7dd3640b6581",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfeb96cf-4404-438d-87ec-9e500b0198b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6fb1eb-aeb3-4999-b570-68b26c49d03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe7660-8ca3-4fc0-b5e6-168a3b4d5e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97bb21e-247a-47f6-a11d-af03cd5fc242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7494ee84-2baa-4c70-9107-d4b57c4eae21",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904541ae-19cb-4e6a-bde0-ecca93b3a170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4d4da3-b18d-4866-ad22-48ef7369b32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dd118f-8dc3-4fc4-b643-d94781042b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de72b661-e1dc-4c71-818d-b4c96dbe2037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0c125d-15f3-4063-963f-1f5ea1be1c5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae5fdd1-74e3-472b-9c55-0e3655922f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354713a6-5212-4bed-8636-807bb3c96bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe1c72e-a4c1-4669-b53f-53fb835e7d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c0bda6-77c4-4d6e-8631-d13de69fe48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d033e5c-8bec-4ed1-9ca2-f1151857282a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af244d00-9da7-4f2a-834d-d4fbeeaf7756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e618934-07a9-412c-a166-27c172e14d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b8c372-282f-43f3-b300-4a630858f685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8c6fab-d22b-4a75-88be-076ae67a4eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4dd2e3-7fc9-4b64-ab74-facb9bfae967",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e066e3-5b0a-44df-80d6-ca822a493733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45697127-e0bd-4d2f-8fcb-eb46fd9ad135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076a328d-6dc7-4bdf-a91a-c7d8f3017f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758611be-d1ef-48ce-8512-20cfcfceb298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5130d3c0-fde0-4248-8c55-24bb93736a12",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97642ad7-b22e-41a0-8c2c-3b990d8b9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f413a3-013b-4618-932f-2a7c5c540a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4ffbc0-1158-4fae-86ca-f9f14d889441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a715ac42-ee55-490c-a776-78d8efb3cb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8d0a5b-9674-4484-9838-c5ddd9f7d142",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed15862-6c50-45af-8927-a84420345078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561a40a0-a528-4a11-a501-903104e00a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1ee7bb-2411-4ceb-be96-3b5f5c9114bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc76bd5-c8e2-47e7-b167-296529410a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3488aad3-2097-4a33-820a-9a1ab8a10c32",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb48ef59-5a45-48e4-b8a6-d1cd7b6172db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e0408f-812a-4b93-9162-743eb89ab692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4b94f4-3df9-4b7d-9b0e-4825b2c5c910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9aa16d-95bc-4b75-af49-bd5464f259c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9164fa-5cdb-4f03-8c79-3141b4dbb3e3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa999f34-8d98-468e-a66a-cfc51825c67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5754a07-bf5b-41cb-8727-31ee70f41434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f624955-811c-4997-8fee-af32a64542aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c223e58f-8967-4ef0-a6f7-d385ea7116b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d695d-799b-415d-a3fe-b38e35c806f5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a4130b-ebcd-40fb-92eb-c3f281f2d010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83260127-ce46-42a6-9229-ed6a24da6755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e41e81-7f45-4e7f-a253-e835502589b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a219d3-8147-4ef5-a577-31e63df4d48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82cce3e-ef0c-4f00-b50e-ae4fd921b6ba",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e1083c-569e-4edf-b0af-e8a7d56df2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222832ea-58af-47e2-9cfd-ff6e198444ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228a3e0a-0e08-4a2c-9734-6eee1f54cfa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e5c2f8-d25b-4fd7-aba3-514eff818035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a68c6ef-023b-4a8d-a2f7-622043497b06",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca6c0e8-fef2-468f-8ab1-b6dfabf7eccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a2acf0-0902-4fbc-a7b1-3c6eec2920a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b5a6c-5bf3-4aad-bb63-3ef37dbd0328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e780153-c6ac-44b1-bbe3-abe897b5a5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46137e03-ac1d-4103-b4b1-f8f55cd6d5aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c2c5c8-dd2f-4491-bde5-a43f862dca43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9f5e46-a3c2-4a64-830c-548ddfb58be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4f16cf-fae5-4e56-99d8-8dc2806304ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e69d76-bf8b-43f2-89ba-4abef66bb8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569fa8f-26c4-48b6-ab4e-f376ee8592ae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047c6a3a-6d84-46ec-b1b9-73d1c8cedec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dfe90f-7f08-407f-b352-86c78ec6e575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb01370-26e0-4c52-ada4-f05e92065ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d70996-8d65-4d8e-8cd2-180705d29b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc89d88f-ee7c-47f3-9aa5-2c43461851fb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b1f4a7-c4d3-4dee-a974-352ea8ea5702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d5586b-3181-4f97-8921-1eccad4bd081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6d55a9-658e-4b63-92ae-60a06f9e7a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab31f5e7-eabc-4173-a48a-abd5c3a3862f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee8c3c3-5369-4bdb-b69b-5cfb2ab2bda4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79746d96-4373-498f-99f9-2862e74ec47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f623d0f-8589-434e-b395-eaa23ca7a247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fdf5ae-2985-4886-b110-ca32ecadfae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ea835e-09ce-4da7-9023-d068a453afa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f817f772-a720-4cc2-9f82-ca11f4d108f2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5e8953-8aca-4045-aae5-24a499319809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb6ed0c-f8da-4bab-a06c-e23885b4f4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3893fc-e765-4474-aafa-549976573402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fcdbed-ddfc-421a-98f6-1e14cb0a9050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dd4630-abec-4699-a091-0e586146ac62",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0ab48a-8472-4eae-8863-b96e96f774cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858a4a5e-a273-41fe-8020-42dea6a1817d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e395c413-8bbf-406d-9587-48f202fe7136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4732caf7-203a-4072-8f3e-f727d74550ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e21a6db-ac6d-490a-b435-d7f6dad527a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af48e2f-3eb4-4191-8cf4-628bbf0248f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d7a1d4-ffd2-484e-a0f9-9c962ed3024d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0027209-4b00-47e6-bb78-1d5b114fe5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccde2ec2-2888-48fa-a0d0-cd2747231460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e914ee-8ff5-4231-954d-df17d8120bb4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a832af-2cb8-470d-8c79-24213f7e1b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c871e2bc-940c-4aa5-9a84-627cffc38d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee1a650-36c5-46d5-89ed-09699bd5cf18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf95ad0-4eec-4d1a-8ac1-86977be10a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1171ff91-372d-47c9-99d2-037b06a727cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6784110-b3f4-424d-aaa4-390cdf2b0639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1335fcbc-2259-4d6c-b66d-39560b38e761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d8f12a-15b4-488e-a261-379997b84ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d5bb76-6a82-4aa5-ba29-94767d5988b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9562756-e7f1-4e9d-9dad-7a9827aac661",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb010bf-1017-491b-ae5a-c5bd497535cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f68898-22c3-4f0f-9adc-1691ed6ff47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d90d66-2c7e-49fa-8d34-d79787713cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a3a857-8630-4af1-9f8e-72e806495747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6241f7-5b34-4846-8ada-0adc0b87e892",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a24fb5f-1f80-4a49-8c5a-8c84c1963288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e05fa1-1d5f-4342-a3a4-9c081bfb4740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0fa4d8-633b-4add-9113-b72b7b2e1eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9e41f9-3a3d-4ad5-abdd-9b7f96e9aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486fc3a1-b64e-4391-a48b-3dc7937e4fbc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a888cb-12e4-4f44-88ad-054517d07901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5146c60-fd7e-41eb-8515-15f0dcae764e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f34de-757c-44e3-b53c-5be834b2e4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df685649-6738-4d37-8dfd-499632699255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1ff7f3-d5e1-483b-aee2-369292d433e3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eba790-d685-4b43-b9c2-f40f232f85dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced4dd2d-1b3a-46e3-9cb6-3b761993947c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8e4e63-29e0-4d37-8533-2936988af89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed76e626-5a59-4704-9cb7-c927456f7973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b64043-fa6a-403a-9e9b-1719ce785917",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fe5ff3-0e88-41b2-a265-d57401d6e6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d60efb-0c48-45c1-8b3f-b45bd177e436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffab680e-3cad-40c7-b23a-ea5ca439af0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3280eaf8-ba98-4e56-919c-0d666d71c72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522af776-e09c-4139-b0f4-677bd9b7c9a5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e538a1a7-4eb8-4321-9ad0-b4e1ffc46099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb34dbc-463c-4bec-9a43-196d0e678972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e718b7bc-857b-4797-a385-6c335df448b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f4ed36-627c-4e14-b2d5-b76ca2925808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546dc0a8-67c7-49ce-b9d1-8bfdf5278076",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbb95ff-ec09-4e93-826c-bb8b695f61a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbd1493-8805-4a0c-b706-3b662697eb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e884c551-0a46-4fc7-a224-ab161c027679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59db0374-ebc4-4d57-bf8b-2473d0081e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ccb859-7928-431d-ac84-15bf3d0ad709",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5ad305-d4ba-49a8-941f-c554913169ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6415b9f2-4b73-49b9-867c-75fd5c5610b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d891a06-ba19-4943-8af3-d15420800154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e1ff16-57bb-4eb9-8ad3-d6e95e799c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94285967-d329-4dcf-9901-f29ca3d5c8de",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a61b10-d6a1-4df1-b16c-045e0aac1486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4e9e2e-f8f5-4b1c-8347-b9909cc97116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bcfbdf-fc26-4cbb-a98f-502dfbc6dd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e339257-175b-4402-8977-ad5e5c8def20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1a2ac7-c7e3-4be2-95d6-87a492e5674f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7cef67-da22-4be8-88ab-997f8745daf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed2119b-14cf-4159-80bf-ee23fcb78d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a68aabc-0eb2-4144-88df-4bf610d49c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e11ef7-0aea-4908-8730-6aee64016f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5361052-505d-462e-acb9-13eea1fe59ab",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f81ba6f-f53d-44c5-a99b-da5ddc6ab9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ad6647-8d72-48d2-af1a-c421f318759b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1224c3d0-b3a7-4229-81a4-1fd6a1a647d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3926ee97-6f51-43e3-a768-bdea523ddae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc075fba-9de3-497e-a302-deb86839f380",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c01526c-cbb0-4b3a-a80d-73fcdcec1fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c1585-54fd-4b30-97bc-cb0dcd315190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad27a5-d1b6-4f7f-9931-ad9baf6f6bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea4d023-f46b-4217-9c03-3052ec642ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c06a7c-52e3-445f-9137-10e59d228121",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e20d98-29cc-460b-a48d-908f62237ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17a5f91-bb8a-4b49-bfa3-3cc017f3350f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28560ac-178f-4067-aa99-8f754c93db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac9df36-3c74-44b5-8501-3bc253e1e9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0e590c-27ff-4858-bf01-1ac4f5fae5e8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0b9c5-59d3-47d8-aaf0-76baf5456bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ddf41e-05d0-45fe-b3e3-d0c8fde51a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3f5716-e0fb-45fc-996c-a6643bb99e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d51146e-1b8e-4381-859b-e9d63ca17381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43eb11ba-e13c-423d-8922-369f44cb80f6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe0157c-232c-4ad8-b7e1-cf8d2337b308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9baabe3-95a4-4f79-b075-9bcb7eeceee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaf1b9c-f1b4-4fe4-9f32-5c4180d76970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed76d54-fe32-4e9f-8dda-65c5d36eb49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c64cb3f-f54c-4190-aac1-9763f4eeb449",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1230fe-da8e-47c8-8d35-9e50ce353ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93edfd0c-2b11-44c2-bce3-4de23d42c44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f3658f-0bbe-47a9-81bc-988a93eddd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39735e4-1c7b-4d75-9742-f6a3bb8e235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78d40d7-7d72-418c-a129-a7584fd79d9a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a6ac4c-162a-4f13-aa8d-c380606bbe6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2806ee-cb84-4d29-9ae8-53332e1d11e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae45a3d-d125-4bea-9db0-712a01cf4521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76b9f0f-221d-4036-9c8f-0599cb60c017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c73ef5-569a-4ca4-be5b-3d64a78f92ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db04e96c-bb85-467a-9895-31e77e960b0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f6fc2d-c991-4aa8-be4b-2fb051793ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e70c64-a289-4a38-a18f-7a0d57fe1ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02f7b3a-45f6-44f2-b4b8-ba4d79361d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947e8987-db25-4a88-a816-30bd94ce95ce",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ec6e0-807f-4505-8bab-e4c7816ea99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25815a96-e81b-46c2-b9de-cbe4d75f3b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad09fa4-7850-4e24-9a50-5b77676b0c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93a1fc5-733e-41ee-aa7e-6673ef1f7b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcad66c-38d7-4ab1-a22b-72a2387ee83d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a48347-931a-4b32-944e-1951b53d6ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903bbb3a-8009-4e65-9d2a-b5026d8555ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864ed9ab-76e6-4be3-9a95-8640365a87de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f78d5d-4218-40e7-902a-6ec03908930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e7347-62e3-4edd-b8f4-24fcba0c240c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f482557e-a876-4817-bd20-bee5217066ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8366845-6477-496a-96f7-76b1c913a2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb2fd01-b8d1-4526-a6d1-c3074a3743ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1490d94-5b64-4da5-9e9a-ed309c150b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9342916-9e51-4334-a4ed-b6094289a2db",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42f2793-bf9b-4dce-9eef-ba4b8c7c0baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442addc1-7c51-4a21-9ce4-ed8b6c5ae913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3554b2b-911e-499b-affd-4a0a7553fd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5525f7ff-c7d1-40c2-b516-0746700a9cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e3ebbb-9e5a-4a26-8dc7-b59840a7b97e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9c9d51-84fe-4ef2-a7aa-07b380bb15ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b65493d-12f0-4f78-8c6b-436262d0fa37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3559fb09-4127-4558-9bc9-aa9d47c12607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e91395-b4b6-487f-8aad-b58e40976cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa41acbe-42c5-4309-9e1a-1b65accde09c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad4e439-a0d9-4c42-b281-ca575b40e67c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62701b67-740c-483b-aff7-a327b1676c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08970f88-f6d2-4cdf-91ca-2c2e82541dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b4474d-236f-451d-bfcf-c5a27b266585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddde2e0-aef2-4279-a3dc-9620c4d76d54",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10138784-10ad-4dba-bf38-03fbc44b90c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f14a8a-1c0b-442b-bb05-545919a6d0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9194066-192f-41e5-9426-30276dcb72b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eba9bd-76e5-43e2-82fb-89fbe1ba56c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed8665-d134-40f7-897e-3ab1da2d142e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6f0cde-e5c7-4dad-ab42-5daa7b32a769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccd9035-2c34-4b1f-af1c-0b3138496b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f930b9d7-18ba-46c6-b2d7-f19a544c1791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e65ff3b-0545-4aeb-aa62-abc38f9fde95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008ee2d0-2c3d-4025-8dea-e0a78e54e251",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b961d265-fcb7-4f04-b9ac-7951ccfc250c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2ea938-a42f-457f-bac4-31d14d166109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b08ab65-cbf7-45b3-9259-7dde706bbc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60cad0d-b9dc-4bc9-971c-78b1316e79a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917a7e8f-56d0-45f0-87cc-8850f4b8d861",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2023f62c-e348-4360-ac21-3d3a795c5c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9f6d96-6546-4644-afc5-c4c9c0d53577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b128a1a-7a62-4df1-adaa-fa1ea0877ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27eff2df-f320-4484-b93e-cb8e03a981d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44a192a-d295-4cad-9d81-fc10875f1f32",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b6afe0-5dc6-43cb-9746-556103b2f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a3c939-8042-49ca-9ce6-9df4fa23e6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255008d-e6cf-435f-a0b6-8a2847304c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45efc566-0a26-4062-9a0f-209fa4f2ee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5855599a-e28b-452a-ace1-e8292d929254",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838d48f0-1ee4-4a8d-a2bc-f1a3a3c03de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d903e52-2aa8-423e-8303-8b5adcceb504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea82bcd-7d6e-4ed4-8675-da6d6322079a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e266bd72-7410-4f67-8638-ef142f4e8aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1167bbfb-df0d-42a9-8100-ff4d39d28e21",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4070668e-6a68-4082-9c85-973c27519b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e01816-9455-41aa-a582-b7f62eca6bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d21300-942a-4cc9-ac65-6fd18aee13ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac77d74d-5505-4988-b26e-a1cd8fb4b4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d54fdcc-26a0-4c5e-93ac-22b13aa64799",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096be2ca-46ed-4e36-9545-98d6dd3e5dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b62138-81df-42a2-92d4-53012dc5fea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d547143e-a0dc-46e0-a00f-a2a683a51613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb335a39-a9b0-497e-be5b-7b75be148ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f52bfb-849b-4676-be99-99aa29084257",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a5404-73c9-4eca-bc05-46c25382a013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11801b7-b57c-4b6f-beec-c7b8143a4e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de727f6e-7935-4c90-b742-0fb82d097d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2109fb-e32c-484d-8897-48381a8fcc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a290f-f6e3-4c7f-bf79-43b4b30df7a1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522d6b57-6efd-4144-b802-bcdb6fd034dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d93668-701a-4a05-929d-453adcd0558e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ee7843-92bb-4fad-8569-112e75a0102f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d9eb63-de7d-4c2c-8ea7-11cfd6ddfc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3765d8-ee32-46d1-a0f3-39142388e0b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3be91d5-8d97-4dc2-959d-91c08074e79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b8bb6a-f1ff-4c19-bb5a-9e975336d8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6fbd93-96b0-45b5-9ad3-d7e5151bb312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aec7a8-90ed-4c0b-827b-7a2640e0f186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e7f43e-d418-4efe-8d84-b8b993e26f7b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4ecc62-2531-4402-a074-65d46a12fff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b1d942-69ae-42c2-9b8f-13adffc36c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ee2c9e-be97-4b15-8d55-218caacf6c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1a71fb-7dfd-4cf4-8051-bc055ab79ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22747011-c032-4775-98e9-9c32e0493b75",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6960a239-f635-49c9-ba5a-80caff018135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba3885d-df76-43a9-9432-d76a51baf2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a678b5f-ab75-46e5-bd50-3d72cb645590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9588500c-8dd1-422a-820f-38bf5aedfd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045065e1-1cb5-4549-9e5a-a420a998ecae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747321f-1543-4ab2-91ba-8b7f6500015a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b46d30-6285-4535-b746-f7ba11fc399a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e4671a-952f-445d-9ee5-cc66ea84a4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b5e6e9-aeac-426a-a1be-375496ae8b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae9acf6-8715-4b4d-9626-b9926de78128",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21dad11-169e-4915-b88a-5dc2adfa4d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db83531a-e7a4-470b-987b-bbb38b8e6633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e597589a-de00-4798-93d9-4aa4fc72a98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac14b8a-a55a-424a-9c5e-a177b34b2dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bd3584-f8c3-478a-a3c5-e1ddeca7fcd9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d92433-2bba-4fd6-9d3c-34ca00b11079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297ac32e-fc97-4aff-ab00-12ae172902e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa369e4-3789-4c79-8904-3f801e5d52b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400c689e-4140-4396-853f-201cc2a8fb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de28b8d9-177b-4088-af0d-13a3a7d29cbc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1385f1ef-26ba-482d-b341-2b87331508ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014227f8-d90d-49ec-87e2-21637c60302d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea1b746-687b-4ef4-9a16-d8a3ebe18723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e526d501-0d58-4222-b297-62df11f81daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd49616-c932-41e3-b1a4-ac3c8ebc8478",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510f790c-a444-4fe5-9589-b8b84c0abc5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d647e02e-a7f6-4ece-8e94-23403ac4a210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73870245-21f2-4bca-ac30-6cec15500537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677022ce-9c59-453e-a7a1-6fa605899e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a607c1-1dc5-4957-9a7f-e0b170465af3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b177543-a4bc-406d-ade4-f5eefaa36388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c5fc1d-f22d-4649-a57b-cffb25c884bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15a02fa-3a8d-44bc-af7b-07042b019b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cdd5ae-4d5a-4f64-84c8-95f12e855f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c06885e-65c8-41fe-b339-72fbb98639f6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533e6467-0868-42ef-af89-1c449f609f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5483c00e-0964-411c-af31-85ac8e1f9efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4c3022-02cc-4209-925f-c647bb70d3a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7ebfc9-8c2a-478d-b4ab-6779402a9385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afca3be2-dc4e-4730-a96d-202d1f20e0c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77b7bc9-7b64-49eb-9e04-2b1e44ea9be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc2334e-bc13-465d-9410-d6663978c9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30470c7-1a0b-492d-97c9-1f9db15492c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c82c31d-b203-4977-880a-e0a586f4c48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8fecf2-27a1-40ee-b1dd-d6435e9f30c0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f5b6db-753e-4790-8dd0-7fbafc6535e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc37e98a-a9d4-4f0a-8edc-0c6ecb5ba966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523eb240-69d9-4efe-98b3-f6d3185ab683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208103f6-f74a-4c00-aa7c-0a3b3f792c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53129fc-b81a-4edf-983e-4e560c445329",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbf7d42-1fb5-4e97-9423-be5d3692b9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7152ac01-f326-41f3-af40-dc113ae2db4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9df6e4b-ec6d-426b-b8e4-d565729ded3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81242de8-e9cd-4701-94c9-d02ebeac2d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4d3abe-4c37-448b-b396-5da5aad96ea3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab2f6b2-462c-4f72-bfc3-dc555d7b4c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd44e47-7c5a-41a0-ac0a-edfbec9a8322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a10a92-ab07-4928-8014-e817d50bd515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7167a26e-ddd4-44a2-875f-a9a6fb86102d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04befe8a-6ee0-4981-ba5b-e7572325d887",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b809a6-3d84-459c-8f2d-b31b20543c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "281bbc6f-0f49-415a-bc3e-8044f3713b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c21782-4dea-47b0-9371-fac6446f7a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1ab02b-ebe4-4900-9f47-b745539f1505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a011fca-5efc-4b8b-8f3c-149f1252a7f4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b374817a-4df2-4006-9f11-9248c5763395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667396db-6d9e-4e7d-8373-d2c79b6c2c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7e16c5-1996-455d-8635-466860bc2819",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7762d608-a436-469d-b96e-f519a4b16b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c785eb1-7606-42d2-a09a-b4ebe2918824",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c5296f-b3c6-400e-8c2e-6eebd533f4a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4cf2ea-ec8f-4bb9-9d65-34100759c646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4565fb77-136c-436c-add8-e1c96ded5443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cddd21a-e3e5-40e4-bf38-679084c5a9d5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60e303f7-40b1-4919-8276-5433d7a781f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab5ff566-2d36-46d4-9fc9-adb7ca1febc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24fc3f7a-82f9-4f1a-952c-3df4b8f7d7aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9b70ceb-a32d-40e5-ac3e-332b24a6451a"
                    }
                  }
                ]
              },
              {
                "id": "298731c4-e56b-4e0c-83f4-d82249f3a9bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c0b04a9-3d68-42c1-af76-383324d8126b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b085f14a-fc3a-46b4-b9f6-2e9c7a35bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "11a6fb0a-3b0a-494e-83fd-3e113f5ff27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0656e1a-f022-43c5-9aef-d2507ff1174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdee5180-e5c7-4919-b90f-affc77d2f6af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1136cea2-b175-4178-bf11-dbbebcb6eb04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de15ea4-2518-4921-b277-aee13b344997"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f8a1f91-bdc0-43ac-96d1-7075857bdcaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bcc22f4-04c5-4726-baf9-14c4b31b350d"
                    }
                  }
                ]
              },
              {
                "id": "35c10186-116a-4332-bf56-ae3c21eba308",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0a3eb918-9fac-459b-96f1-9ddb251a2738",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e222edc5-5af0-4339-83d8-a93ee4367afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1207b3f9-6633-4fd1-b0b4-d7a3e7ebccb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6766a7f7-dcb6-4032-9b70-6f9d381756f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d85b78e-424a-4b87-97e9-916fa24013c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e1e8121-f44b-4c32-958f-f5943464c3b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19db2191-f998-43a5-a143-d27c0c6e5b93",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83662b47-94c1-4097-b71b-3e3201900f3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "51c3777a-9eb6-4483-816c-1f307064e2f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d760d8e-b909-44a9-9d41-6c29c4d7ccc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "496624d0-3b1a-486b-a59f-021fa933dc77"
                    }
                  }
                ]
              },
              {
                "id": "510b33a9-4b3a-459f-bd0c-8b32618c6008",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a13d954-b30c-467c-b361-a11df1bc1a2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a233defd-3e8e-4b47-905b-20d86371b379"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "847d65bb-a37e-405b-898f-69a048333550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53a311ab-b91c-4abe-b6eb-7116aa1b7e4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5650f97a-03db-45ca-9b5a-e3ef8f7bead1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "634490a6-2cf8-431b-a3cc-4754c8b9c6a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "959f367c-f997-45e2-967f-593df2ef137c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df91d496-d0fe-4ddd-8640-5c123ff5dd81"
            }
          }
        ]
      },
      {
        "id": "7bcb624f-9f73-416a-bf7a-1aa30f5961e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "93255f34-5abd-43fb-8c36-5bed38be1238",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1b9916a-56bf-4778-bdea-9de96cf97818",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9c028ac-2fca-4b6e-89b8-51f9045d82c0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8bf0fd-89e3-4727-95a2-58b089c4b86a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e716c000-bf88-4ca2-b317-591477afd9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7624518f-279e-4f9e-adb5-270eea7e669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be637335-1f7c-42ca-b3b9-ac2f08b571aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c566eea7-d15e-46eb-89bc-bfb81ad357c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ecc3259-58f3-4c75-8c22-d4b45bfc5576"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8847f649-06d7-47a5-bd81-a3df730424f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a516cf-8613-4c50-b3eb-468e73a68d64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "041ba6e5-bbaa-47dc-af11-f3bbe90883bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "33a182e8-ba41-45b3-9ba1-650d1083de9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "346023ab-c575-4fe7-9982-a4d7c76a4742",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24abd00b-a961-4153-8a3a-5fbc1b3a1dd8"
            }
          }
        ]
      },
      {
        "id": "4fdc1176-c0fe-43db-8aea-b9cfea8a2fbf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dfcba203-2485-4b6d-9975-20dd744ba701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd2c0bb-87f4-4f41-87eb-531c41bbefee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62734718-c973-4df1-8f88-0f3031e81c52",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd60d0e-99f8-44a4-9a01-b8492041687a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21dda5f-9631-4e94-b7a7-2ac961d05063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8477919-b160-437c-9699-71d2b34aaa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50975f88-59f8-4373-92ca-84722469bcb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d378585e-c762-41b7-84fd-db6e9cd47ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60d0be01-9b7d-4411-8350-0b1cac61825c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5978c61-2646-45dc-8c55-a5ca6327e917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8628cb19-7e6a-4e2c-ad62-e863ffa38007"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f00e99c-4c61-4342-8c46-343cfab509d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab151e98-9aab-4ec3-84bf-275170bb0ebf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a80b24c7-1523-47d1-a9ff-90bef17ab3bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d872dc5c-76f5-41c5-be64-46d2ee1236be"
            }
          }
        ]
      },
      {
        "id": "2af164a8-6f48-46df-8e37-f53557b020dc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a19b7eb9-f011-4937-bed0-fda480fb1d0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc8be2c7-5fb9-4685-9043-b5a32bd385d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "247c9bc0-063a-473f-b0ae-bfa2920b6527",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcad1f1-9f82-422b-9fee-4ac929645c58",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "893b89b0-9a74-44e8-bd6f-1a4d668093bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f191108d-d308-4f87-a1b6-d748cf9047b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc3dc2f1-1a22-415d-9392-73e02c168ed4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84373a03-a5a9-4c09-a49b-993cb270920c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5921ee99-ce5d-4310-8748-2b8fa8ffcc4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eecf68cd-8eb5-48f3-8bc8-b86ae6c60022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "750c99ea-0da4-4fe4-934a-c27fa6907573"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62b73f30-084b-4108-902c-a4dcf094b09d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad1cea25-9a47-427c-8e99-4aeb74432491"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abd2c316-327e-4642-88b1-5d7003f8ee94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68d0f8f7-9312-4ab2-9a4f-8404cd5bde2d"
            }
          }
        ]
      },
      {
        "id": "09e1520c-182c-438d-b261-bd3aebdef985",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b2a082c-90b4-4dc3-b98c-eb48ddb62647",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eeb623d-2261-43ee-817d-ea1f1950d401",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "15d2a3b4-bbed-4c59-b58b-768ef6720d05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53bbc3cd-8efe-481b-8068-1e9c11411122",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "736f9333-36a7-4f8d-ae36-5531a883afe1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 222.32042253521126,
      "responseMin": 15,
      "responseMax": 6877,
      "responseSd": 441.76053771416866,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689986489715,
      "completed": 1689986565321
    },
    "executions": [
      {
        "id": "7a897d1b-07b6-440f-8ab8-59a611ea8f52",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a782b148-6936-4449-9252-1f96c64882f8",
          "httpRequestId": "a8318e7c-76b1-4acd-badc-74fc5e3198bb"
        },
        "item": {
          "id": "7a897d1b-07b6-440f-8ab8-59a611ea8f52",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "831b4f62-d2fc-436b-8fd3-3f1d6d357eb0",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "9e1fe2a6-0717-4042-a428-1b02fcc2f474",
        "cursor": {
          "ref": "88fe5cfa-075d-477b-9b58-e8234c9ac6c3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d25c42d-88e6-499d-a042-518c1af1ab3a"
        },
        "item": {
          "id": "9e1fe2a6-0717-4042-a428-1b02fcc2f474",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "379cee90-7b85-4717-bc8c-c6015433ce7a",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "c3e8214d-bbac-45dc-adfb-1f2c094e2d9d",
        "cursor": {
          "ref": "298110d7-dc9d-411d-baed-749ce2a72ffa",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e651543f-3801-4d5a-8a77-0e6dd2a950c3"
        },
        "item": {
          "id": "c3e8214d-bbac-45dc-adfb-1f2c094e2d9d",
          "name": "did_json"
        },
        "response": {
          "id": "dc6db0ed-7514-482d-80f4-05be316bcace",
          "status": "OK",
          "code": 200,
          "responseTime": 1450,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3150e7c2-eede-4d8d-a40c-a488a13edab3",
        "cursor": {
          "ref": "8f54f660-e006-4a5b-8007-ec9d7c7b273a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "539c53b1-51e4-4aa7-abac-b8d9478b9d9d"
        },
        "item": {
          "id": "3150e7c2-eede-4d8d-a40c-a488a13edab3",
          "name": "did:invalid"
        },
        "response": {
          "id": "96cf861a-4990-4076-9bae-6a7108969680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3150e7c2-eede-4d8d-a40c-a488a13edab3",
        "cursor": {
          "ref": "8f54f660-e006-4a5b-8007-ec9d7c7b273a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "539c53b1-51e4-4aa7-abac-b8d9478b9d9d"
        },
        "item": {
          "id": "3150e7c2-eede-4d8d-a40c-a488a13edab3",
          "name": "did:invalid"
        },
        "response": {
          "id": "96cf861a-4990-4076-9bae-6a7108969680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb290fc-6ded-4e1d-b85c-d659327f5a64",
        "cursor": {
          "ref": "bc6d37c2-f3b6-4e23-b18c-03231519906b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "519545a4-712b-47f6-8b69-09b7c9608227"
        },
        "item": {
          "id": "1eb290fc-6ded-4e1d-b85c-d659327f5a64",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b07fddfd-e624-4a6d-a6fd-9404801cd75f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 411,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa20d35-aa68-4ca7-94cf-3449ecd4fe78",
        "cursor": {
          "ref": "25489a32-1be2-488d-a972-457ae13946b2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "177cf201-42dd-4ad0-ac71-734dc2c92168"
        },
        "item": {
          "id": "faa20d35-aa68-4ca7-94cf-3449ecd4fe78",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ac098d30-6aa7-45cb-a954-0862d65837fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 241,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f0100c-17f4-4c6f-894f-8db4b65a95c2",
        "cursor": {
          "ref": "1b335112-5a29-4dd8-8f2d-23cc26db82c0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "53264506-4768-456a-bb8b-79e5bdce87dd"
        },
        "item": {
          "id": "74f0100c-17f4-4c6f-894f-8db4b65a95c2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "94de0659-58b7-4555-b053-2e03712e3d02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa02628-22d4-4099-a4a8-ccb437150329",
        "cursor": {
          "ref": "d5954924-2bed-4cf4-9ebd-6923afb157cb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96793b6d-cfe2-40a5-8ac1-b101078dc7e8"
        },
        "item": {
          "id": "3aa02628-22d4-4099-a4a8-ccb437150329",
          "name": "identifiers"
        },
        "response": {
          "id": "86e9af08-16ca-4183-98fa-97dd02e30267",
          "status": "OK",
          "code": 200,
          "responseTime": 1217,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8f5e74-7b63-40ea-8a85-eaa8d3e36c5a",
        "cursor": {
          "ref": "256234c3-f4a7-4ff0-8f96-7d7df4bc953e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "642d2aa2-b203-4c54-8f72-c1f2f1b5a89b"
        },
        "item": {
          "id": "5b8f5e74-7b63-40ea-8a85-eaa8d3e36c5a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c007e2e7-fd8b-4cb7-ac48-b759db622229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ed10ad-09e2-4ea5-9714-7ce1f2f42b6b",
        "cursor": {
          "ref": "855c8e24-86d8-4fd0-ba65-008c71f05959",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74659f36-74b6-4cd0-a205-315cc20a3389"
        },
        "item": {
          "id": "29ed10ad-09e2-4ea5-9714-7ce1f2f42b6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "100a8e63-048c-4b9d-b78c-3d2f3fb2e357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b653fb3-6929-4e23-a7b1-ff4d829ad8e4",
        "cursor": {
          "ref": "00883119-e1fa-4d46-bbba-d243feb561c3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "91f89a51-63c3-460d-96de-f326e0f797e7"
        },
        "item": {
          "id": "0b653fb3-6929-4e23-a7b1-ff4d829ad8e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "75fd939e-2b44-4f3c-9f88-870233c3635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0541d831-0b20-4c15-9779-c61e36f660ab",
        "cursor": {
          "ref": "f48bcad7-c8dd-4cc0-b593-84aa5ba18415",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3c7f6e76-ec47-469e-8d69-853e38341402"
        },
        "item": {
          "id": "0541d831-0b20-4c15-9779-c61e36f660ab",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "05aad926-859f-4eef-877c-d49a9429a47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fac03d-e3f8-49b7-a4ec-56c097191d99",
        "cursor": {
          "ref": "a64f8c62-a730-49f5-b22e-b6c70d06d24d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f35df65-6b09-49b6-b49c-65e024f19a80"
        },
        "item": {
          "id": "a6fac03d-e3f8-49b7-a4ec-56c097191d99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "44271638-e3a6-4244-b95d-48536ccffeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b924e8-4af0-4a0c-870f-f101e1967755",
        "cursor": {
          "ref": "5961c5a7-b2e5-4db1-ab04-9a6ddcc60f16",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "03146606-a9ef-4ffa-b1f0-179cd823aaae"
        },
        "item": {
          "id": "e6b924e8-4af0-4a0c-870f-f101e1967755",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "68e27c74-93d0-4725-bb25-1834521b909b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cdf57e-a4ab-41bb-9536-a80cfcd33adb",
        "cursor": {
          "ref": "b10e21f0-0c4b-466d-a4f3-a5bb69b08fc9",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ddea189b-513f-43fc-947c-3e117b9c6692"
        },
        "item": {
          "id": "d5cdf57e-a4ab-41bb-9536-a80cfcd33adb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "332baa1e-763c-4cf6-9d67-fa3e58872f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d962508-24c7-418e-9cde-d50bb2ac951a",
        "cursor": {
          "ref": "5126f5d0-1ea3-4943-9183-5363c0af3b9d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b9221c1-a1bb-46e6-9043-34f66774ea3b"
        },
        "item": {
          "id": "7d962508-24c7-418e-9cde-d50bb2ac951a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "acd93e11-9a5b-4dad-bb34-41f00f8d2eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5815f006-17a2-4ac6-af8f-9f8185963f53",
        "cursor": {
          "ref": "b45a754c-5084-47d2-9f62-f233c4e16b0a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4d4c7a3c-245b-4d90-ad7a-932d3a6fee88"
        },
        "item": {
          "id": "5815f006-17a2-4ac6-af8f-9f8185963f53",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bd9f98e8-b4aa-4ac8-96b6-501e82df1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161f8caf-94b4-4cb1-9275-93bc1a14b91e",
        "cursor": {
          "ref": "3381d329-7f57-4a6a-9ba7-abf05ea63d6b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "86529d59-0414-4fb8-bec0-357e3ed90d3d"
        },
        "item": {
          "id": "161f8caf-94b4-4cb1-9275-93bc1a14b91e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3c7a8b3a-2c33-40ae-a2fc-e2fd44f0af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc6b583-8435-446a-bfa0-bcdb78c7e690",
        "cursor": {
          "ref": "a2245229-4389-4f88-b4e4-8b0a48f4484b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d492580-e052-481f-a47b-ad501003e87b"
        },
        "item": {
          "id": "3cc6b583-8435-446a-bfa0-bcdb78c7e690",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "522bdac9-dffb-4869-8f82-ff137bfe259c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3793c70c-4cbd-4c58-900b-6e2177cff51e",
        "cursor": {
          "ref": "4abcfa26-1527-457f-b4d7-c77334f0c703",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "957325eb-127c-46ec-ac7b-c9fadcece61a"
        },
        "item": {
          "id": "3793c70c-4cbd-4c58-900b-6e2177cff51e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "58453f17-cd2e-458c-84cb-d1e7f25c1198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7825dd-13ce-4af0-a801-1bba7c69ae92",
        "cursor": {
          "ref": "ebcc7c49-0f7d-40f2-8e89-a48cefcd9d87",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2e56c964-d304-435f-a1e9-fe491da2a54c"
        },
        "item": {
          "id": "0a7825dd-13ce-4af0-a801-1bba7c69ae92",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "836b6cba-f278-4214-b590-c09b5baacbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c784acf3-6d2b-4ca1-b972-daf62695fa7a",
        "cursor": {
          "ref": "c1f8592e-4b2f-44e1-add6-25a5aa5f4fda",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "065ed82e-eb46-4e2c-b372-370b50ca1def"
        },
        "item": {
          "id": "c784acf3-6d2b-4ca1-b972-daf62695fa7a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0d8cafc-ef5f-40ef-be21-1cc7dbe7a057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ba70e9-d8d5-4403-a53b-96cb4824cc40",
        "cursor": {
          "ref": "f7104bd4-c3fd-4077-bc67-c3c708169934",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8d60e2ed-76ab-47be-9d59-8edb44b33167"
        },
        "item": {
          "id": "84ba70e9-d8d5-4403-a53b-96cb4824cc40",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8077dc84-583a-4c93-977e-5e64e2f36165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1236cb4-f912-400f-ae2b-8cd444ae20c2",
        "cursor": {
          "ref": "116ba790-3556-46d0-9dd9-8fb600f54f97",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e18600f1-9954-4bdc-a3a5-48ea9a6b7012"
        },
        "item": {
          "id": "e1236cb4-f912-400f-ae2b-8cd444ae20c2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6938bc97-cca1-4407-9bc9-c8b7ec063534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27cf829-a572-4cf8-bc4b-1817d9bb4e1c",
        "cursor": {
          "ref": "2cc74136-6198-4afc-86fb-3606d0b90d66",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "28789fc5-7ab3-43e4-b61a-437f68cf655d"
        },
        "item": {
          "id": "c27cf829-a572-4cf8-bc4b-1817d9bb4e1c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "690a7c89-91f9-4906-88fa-3033dcff3eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cca09a-9c04-429d-a9a0-22500df172fe",
        "cursor": {
          "ref": "fa0390b7-f787-44ca-b0df-a2287f60cf6f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f942f39-8ddf-4065-bd1d-f5cb81d1f76e"
        },
        "item": {
          "id": "d6cca09a-9c04-429d-a9a0-22500df172fe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "46ebe766-a907-4a81-8542-fecceb86145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bd2160-cee7-4d3b-af1f-7a0aec5cb2c9",
        "cursor": {
          "ref": "3eeff684-4e27-4941-be7e-99003c85a52a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53a41689-948a-4037-ab62-87b490c3ea08"
        },
        "item": {
          "id": "86bd2160-cee7-4d3b-af1f-7a0aec5cb2c9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ab0a6f5c-579d-4858-a707-464592fe0e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d6c3d7-d9e7-4099-adc3-1681b15cf3da",
        "cursor": {
          "ref": "df65bf95-a116-43c6-942d-d4be87150ed4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66a64b96-62fb-478c-955b-c096178f603a"
        },
        "item": {
          "id": "12d6c3d7-d9e7-4099-adc3-1681b15cf3da",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a3f6e577-4eb7-4d48-af0d-84604b7ffbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99f188c-5b05-4dd4-a4aa-7dbf553c3e19",
        "cursor": {
          "ref": "4eab8104-bb11-458e-9a74-5d59efee3ca6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4305b1fa-1815-47b8-a03e-0c51b54089d3"
        },
        "item": {
          "id": "f99f188c-5b05-4dd4-a4aa-7dbf553c3e19",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0f86dd45-2532-4937-9cce-447b2f69c0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf262dcb-48b7-4fde-8f7c-d8de7f70b294",
        "cursor": {
          "ref": "40c80ea2-3bfb-4ae1-8cea-d2e06ab18291",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ef45d29-dea3-4a0d-a83d-9049f3df0fd6"
        },
        "item": {
          "id": "cf262dcb-48b7-4fde-8f7c-d8de7f70b294",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2cd17ddc-79d2-405d-a123-d2cc32ba4668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c5788d-7d12-4e3c-bce6-f2fa8c92bbfe",
        "cursor": {
          "ref": "99630c62-27b5-4404-ba45-36883a5c46bf",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "134b39ad-21dc-4188-9f8a-fc2a06d60f1d"
        },
        "item": {
          "id": "c0c5788d-7d12-4e3c-bce6-f2fa8c92bbfe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "883e6be1-1871-4621-a9f5-1a8f9daa8b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aa5eb6-496e-4bcb-b11f-a37d2e6c3a9e",
        "cursor": {
          "ref": "219fac24-3784-44fb-b25b-1dd042896942",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "830d7d80-80c0-4a17-ad0c-e032f9dbb2cd"
        },
        "item": {
          "id": "93aa5eb6-496e-4bcb-b11f-a37d2e6c3a9e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "62dbeb5f-b248-41bb-a23a-86d028140568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b90959-578b-4bc7-acf9-733166a2f382",
        "cursor": {
          "ref": "5041900d-1f01-4805-97d8-3dfbdb27a358",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b6e2c7d8-424c-4b27-8768-d54b56bb9eaa"
        },
        "item": {
          "id": "70b90959-578b-4bc7-acf9-733166a2f382",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "89e3fd39-d5da-4cd8-a3e4-d3943cff35a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2685b841-9e04-437f-a639-ada5229b464d",
        "cursor": {
          "ref": "c81844ef-ec59-4897-8e7b-4a1ebb4cab98",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4e5e2d1b-d76c-4961-a10d-b19c05f210bf"
        },
        "item": {
          "id": "2685b841-9e04-437f-a639-ada5229b464d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5f26d93e-99f7-4ad1-bf04-d6c2d633afab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f337bc40-0c36-4385-b674-2f230f07e0bc",
        "cursor": {
          "ref": "8e0a3d7f-b58b-4993-9972-bfad8d4e22da",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a605b9de-31aa-42b7-a7be-94e7263df707"
        },
        "item": {
          "id": "f337bc40-0c36-4385-b674-2f230f07e0bc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "02e558c6-6244-420c-82c0-ee3b92ddbbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5002f41-22d8-4dc9-b12a-4022750bbbdf",
        "cursor": {
          "ref": "438d1a2e-3544-4bfe-857b-2f1f2a67080e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3e01b2ce-fe69-451e-8da3-7f931e33a6b5"
        },
        "item": {
          "id": "a5002f41-22d8-4dc9-b12a-4022750bbbdf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ec91a6f9-bc96-45f8-9411-76c72e9cdf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb9b40-46b6-400e-8a08-b446c636b8e9",
        "cursor": {
          "ref": "cf65d71b-e911-4abb-ae6c-2749c87dd7a9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e4352f82-29e3-45c6-aeae-89800aecd3f1"
        },
        "item": {
          "id": "a2bb9b40-46b6-400e-8a08-b446c636b8e9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f2618906-4a73-4b9c-b724-3fe5e8504b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb962846-8788-4947-bc2d-c6d129188991",
        "cursor": {
          "ref": "dca9fd97-d5fd-4326-9b3c-3c7150b30535",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "40faa51f-550e-48b5-8d48-92a2099d665f"
        },
        "item": {
          "id": "bb962846-8788-4947-bc2d-c6d129188991",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "53808d29-791c-412d-8098-c8427e5c64a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b052cc-05d7-4d7b-9ef2-74e72d623504",
        "cursor": {
          "ref": "56534120-d993-45e4-bb09-da3af7a96c70",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e1d069f-5528-4039-bad7-95121bb5a4f3"
        },
        "item": {
          "id": "20b052cc-05d7-4d7b-9ef2-74e72d623504",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "413888f9-63ec-4362-a066-cf9d7f0b4158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee9a72-5e5f-4314-9638-e68cf8f1183e",
        "cursor": {
          "ref": "4d5fbcf4-6812-4834-a9dc-61d3cfaad503",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "da0a29d2-d234-4764-9fad-d6976850bfd1"
        },
        "item": {
          "id": "e6ee9a72-5e5f-4314-9638-e68cf8f1183e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "034444d9-4aa7-4c34-8510-5caecca18339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a0666-63cc-4ca2-9615-52acdb4b7bb0",
        "cursor": {
          "ref": "29ec3d11-dc0f-4e10-8bb1-e18e16725edf",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8d5c2794-becf-452f-bed0-cacacd599db5"
        },
        "item": {
          "id": "6e6a0666-63cc-4ca2-9615-52acdb4b7bb0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4a7d9dc7-581d-41f1-a374-1c2cdcabb92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3286d5-2a00-445f-9d29-ea15eab05c01",
        "cursor": {
          "ref": "829f19c9-89b2-4b09-bdd0-992cd4fcff61",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "69f1b143-c1eb-412d-a1fb-8bf648d53166"
        },
        "item": {
          "id": "7f3286d5-2a00-445f-9d29-ea15eab05c01",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16f09d72-df35-4d86-ba41-844c6041678e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31820bf-4640-40a5-8a71-19f010e2a6ea",
        "cursor": {
          "ref": "981847f2-2afe-4e00-bcaa-6ae08a00522a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bebc087d-5164-474c-9e16-f52c7d8037f7"
        },
        "item": {
          "id": "c31820bf-4640-40a5-8a71-19f010e2a6ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9cf2e37c-884d-4423-9845-1af0586c476c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375ab061-063c-4965-a61d-d251abc82a12",
        "cursor": {
          "ref": "ed18e860-2037-4929-954d-daeb86b6a815",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "59d1f7f0-8771-4215-a967-28ecf430bc00"
        },
        "item": {
          "id": "375ab061-063c-4965-a61d-d251abc82a12",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cc6b20e0-9d32-4d00-aee1-1fbf28100541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f60aa6-680b-4604-b921-8c96191d8d76",
        "cursor": {
          "ref": "037f4b31-1840-4e5d-b3d6-13b867c6f707",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e89889c8-b242-4d3f-b102-018f4a6d5374"
        },
        "item": {
          "id": "70f60aa6-680b-4604-b921-8c96191d8d76",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7c936ce0-91cb-4d90-a06b-4e1aa2905003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eabb566-b5e8-4df5-90ee-8ca27ed0b556",
        "cursor": {
          "ref": "fa6587f6-fe2d-4fc0-92b6-a245c563dd48",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0c41a0d-b599-4aec-bc07-de5602037439"
        },
        "item": {
          "id": "8eabb566-b5e8-4df5-90ee-8ca27ed0b556",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "17c1d429-80e3-4263-be63-d85f77252b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c7b40-bea6-4a49-88bc-0da4a8eaf1f7",
        "cursor": {
          "ref": "27b6f6cc-b59b-4710-b8cb-7afb5c758a8d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "80a7edea-a888-4807-aa25-6b82d374b72c"
        },
        "item": {
          "id": "2e2c7b40-bea6-4a49-88bc-0da4a8eaf1f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "880f6fba-e057-44b2-adb9-82cc4509d70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0774400a-8545-4702-9c4b-5b8ccbca3e4b",
        "cursor": {
          "ref": "e2d11f4c-80c4-4b9f-9b67-f79651042f0c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51746617-8c22-4334-8da5-bfb024c0caf1"
        },
        "item": {
          "id": "0774400a-8545-4702-9c4b-5b8ccbca3e4b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "def72e2c-6130-4ec1-834e-435365d82895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253d7e92-c7bb-4558-9b21-3149671f4e4a",
        "cursor": {
          "ref": "db3e8d60-69ee-4e65-84bf-28d4f7c53287",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3fcc1ab7-6760-4bdd-ab1b-dd46a81c3e46"
        },
        "item": {
          "id": "253d7e92-c7bb-4558-9b21-3149671f4e4a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "111ab2ca-ef80-4838-b29e-fe331eb4b3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f5cc44-1c27-449e-baf2-5a465a7ec44d",
        "cursor": {
          "ref": "a5d9fe20-ca08-45a7-b25e-52b0fef289d1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3b604332-2f73-48d3-abd6-d6798ce58e13"
        },
        "item": {
          "id": "92f5cc44-1c27-449e-baf2-5a465a7ec44d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7021c797-e9b9-4996-959c-170a52e26896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5b69a-e774-4f1e-9ead-fe2052494711",
        "cursor": {
          "ref": "1f9ab581-c2cf-47fa-ad8b-47e3261562f6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b93d9ee0-98f9-4492-abf9-e98af66a43c1"
        },
        "item": {
          "id": "e2d5b69a-e774-4f1e-9ead-fe2052494711",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0dcc33d1-aa0a-49f1-bc77-892c0a59f100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b91e51b-6766-4a6f-9ab5-c6b18739c179",
        "cursor": {
          "ref": "5f7b58d4-4159-4c3d-9907-a20541183fa3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "230dada5-6b95-4ba6-be31-1f6fd48ee02c"
        },
        "item": {
          "id": "7b91e51b-6766-4a6f-9ab5-c6b18739c179",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cb04d76a-07f2-4f56-9ed4-435c36af3d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ebf735-418c-479f-80e1-308f69355b15",
        "cursor": {
          "ref": "980f58e1-141a-43db-841b-2790db0b36ae",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6a4e266a-7149-4c0f-b649-3c0427c7016a"
        },
        "item": {
          "id": "98ebf735-418c-479f-80e1-308f69355b15",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b6e08ecb-5a30-406a-b542-1d4e3262e109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c98dd4-c740-47b2-b27f-a9c4f625528d",
        "cursor": {
          "ref": "cb716d62-efdb-44f9-a982-79b96467d851",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7221e0c9-52a2-4688-9386-7181be5139c6"
        },
        "item": {
          "id": "32c98dd4-c740-47b2-b27f-a9c4f625528d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ce685aab-f30a-48fc-b805-5d937a777d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f1a3e4-5c2f-4f4e-bb70-f4d51fccdf53",
        "cursor": {
          "ref": "105b37ca-fe96-4cb7-af3d-3c3e61b25ba9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "702e3345-9eb7-47e1-a118-1251d33d13bf"
        },
        "item": {
          "id": "23f1a3e4-5c2f-4f4e-bb70-f4d51fccdf53",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e5695273-b371-4245-89bb-64370760ec9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c332bf3e-1bef-419d-8f1f-1da2812edaea",
        "cursor": {
          "ref": "b1145120-8c52-4a60-af8a-b1c31eae8aee",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d6fb14de-8e31-40a9-aebc-873f38f71eb3"
        },
        "item": {
          "id": "c332bf3e-1bef-419d-8f1f-1da2812edaea",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5515437-6e75-4d11-89d5-0fa755c2acfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066de8d8-c695-4b64-8b8c-17b7a0706504",
        "cursor": {
          "ref": "703f1acf-378c-42e5-bac3-c53a4fa00a5d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ab9a7ba9-af8d-406e-bdb3-9579596f7aca"
        },
        "item": {
          "id": "066de8d8-c695-4b64-8b8c-17b7a0706504",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bacfedb5-54ea-4123-83f2-3a892c4e4a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c487f48-4338-42f4-b5b4-5ba0eaa26fa8",
        "cursor": {
          "ref": "d6055a60-7e60-4fea-9e42-14b7e1368686",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7f0a8655-aefe-4bad-a191-73c45d91d53c"
        },
        "item": {
          "id": "2c487f48-4338-42f4-b5b4-5ba0eaa26fa8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d6a57bc2-c492-4173-943c-8f74cd48f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7270d9d9-e1f2-4544-914a-9150781c7d2c",
        "cursor": {
          "ref": "a5855102-0769-48cc-a94b-96ced718e2f7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3d8a4388-4af1-4a93-aedb-1aa27c2bc136"
        },
        "item": {
          "id": "7270d9d9-e1f2-4544-914a-9150781c7d2c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1d8db835-1ef7-4afa-a92c-dbd1188b818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516e015-dd8c-4aa5-8c3b-289c81c1a0bf",
        "cursor": {
          "ref": "82b4a615-73b5-4040-9939-9e777da2106c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "53824b62-b549-4958-82a2-3523b9308c81"
        },
        "item": {
          "id": "7516e015-dd8c-4aa5-8c3b-289c81c1a0bf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dcbeb0a1-bb04-4317-a3c7-c82ed36082bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef1b6fe-bc27-42f9-8f21-868151285174",
        "cursor": {
          "ref": "89a38f92-dbb0-41ef-bbb0-aa8dc0bd990d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7e2d6392-2c71-4f19-91c6-fb67316201c7"
        },
        "item": {
          "id": "cef1b6fe-bc27-42f9-8f21-868151285174",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "deff4c73-cd59-4d86-8a64-6890191b84f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b0d9b1-78f1-4179-ac37-d7b07ef8fe84",
        "cursor": {
          "ref": "a6ed31f5-2bbb-4a95-8543-1d746fc71e2c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1caddba0-2adc-4aa9-8229-7ddc9dcf58e5"
        },
        "item": {
          "id": "e8b0d9b1-78f1-4179-ac37-d7b07ef8fe84",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "56813409-52b3-4d4c-b32d-aa19f699304b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408f7660-aa33-4ae9-98df-2e8ea6d745dc",
        "cursor": {
          "ref": "acc27774-7e96-4e32-8e07-4ac1901ebe07",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fb319afa-8840-4b18-8cb1-06c5717f7151"
        },
        "item": {
          "id": "408f7660-aa33-4ae9-98df-2e8ea6d745dc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9f53b4d7-490e-404d-add5-11636abbc223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d0316e-4b28-4b34-a4a8-559903b2e21f",
        "cursor": {
          "ref": "199e8861-2506-46ed-b704-07fec59d302a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "43e40f80-1ea1-4fcf-911f-b17553ab65bf"
        },
        "item": {
          "id": "a1d0316e-4b28-4b34-a4a8-559903b2e21f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "86e52293-d260-40bc-a99b-2ae26d0d35a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488c67a7-3e06-49df-9af6-55f3a6589e4d",
        "cursor": {
          "ref": "ad85ca46-1507-4249-a5d2-264f7acd95e7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5ae96dd6-9f45-458c-b80f-8a0729b8864b"
        },
        "item": {
          "id": "488c67a7-3e06-49df-9af6-55f3a6589e4d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d7a41ec8-0e1d-4f7e-a951-6c535b9e1fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d70cb6-d413-4a86-b8c0-74e42d12d7ab",
        "cursor": {
          "ref": "6c14b856-3685-4e4c-a074-65eff414ac0a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "59fb2678-068f-412a-91ed-2948dbbcb98f"
        },
        "item": {
          "id": "21d70cb6-d413-4a86-b8c0-74e42d12d7ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cedf6882-8123-41f9-bb9b-1001d42b7925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ff64d-7e67-4da9-95b9-ac5aec88e292",
        "cursor": {
          "ref": "76436441-734c-4884-97e0-a13ba4770367",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c989a465-5b09-47a1-a828-79bf41a912c9"
        },
        "item": {
          "id": "015ff64d-7e67-4da9-95b9-ac5aec88e292",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7b5fb60a-b108-438e-988a-8123fc6417d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cc7f5f-fc3b-457b-9180-d5f4347811bf",
        "cursor": {
          "ref": "8fd0b969-a1dc-47dd-a748-68778ff0ce21",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d5712f32-cc7d-40d1-90a0-31a982e0f3fb"
        },
        "item": {
          "id": "09cc7f5f-fc3b-457b-9180-d5f4347811bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ea709df5-e197-469b-88c5-d901a77daa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d96f0d-a892-4a05-bcd3-367d2c953f5d",
        "cursor": {
          "ref": "22cc8c32-d14e-41d0-85dc-7edfab555bd3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a34bb007-58b9-43c2-9519-5c659322b809"
        },
        "item": {
          "id": "b6d96f0d-a892-4a05-bcd3-367d2c953f5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4928ee0e-5fe2-4606-bdd3-3762dc2b438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197e4fa5-3d9a-48ac-b68c-9fe0a8115be4",
        "cursor": {
          "ref": "3a526e58-a557-4240-91f4-1f9e39b4871d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea549f05-0cf2-484a-8aa2-fb6082ec3b39"
        },
        "item": {
          "id": "197e4fa5-3d9a-48ac-b68c-9fe0a8115be4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "82c966e5-73f4-4499-afd4-a5a3b048f70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360c597b-226e-4a22-a20d-e53b4be452ec",
        "cursor": {
          "ref": "73f9b7e4-f9b1-4b2b-9e26-1067a68eb841",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6d2727ad-a3ed-4299-a011-ed5e02c1ca57"
        },
        "item": {
          "id": "360c597b-226e-4a22-a20d-e53b4be452ec",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a28e2433-89f6-463d-8eba-58fc66110426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dd6790-6bf6-41d9-ac81-c7470960bd14",
        "cursor": {
          "ref": "b9d571f4-ed74-407b-89af-be3954b225f9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9da0e900-67ac-41c6-9a6d-db5289d2d224"
        },
        "item": {
          "id": "e8dd6790-6bf6-41d9-ac81-c7470960bd14",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b413c489-871b-4c30-a48f-fd744d0fb6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ab56c4-8979-4050-a654-1ca95ed2e502",
        "cursor": {
          "ref": "d09cc0aa-8d8c-4ff8-bb39-888cccbdfb1b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "41938505-fd92-4af9-a93e-0c39147dd812"
        },
        "item": {
          "id": "55ab56c4-8979-4050-a654-1ca95ed2e502",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "be0ecf72-3299-427c-92ee-edf00a04a0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981346ec-ab26-4ceb-8931-c421809cc14f",
        "cursor": {
          "ref": "96f56e03-a324-4e1c-9278-8923224ce056",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97cd9adb-12a2-457d-81c2-2391b7a9192c"
        },
        "item": {
          "id": "981346ec-ab26-4ceb-8931-c421809cc14f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d14a0933-3419-4bae-bc13-4a42a246402d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eec5d6-5f19-4e1c-b96c-b9505746d6c5",
        "cursor": {
          "ref": "611be4e3-0d2b-4571-aca5-661ebaac5408",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d5be839e-679c-4dcd-8aaf-d75460cb5919"
        },
        "item": {
          "id": "93eec5d6-5f19-4e1c-b96c-b9505746d6c5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "87c757c8-47e7-4920-a4c2-d4bf9d7d2d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f37dfd0-5e69-46d0-b86e-d696f503460e",
        "cursor": {
          "ref": "a030de00-f2d0-4df3-92df-2822a286cc0d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ddf4c76a-3368-4aca-b265-19b34a2f66d9"
        },
        "item": {
          "id": "9f37dfd0-5e69-46d0-b86e-d696f503460e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "06387c07-d975-494f-af7c-94917249c120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b594e8bf-9921-4137-840f-d62d3bb47b94",
        "cursor": {
          "ref": "2cadc644-604b-4d47-ad31-693e16f899ec",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2678f14c-cfcb-45f4-925f-a82907cd1966"
        },
        "item": {
          "id": "b594e8bf-9921-4137-840f-d62d3bb47b94",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d7380154-e142-4a1f-84d4-0fd2408f648c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f797a027-755a-438f-a7aa-414411c4a2d8",
        "cursor": {
          "ref": "ed7c2b14-8663-4dfe-83d9-e625450a0115",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "156ab52b-09ed-4126-9690-b6358813b34a"
        },
        "item": {
          "id": "f797a027-755a-438f-a7aa-414411c4a2d8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c14ba3cd-b1bd-4a47-a0ff-942f10da5aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63b87ae-fbd7-4e7d-acb5-d1dc1692cc87",
        "cursor": {
          "ref": "02d5ed49-ef87-4fcd-8435-2b4b51fdf953",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b77d30ea-c5fa-4fc7-a0d0-c0d1e60f9da1"
        },
        "item": {
          "id": "e63b87ae-fbd7-4e7d-acb5-d1dc1692cc87",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0291c6f4-66bf-4c06-a290-e8626f8a2772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3e9338-fdef-475a-886c-1264d6e336e6",
        "cursor": {
          "ref": "656a0d15-7a3b-46ca-81e1-e05c2e08d86e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49ac5695-87e1-41c1-a91f-318fc75bb058"
        },
        "item": {
          "id": "0c3e9338-fdef-475a-886c-1264d6e336e6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ce295cfa-7999-4d12-9347-62285e3929ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dbc3f6-4b3e-4ed4-8660-8dfaa05550c5",
        "cursor": {
          "ref": "c7f7e527-97c7-4e0a-ba98-a9e6aea72af5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ba88b968-307c-46a1-bce5-5734f116654c"
        },
        "item": {
          "id": "04dbc3f6-4b3e-4ed4-8660-8dfaa05550c5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "98e71dc8-b04f-40d2-b295-fcbf13d73ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612f9fe9-ad9b-4a73-af22-8a0c4ccfda9d",
        "cursor": {
          "ref": "d39e18d9-8534-451f-9057-4455640fbb97",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8f103927-f76b-4792-88e3-76a0aca27ef2"
        },
        "item": {
          "id": "612f9fe9-ad9b-4a73-af22-8a0c4ccfda9d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e03c611f-e5e3-4e63-9af8-36aba3e1a264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e42dcc5-56d9-4181-8ea6-639f86f9ea78",
        "cursor": {
          "ref": "17631308-58b6-4ba6-af0f-52cc4f7b6b79",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c6c0925f-5bc4-40c3-9207-19c33469f715"
        },
        "item": {
          "id": "5e42dcc5-56d9-4181-8ea6-639f86f9ea78",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f88ba5ca-c158-47e4-8858-fcc8cfdf02ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e976f11-468f-457c-bfc2-547949e44f88",
        "cursor": {
          "ref": "4af90a73-5e24-4403-a067-2d91efd620be",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e67e51c6-3916-4d2f-a517-030441f30243"
        },
        "item": {
          "id": "0e976f11-468f-457c-bfc2-547949e44f88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ebc4c665-4355-40ac-83c4-59e43c7d9a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d274b7-3ad4-4a48-aad9-aa87c1d0414b",
        "cursor": {
          "ref": "1f5bb95e-4d71-4d4a-90c0-206d983cd186",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "97f32941-b8ed-4247-9659-bf8ba5f49919"
        },
        "item": {
          "id": "11d274b7-3ad4-4a48-aad9-aa87c1d0414b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0d6c87a6-3ecd-4e4a-8452-fb6cee8e710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975d8bc4-2250-4f8c-a4fe-dc2aff9c4632",
        "cursor": {
          "ref": "7b4fac04-f4ae-42e6-a7eb-9e8e206503ff",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3954fc8e-4a3b-4c9d-867b-b8ebdd074c57"
        },
        "item": {
          "id": "975d8bc4-2250-4f8c-a4fe-dc2aff9c4632",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5e80d9f7-87e3-4f02-a285-4e80a61a32fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3deb358b-5da2-4471-bb4f-692716e8ecf9",
        "cursor": {
          "ref": "32a8b5fc-3928-43eb-a32e-fdc63f01575e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a01a3477-f707-47ad-9d92-843b5c14a742"
        },
        "item": {
          "id": "3deb358b-5da2-4471-bb4f-692716e8ecf9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8f0ed928-bd42-49ef-b458-f04bd104a77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2670e5-13a1-4f25-b250-26e5a2dbd218",
        "cursor": {
          "ref": "feeabddd-ad46-4bb8-9fa3-b3819fe068dd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "39f9989e-622b-490f-bade-3b7bb31df990"
        },
        "item": {
          "id": "bd2670e5-13a1-4f25-b250-26e5a2dbd218",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5e172e03-0bc6-40f2-94fd-23dc3b747cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07fa62b-4102-43db-b3aa-3a163497eeb7",
        "cursor": {
          "ref": "fdb35ade-8b8c-4b09-b02f-dc34422cc250",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d004246-f80f-447c-adc0-c229fb1ff0aa"
        },
        "item": {
          "id": "e07fa62b-4102-43db-b3aa-3a163497eeb7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "20ef15ba-fb0e-4252-bb5a-88fb40658950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb003686-7185-481a-9f33-24840df20c80",
        "cursor": {
          "ref": "0b5e0fcb-86ce-4a4e-8d82-7c872c7f2ad7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "baa29b41-338c-45f0-99be-9c1beb440a67"
        },
        "item": {
          "id": "cb003686-7185-481a-9f33-24840df20c80",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "18e44557-9398-4ce9-b2a6-d60a45065193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b811f57b-c4eb-496e-bff5-73cda3708922",
        "cursor": {
          "ref": "d862d991-aca8-4d7b-ac77-a36368a40be2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "68c8e5af-727d-406a-864d-5757d62f7b73"
        },
        "item": {
          "id": "b811f57b-c4eb-496e-bff5-73cda3708922",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "90b3ef00-3bd6-4348-b891-b3d3f12b9d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decde63c-5118-4af3-8d03-7d3690725940",
        "cursor": {
          "ref": "60a9845d-aa40-4153-9f5d-ab73057ab14b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a64c2dcb-12a6-4e09-8b1c-1fd9f36153fc"
        },
        "item": {
          "id": "decde63c-5118-4af3-8d03-7d3690725940",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c5f9ccc6-ae99-4dbd-9e8e-c7e2738abe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9497d7d1-ab2f-406c-b1b9-a60dcf7887b3",
        "cursor": {
          "ref": "3c7c7275-910e-4e6c-9a3d-8ed4fdb76bd6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f3aea06d-4359-4192-a4be-20a182128b3a"
        },
        "item": {
          "id": "9497d7d1-ab2f-406c-b1b9-a60dcf7887b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "832f6bee-bbf6-4c01-9352-11e9bf803851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65232ca-51af-4ba8-9c71-b63ffe27606c",
        "cursor": {
          "ref": "892179f6-ddcc-4e49-aafd-c09387f58ceb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "19945890-2485-4bcb-83e5-dfbed0cce0f9"
        },
        "item": {
          "id": "b65232ca-51af-4ba8-9c71-b63ffe27606c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4f8a9ba0-fcc4-463a-9dc7-71cc12746f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b75568d-46d8-41b5-b77f-4dbbd3206a82",
        "cursor": {
          "ref": "c986d7ec-9be1-4ba5-bc69-25c1a5ebca94",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9c2d792f-a348-470c-857d-c28cbc65e5f2"
        },
        "item": {
          "id": "8b75568d-46d8-41b5-b77f-4dbbd3206a82",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bf759ccc-dd2e-43d1-9033-c1a9bf04439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e653d0a1-7052-4426-b31e-91370d1d7828",
        "cursor": {
          "ref": "a4b73151-ecbc-477f-8eec-6dc756638783",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "487f5795-00ed-475a-bc2c-12e5082df650"
        },
        "item": {
          "id": "e653d0a1-7052-4426-b31e-91370d1d7828",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1247a872-779b-4341-aeba-9f941291258e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e84ee7-1b2d-45d4-ab10-309a882976f2",
        "cursor": {
          "ref": "adfe7b70-bbd1-4bf9-b1d9-647d2c650997",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "94ffac2f-2fff-4b54-a3e7-50896d5cc7c6"
        },
        "item": {
          "id": "30e84ee7-1b2d-45d4-ab10-309a882976f2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b8ae084e-e9da-472e-8bcb-580e436163a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e4b382-0b33-4c55-a689-25e0902cfcbd",
        "cursor": {
          "ref": "fee5876f-afd7-4c79-998f-ea03a07ca213",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f22d8da4-2046-4b55-8e42-478b7e724b86"
        },
        "item": {
          "id": "d7e4b382-0b33-4c55-a689-25e0902cfcbd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e63217a-c308-4289-94f1-b4dd25313497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b85ae5-80e3-4c05-826e-4bda505ce872",
        "cursor": {
          "ref": "a09039b1-c645-40e8-9beb-5e3f410caa87",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac4b628f-03a9-49aa-b7f3-b503facc0caf"
        },
        "item": {
          "id": "48b85ae5-80e3-4c05-826e-4bda505ce872",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f353c723-3dfe-4ecc-88fb-39c4fdf8dc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945e3a1-942c-4c15-903a-6c936615543c",
        "cursor": {
          "ref": "32d39f26-319a-4998-b4fb-0b459b301155",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bb535b9d-02b1-4899-8993-38e059d6c541"
        },
        "item": {
          "id": "6945e3a1-942c-4c15-903a-6c936615543c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e49ada6f-c2f4-4c6c-bcea-4494f79ea65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88820f46-9777-4e9a-b729-d4f7b1bf561f",
        "cursor": {
          "ref": "b20dea4b-8fa5-4198-b99d-0aad984850e8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "be882622-3b9c-4962-b7c0-523f2e96c14c"
        },
        "item": {
          "id": "88820f46-9777-4e9a-b729-d4f7b1bf561f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b1c66d6-f8f2-45e0-ba60-116ca25e0693",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177dd17-d3e2-43c2-bafc-5224f9edb178",
        "cursor": {
          "ref": "fb0fe815-be3e-4253-bf54-279e2d66ead0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "74591c1d-17a3-47d6-9fa8-a9bfd44dfedd"
        },
        "item": {
          "id": "4177dd17-d3e2-43c2-bafc-5224f9edb178",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1d5613b3-9c8d-44d7-8ffd-17a0a31adb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "38ded4a4-0118-4170-b9c2-9fbf58f16f9a",
        "cursor": {
          "ref": "3958b704-92ad-428f-a43a-53762666dec2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8d7d76b5-8ff2-4868-8f9c-cb84845c4214"
        },
        "item": {
          "id": "38ded4a4-0118-4170-b9c2-9fbf58f16f9a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "172d6c86-211d-4861-bca2-61801815087a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "7599bf9e-c87a-415c-8642-76ee2c7265fd",
        "cursor": {
          "ref": "1451b606-c2a4-42ac-a8d5-d156a3908668",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5b381f9f-882a-464e-86c7-781c1a1559b3"
        },
        "item": {
          "id": "7599bf9e-c87a-415c-8642-76ee2c7265fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "998455e8-7231-4579-b52b-f01cd0dd0170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "35c09bb5-ef89-4d44-a8a1-b95945e3e754",
        "cursor": {
          "ref": "ddd2d3f1-b455-4ad6-82c7-0767e34cdfa7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b8e1a9ac-e600-4710-946e-4f7d160c91a4"
        },
        "item": {
          "id": "35c09bb5-ef89-4d44-a8a1-b95945e3e754",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f498336-875a-4500-a31d-c4c78ad6a041",
          "status": "Created",
          "code": 201,
          "responseTime": 6877,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce69f6-debd-449e-8502-58b93e3987af",
        "cursor": {
          "ref": "d3edd4d6-90e3-462d-ad79-823ea8197f7f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5c3cdb8-a0b7-4bfb-968f-aa3ec7d5c09f"
        },
        "item": {
          "id": "5fce69f6-debd-449e-8502-58b93e3987af",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8ff9ce6b-0d24-4f97-af55-928c44e373ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "059db990-db5b-4b0b-8526-66ff913357d4",
        "cursor": {
          "ref": "f032d671-c5e7-412e-9f57-9d366b67b554",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1d8d97a9-d09d-441d-90f5-5067e86e281b"
        },
        "item": {
          "id": "059db990-db5b-4b0b-8526-66ff913357d4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7049f946-38a4-461e-a0fb-806eea468d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "c31166c1-251f-4dcd-8ad4-b800c48dc119",
        "cursor": {
          "ref": "96d5a3cc-3334-4266-90d2-2697224313f9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "515dfdb5-cf70-440c-ab51-870dc44da6ff"
        },
        "item": {
          "id": "c31166c1-251f-4dcd-8ad4-b800c48dc119",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3307a41-203f-4f8d-bcf8-39bf7538373c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d384a3c2-24e7-4a4b-9619-8089decad93c",
        "cursor": {
          "ref": "ed336a3c-78d4-44c7-aef9-2979e5f36526",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8c0fdc56-bd0c-4cdd-90e5-aab84db3a3c5"
        },
        "item": {
          "id": "d384a3c2-24e7-4a4b-9619-8089decad93c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ebf9655d-d8e0-411d-8848-adc3f2d9869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e381bb-08e8-4ef0-8dee-92e528f0865b",
        "cursor": {
          "ref": "4c981888-4a03-4bd7-9e7d-731280ebd79e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0df5c4a8-fa9f-4d3c-a9d5-261b5e1db6f5"
        },
        "item": {
          "id": "d9e381bb-08e8-4ef0-8dee-92e528f0865b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05c9efdb-1692-4fae-b707-f7c8154c6df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d43c6-6f3a-4e07-af1b-5785cd00efe4",
        "cursor": {
          "ref": "21cdc1f4-556d-4c66-abb8-e6419e555e6f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6fc9d76f-272e-407c-862b-1ce77cede31c"
        },
        "item": {
          "id": "3a6d43c6-6f3a-4e07-af1b-5785cd00efe4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "04534258-6423-4667-b594-42381c3874af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b80b64-908d-4602-b434-db712bd05dab",
        "cursor": {
          "ref": "3bad3203-a7a6-4245-88cb-76cd0a3ef397",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "06e7c00c-1baa-4499-9e0a-8dbbf02f2211"
        },
        "item": {
          "id": "f8b80b64-908d-4602-b434-db712bd05dab",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c05411e0-c97d-4757-abba-92acb7edcc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fbcd26-61c9-4f6d-8889-5ac3028b00b0",
        "cursor": {
          "ref": "42b80b00-2e64-4c42-9dcc-a2b5893163f4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "02dc0c8e-6dea-4dbb-a2d1-fa6e6ef24fd6"
        },
        "item": {
          "id": "98fbcd26-61c9-4f6d-8889-5ac3028b00b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "825e6a36-3b26-414d-acef-61210101e989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710b84e5-9414-4b1a-8b3b-dd1f47a0c25c",
        "cursor": {
          "ref": "1c49008b-1f22-4845-9fb4-011d69c368d1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "77237d46-eb8d-4868-a3a8-db2195503e5b"
        },
        "item": {
          "id": "710b84e5-9414-4b1a-8b3b-dd1f47a0c25c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5a754aa7-14f7-4fc6-b6bb-c2c1ede6775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3b41d3-c3bf-4713-b046-824341587fa5",
        "cursor": {
          "ref": "e08e15a9-953f-49b7-99ed-7c948abfb84d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3a0a1a10-c7dd-42da-b5fe-707bc80744e2"
        },
        "item": {
          "id": "2d3b41d3-c3bf-4713-b046-824341587fa5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e29bb44b-bfd8-4e77-82d1-0d4a239c8a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270310f6-c78d-4dfe-a18e-6c614a6fda4c",
        "cursor": {
          "ref": "a677e1c6-d86e-45a3-a127-14c66ce06eca",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b807facd-7ce4-4eff-9f4c-0876e9ae33bc"
        },
        "item": {
          "id": "270310f6-c78d-4dfe-a18e-6c614a6fda4c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ba2b15fe-3b05-441f-b34b-1145a80b0cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da655831-9d73-42d5-b9c0-0cbfb636fcb9",
        "cursor": {
          "ref": "bb8020c2-d23b-4cc5-9484-a0b92879966d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "90a0378a-af4e-4573-9256-e5830f304b5e"
        },
        "item": {
          "id": "da655831-9d73-42d5-b9c0-0cbfb636fcb9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6db2d58e-ae06-4a4c-9082-bf059796cbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2088bb-26b1-43b5-9f29-088f29f4cf8b",
        "cursor": {
          "ref": "5660fe77-9d1d-4ff1-96ce-9ee2fe0e3912",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84e995db-c4e0-4330-a010-3372fcf73705"
        },
        "item": {
          "id": "2f2088bb-26b1-43b5-9f29-088f29f4cf8b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "708f070c-0d78-4104-9f8e-4011a2f289de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ec2659-31a0-4a73-90fd-dece2bf1b131",
        "cursor": {
          "ref": "5ca33667-57e1-4f54-a26b-a9b39368f604",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "61871af9-4cbd-4179-a675-9c06ce71ae6c"
        },
        "item": {
          "id": "66ec2659-31a0-4a73-90fd-dece2bf1b131",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d62638d2-61aa-413b-9aa4-5e619593897c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebab8eb8-31be-43f9-bc98-ad19efc29cb0",
        "cursor": {
          "ref": "121a6ace-9c76-4225-9a8b-14243f7a30d9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1ab8d655-03ab-4821-8be3-50fed176a0b5"
        },
        "item": {
          "id": "ebab8eb8-31be-43f9-bc98-ad19efc29cb0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a3be2d0-852b-4090-bfe3-a160d3b600e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cc21ed-eb4f-45f0-9df6-1f42f5c070b6",
        "cursor": {
          "ref": "dd0b7feb-4088-46c0-916e-6a7300fe8687",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "03edb3e2-2e10-4d09-8b9e-d8b9d3889d75"
        },
        "item": {
          "id": "29cc21ed-eb4f-45f0-9df6-1f42f5c070b6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4eada37e-1da0-4991-b9d4-f7003825e69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50375ac2-e7ed-4b08-be03-7d5b585964bf",
        "cursor": {
          "ref": "494559e8-151d-4629-a672-406cec065bb2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1efb22b4-7cad-4174-bcf3-8ab9d96f7452"
        },
        "item": {
          "id": "50375ac2-e7ed-4b08-be03-7d5b585964bf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "31df871b-1bff-4626-8c1a-75dc442796fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b95f45-8bf8-42ae-81f6-60b5a88bcbb5",
        "cursor": {
          "ref": "11042d04-0a92-44a8-bbcd-234e810364f3",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8d67fdae-f300-404b-9ae2-52b2e971286e"
        },
        "item": {
          "id": "e0b95f45-8bf8-42ae-81f6-60b5a88bcbb5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "75ee4a9d-f409-4c03-8b7c-bc08b9f0a783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a64d105-a738-4769-8990-5b2e125cc42e",
        "cursor": {
          "ref": "74a67c5f-b57c-43ae-810a-d821ca8a3d98",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ac399eb6-f7a8-47eb-ba36-7add1ed07f72"
        },
        "item": {
          "id": "5a64d105-a738-4769-8990-5b2e125cc42e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d254a3d3-202f-42b1-a934-dbd48e38f06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cce99a-3fb5-40cb-91c3-ab2195d30e22",
        "cursor": {
          "ref": "164de6f0-4de4-4155-86c7-ffeeb584b424",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "25536421-0cb2-4fb7-ad68-6366e5e3c03b"
        },
        "item": {
          "id": "55cce99a-3fb5-40cb-91c3-ab2195d30e22",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1c41d351-7bcc-4abb-95b7-80f488198d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79562b9-1fd6-4634-9af3-e7912fd1b5c9",
        "cursor": {
          "ref": "9459b3d7-c61a-4321-936f-1824cb552cf9",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f4b7918d-bc90-423d-ac07-c4ffafb02ddc"
        },
        "item": {
          "id": "b79562b9-1fd6-4634-9af3-e7912fd1b5c9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06d86e20-4f0c-4ba2-aa68-8cea22b8d311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9975b06-bb4e-4394-ac0b-3d9adc8bd796",
        "cursor": {
          "ref": "ae35866a-078e-4d6f-9e30-5d34ae6f2c2d",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0eb1c73f-941c-47ec-83f0-9d6159a7e62a"
        },
        "item": {
          "id": "f9975b06-bb4e-4394-ac0b-3d9adc8bd796",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "39530e14-fa3a-463f-86df-6c89f3617c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d1a4f9-9fac-4fe2-a121-8e3f1a175b92",
        "cursor": {
          "ref": "082c2b1a-fe38-46e2-bfd1-099703ac88e7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7b48a03c-9d82-4d0b-9c6e-41e9765dbf03"
        },
        "item": {
          "id": "92d1a4f9-9fac-4fe2-a121-8e3f1a175b92",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0b2af147-66cf-4cee-8603-9b5c675a0953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d4202d-0e67-4e38-81b2-aae179c16d5f",
        "cursor": {
          "ref": "f4dc11e5-a634-4ab4-be5c-a814d3c35ab6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f52b8dd9-5c82-4626-8415-693f06cc10d3"
        },
        "item": {
          "id": "55d4202d-0e67-4e38-81b2-aae179c16d5f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "36dd7253-af21-4b87-bd86-263c06398b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4f4d3c-5fa6-4a60-9b84-cf25754afa2c",
        "cursor": {
          "ref": "804cc594-1d8f-4e95-bfea-e698b8bc547b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "185f7402-9413-4ec7-ba31-ced058513781"
        },
        "item": {
          "id": "3f4f4d3c-5fa6-4a60-9b84-cf25754afa2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b599e06-08a6-45e8-8205-0ab7b6b69320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6be9ae6-06d3-4dff-959b-0b47377fa116",
        "cursor": {
          "ref": "e9046d9a-4922-4b6d-9c17-e58df8e5e55a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f4321756-fc80-4d7a-8d19-dd48fe30b807"
        },
        "item": {
          "id": "a6be9ae6-06d3-4dff-959b-0b47377fa116",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "820536ee-486b-4194-abe1-450d6fe28f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c587a7-e3c0-43a6-ac6b-d29952e4c91c",
        "cursor": {
          "ref": "bb6c5d41-3115-4147-b9ca-c60be36169d7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c611c9a1-1ba3-4293-881a-aebb7eead3f7"
        },
        "item": {
          "id": "68c587a7-e3c0-43a6-ac6b-d29952e4c91c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49b5f3c8-4fbe-4dc8-bc80-7e209902f20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba55027-ef78-4346-8bda-09c63435d7ad",
        "cursor": {
          "ref": "ccd16579-1e46-4368-a540-abebdd78a142",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e26148d5-8674-4c7d-b384-1e9f0574caf4"
        },
        "item": {
          "id": "bba55027-ef78-4346-8bda-09c63435d7ad",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7df8299-fff6-45be-aa89-88a1a23f60ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f333d-0fa8-4887-af0c-cce70e18a965",
        "cursor": {
          "ref": "9c2591ba-806b-4595-8c6c-5366828c5fb9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ca2f5afc-917e-49f7-a078-062a504df0a3"
        },
        "item": {
          "id": "845f333d-0fa8-4887-af0c-cce70e18a965",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c30fd86d-e0cf-41d1-b61d-9214bffdf1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e64fc4-f014-44c4-ba21-1e7a4d9f7a28",
        "cursor": {
          "ref": "b2f66a74-3721-4a3f-9bd5-3265a7f69d68",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3271026e-41bf-4a45-b6e8-300013c3afbb"
        },
        "item": {
          "id": "49e64fc4-f014-44c4-ba21-1e7a4d9f7a28",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "625730ac-2ad3-49cd-8880-46b732a46717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accfdbae-49b3-4551-a177-e7de459d5bff",
        "cursor": {
          "ref": "a1b72698-a11a-4462-b0da-f3c46d21a796",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a804345c-c864-4c98-b3f0-e632ebd2a1e6"
        },
        "item": {
          "id": "accfdbae-49b3-4551-a177-e7de459d5bff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "201aa841-da74-43f4-977b-708f482806d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd358b57-bc06-463d-b2eb-bd5ce60b20fb",
        "cursor": {
          "ref": "cfd48ebf-f62e-40a9-a673-0914bd16f637",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ee9c589-22d5-4ff2-933e-3658b55489ab"
        },
        "item": {
          "id": "bd358b57-bc06-463d-b2eb-bd5ce60b20fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cbb160e6-186d-4225-8dba-21510ef972c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a90e80f-8242-45e9-81a7-c7522770edd2",
        "cursor": {
          "ref": "57c1efa5-d0f2-4685-bb83-1f111725c698",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8cb3ebe2-a1c8-46af-bf0a-83dd6a6f3fe2"
        },
        "item": {
          "id": "8a90e80f-8242-45e9-81a7-c7522770edd2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9b72d179-3b5a-48bb-90c0-c32708a3a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a75dc5-fd2c-4dcf-a5dd-2ed9f8aeba01",
        "cursor": {
          "ref": "75d55724-1425-4fad-b534-20750244bf83",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9eb8aa42-9e6e-438c-8b14-86fe30deda16"
        },
        "item": {
          "id": "a4a75dc5-fd2c-4dcf-a5dd-2ed9f8aeba01",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "83c4cf94-2da4-4aa6-8473-110b15f4e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cdff9d-4a90-41c2-b991-c569950d1ce4",
        "cursor": {
          "ref": "f23d071f-1674-4052-88e0-97b44265301f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "efa8caa5-53ca-408c-9bcc-47e0e1d96a55"
        },
        "item": {
          "id": "08cdff9d-4a90-41c2-b991-c569950d1ce4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "597025b3-df98-4b54-b2c6-e54a0c0ceec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9ebff1-fd58-460f-bfa5-449b073fc4da",
        "cursor": {
          "ref": "6f8e9bab-8484-45b8-bb3d-39738428d378",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "afb586a3-1410-4961-acc7-458ffdf9ce9b"
        },
        "item": {
          "id": "5e9ebff1-fd58-460f-bfa5-449b073fc4da",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "84c5e721-860e-4ef8-89ac-910929021da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb00bd78-ae9f-4619-8ba3-9ae189e5046e",
        "cursor": {
          "ref": "dfe75211-4904-4a98-be2a-01873f8ad5c2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "13ca262a-9116-46b3-af1b-92a6436918ab"
        },
        "item": {
          "id": "fb00bd78-ae9f-4619-8ba3-9ae189e5046e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c1870082-3ab6-40f6-8420-d6102b8c6bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7325eb4-02a1-4d5a-ab91-ec942b859f73",
        "cursor": {
          "ref": "2ac207b5-2ac0-4569-a635-43a12ab58ba9",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2ddfe57b-6e00-4bb8-b200-9af4b4d2f5e0"
        },
        "item": {
          "id": "d7325eb4-02a1-4d5a-ab91-ec942b859f73",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "baaa389a-9329-421f-8a00-449ebf2ddd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd53f169-d1b5-4490-9bd7-bdda9230061f",
        "cursor": {
          "ref": "deb587e3-27f2-4124-a220-1bd0f9c23a7a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cd924649-6bb7-4889-8a84-00ec658ffde0"
        },
        "item": {
          "id": "fd53f169-d1b5-4490-9bd7-bdda9230061f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0a8713fe-1d69-4ce2-b8ef-97b87150578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feccf45a-6ed2-456a-be65-933ec43c0e6c",
        "cursor": {
          "ref": "4f837507-ccee-4089-b120-4881b8429f11",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8e7b7ff4-ed1a-4fd3-a87b-334e0e70bf95"
        },
        "item": {
          "id": "feccf45a-6ed2-456a-be65-933ec43c0e6c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "469a0607-bac3-42b6-9289-c9167ed1a6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc69ef8c-7077-45d5-8e33-fc069df812f1",
        "cursor": {
          "ref": "74da5e25-7e71-4480-a3ff-47c34f7054e8",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca455bdc-8a02-4ae5-b61a-3a05d35f05c3"
        },
        "item": {
          "id": "bc69ef8c-7077-45d5-8e33-fc069df812f1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "95d88778-87a6-4b15-9207-4aec7b30fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dfad1f-a026-4077-9481-649ae69cad05",
        "cursor": {
          "ref": "2adae5b7-cdec-4660-8ef3-234a4d08376b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a2b642b4-a837-4172-a9fb-e5625cd71f62"
        },
        "item": {
          "id": "21dfad1f-a026-4077-9481-649ae69cad05",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7ac1974c-0bb1-4da5-8f18-e20b389f95f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa50f4-6f50-4c0a-ab1e-3ba834b2002a",
        "cursor": {
          "ref": "e7db3ff5-77bf-47e3-b5b6-dc79d2c3f3ad",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6be33aae-1b5f-4583-b7f2-3186e20e1b37"
        },
        "item": {
          "id": "44aa50f4-6f50-4c0a-ab1e-3ba834b2002a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "814b5591-411a-4d9d-94be-fe648a8db46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0223d9e0-c546-4a5d-b75a-917a0a259c73",
        "cursor": {
          "ref": "fbc18481-7206-49a0-a33d-a5e079291941",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d06d205c-1630-4d66-82b7-f707da59accf"
        },
        "item": {
          "id": "0223d9e0-c546-4a5d-b75a-917a0a259c73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c3ad6bda-d0d2-4074-95e4-dd520321e0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6370b79-a3ed-44fd-b0af-80f8f002f54e",
        "cursor": {
          "ref": "6d9c234f-75bc-4df3-b547-67fbda6bed07",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "caef21b7-c7f3-45b5-a86e-9fe65e9f0d18"
        },
        "item": {
          "id": "a6370b79-a3ed-44fd-b0af-80f8f002f54e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28bac8e8-82c0-4838-838f-b1f00c24eaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c462c7-e5ba-4b81-81f4-47e2f0dc16e5",
        "cursor": {
          "ref": "a5ebdee0-9a44-49f9-9e21-14bd95493c76",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "819fb720-2df2-43e0-89c1-601ab153016e"
        },
        "item": {
          "id": "50c462c7-e5ba-4b81-81f4-47e2f0dc16e5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e1193500-fec4-41c8-b770-d46527cbe858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3a4b50-c5e2-4983-8449-9548dcf4ee23",
        "cursor": {
          "ref": "d14733ee-1c89-4919-813d-74c7d2bcc060",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f0218ab0-b727-4fa1-aa18-c3e49d09c0a2"
        },
        "item": {
          "id": "aa3a4b50-c5e2-4983-8449-9548dcf4ee23",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f1f84a7-e339-44dd-bd1d-7262e9b892b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c61fb5-f31f-4046-87c0-b62982944e6a",
        "cursor": {
          "ref": "f7cfdc42-2a4f-44d8-bb20-91a224ee9fad",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "05e23480-f248-4c39-9157-5cb42f5c40cb"
        },
        "item": {
          "id": "a6c61fb5-f31f-4046-87c0-b62982944e6a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "42ba53ca-9c2e-4635-a06c-c43e3ce78e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b02a2a-23c1-46d6-8dda-06e44ce8ed59",
        "cursor": {
          "ref": "ecd521a8-f1ca-4788-9b3f-5eb27d0b003f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f305340d-32e1-43a4-8711-e140b4732c13"
        },
        "item": {
          "id": "e6b02a2a-23c1-46d6-8dda-06e44ce8ed59",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3fb9d461-a24e-4ad9-a76a-c56e5118ede5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a004c6c0-a804-4be5-a85b-7ad0acd100aa",
        "cursor": {
          "ref": "49bb8f8b-c2d5-442f-b60f-d1c0ae1eb111",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f2b62757-e5e8-449d-965c-a835a953408e"
        },
        "item": {
          "id": "a004c6c0-a804-4be5-a85b-7ad0acd100aa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "19432da7-f664-4cd8-8063-a44febec5eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08d9042-8919-460f-b61c-659bf692ceae",
        "cursor": {
          "ref": "cd67e99b-3116-41ad-b5e1-b1a13a213c7e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dff1773b-cc39-48e2-ab62-0f0134462796"
        },
        "item": {
          "id": "f08d9042-8919-460f-b61c-659bf692ceae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c6ead0f9-bf88-4def-bf48-db44e54d9dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd164d5-84cc-4a30-9cce-1d79463a507a",
        "cursor": {
          "ref": "cd3e8186-0fff-42f2-bda6-6dcc59efc6f5",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4f070e38-1ba5-4115-b40a-77bef7f5d475"
        },
        "item": {
          "id": "5dd164d5-84cc-4a30-9cce-1d79463a507a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3c073841-d39a-4798-b2ea-0c5239335478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb9e062-ebab-4efd-b104-f15e3ce4ac20",
        "cursor": {
          "ref": "d0ef83e7-861e-4f13-8bb8-c56875f3251e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "79ba3b9a-bfe3-41a7-8bc8-997c9bc97eb4"
        },
        "item": {
          "id": "6bb9e062-ebab-4efd-b104-f15e3ce4ac20",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d6c48511-e26e-4831-9c92-c0e5079ed010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd926a5b-c2fb-4511-992c-5f0b79e4c74a",
        "cursor": {
          "ref": "d5af8a21-81cb-478b-8c76-477b7216a3fa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0ce420c9-2d60-4986-9b6a-7463a7288721"
        },
        "item": {
          "id": "dd926a5b-c2fb-4511-992c-5f0b79e4c74a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d9bb095-5779-4fa9-9ed3-3dde4c7fb853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a62e179-7d1f-49a8-af12-6341816d26a9",
        "cursor": {
          "ref": "e0b9ba29-b9cd-4088-b467-c51f9a8e1099",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b906bd07-bf59-4177-9323-a2c127f58b8d"
        },
        "item": {
          "id": "0a62e179-7d1f-49a8-af12-6341816d26a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4d19089e-7617-49e9-b7eb-12b116177417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8082ed53-fe29-4c09-890e-8d65509c31b5",
        "cursor": {
          "ref": "bd2b17ea-092a-4cd1-8502-a986f81b71d6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "66e72c56-6da8-4cac-a271-f90222565bef"
        },
        "item": {
          "id": "8082ed53-fe29-4c09-890e-8d65509c31b5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "14e526db-5ceb-4782-aa2b-dd12e3c8bb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda93270-7e17-49c2-8535-1fcf86bb9acc",
        "cursor": {
          "ref": "f69695a7-6861-45c7-8ec8-bb192d7a4695",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fe6cd2cb-6da4-4b50-b58a-cb5edb053d35"
        },
        "item": {
          "id": "bda93270-7e17-49c2-8535-1fcf86bb9acc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7788e336-825f-46b7-8492-7c19e88c35dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c43d2b-7439-408a-9a17-b88440d5fd68",
        "cursor": {
          "ref": "92bce70b-5cc8-4337-b7d0-1753e314f7ac",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ed3d34b2-386f-423a-9a68-7a01fdb27ee3"
        },
        "item": {
          "id": "a1c43d2b-7439-408a-9a17-b88440d5fd68",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4bd84981-ccdd-4596-9b1a-9c8f8c310d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9facba-6adc-474c-a8b4-01f1ddb46a37",
        "cursor": {
          "ref": "cc2d123d-57d0-445a-ac47-8683a6ad43a9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9fba9d9c-d38d-4480-bfb7-240d06707965"
        },
        "item": {
          "id": "db9facba-6adc-474c-a8b4-01f1ddb46a37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "266b77a2-4ff8-4579-895c-d8055030a4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d784eb9-d43c-48c7-9a71-358f4b294fcd",
        "cursor": {
          "ref": "266d8578-db71-46a6-a092-4cd94ee60e91",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "069bebd1-24c1-4f27-80e3-fec36abab789"
        },
        "item": {
          "id": "3d784eb9-d43c-48c7-9a71-358f4b294fcd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "26a8d291-a9a2-4df9-ae25-0aa93e1f538a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd621a03-6521-425d-9a0f-831090f81333",
        "cursor": {
          "ref": "f6c1445a-5f4a-4f2c-9961-763fca0f1ffe",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "13ce8d91-f0b4-4734-a72f-d9dd34d72462"
        },
        "item": {
          "id": "dd621a03-6521-425d-9a0f-831090f81333",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bab7ac58-ec36-4e1b-bdd2-05f793417579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af868a22-a166-4c0c-a4e2-63f91b231144",
        "cursor": {
          "ref": "2f87d9db-812d-4007-be09-8c795d172628",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "85998264-60f8-4d00-af3f-87de67f7aad9"
        },
        "item": {
          "id": "af868a22-a166-4c0c-a4e2-63f91b231144",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6b91aab6-3798-4fd3-b103-b83bfa8295d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9820135-537a-4663-81e6-71ea21009273",
        "cursor": {
          "ref": "94432505-d4a8-49fa-bd49-6f9cedfd25d8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "008884db-d420-4902-be3f-0d807ab9a329"
        },
        "item": {
          "id": "c9820135-537a-4663-81e6-71ea21009273",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "846181da-a4aa-4b28-9ff0-6ff1984fa9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04fe520-08e8-43ce-bb95-0641b2753603",
        "cursor": {
          "ref": "c15367d3-a897-4524-81d0-c84370fc6cb7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "071a29d2-4df6-4473-b965-8845e014d122"
        },
        "item": {
          "id": "c04fe520-08e8-43ce-bb95-0641b2753603",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fa8e485c-367d-454d-ac57-0106ec7c12b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3684e23-90dc-4349-bb03-07805176b1e1",
        "cursor": {
          "ref": "1f771736-b3c6-43ae-ada0-0972bddff9c4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1c4a3896-4c3f-4711-98c9-c9371b0be219"
        },
        "item": {
          "id": "e3684e23-90dc-4349-bb03-07805176b1e1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c8e18a96-1923-41e8-9c8b-887c24b6c6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d12985b-9814-4b36-b9ea-f193591c7a0f",
        "cursor": {
          "ref": "6aef0f76-6442-4ec0-8eb7-c0a9aaf79f26",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "600cbc77-e8db-40a8-95f1-894a506e2aae"
        },
        "item": {
          "id": "3d12985b-9814-4b36-b9ea-f193591c7a0f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0af5a003-cda1-4d6d-ad38-66b8d2172169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ce849-8b65-4c52-9606-62731dc0a589",
        "cursor": {
          "ref": "49f8727a-7808-4b68-a137-208382008e6c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "745eacfa-c9f1-4e02-931a-f6231592061c"
        },
        "item": {
          "id": "d68ce849-8b65-4c52-9606-62731dc0a589",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "69cea456-ffc9-497c-a628-180ba32afd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325f5e64-b26f-435a-8537-635524182e04",
        "cursor": {
          "ref": "fe4fb8a5-6c0d-442f-a788-787abcdaf9fe",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b1ffdfd2-4dcf-4634-8e3a-535f440665a8"
        },
        "item": {
          "id": "325f5e64-b26f-435a-8537-635524182e04",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d3901250-20e0-487d-8010-cd3abd434bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31b1132-d92e-4ab0-848d-13c3588b1acb",
        "cursor": {
          "ref": "6656f0c4-f31b-48b1-9b35-52180c66c4ec",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e189be6-e3f9-436a-89e7-8263d89d6ce6"
        },
        "item": {
          "id": "e31b1132-d92e-4ab0-848d-13c3588b1acb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "29395714-66a2-4d6a-b7fc-57b4ec7923ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c870acf4-868c-42a6-8427-93a2aa2e22da",
        "cursor": {
          "ref": "dd65bc73-fa2e-40cb-be6c-562da3b53a4b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3982e063-ba87-4b8c-b1fc-21c949cc9e8d"
        },
        "item": {
          "id": "c870acf4-868c-42a6-8427-93a2aa2e22da",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0926d4c9-55fe-46f8-9dc2-504363e38a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99aed1f-ea5d-4545-9f8c-7b92c1d2bee8",
        "cursor": {
          "ref": "b0388b6f-3ca8-4005-83c1-40d0d28b24c3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "858a38de-e74e-4767-a29d-041565bcd332"
        },
        "item": {
          "id": "c99aed1f-ea5d-4545-9f8c-7b92c1d2bee8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "78a82def-c367-457a-9103-0f826aa04de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26faaaab-65c9-43de-8917-49dada094e08",
        "cursor": {
          "ref": "cde0c31e-59ac-486b-808a-702472d8b1f5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bedfc0c6-e9ec-4dc2-9194-f8b114eb1ec4"
        },
        "item": {
          "id": "26faaaab-65c9-43de-8917-49dada094e08",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e7af1ccf-57b5-4113-b618-a029cc8fccd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971f8fc3-8987-4e5b-b63d-86f96fb505fe",
        "cursor": {
          "ref": "b4a24c08-a8e6-45ae-b69b-52daedbaa8ce",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "77edda19-9a35-4032-8a67-2c483a9274ae"
        },
        "item": {
          "id": "971f8fc3-8987-4e5b-b63d-86f96fb505fe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9a8cb19d-b59d-41ac-b670-7704e9720a9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b40bb2-3303-4a55-87e4-00d8a76e6b3b",
        "cursor": {
          "ref": "3f60ffbb-52f6-4626-bf2c-50748fac77a7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7c42cb4d-532b-496a-adce-8c18e0e2945b"
        },
        "item": {
          "id": "54b40bb2-3303-4a55-87e4-00d8a76e6b3b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b829f993-7cd0-4410-b83b-ece225a0e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62313065-2131-486a-9dde-6ccc407f37f4",
        "cursor": {
          "ref": "b69aa664-6b68-4356-a13c-3164f6e6caaf",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7eea4f2d-208c-4b2b-ba91-b86237532a97"
        },
        "item": {
          "id": "62313065-2131-486a-9dde-6ccc407f37f4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2b4842fb-b4db-404f-8a47-8e319c417645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3005423-9f4c-44a5-b287-1bf4022726cd",
        "cursor": {
          "ref": "376c5f60-38df-4517-b6f5-9daf9574b18d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acfa08c6-8f65-4ee8-acbd-7621ce194a62"
        },
        "item": {
          "id": "a3005423-9f4c-44a5-b287-1bf4022726cd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5fd42f3b-b214-4f7c-b06f-babc77c8e650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c0beb8-2317-4947-8281-bcd9003e177a",
        "cursor": {
          "ref": "2f653ff6-3a51-45f1-a1b2-e3331dfa4882",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "05fba80f-8489-4db8-8443-194d39ee020b"
        },
        "item": {
          "id": "a7c0beb8-2317-4947-8281-bcd9003e177a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a1e06267-319e-41b7-ada6-959224d3a671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a39cab6-d5cf-4f03-b012-bd19a5b4481c",
        "cursor": {
          "ref": "e2a2c808-4f8f-4184-b506-70c82808dfda",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e7239f51-c567-4729-ba1a-4a68914d125c"
        },
        "item": {
          "id": "6a39cab6-d5cf-4f03-b012-bd19a5b4481c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "12444ed5-e545-4695-8a46-9f7802f469e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ac34e5-5fed-4739-9a75-09e6d38f4244",
        "cursor": {
          "ref": "9cdaafbe-36a1-428a-8799-65dfdf575e07",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "15b57cee-65d1-4d7b-95c7-019c235bd217"
        },
        "item": {
          "id": "22ac34e5-5fed-4739-9a75-09e6d38f4244",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a9e5a160-a75a-4bee-8058-2284085b06f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b810f057-c3fc-44c4-8f47-5fbc31077569",
        "cursor": {
          "ref": "fb4ee23c-bc0d-4fd9-a3b3-1bad0231abe1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "11f2bc40-f7f6-4f3f-baab-d8c218a01670"
        },
        "item": {
          "id": "b810f057-c3fc-44c4-8f47-5fbc31077569",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "62b14506-0513-4506-b1b4-664e1555bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a486e55-a700-4e96-ba52-88d908c8bddc",
        "cursor": {
          "ref": "9d5f657f-a869-41fa-a0ff-11f403317749",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86f020a4-e24e-41b6-9dfb-1d20ba43203c"
        },
        "item": {
          "id": "9a486e55-a700-4e96-ba52-88d908c8bddc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "acaa79f0-ea54-4297-b054-91cd776d049f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbd33a2-1141-42f1-8321-33cfdcbf73c1",
        "cursor": {
          "ref": "ddb3ec8a-112a-4276-9b1e-458001a59863",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3a704dae-7228-4271-adac-fc73945446ac"
        },
        "item": {
          "id": "8bbd33a2-1141-42f1-8321-33cfdcbf73c1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "af60bd60-0486-4ec4-aab2-5ba44719836e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db031fe-856c-4f49-a45a-09bba6129730",
        "cursor": {
          "ref": "ffbeb16f-1f25-40c2-bb55-618224afbf8a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c35181c9-c504-4e98-821a-47df04456478"
        },
        "item": {
          "id": "9db031fe-856c-4f49-a45a-09bba6129730",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1e8f3254-a490-4fd3-9cc9-ff96b61e96bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff21df-d036-4850-a655-586dd206538c",
        "cursor": {
          "ref": "8a5b9942-ba88-419a-9433-7b0cc4a4e160",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "914b34d1-8972-4887-97a7-f5cbf81eb8f2"
        },
        "item": {
          "id": "62ff21df-d036-4850-a655-586dd206538c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "43c1ecfa-d899-46cd-bfd2-2a2a05227c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc0b0bd-b4aa-4011-adf7-a726ba21cabc",
        "cursor": {
          "ref": "8a3d841e-918f-4287-b6de-fd545fd4b91f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c0879bd5-b0fd-4f20-bdb0-97e23cdb5496"
        },
        "item": {
          "id": "3bc0b0bd-b4aa-4011-adf7-a726ba21cabc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "919735fa-fdaa-44b7-9fc3-e21f5df39524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b96cf9-651d-4a59-a3ee-12caca859631",
        "cursor": {
          "ref": "72b4995f-f521-4a5c-b542-2f8ef367f638",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b7d28e12-ecbf-4e32-b329-43c7ebeeb205"
        },
        "item": {
          "id": "72b96cf9-651d-4a59-a3ee-12caca859631",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2adebf83-779b-4326-8863-b64b9bcc512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e9d326-1aef-42e6-bc3b-33d03c5381f2",
        "cursor": {
          "ref": "22ca23d6-b901-404d-afd0-1c28d79e4682",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9080c908-4cae-464f-839d-7a406703ed2f"
        },
        "item": {
          "id": "28e9d326-1aef-42e6-bc3b-33d03c5381f2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d3a1c9ed-2b28-4e99-bb57-6d1c42416989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fbef8a-24a6-4c22-af2e-2e3e5c3692f2",
        "cursor": {
          "ref": "64b8d4d4-5c10-4e33-b9d7-5705c958af1a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c1e71fc8-e73d-4262-83a8-c82d789760b7"
        },
        "item": {
          "id": "50fbef8a-24a6-4c22-af2e-2e3e5c3692f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bfa489fa-86d8-47be-8da2-d9e4913eabb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6ffaf-1e98-4e34-b102-db7c78116360",
        "cursor": {
          "ref": "8eea45ce-b8aa-4811-b5a4-d48298ec0ec4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "70bd94a2-19ea-487e-aaa8-79b887b19307"
        },
        "item": {
          "id": "73f6ffaf-1e98-4e34-b102-db7c78116360",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2ef0359a-4384-4bec-8305-589ec03f4b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584e3bec-78b5-494d-9973-dadc0ce8055d",
        "cursor": {
          "ref": "f90687fa-0285-4e46-8546-37dd0110e063",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7b18f38e-c6f6-49d2-bddf-907c508828ac"
        },
        "item": {
          "id": "584e3bec-78b5-494d-9973-dadc0ce8055d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e46e0f1-058e-45b7-8b42-923bf05eb8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8500c847-3432-4fd3-8b0b-ebe3452e7883",
        "cursor": {
          "ref": "096ed2e7-f881-4ec4-a527-14843ab0bca5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "81423e8a-60a1-40d4-a434-4b4707600346"
        },
        "item": {
          "id": "8500c847-3432-4fd3-8b0b-ebe3452e7883",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "caf64e2d-dfd7-4501-b05c-aca8b3b24813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae1c0c5-3a78-4c41-b801-f8c23e248eca",
        "cursor": {
          "ref": "94057dd3-15a5-4b56-b9da-13f65a4a0249",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "68fe4861-ad24-415a-8904-a9e1723b6229"
        },
        "item": {
          "id": "eae1c0c5-3a78-4c41-b801-f8c23e248eca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "df353c69-32fc-480e-b8bb-efbd1315016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee697d56-8ff0-4d71-aacf-faa6117302df",
        "cursor": {
          "ref": "4b494f49-b41a-4d88-a06e-f8ab2900d840",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cbecb436-d636-4a94-9078-be8b0a7d19df"
        },
        "item": {
          "id": "ee697d56-8ff0-4d71-aacf-faa6117302df",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f660807c-3129-405a-8439-3d7e4d1d6d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bb6bf6-0905-41e2-93d6-b75cdb6cfc0d",
        "cursor": {
          "ref": "d61ece0c-733d-4dee-9587-ca45eaec1e34",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9cdce84f-ef39-44b3-b8ba-f35af3b72cce"
        },
        "item": {
          "id": "64bb6bf6-0905-41e2-93d6-b75cdb6cfc0d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f3cfcc7d-e2d7-47b9-92ed-9cd89b1110e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37451d05-5151-4651-a51f-d2fec0e3b491",
        "cursor": {
          "ref": "3d63f538-9f69-4a0b-a398-cb18ce814e88",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3936bae5-ca6d-48e6-8499-af8eab67521f"
        },
        "item": {
          "id": "37451d05-5151-4651-a51f-d2fec0e3b491",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "52fe5fe1-236c-4220-9bb1-3ecfc217fff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb9535b-7b74-4e31-9584-11a1bc487bc0",
        "cursor": {
          "ref": "79cc3e68-b583-464b-a1e8-7e757d9b8c6c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1619a09d-3996-400d-b16d-ebbc129f2210"
        },
        "item": {
          "id": "feb9535b-7b74-4e31-9584-11a1bc487bc0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eec2304b-012c-4fec-a786-be9390a78eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb5de9f-029d-4bf9-9b9f-d5b8d088ae5e",
        "cursor": {
          "ref": "131c2cb9-4e8e-4832-a751-219e645fa693",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "10d362b1-1631-41ff-a0e4-767a8bdd8c55"
        },
        "item": {
          "id": "9eb5de9f-029d-4bf9-9b9f-d5b8d088ae5e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7b1b00ea-291a-49de-9d73-001d40879c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1820167-a73c-42d5-95fe-40e52ae70b20",
        "cursor": {
          "ref": "707ad6ae-1658-4057-9de1-0cf0e801a018",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "20351fbb-c5b9-422b-a5ed-ddc664cc4c0e"
        },
        "item": {
          "id": "b1820167-a73c-42d5-95fe-40e52ae70b20",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "be33c834-8124-4e19-ae51-23c7843a79e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23988784-d897-4c09-a524-7dd3640b6581",
        "cursor": {
          "ref": "605c71eb-2cfa-47f0-8eba-fe62dc610866",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4eaf821a-5173-416e-99b0-9e5d73f473cf"
        },
        "item": {
          "id": "23988784-d897-4c09-a524-7dd3640b6581",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cac3e61f-8af6-49a8-a34b-1737c2566812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7494ee84-2baa-4c70-9107-d4b57c4eae21",
        "cursor": {
          "ref": "3f37763f-5786-487f-b167-645f2e22ef9a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ef1ada14-4744-4fad-8677-132aa75a8faa"
        },
        "item": {
          "id": "7494ee84-2baa-4c70-9107-d4b57c4eae21",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b47f368f-5719-441c-9605-1830ba9b0652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0c125d-15f3-4063-963f-1f5ea1be1c5b",
        "cursor": {
          "ref": "333b5ecd-3b09-4563-8856-4dea9f1e95a2",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9dbecd55-ee04-4446-ab13-4626de10769b"
        },
        "item": {
          "id": "da0c125d-15f3-4063-963f-1f5ea1be1c5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82a1c327-f67b-4661-a9e6-f6af4c12943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d033e5c-8bec-4ed1-9ca2-f1151857282a",
        "cursor": {
          "ref": "fd20a159-749a-4162-a1e3-38e2ef3a1fcd",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0fd7fc45-145b-4a8e-8f80-efc37d73b388"
        },
        "item": {
          "id": "5d033e5c-8bec-4ed1-9ca2-f1151857282a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5405584c-35a1-4426-b2b4-0b204cb24933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4dd2e3-7fc9-4b64-ab74-facb9bfae967",
        "cursor": {
          "ref": "8e6d03da-c6a7-47d3-9bb1-a32bdba17eb8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3e9b3577-dea9-4914-a88f-ebeca41e8c2b"
        },
        "item": {
          "id": "ec4dd2e3-7fc9-4b64-ab74-facb9bfae967",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d1f43b27-f713-466b-8878-a946dd21e6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5130d3c0-fde0-4248-8c55-24bb93736a12",
        "cursor": {
          "ref": "d419e5c0-6123-4336-8053-e15678b8a887",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "817db558-d098-4ab5-afb2-bfd34708c33b"
        },
        "item": {
          "id": "5130d3c0-fde0-4248-8c55-24bb93736a12",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "067d4fdf-58bf-4cc3-82d2-d9909458ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8d0a5b-9674-4484-9838-c5ddd9f7d142",
        "cursor": {
          "ref": "9649e8e9-6e94-4d2d-8889-43b073ff76f9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4c65a0ba-fa2e-4016-8e79-abd3c399ecec"
        },
        "item": {
          "id": "3e8d0a5b-9674-4484-9838-c5ddd9f7d142",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "68874590-8d0d-4947-86be-151f31b82793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3488aad3-2097-4a33-820a-9a1ab8a10c32",
        "cursor": {
          "ref": "54c00624-50cf-4a21-8242-21a9ab0dcb00",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7782d766-69bc-41db-ba61-804778b0f625"
        },
        "item": {
          "id": "3488aad3-2097-4a33-820a-9a1ab8a10c32",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "00a841fb-bef4-4718-b800-628fe9c4a053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9164fa-5cdb-4f03-8c79-3141b4dbb3e3",
        "cursor": {
          "ref": "b80934b0-d488-46bf-8d04-71388aa5d06d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3c671e75-f752-4901-89a2-fd3d5f291d88"
        },
        "item": {
          "id": "ae9164fa-5cdb-4f03-8c79-3141b4dbb3e3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6063425b-3f4b-4219-825d-750d170835cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d695d-799b-415d-a3fe-b38e35c806f5",
        "cursor": {
          "ref": "f48b140f-d0ff-471c-a61a-097b119ed87b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a8563d47-857b-4b38-b173-18bef443beda"
        },
        "item": {
          "id": "541d695d-799b-415d-a3fe-b38e35c806f5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "656eb34a-ec3a-4d5d-8b7d-9f6d5003f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82cce3e-ef0c-4f00-b50e-ae4fd921b6ba",
        "cursor": {
          "ref": "65b3f6f4-841c-4e9f-b4f5-5854eca6553e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b2d8df90-49cb-4b38-b0f0-d32120a59699"
        },
        "item": {
          "id": "e82cce3e-ef0c-4f00-b50e-ae4fd921b6ba",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "76b39fe9-8630-43c9-a990-b6332541a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a68c6ef-023b-4a8d-a2f7-622043497b06",
        "cursor": {
          "ref": "bf54ca01-391a-491c-8fec-cbac9237733c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "713f2145-aa0c-41e1-9714-e7c1091f2d0a"
        },
        "item": {
          "id": "6a68c6ef-023b-4a8d-a2f7-622043497b06",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f9f3ee8b-23bd-4a4e-9260-b85ff5e529c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46137e03-ac1d-4103-b4b1-f8f55cd6d5aa",
        "cursor": {
          "ref": "28a2bc81-b97d-4f61-b500-b668c81b113d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "543f8a4d-25ab-416f-8730-2d0eca578be2"
        },
        "item": {
          "id": "46137e03-ac1d-4103-b4b1-f8f55cd6d5aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "015d1fb5-3952-497b-974e-7c8292bfe781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569fa8f-26c4-48b6-ab4e-f376ee8592ae",
        "cursor": {
          "ref": "6cc934e5-b8e3-432c-9b8e-7ab980079bb1",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b0c632a1-b682-45b4-a7f5-4a519c3f9ad6"
        },
        "item": {
          "id": "9569fa8f-26c4-48b6-ab4e-f376ee8592ae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8670832c-59ec-421d-80ee-067475593d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc89d88f-ee7c-47f3-9aa5-2c43461851fb",
        "cursor": {
          "ref": "58bfe7bf-2866-4152-98cf-5ecc646764c6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "604e2b46-bcc3-48cb-a03f-dbeef77f30ae"
        },
        "item": {
          "id": "cc89d88f-ee7c-47f3-9aa5-2c43461851fb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c37d9bd-59a7-4b34-b8c0-d0cad3f11d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee8c3c3-5369-4bdb-b69b-5cfb2ab2bda4",
        "cursor": {
          "ref": "738751ac-2126-439a-abbe-7df341c92a9a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5bd5ef9-c1aa-4136-b996-a1d42d2c0fb0"
        },
        "item": {
          "id": "fee8c3c3-5369-4bdb-b69b-5cfb2ab2bda4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee1bfdcd-7fe4-485c-9db7-e4d52b4631a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f817f772-a720-4cc2-9f82-ca11f4d108f2",
        "cursor": {
          "ref": "2a0e39c8-beb3-4252-ba10-3df8f5b22926",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "58d49dd0-de63-4a4c-8a63-4523987bbb13"
        },
        "item": {
          "id": "f817f772-a720-4cc2-9f82-ca11f4d108f2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1c4e2cec-0d46-4f62-953d-73229fbd68f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dd4630-abec-4699-a091-0e586146ac62",
        "cursor": {
          "ref": "fbc0fd9d-95b6-4633-8e70-2a21f99e948f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d25295a5-c00d-43ff-8e40-a23668cd9d43"
        },
        "item": {
          "id": "b0dd4630-abec-4699-a091-0e586146ac62",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e87d056b-2805-44a3-9033-69e4548fa4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e21a6db-ac6d-490a-b435-d7f6dad527a1",
        "cursor": {
          "ref": "3700500e-aefc-4d78-87a6-982991a84e6a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4c535edb-9139-49aa-b3b7-2f0152e56b7e"
        },
        "item": {
          "id": "2e21a6db-ac6d-490a-b435-d7f6dad527a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02f70993-1dcb-4f86-83aa-830e1a93af44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e914ee-8ff5-4231-954d-df17d8120bb4",
        "cursor": {
          "ref": "7147440c-1604-4cb9-b6e7-47e0c2dd3a50",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5c7465eb-7ccc-41e2-a68b-0be191f01a9a"
        },
        "item": {
          "id": "52e914ee-8ff5-4231-954d-df17d8120bb4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e1dac16c-6234-4814-b184-ed000fd49512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1171ff91-372d-47c9-99d2-037b06a727cc",
        "cursor": {
          "ref": "91edb4df-09c3-4167-9fd7-57b429ce0c4f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8d73fa4e-9b33-4585-9e89-6da9f991deb8"
        },
        "item": {
          "id": "1171ff91-372d-47c9-99d2-037b06a727cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9bd5f970-accb-4201-bac7-50c5ab3112ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9562756-e7f1-4e9d-9dad-7a9827aac661",
        "cursor": {
          "ref": "11abda23-83f6-43a7-92ce-03151f74e3b6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "40b9cb65-28ad-427b-a81e-f48ba0db47bd"
        },
        "item": {
          "id": "c9562756-e7f1-4e9d-9dad-7a9827aac661",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "25209885-d9a4-46a0-8492-167239fd1a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6241f7-5b34-4846-8ada-0adc0b87e892",
        "cursor": {
          "ref": "c737dba2-7812-4ba3-add7-cc60f63c0f0e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "28c1245d-26cf-470b-95dd-44b6afe99edd"
        },
        "item": {
          "id": "3f6241f7-5b34-4846-8ada-0adc0b87e892",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1b26277-b818-4933-8275-42988957b80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486fc3a1-b64e-4391-a48b-3dc7937e4fbc",
        "cursor": {
          "ref": "b7f1e28d-432e-4d38-b456-f6a7dc4cbd6f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c11c4eaa-022c-4841-b91a-bcd635f59398"
        },
        "item": {
          "id": "486fc3a1-b64e-4391-a48b-3dc7937e4fbc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fabff582-3c11-44dd-98e8-408fd9bab30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ff7f3-d5e1-483b-aee2-369292d433e3",
        "cursor": {
          "ref": "414426f0-fe81-4572-92d0-0a93b1541613",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "62925f46-8dbf-4338-96cf-cb03a9c941b7"
        },
        "item": {
          "id": "0b1ff7f3-d5e1-483b-aee2-369292d433e3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "32e8a10e-1a42-4367-91af-c064e8fe36cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b64043-fa6a-403a-9e9b-1719ce785917",
        "cursor": {
          "ref": "8a6c189d-d290-4591-871d-8f81108d8d8d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d2ade09a-2f04-41cc-86bf-21dc7c106ec9"
        },
        "item": {
          "id": "94b64043-fa6a-403a-9e9b-1719ce785917",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2323172a-ef60-4662-89b3-d671f556e1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522af776-e09c-4139-b0f4-677bd9b7c9a5",
        "cursor": {
          "ref": "934f0350-cedb-4810-bcf0-d5af1ff4ad53",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "438f6ba0-92ed-41a3-87c0-90cedba2ea06"
        },
        "item": {
          "id": "522af776-e09c-4139-b0f4-677bd9b7c9a5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "14efdf29-fa5f-4d22-82cc-b3c7f33d7659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546dc0a8-67c7-49ce-b9d1-8bfdf5278076",
        "cursor": {
          "ref": "178cbf45-8f97-4f2c-9719-8a73da897a50",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "db761a1d-a727-47f2-92d3-8b147aefd0f4"
        },
        "item": {
          "id": "546dc0a8-67c7-49ce-b9d1-8bfdf5278076",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eee35c8a-52c7-4e25-b81d-bb4fc9db186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ccb859-7928-431d-ac84-15bf3d0ad709",
        "cursor": {
          "ref": "424beee6-5f43-429f-b3e7-c57cc53147e8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2b5b30f5-f7a8-42f2-a9f8-a23ae967a815"
        },
        "item": {
          "id": "70ccb859-7928-431d-ac84-15bf3d0ad709",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d41b3fc3-0d97-41d1-a792-58b993bffef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94285967-d329-4dcf-9901-f29ca3d5c8de",
        "cursor": {
          "ref": "37adb98c-f1b9-4cfd-95c9-5a9afeb8ed43",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9d4e48c6-521c-493d-815a-4c094fb3d1a0"
        },
        "item": {
          "id": "94285967-d329-4dcf-9901-f29ca3d5c8de",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2c25d4c8-a3a6-4d57-bfe2-9c0b64f629ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1a2ac7-c7e3-4be2-95d6-87a492e5674f",
        "cursor": {
          "ref": "bd4b2aa2-98a5-43bd-8be6-9d7834aeb1e1",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c2cffd3c-3f91-4daa-b219-10c2ab4843fa"
        },
        "item": {
          "id": "cd1a2ac7-c7e3-4be2-95d6-87a492e5674f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f098ff7-912d-416f-bcc4-b64d3d41f4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5361052-505d-462e-acb9-13eea1fe59ab",
        "cursor": {
          "ref": "e09e9d57-3d06-4a01-b483-e303b1fadf1e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "23cfc40d-db3d-4193-961a-96528adad3d0"
        },
        "item": {
          "id": "e5361052-505d-462e-acb9-13eea1fe59ab",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1281d813-1ba2-4f3f-818c-97f74a8e15ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc075fba-9de3-497e-a302-deb86839f380",
        "cursor": {
          "ref": "e1267dbb-492b-40fe-a29b-76f27b9f4841",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "60274ba5-d0ab-44cf-81e7-81c8e4809442"
        },
        "item": {
          "id": "bc075fba-9de3-497e-a302-deb86839f380",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b7926db5-003e-4fa9-8305-9f70f6374e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c06a7c-52e3-445f-9137-10e59d228121",
        "cursor": {
          "ref": "5461d2cd-db9a-4db6-8f01-dc07d5fd2cc1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eccaef44-9f2c-4d39-9a1f-2de071745bdc"
        },
        "item": {
          "id": "f2c06a7c-52e3-445f-9137-10e59d228121",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c3d9600d-5cb9-487d-aba6-2ee554d60d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0e590c-27ff-4858-bf01-1ac4f5fae5e8",
        "cursor": {
          "ref": "5b17b649-bb5b-4a88-95f5-92272dd22c12",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4dc7af93-674c-48a4-8f05-9ceb9d5a5fe4"
        },
        "item": {
          "id": "4d0e590c-27ff-4858-bf01-1ac4f5fae5e8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "58a85f66-069d-426b-8ada-ce5b93ab12de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43eb11ba-e13c-423d-8922-369f44cb80f6",
        "cursor": {
          "ref": "b821e6b4-8c56-41e6-92ff-2a5603b69fa0",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dbdb5226-832e-458b-90b6-268dd40c3784"
        },
        "item": {
          "id": "43eb11ba-e13c-423d-8922-369f44cb80f6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2e91e98-76e8-4662-a1d5-a6ce97fd5e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c64cb3f-f54c-4190-aac1-9763f4eeb449",
        "cursor": {
          "ref": "1d22d281-82a3-41f9-be6a-0eca91b4d24f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "081bed7b-03ac-4d91-9ddc-e7971fb3860c"
        },
        "item": {
          "id": "6c64cb3f-f54c-4190-aac1-9763f4eeb449",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac78c317-9a0b-4705-b130-3c8d1391613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78d40d7-7d72-418c-a129-a7584fd79d9a",
        "cursor": {
          "ref": "b585d6fe-ba32-4ead-8c2f-15444388d65e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f3b8e20-7d5a-47e8-b59f-6c3ed975a340"
        },
        "item": {
          "id": "c78d40d7-7d72-418c-a129-a7584fd79d9a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0fb749c7-53bc-4b44-9a0b-0015f6feb5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c73ef5-569a-4ca4-be5b-3d64a78f92ab",
        "cursor": {
          "ref": "95e7a687-85a2-4c91-b98b-85128ad2f48a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "baf0b3b9-a46d-4f78-ade1-17ad213f79a3"
        },
        "item": {
          "id": "89c73ef5-569a-4ca4-be5b-3d64a78f92ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e7c47a1c-915d-4c79-804b-ec41bb6c2867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947e8987-db25-4a88-a816-30bd94ce95ce",
        "cursor": {
          "ref": "053694dc-b0f5-4632-a53b-8d4ecaa4fbbe",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f00f4682-e067-422a-9102-62ec92980634"
        },
        "item": {
          "id": "947e8987-db25-4a88-a816-30bd94ce95ce",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b0ca1b92-59dd-40eb-af4d-94bfab4489f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcad66c-38d7-4ab1-a22b-72a2387ee83d",
        "cursor": {
          "ref": "48fa1b59-65e6-42d1-8495-9bd087c44624",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fb5ebbbf-7fa9-4899-b14d-8e5cb278b9b6"
        },
        "item": {
          "id": "5dcad66c-38d7-4ab1-a22b-72a2387ee83d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "51ffb5e9-f4f0-4b93-8602-a3696d44eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e7347-62e3-4edd-b8f4-24fcba0c240c",
        "cursor": {
          "ref": "2a2b2121-993d-4714-a029-6a9a92661489",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f71af5fa-165d-41af-8c35-43cc218ef4df"
        },
        "item": {
          "id": "204e7347-62e3-4edd-b8f4-24fcba0c240c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "178c6949-bb1c-4258-95c7-4887793ce0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9342916-9e51-4334-a4ed-b6094289a2db",
        "cursor": {
          "ref": "3adf0d83-4dd4-4aaf-a895-e22af9120d3e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "75303d19-4c84-42d5-8dd9-ef2cba031dc9"
        },
        "item": {
          "id": "e9342916-9e51-4334-a4ed-b6094289a2db",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6d5dca8d-0bd1-4973-b980-29948805573a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e3ebbb-9e5a-4a26-8dc7-b59840a7b97e",
        "cursor": {
          "ref": "2da93e3b-4e25-4f97-8f43-05a289fd231f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04e5dd28-c4be-4641-9050-9a62d4d6f6a2"
        },
        "item": {
          "id": "32e3ebbb-9e5a-4a26-8dc7-b59840a7b97e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9532714d-dfa8-4d19-9608-671a817721ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa41acbe-42c5-4309-9e1a-1b65accde09c",
        "cursor": {
          "ref": "8525ca30-cde8-44f3-8900-b877124d6759",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cbe2c42c-d075-44ed-8891-5708e95e1b70"
        },
        "item": {
          "id": "fa41acbe-42c5-4309-9e1a-1b65accde09c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "48b501ad-4b93-4e4d-8d3f-c52bc82ec9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddde2e0-aef2-4279-a3dc-9620c4d76d54",
        "cursor": {
          "ref": "9094e27c-f673-432f-8cd9-5ad97f4431d8",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "15f0c4c0-2915-4622-9ea9-f3cf3d394a6c"
        },
        "item": {
          "id": "2ddde2e0-aef2-4279-a3dc-9620c4d76d54",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ca453796-1bdf-40fa-abc1-b51cfb80f171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed8665-d134-40f7-897e-3ab1da2d142e",
        "cursor": {
          "ref": "7d737048-f5bb-44ac-bf8b-e25f938a994f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "044f1cf9-dde2-4274-b7c3-7d8e95200fb3"
        },
        "item": {
          "id": "12ed8665-d134-40f7-897e-3ab1da2d142e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e4af4caf-59b7-4ccc-9d50-10da966da3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008ee2d0-2c3d-4025-8dea-e0a78e54e251",
        "cursor": {
          "ref": "500ab81e-952e-4cb7-815a-fce062173f79",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ff6bb21e-8c30-4750-8acb-0f22d330b559"
        },
        "item": {
          "id": "008ee2d0-2c3d-4025-8dea-e0a78e54e251",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "df36c225-4620-4086-b919-5c62d820538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917a7e8f-56d0-45f0-87cc-8850f4b8d861",
        "cursor": {
          "ref": "662ecce7-73fe-4834-8143-d635e415c8ce",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "df20ffde-10e6-434b-bcaa-96a771e9ebda"
        },
        "item": {
          "id": "917a7e8f-56d0-45f0-87cc-8850f4b8d861",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "62e0701a-8e40-4168-a16e-3d530db56daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a192a-d295-4cad-9d81-fc10875f1f32",
        "cursor": {
          "ref": "4db6d401-f768-48de-9683-709901f0403f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d079bc65-f7b3-47af-a1d4-e3babcbeba9c"
        },
        "item": {
          "id": "b44a192a-d295-4cad-9d81-fc10875f1f32",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b671d210-4725-402d-9dca-c1869f96db5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5855599a-e28b-452a-ace1-e8292d929254",
        "cursor": {
          "ref": "6b70347a-4080-4ce8-8f59-a6411a6e557a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1de515e3-b866-412f-8209-306aaa877e09"
        },
        "item": {
          "id": "5855599a-e28b-452a-ace1-e8292d929254",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b45f340-3de1-4890-9acc-a415efb55a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1167bbfb-df0d-42a9-8100-ff4d39d28e21",
        "cursor": {
          "ref": "5674d045-ca88-43c1-83ba-d13e0f259c33",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8a1c0864-f405-402e-9653-67203415565f"
        },
        "item": {
          "id": "1167bbfb-df0d-42a9-8100-ff4d39d28e21",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e247b630-24f5-4755-8917-fb4fd1a83f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d54fdcc-26a0-4c5e-93ac-22b13aa64799",
        "cursor": {
          "ref": "ba61485c-d8e4-47b6-bd73-aeca92323158",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "74d1c053-cc93-43c6-bb46-3a42578ebfce"
        },
        "item": {
          "id": "2d54fdcc-26a0-4c5e-93ac-22b13aa64799",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "61fd61e0-e53e-456e-8545-95e4f7d79fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f52bfb-849b-4676-be99-99aa29084257",
        "cursor": {
          "ref": "6a71451e-11f7-443b-8fb4-dc914409f78f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a8186f9e-3163-4dc3-80f6-91f554651244"
        },
        "item": {
          "id": "73f52bfb-849b-4676-be99-99aa29084257",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "13fcd2a3-6d52-4059-98c3-233b555d4e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a290f-f6e3-4c7f-bf79-43b4b30df7a1",
        "cursor": {
          "ref": "b932d5c8-4409-4136-a70c-57629fefead5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "71c66ee6-beb3-423b-bd33-924b09d0e078"
        },
        "item": {
          "id": "355a290f-f6e3-4c7f-bf79-43b4b30df7a1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "62f9d5cd-bf8a-4675-b240-987ecb73c398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3765d8-ee32-46d1-a0f3-39142388e0b7",
        "cursor": {
          "ref": "03c4fff9-22a6-4eca-a319-c583d98a249b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "63ff9d9e-3c0b-4f22-a90f-bdec13d06a17"
        },
        "item": {
          "id": "7c3765d8-ee32-46d1-a0f3-39142388e0b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d8642c08-44fc-487f-b8e3-3eaff496e03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e7f43e-d418-4efe-8d84-b8b993e26f7b",
        "cursor": {
          "ref": "c56f487c-d921-424a-943d-5fb3389e3946",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f40f3831-1da4-462a-ad2d-57458c70b19e"
        },
        "item": {
          "id": "f0e7f43e-d418-4efe-8d84-b8b993e26f7b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "29fea98c-dbe1-4d7e-b8c8-937b969a7a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22747011-c032-4775-98e9-9c32e0493b75",
        "cursor": {
          "ref": "f70016b7-757b-47d5-b142-0524deb0b351",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "30207e24-d016-4b84-a10b-dc3d45f5fb1f"
        },
        "item": {
          "id": "22747011-c032-4775-98e9-9c32e0493b75",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7a609539-065c-4f52-bb94-a6d5cf3a8ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045065e1-1cb5-4549-9e5a-a420a998ecae",
        "cursor": {
          "ref": "41526974-7bae-409e-89c9-ff5f0f0a552c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a4c1be73-0e8d-4fa7-83aa-6801452f64c9"
        },
        "item": {
          "id": "045065e1-1cb5-4549-9e5a-a420a998ecae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2b135626-932a-42e2-b8e1-45e369bc2969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae9acf6-8715-4b4d-9626-b9926de78128",
        "cursor": {
          "ref": "1962462f-1eb5-4171-b945-106997e877fc",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8a9d5a6c-0bdd-478b-9eba-13f4b8c29b79"
        },
        "item": {
          "id": "fae9acf6-8715-4b4d-9626-b9926de78128",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d328c88d-d0ca-4710-9a51-d5f8fe4fcaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bd3584-f8c3-478a-a3c5-e1ddeca7fcd9",
        "cursor": {
          "ref": "6c5c56fc-d4fd-4e3a-a1fe-d42ad7cdb40a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9e67b831-665d-4e04-aa4d-d156af47bde6"
        },
        "item": {
          "id": "e0bd3584-f8c3-478a-a3c5-e1ddeca7fcd9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "40f9929f-35f8-4e4d-a883-6fa09cf9bbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de28b8d9-177b-4088-af0d-13a3a7d29cbc",
        "cursor": {
          "ref": "1cfd5e38-ec11-4ff0-b430-6a41538f743d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d98c7690-9c94-4d64-b744-a91ac918da51"
        },
        "item": {
          "id": "de28b8d9-177b-4088-af0d-13a3a7d29cbc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b21b0768-5fd4-4771-bc03-2c23618fa0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd49616-c932-41e3-b1a4-ac3c8ebc8478",
        "cursor": {
          "ref": "be0922a7-0d3f-49e8-8762-e0be34625c65",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2f666fba-7bdf-406b-a37a-ca88c6ce50ef"
        },
        "item": {
          "id": "4cd49616-c932-41e3-b1a4-ac3c8ebc8478",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d3f816b2-f845-4370-beeb-a1b220e70473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a607c1-1dc5-4957-9a7f-e0b170465af3",
        "cursor": {
          "ref": "68258f45-de68-44e4-b3c2-c6dd71401cca",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "270a3940-44ee-4d6f-a301-292725bcd210"
        },
        "item": {
          "id": "c2a607c1-1dc5-4957-9a7f-e0b170465af3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab3ad66d-91a7-4f05-bfd6-8bd75925d3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c06885e-65c8-41fe-b339-72fbb98639f6",
        "cursor": {
          "ref": "8ad22bcf-c88f-4c87-8221-7431481a9b07",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "32e78794-2833-4f01-852f-133ac48c472f"
        },
        "item": {
          "id": "0c06885e-65c8-41fe-b339-72fbb98639f6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e29bd609-9a54-4c94-b21c-9be9a3cd9d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afca3be2-dc4e-4730-a96d-202d1f20e0c7",
        "cursor": {
          "ref": "f1a183b4-2db5-4a6d-a70b-73667d80a1e7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4992e215-0921-43ed-8480-a1ec46bfcdd3"
        },
        "item": {
          "id": "afca3be2-dc4e-4730-a96d-202d1f20e0c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "406b2f49-0dee-4dd8-8653-ec83e6cbb529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8fecf2-27a1-40ee-b1dd-d6435e9f30c0",
        "cursor": {
          "ref": "b0df0407-b73d-4dc4-beeb-f787fe2a5cc8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6c2f3a43-b619-4089-a4ba-d91109731a77"
        },
        "item": {
          "id": "9b8fecf2-27a1-40ee-b1dd-d6435e9f30c0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a3db2372-9beb-40ad-bb6f-fb89360ec849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53129fc-b81a-4edf-983e-4e560c445329",
        "cursor": {
          "ref": "b7b1f64f-bf00-45fb-95bc-c0dd5e073a13",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d6621d8e-b1af-4036-bfe8-d75e7b00ac25"
        },
        "item": {
          "id": "b53129fc-b81a-4edf-983e-4e560c445329",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b8036dc8-bec9-45ff-bc80-e9dbe8ec6db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4d3abe-4c37-448b-b396-5da5aad96ea3",
        "cursor": {
          "ref": "f5ca2fb9-2e98-4eae-b91e-e35b91e2ea30",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "71596379-a382-4c2f-a9a8-7485dcff3029"
        },
        "item": {
          "id": "ee4d3abe-4c37-448b-b396-5da5aad96ea3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15472dd9-f8a3-4344-989e-bb3c16a66783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04befe8a-6ee0-4981-ba5b-e7572325d887",
        "cursor": {
          "ref": "50138de2-0c9f-4747-8153-533de861e453",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f1c91587-a8e6-4a72-a425-a8f4659e0a31"
        },
        "item": {
          "id": "04befe8a-6ee0-4981-ba5b-e7572325d887",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c22c6535-228a-428a-a425-9aa3e0d6e33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a011fca-5efc-4b8b-8f3c-149f1252a7f4",
        "cursor": {
          "ref": "e5f9a8ca-e265-41fb-bbb7-3cdbc35fe37e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f113b794-95c1-4617-8827-0ae4ab58c51f"
        },
        "item": {
          "id": "4a011fca-5efc-4b8b-8f3c-149f1252a7f4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "10c41fa0-bb9f-4d98-8365-f61d84247de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c785eb1-7606-42d2-a09a-b4ebe2918824",
        "cursor": {
          "ref": "2dc01cba-0a7b-4866-ae6f-b0bc2e69c79c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1ccc6929-e897-4194-9399-3b6e032d8c21"
        },
        "item": {
          "id": "0c785eb1-7606-42d2-a09a-b4ebe2918824",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f0bac43d-ebc3-4659-987f-c17b28bdab27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0b04a9-3d68-42c1-af76-383324d8126b",
        "cursor": {
          "ref": "be95ae69-a820-4a61-a6d2-5f656ae55d80",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "24f5904a-5312-4b20-84eb-4057489c6e73"
        },
        "item": {
          "id": "8c0b04a9-3d68-42c1-af76-383324d8126b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cf681f6e-dbf0-4361-b565-1c9a5bd8332c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3eb918-9fac-459b-96f1-9ddb251a2738",
        "cursor": {
          "ref": "0e4181b1-ab47-4a38-8bf0-14d3d66c498f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ef6befed-43c9-4541-8b09-6286477ae50a"
        },
        "item": {
          "id": "0a3eb918-9fac-459b-96f1-9ddb251a2738",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "df22173e-d54f-4d3b-ad52-1bc60b3aa37e",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "19db2191-f998-43a5-a143-d27c0c6e5b93",
        "cursor": {
          "ref": "742572fe-5eaa-499f-aa06-24eed4aa0fcd",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c39ba3ab-4adb-4f66-9bd8-27f8c55b067d"
        },
        "item": {
          "id": "19db2191-f998-43a5-a143-d27c0c6e5b93",
          "name": "credentials_verify"
        },
        "response": {
          "id": "50336ba0-729c-4209-aad7-129a858f5026",
          "status": "OK",
          "code": 200,
          "responseTime": 1948,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "510b33a9-4b3a-459f-bd0c-8b32618c6008",
        "cursor": {
          "ref": "e3e02807-a777-47d3-b17d-7d5750b2bfe1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c698f62b-05c8-4adb-a654-95f11bc03ad4"
        },
        "item": {
          "id": "510b33a9-4b3a-459f-bd0c-8b32618c6008",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "607ce833-d444-4139-a73a-f5a97173edfb",
          "status": "OK",
          "code": 200,
          "responseTime": 1456,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c028ac-2fca-4b6e-89b8-51f9045d82c0",
        "cursor": {
          "ref": "b7d9a229-66b1-4fde-abd9-d379d638ff34",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "db0561b6-c47e-4132-b6b9-d6b883fb886b"
        },
        "item": {
          "id": "a9c028ac-2fca-4b6e-89b8-51f9045d82c0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2966b208-cc61-4f99-87f2-2171b063e0df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c028ac-2fca-4b6e-89b8-51f9045d82c0",
        "cursor": {
          "ref": "b7d9a229-66b1-4fde-abd9-d379d638ff34",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "db0561b6-c47e-4132-b6b9-d6b883fb886b"
        },
        "item": {
          "id": "a9c028ac-2fca-4b6e-89b8-51f9045d82c0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2966b208-cc61-4f99-87f2-2171b063e0df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62734718-c973-4df1-8f88-0f3031e81c52",
        "cursor": {
          "ref": "40735925-f2cf-4f4f-8991-bfa6626e002b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a40675fc-46ad-4fa9-913d-69609d9bf085"
        },
        "item": {
          "id": "62734718-c973-4df1-8f88-0f3031e81c52",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1da8afeb-798a-4b10-b61b-82ee81abdb04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247c9bc0-063a-473f-b0ae-bfa2920b6527",
        "cursor": {
          "ref": "c58765c5-cafc-4a82-806b-7b70522a99d8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "65c836b4-c213-4a84-9054-ad83d2488c0b"
        },
        "item": {
          "id": "247c9bc0-063a-473f-b0ae-bfa2920b6527",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "be702bfb-e4ed-41b8-b158-7fed620633b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}