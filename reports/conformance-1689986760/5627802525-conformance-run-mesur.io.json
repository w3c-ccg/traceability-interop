{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a7e55193-4639-4f72-8305-b847a9d5f00f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45f3b3f5-4f84-48e1-9d15-632233ebe843",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d22fb80c-2199-4d36-8244-b7708f1c9153",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "94620fbc-e9bf-4300-a32f-e34d8ac6fbe7"
                }
              }
            ]
          },
          {
            "id": "68cdb733-b484-4e4d-9084-8711add70ad9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef1d063d-dc18-49f9-89c8-b012a582596d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4843be29-18a2-4ee6-a4a7-86843fb01c78"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "40bde7da-67d5-4add-9d60-c6212395a7f1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "350c3f3a-c373-4549-a43a-062b4fe4d08d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afb1cf21-66e3-459d-ac91-90dbd000975a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbbf23e1-3070-4bb1-a9af-458d7f5780ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c469815-b526-46c1-b61a-f190b834fb5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "953bc40d-b566-44cc-bf0a-e2c5b8bbf374",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0bb7cc1-a61c-4781-ad8b-83553859874d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "12abc7fa-5400-4ecb-bd0a-cd18e58cb731",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "889d9fc2-720a-439e-8a38-e17f63a8534d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8aa3a1d1-4a80-466f-96b9-fa7b9c026619",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "98c50deb-6d50-4f61-bc86-aad8be9b2739"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64e95fac-e1dd-458a-ac08-6e455ec42bbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa9c4812-0096-4a46-9b3d-4f7920aabe86"
            }
          }
        ]
      },
      {
        "id": "118da3f0-fe2a-46a5-accc-4ae7024836cb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7827c758-6903-4dd8-bed6-e8206c4b3fb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fa0cc72-0331-41c0-bc7b-625db04a3dbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23d70ce1-23f4-46b8-9c69-b39ce5045f68",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d43562f-be09-467e-93b3-e0a1d9b09cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5738973-3a25-4384-8701-aef7d804a82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc88c9ee-70e7-4bf8-834e-779ade74c1dc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73ce2ce-4349-4823-a483-eb97736dca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffd6d5f0-a747-4470-a027-87aaec5d115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57765d6-863c-4027-be4c-1922bddf5c03",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fa727e-4810-431a-90e9-3372185bf711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a09d538-1802-42a5-b437-f807bd1ae4c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0a0a905-5f5f-4098-96a9-e5467170239d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e37c9a0-7aa9-4cc3-91b0-83f0e9945139",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0da02c-60e2-41ea-adde-44ba9b8a2499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a9bed19-de57-4703-be56-185f4c8288f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1ac135-a733-402e-ba63-c44757e7d34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11e3c8b-1708-4620-a87f-41acc314cf38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c381243-9a8e-47e8-9f12-4a4009e9a469",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77b37bda-8b58-4838-b9eb-c58825a8f049",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68294b31-264f-4c4c-9472-e4c3e8d3dc8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "864c787f-0fa8-4709-a2dc-1cdea1febd41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f449b998-3ac6-415f-97e7-78cc796220a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1746c4af-534f-46fa-a8a5-c9ac58fd6279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cab10938-9367-4c39-907f-31d1f3f5f28f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34805dbb-f1e8-48c5-a5da-ae04f2aab577"
            }
          }
        ]
      },
      {
        "id": "93a12171-a1c2-4b7d-bb1a-af22d55957d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a90e9a1f-4537-41c6-8f49-4613e6efb47d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fba4e314-2616-4a7e-9044-aaa88586fd3e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d15ab25-4d5d-4931-ba47-efbf0d1ff52e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54b6731-24b7-4ab2-94c5-bbd2df651288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663a46b9-1cdd-45a4-9bfd-9a242ce5f10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb46ab9-d474-43a8-93c4-f41fa6b0286a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "116a4407-d4e7-4914-9cb6-a80eb3041511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e902f7db-dcfe-4396-8451-4415d3fd150a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d009ca31-877b-4129-a9f8-fac9550022a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309d3eb8-bcb9-44c7-9c3a-0547f1dca23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aa96da-2f1a-4634-a833-c9bb47dc7359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8d92b6b-1672-465f-a3e5-28add526dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0677f105-24b1-4bfb-a81d-332aa1739b1a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf15eb7-fdf3-4771-9073-70910d05273b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41db1b83-3a51-422a-ae6f-088a3a78c5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325fbfa-057d-44d0-a7c7-6a6c2c291290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d53bce08-3b25-4199-bd51-c78e30603726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd855502-692b-470a-b4ef-d3ed9cfc1760",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b816d1a-42d4-4e30-8ac1-243c27b2f658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e52aed-d547-4402-9362-6f55c24e73f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5390448d-532e-44b5-acdc-d46ec05b72a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73398d7-7f9f-4009-a641-9bb3f0c18242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4db92-376a-4433-92a8-29fae9779179",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30de3ed8-050f-4df0-8bdc-e3696446cc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d596b4c-a49b-4d15-b501-09b12c674982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0e1fc0-cdbb-4261-9643-ae9833759aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37161a28-1941-4eef-bb24-5fece2541886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b31e7e5-7884-481d-ae74-b123276858cc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e42dd40-548e-4af9-a711-0722db2b327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fb46c1-c391-4960-86aa-a2f7822490be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09377b23-dbf1-4a39-bb1c-fd8ee6baa659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33f349da-d534-41fd-a746-282499266bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6af362d-4f06-4f66-818b-99b2eed8d70e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b09f80-6fb6-4483-a371-4bb21416a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2516f35-569d-4cb5-b323-d75e57aff6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d5091e-6e49-4a56-9721-e08248855cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4490f61-df89-4ef2-911d-a0f1b646ba4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d11d8e7-c240-48d2-97bc-90d789e85ca7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a43370-8fd0-4727-a309-7fdc84290263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc0a34d-bd40-4e79-8f2e-878cc5945cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449be9e-4e69-49d9-a990-fe53def48017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cac45396-3ccf-4be3-a0eb-4467e3a10ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3702544d-dfe2-4d03-8253-30a00f955499",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1bd026-6022-42be-ac86-695a523d5d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96db9ba3-6982-49af-858e-c918dd735754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aa6589-f967-4636-890c-a300136f42ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f8bb4de-1e11-4615-96b2-8105c68c2fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c5427e-ae7c-4072-91dd-17673e18ba4d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aecad21-d3a0-4bce-b44a-464cc23b9880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf3852a-167a-48c8-bdc9-24315a9b1a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e9f94f-a24d-48ea-ae05-c7b88f09e778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fcee016-3c27-41f5-9d34-a3d8f891911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30fa349-036b-46a8-8914-6406b36fb760",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c980e2f-dfbf-451e-8fcf-1d44d49111c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419a5be7-4392-4a8b-ba16-16ec945d6f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f562fa78-d8ec-47a9-ab71-558fc15971c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8849d0cc-7d31-4c60-b8af-df7a369bff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75b2af4-0774-4a4f-8c6b-0963d986abb9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff52b9b5-4c01-4772-b9ac-b70fdf87abba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edecd038-be80-4603-b8d8-22842f895dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be06671-4b1b-4ee3-aab6-7b78d1741600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39d906c5-b0fb-476f-be1e-1b7bdf147ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fff03b-f090-4fe7-85e0-2ca3ba0cd575",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7adf5a-d89e-44f2-b32b-bc36fea2a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a015140a-33a8-4987-9c3a-2dc305a4e44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4599acc9-86af-4d03-a770-b1b07041383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1ee9dd8-33cd-43a9-9afa-5b1212dfb896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa6f0f-bba2-48e9-b203-8600f93a395b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0042c1b-5a49-4e00-8492-4f17b876281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bef1965-31c8-4f1f-9857-19f8a6a8aab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fafb9c2-d9ff-436d-93a2-84b4f2ffc8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3730c2c-32d4-4f87-8f8c-0e5e1b4dbc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7366b1-6cff-4f9b-ac61-1078ed2d21f1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ddc8a5-b0a7-4a97-9a86-c940b8b7aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83b8878-f57f-40f6-b007-774cd8b09d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfb8b37-d407-449e-82d9-f50ebe907fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67616652-7d6a-4199-9df2-82208d456bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650b3104-1c2a-4d4c-95ba-38020d093f4c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033807f1-cd8c-4520-a582-bed4748d6c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55afaf2b-8b4a-404f-8716-cd858d1b77f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c98134-06bb-4396-aa8a-c356cf102eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a965e6e-7057-4d2f-80a0-529f40a49997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61962b-86a9-4a37-81f3-54ffe3f5a856",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6302a29c-26d4-4530-9a2e-8d07daa9c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6866e5d-23dc-49bf-a00d-03c18b1be36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0273a133-132e-4546-9c8b-d111376cc53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dbe63a8-76a6-492e-83d3-dde89b6c2bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4faf8ff-62dc-49f1-a53a-112f689cc337",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80c8a73-0d8c-4767-8404-9abae8b3fb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802db015-df00-402a-9738-bf4c153fc6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1ce867-144f-4b9c-aace-0aa3a27f9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef5b323-b1fe-4112-aa01-3d0ac2398321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf74a3c-345b-4ede-a737-b0c000bc7780",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce32dee5-26b4-4df6-a9f7-21c0378abfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9623f7e-101e-406a-a98b-a27596f957be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dc12f4-3ccc-49e2-9631-389a87097210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bb0cb7-9c9d-4c3d-bc37-61292d089e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2340ef8b-35d3-4177-b681-04ede6dc1522",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00608693-e2f1-4756-839a-ada20791fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d635d955-bf4f-4d6d-af18-d37333979ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d636d-fd6a-46e6-a74a-2d465c417a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23148725-aa85-42d5-819b-2ac51bdc4b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e226984a-9942-48d2-8f8a-b5af83ad19ad",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d23c9ac-ed13-4586-8dee-760d014f209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f25586-1533-4852-8b7b-0d15c76ad57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8234ee0b-b383-4c66-ad3e-3b2ed92e21ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afcb0b3e-1125-4882-9c80-148a5f542b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62d8dd4-edba-442d-a070-711f45518cd5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c512d308-7fcc-4b80-a06d-b66049bb8a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7077c6a-1a6c-4379-9bdc-2b55a250a238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503e8ce5-2fb0-4ccb-b6d9-2eeaad840bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0e02c7-83c8-4c23-b3cd-5df817fdc07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae54495d-21b0-4f65-8511-7fe64ad14ad0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a238de6d-abe6-4620-adcd-1924c52b8b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7752fe50-18e3-435c-9bfd-44c19f788132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065f5e86-7719-4bc8-be3c-28b1eb1172e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "665746af-3bd2-4c50-91e4-c9e403f9d115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045f4d8d-14d6-463f-ba0f-7044f67bbe10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c496779-04bf-42a8-9fbb-b25b0ced2669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2fb25c-810f-4658-8526-d7f99393cba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96da8868-9bc1-4570-95e3-57cab9dfe6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3236fa-639c-48c1-8772-9feb80f54569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56c7838-505a-4490-81d6-9dd324a05f41",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df82f6a2-1e9d-4d6a-8cbf-e35c3dce1289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2502b68-0e2b-4cab-bfee-33b416e739e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4cd00a-d123-4cb1-84a2-cb3e956f02af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eecb62ca-ffa2-4881-8884-721755026246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bd16dd-0cba-4e5e-9171-831289fd787c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e000ca-8f8a-492d-9675-071182ea906f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acff0b7c-3ba2-4019-b6f3-228e56684199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb912d3-805b-4611-824e-19c50a5a65cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3567fbad-986b-4550-9011-a6b7d5f79933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3991d15b-77d1-4ed3-ade0-4674ec932b7e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011eb33b-c6e2-4405-a4be-60b8076ea4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7504e6c6-a1ce-47b6-9991-4642db93dd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd17c03c-0aa2-4943-8302-099f2b07ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e0d8d0-e06c-4a82-9e82-fb6033b62874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823d010a-a4a7-4bcd-80da-4d0f384286bd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63e03fc-d131-4783-9c71-98fb8e341357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50b1e67-0e0c-47e4-be0f-08089da87f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e42d9a-94eb-46b1-8413-12acc9ef9d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8f9cda-4250-49d1-b9e6-a31ce22a4d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c14cdbd-f0f9-4bec-8925-1235dee2844a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409c4ee6-38fb-4ebb-942e-0cca895acdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdc8897-6a1b-4497-8e7d-2b80c1b8dd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a222a0f-7112-443e-91d1-3ccb7d2289e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7828b41b-4cc1-419e-b39f-b2c77696cb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06db3b1-caf0-4a82-8827-cd0b9c95584e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdaf48f-07fa-48b8-a265-92e18eb2795c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc8d312-0fc6-45f2-90fc-bc98c6df55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519570bb-5dc5-43f1-91c0-897786b8a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f439a6a7-f056-4dfe-a423-2dfee8c5f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1643cab-e087-42b9-abfb-71e4cecff3b5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae930e46-08bd-42fe-9b4a-a6deaf2db627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7240dbe9-0205-45cb-af07-5f63c49939f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8e940a-da73-452a-a48a-9739195896e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ef4235-01bd-42a6-bb8b-3898b9ca5e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ade33a-fe9d-4a6e-a86b-23633eeca302",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5fbcd4-2af3-476f-84f4-1defb6a563d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78f3add-887e-4df9-8f25-46ff284d2bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245fae53-367f-4bf8-8c89-14d23ea5d42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "931f6104-374b-4fb9-9de6-99923ad5c501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3397867d-b141-4ef2-9393-961deb6c3c5c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfd5350-71f8-4efb-823d-3a64dfad93e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc760cf8-c97c-457a-aa16-440eaf46507d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92921b-0ce4-449b-b4ff-c50f22cd1b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36a7df5-dbb3-4448-aa5e-8f7c9cee949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4291b079-21ab-4410-b6a0-5688cbb04aba",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccb83fa-d767-483b-859a-7418636a2bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0966b9a9-da23-4770-9587-8f2b37233dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ebb84-c9b6-472a-a106-fb3d0380c1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "deae9e39-9407-48f6-9e51-7ef4a21c281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6313348f-f5ad-4cf6-be4a-a7ac9ee6466b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e04135-76f0-42e8-bfe6-785f413eadc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f432989e-71a7-4cff-aa00-63b816b47236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896f6948-599e-4432-adc8-b506a92d7f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "97c86631-fd73-47c1-b82b-b1d4da05811e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc19cdeb-d80b-495f-8972-599fc20583ca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566fc314-7114-4290-8014-6e9cf921f333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "292d4f98-72af-409d-8b92-be5544d7c863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b57b8b-5030-4758-916d-2a4f59535c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "225cc301-6c67-40b9-ab65-a162fe8ffc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88999a57-574b-4ad6-a622-f3e3538ebc79",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde81acd-21b3-4720-beff-b951e5c0b820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1608f70e-364e-445b-b7f0-e87496e69657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38341c7a-f733-45f2-a510-59193815ebc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76b7fbfc-e1cd-4875-b455-71de14f6460b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce166340-b305-4e6b-9731-bff44ea58c7e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdd4456-43e9-41b7-bdc7-fa2c8fa3d52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14be05b-5180-467c-9f90-559cca15c2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1ca069-9995-4d69-9265-e85b3c63f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6edbbca-5f12-4857-9952-aa05e363d17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eec5ea-37ce-48e5-9ebf-a580b2d7251c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddffc2be-9684-4722-ae28-fb4a09e7c095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f630e5-8d17-4ff7-b645-2f1207c65011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ae8e89-86f4-45d9-be3f-6e578fef599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b44c0836-9aee-4a6f-a61e-35f743a44c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0803995-5fc9-4e82-a170-1d6f0336d8bf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efce9452-6c94-422f-8251-3eee64396031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc20f43-a264-4105-b915-e8df316753c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24b5814-e028-44bf-a4dd-d73a24b7d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4f76b8-3aa5-4f92-bac9-e0b0909555e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef7484d-4818-4315-abc5-14d728c59cd1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b23169-1e31-4655-a560-96666f2096da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004de627-98c9-43dd-a240-5bdffb9e8983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd182989-339e-405a-8823-31d1caccf64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a808706-0f94-4912-912b-624aa9a51aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544439ce-8f18-4453-9e9a-b69a0057b19f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89da1360-244d-4253-aa0a-5b88b95706c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e42f107-cfa5-4205-8818-a2a4b12f91a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b4a809-0055-403e-89da-61cff2540bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7afc8291-2d93-439b-aaca-992d9cda2fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b3cef3-3738-47a0-9cf1-4cc68aaa94c8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b689a2e-e279-451c-9ea6-be483f77dcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbe0fb5-35c7-4f16-b0ba-370ed4c0a272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35389cdd-11bf-4491-846c-293da0e8da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c96a875-cef3-4027-9414-a7bb63c77098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bdf8fc-c36a-40c2-8b5b-b5ff4f8dcb2c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96602b1-b817-4ac4-923b-020624cc742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2320e55f-c4fc-4c84-a005-18b5950d0963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb0b62c-cfe4-4370-b107-00c9701a2c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cefb95fb-48b6-47a1-87c2-f281a56dea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a781c3cc-d44f-4acc-a760-8ee06778824c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accc838c-79a9-4c57-8188-7b04f83936e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50443a5b-d6f5-4884-af4b-2fa2e28fc012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40bd410-7f0c-4836-99cc-631da52eb9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "409c71f8-a1f3-4c59-9111-3d25fd2b975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead063e4-c3aa-4572-abf7-41cfb8f3c236",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883040ed-1c1d-4a9b-99de-21ff32072b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c615cb5c-f05a-40e7-93b7-23d7e16912fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50fd4de-450f-45b5-8cbe-25cde2740740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4d5be6-5f18-48d3-80eb-9c8da7357e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb4313c-23e7-4235-9528-608ec1d6f722",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e67a73-a841-40dd-9f53-c58e341c2b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5e7c03-d114-4414-b0f2-e2ba7c11196d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c398a491-6372-43fc-999d-b8a5cae91e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7aa530-3710-417e-b888-a9e71d4499e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac4be3c-3570-443f-821a-bb60a09291dc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e03599-1294-4123-90f2-e42ee17b9538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab29ba3-be15-4ddf-a3d8-85294cc33dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065c3ec5-aad0-465d-886e-7c1220a68832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "829f2de1-f2a4-4434-a1ac-67a9e3c27efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efef77e7-bbfc-4203-9fee-943bc4f5e76c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d95288e-ed1c-4840-baaa-84f434e2f7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c928312-fac7-4515-bb06-3d0515809aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ffc5e-3041-4920-a5f5-2d50d22d84c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8586cbbd-12db-46f9-930d-ac1f9b772fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eccb308-1ef2-4b34-8d8f-b2bbf7704ac5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b99f4b-348b-4f76-8ab3-016357c1181c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdb10f3-53fa-4d96-946a-5746917e593a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3ab2dd-4db4-4209-bad3-e4c27de18091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6255d3a2-af65-4a78-94f9-6e8c81cad585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9584bd7-5e65-4734-bf41-c3fa196fb4fc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04723055-ab30-4433-8fa0-92c2f2e67682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd14f08-5e8e-47a4-9694-c0bb429d6c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff8654f-52bf-4f7b-bbc0-b190d67d86e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ccad7a-4bcc-4fce-bb81-f596289febbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a8734-fae8-473f-a16e-1e388c1d0aed",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a291404-39b5-496e-b1e2-78d2252dc2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8418093f-a740-4f83-a9a1-a74633c9689d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0bfe8c-499e-451c-b9bf-e7bd95d8ddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76be8190-a14f-400f-b646-0b2f2b09dae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b492e34-550e-426d-beb3-28167014d84b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a9aec-800e-4b7e-9a7a-cdde3875f9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48b48e5-81da-4a75-9c0a-b5a50722670b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199cae86-e93b-412e-88a4-c0e70d096d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "659f9965-cea1-4310-9e13-4b641a61d20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2568d33-3f40-4bda-9e01-cd8c495b0c08",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b005e-8ae3-4356-a73e-ba0704a69c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2369f578-c636-4008-aca7-c94ed96138d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d23603-3df9-452f-832b-70e69eeee279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3290e82c-aaab-43c8-ac10-19de79cfc4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c7cfc6-6810-4674-911f-66596d5dd7db",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a861de3-4600-4c3a-ae8d-0784710c3289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d6af3b-a1ce-4ded-8f6f-1a752603a336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56af7b35-451a-4246-abe3-4b5843305877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f26058-48d2-44e0-bb66-9ca574ebc525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b7041c-f0ff-4562-9682-7bb33dfa1c4e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3fa1df-da7a-4eaf-9098-68e29aebb97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f2e7ff-bcfd-430f-80f3-2a717ab4b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ebc777-8617-4e90-b040-3d5e07ad70b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b231df98-f344-47ca-869f-66440fe28247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21376a3-dda4-46e8-bcce-b7d210cf46e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592de60b-d91e-4044-a797-f7a0fc657257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af457291-8035-45c1-8718-6c82a120fa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe36ec6-c5a2-47ba-a9e2-3ef53788feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "520e41e7-48cb-4c2a-b24a-625b8334f841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33126e6-bb91-42a3-b417-2d4e58dc2e4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca13a20a-5d61-4601-980c-6f6a871be704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d715ca-0840-4496-9700-2f523e23d42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b4342c-88e3-4165-986e-a96db509a7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0861bc6f-ea9f-4930-9025-841d541fdd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addaa848-0e56-4569-b67b-a7487b53d8cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89988e6b-81f6-4d0c-815d-e31810d340e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708fb94f-da8b-4150-afff-cb82ef438a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55617b9b-6534-43ac-9b50-0384a297f9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d74d92f-57d5-4c35-821d-8f2418524a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c229dae-a75c-4d21-98b8-8e9f7468f48c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e8dddd-6b5c-48e9-a366-eb9e80a42eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e987b9-7d02-452b-9e47-7e65f7c2cd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8990a600-25fd-4e6f-a9b5-c47410a0a028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5b38f3-5a63-44bc-8d81-ef36e304de3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86eb398-1322-4d3f-b21b-1cf3c6f02722",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4916b6a-357a-4654-ae4c-b8b7eee6dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb85f210-4d60-49a3-9c40-de3b14600c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f468f2d6-9bb5-430e-8b9a-83099df49e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a427a9-0fc1-4fa4-a607-0d2e50a6b8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdc76a8-8c55-4840-9086-3546d5922b0c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2205e622-2461-4482-a05a-13f2c8cd62a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b3447a-c32c-46de-8e79-b566a7a8ffd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34878f5a-f3d3-41bc-ac5f-3491995918f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfadb75-2d7c-430b-8c00-e0fd41c4c4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80689b9-276f-4021-bd2d-a5a82218d1aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0d990e-a0a5-42f2-8f01-d19cce232250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf415a1-cc75-42ed-9c75-86c88b1c0bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90c3040-5c16-4723-a610-54522e375cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f79525-aa58-40d5-b861-28cd78699f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4903f64d-6521-4591-895d-04e8da7515d0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d5d8d-7c07-41d0-a9f9-e0649754ab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374020a5-ec8b-4550-9ced-25811b7da5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874a2a1-c318-49c3-86f2-0111f90aef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24080b9-9421-4a30-a791-e1a76bfd32a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f43b38-4b44-466f-9096-71f8a1454867",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de818a0a-b490-47ce-b0e5-041858c7b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20248736-50f9-4f5e-a9a5-d5b9b5945d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd619c-f049-4fd3-a85f-69824e4cc79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "625e2063-86f5-4e81-82f7-f38ab485693d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf24d08-abc7-454e-b8b1-15186bf393fc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13beb7f9-8d27-40b7-b971-9ac745065720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab18fd68-d134-450e-9db1-e6984c6edf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80a2960-0fda-4876-9f4b-6b41e3dc81cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c1cb29-9f6a-4dc6-a4ab-89c2c862da18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c869121-b0c5-4690-aa5e-af4287b35513",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb01c328-2499-44b0-be20-1197feec75d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce17f10e-efff-4e4b-9b4c-aa5e7eb65914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef0abd7-82f0-4c8b-b763-eca6bf212dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0162fedf-bead-44f1-9f15-6a0eb295b1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24418801-d6d9-4f4a-8877-6e5d1bccd233",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54432e35-fde5-42f0-8412-f428e2de3185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9513bb68-703c-4845-8156-aa45006034c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b41c13-d31e-4fd6-a302-e3228189cd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "73fafa50-dfc2-4d4a-b2ea-f1b8bbae76e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abcb7c8-19b8-4de4-9a7f-010c9f09ea75",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a2577f-457b-45d4-a505-de87b4b483dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ac7125-300a-4e7b-aab4-5985a42b3cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafb9c8c-13ea-4fe8-b749-84dc44f3651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a34f26-06d2-4e22-a25c-a6695e4f0e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b99b78e-0e59-42e8-adac-cec05ba91959",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b288158f-18fe-45b0-937b-d9c3f43c5d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88137b1a-5eea-4c5e-8f68-4701844af3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ece1a3-95f5-49fb-bc03-78c16e18861c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2adbe912-adbb-4a1d-b48c-451b2def7836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d0c044-a4e8-4556-a35a-8444ebb43739",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0f85e-cb61-463a-a17b-b5b2e8f94c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028d94ab-676d-4577-a147-85ce0d25128b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb63898b-d74e-427c-97dd-cb5c5b05d5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc705c3-66c9-41f2-89b1-a69ae6a0d887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d36925-4c9f-45c8-b47f-ca4286713917",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c6eace-853f-4c7f-8e09-e8a1e2df9192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88db2947-a840-4024-8769-b9ca45709362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a63ca61-6eec-4fca-8dd6-a0c35c3b5856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b010304d-051a-4038-a40c-92b323bd6dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9101366c-2612-4887-8eb7-46ec00c9e950",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4a1e9c-d16c-49d6-bca6-0d109dc37ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04726486-9a6d-41d2-8107-d28e17b54bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad97c18-9a5c-402a-b753-aead69c51616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df7a666-fb2a-4e04-abf1-b48eebdc7ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c48db0-ee4f-4d42-a7df-faf46e19a983",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7032cf-47c2-4b0d-aaf6-816ccf6abf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30658900-38b1-4388-b01e-b4c41fd1212e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f525a0e9-16b4-4cac-8a31-6f4b6d5a8144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2eb4327-440b-436d-9a4a-c935c9c8ae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83499f6f-44b5-4837-ad12-3970e02734ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c1f824-9b83-4fc3-ade2-ef156b0817d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b1a2ac-a776-4e53-ad72-f7184da5730e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045954af-9215-408c-b278-7ce6c6c5a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edacf675-ef9d-459b-9ee3-c72cf58e7b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a3b802-0875-4856-a8a8-02fb584d0313",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cd25f4-22c5-4a82-8957-3f023a60c8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3111d2c7-7738-419a-a40d-1a63145f151c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9147ad-8d89-4508-9373-7c2e7e7490e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f01cbe-e453-4683-bff8-c1039ca1372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be87840e-e51a-42ad-a03e-2ac8460c1f04",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789711d1-b373-45ed-87e1-dd482c5bde0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3139e1d-7d03-4e02-9e85-66dffa401d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd81f193-0f3a-44eb-9f97-ecc2f6f59194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f393ba4-43a7-42a5-ac29-cac16a1bd9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cc2f58-d70b-4433-97ac-34368a4a8f37",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e532e47a-7409-4835-b14d-3776114063f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5e8cb3-e01d-446a-9e8a-489f01ee3a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb4f569-eeb5-47da-904e-93dbf7ebc3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e143a87-c6fd-421b-ab2b-459165da3391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5c8dde-06e9-4e16-800e-7c61ca237e80",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc081ba7-7410-4cf6-b1dc-187bf3cb5635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea005dc-4e8b-4b81-a72d-a407f6a514dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81afdb79-bd11-4ee4-98a9-a49326e33fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d65ba24f-54c4-421e-9f61-a97e36977f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a1497b-3f40-48f8-a2bb-7b653e01ddbd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c316e785-c6c9-4601-93ef-ed097ee252a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e35c75c-c209-496f-bce7-56db09b616ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af55118-3c24-466e-8f73-06072dc15f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e7ed18-d41b-4190-9538-601905ed4ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54ff6ab-428d-4563-84d5-ee27879decf8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3558160d-6c39-46b6-87ed-ea620680838c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6ef87f-bfa3-418a-a55c-7efb680c17f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29b3274-bc0d-4c3e-a853-bb490d3918d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "783dc0d0-58cd-46ce-a500-740e82ebdc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f716c26-b9dd-4ab7-9ff8-1fca22a3f324",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35102cac-7574-4171-b393-4820f9f036d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe779eab-fc9a-456f-a294-b06660c38e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81644f8-4cb0-4081-8cf4-326dfc279ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d564006c-231d-4d71-b735-cbb1c4c0c6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f88eb3-6516-4430-98d9-762999ad0da8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdf2471-c69e-43f7-92a9-1a20fc23f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505a3904-0847-44da-94eb-887d5ec685b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ac8870-dce0-4214-84e8-f27790b940d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "872ec414-4ab7-4f0c-a1df-cb397f509109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5493fc6-37b9-445f-945d-2465f37a536d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3109862c-4136-4239-af91-d4eb845c7bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6035a3-a788-4abf-993e-18a17015c6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3404b06a-6223-4877-9f62-4bd0c2e6d3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "507e00f0-f145-445f-96d7-dc74bf6a27bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9f922c-032c-410a-9296-7754952fa5e8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4714f5e8-0afe-4b4e-9581-a5c3692e07f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8bf3a6-b5bc-438a-aa87-7a66e3a62fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf49a60-864c-490b-933d-6a0ecd3a54e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a7e11b-72f7-4768-aa2b-358f99b66b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9611dbf4-682d-4c41-94cb-3b70effb98f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8ab349-ab2a-414f-986c-d4de70b7a44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee9a185-b087-4bf4-9c5c-0f6308e55351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dcf520-122c-4169-b669-13dcf915a864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e94399d-44ca-4722-a2cc-8a65ad633c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20476b3c-7b47-428a-bdac-a6731f80e4ae",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cec9f2-53cb-4e00-b46e-a1a6b76f80cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56be669c-581f-4a23-b4b1-2f3657b44d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbecfd8b-1f3b-43c9-9c18-75cf0e28b710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f702a74-beef-4d73-bd2e-60afc8c30c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3790ce3-5a11-409b-a94e-b40db0283ccc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e0ba4-c6e0-420d-8eb5-f77411fb6951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7357e4f4-8d9d-4ad9-b9ce-f02727fd11e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009e58e1-0d25-45e7-af6b-532fcc4c1ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "083873b5-0e1b-414b-8a18-e4414710a1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374eb167-3e48-4138-9315-f85425f7f877",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762fe39f-86b8-441e-8967-6efdb4ccc5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737d1a57-ad1f-4e5a-ad0a-38eba6647048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfefe57-fafe-4ef3-bbee-e3bf65a4bc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c990698-fb22-42e4-8f7a-1b17820b9206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b1470-63e6-463f-80f6-c3e406621c01",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5bd35-c0e1-40b5-91bf-d533fff665ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1024d86-cbba-499d-ac73-4d94827040f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ca7315-7478-4071-abf1-2dde2281b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acabdb7b-42c5-4c64-a311-a8f37f7902f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e0b1a2-dd2d-4c86-8e4d-2467ca4b31d5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84ba670-f496-4342-93c0-f50bf4bb3934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004815f8-9201-4477-a242-79d5f5cfa274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178491f0-2ef4-402f-ac0a-c17bc4f9efe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf74dea4-bb1c-4a0c-96a4-a47b107791b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9551fe2-dda9-41e9-97e8-458a78988607",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a462f70-c5b9-4ec5-ba21-2ecc073dbfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a2d19ef-8001-4168-83d6-fd9f0f14d489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34eb8a6-e310-4f13-a38e-abc9d9fe9cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6badd146-a6ec-4640-b6f4-c559f344ed59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a82fc54-76bd-467a-98a9-7a9ddaf9db98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "083a1210-451d-4647-a562-0741e7af5139",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c8c49b-4cae-45a6-b941-d7134e5e7068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ef4f590-3e6a-43e4-9bf7-d9ca1473772b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d28990-43aa-45ff-976c-828ba9c49307",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60ed53cf-91eb-4256-9950-bbe5752f7e42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a62488d-3f31-4285-8c70-59a3c7cc8799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b54a084-b832-43eb-b16b-d96c60956908"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef53618b-3e16-4922-b75c-6384a20593f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adfc123b-5fa6-423c-afb6-9d24ca16e800"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "081fb7e5-18e5-4494-a14f-9a58bd88e13e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1023deeb-77ef-42bb-89ec-f6cf3a3bc31c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac125dae-5c91-40dd-b43f-79f0c0ab5d24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "976ad5ed-86d0-4645-9a69-e843aa711a75"
                }
              }
            ]
          },
          {
            "id": "a666c217-45cf-4fd3-ad86-e1271d61c1e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f8985f0-8cb5-4b5e-80a4-34128ef5c0d6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd003a75-98ff-4b09-ab71-dd9b39751656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43a1884c-23e3-4ebc-9255-ffb6ed321e00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af0e05fb-b406-4288-ba43-dc34f67bd79a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f666bfd5-6107-47e1-87ea-0ff26fec2857"
                    }
                  }
                ]
              },
              {
                "id": "8b426f5e-183c-489b-9ceb-4c860a50b820",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a673084d-12ca-41dc-98cc-7c52116e923d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c64750-58c6-41d2-b579-a259ea214f2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "452b86c4-4fff-48b2-a1aa-3a516819a29a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80aa58a0-50e5-4b2d-9ee1-1510f3a423d9"
                    }
                  }
                ]
              },
              {
                "id": "c155c9b3-6b77-45f8-970a-dc928ea6b388",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d37e0fc9-711f-4d08-a490-f4f983b3a9f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db7a0608-2b5e-49ea-8090-d122b9cbb416"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "638a4d4c-8d1f-4b8f-94a7-a605c9580394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38db2711-914c-4349-8fb9-2e5bb36660e1"
                    }
                  }
                ]
              },
              {
                "id": "f4f6407c-87f2-4ee8-a434-11b29c851242",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53dded6f-e505-47ed-826c-d778518d7f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ac00cf8-b93e-4823-86cc-bb5329aa6772"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6098e680-0b9d-41d1-a9ff-4b300033d287",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9c6e0cf7-c783-498c-bcd2-db59b588e6b1"
                    }
                  }
                ]
              },
              {
                "id": "4c97c1c2-786f-4d49-862a-26dd32af0c93",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a92e5d-0d94-4621-81ce-86b2acbc03e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "366c5478-5d98-4abd-833c-d5d710589d43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ea82143-7acb-4788-b6ef-ce953f82dca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cae4c9eb-63f1-4525-acab-cd2072c64b8a"
                    }
                  }
                ]
              },
              {
                "id": "b16c3974-48c6-4a4f-907c-e5f4d1d87012",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04b22c30-602f-499b-ac5c-7f00233152e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41b6d7ed-c03b-41f9-bb36-c4a98535dda0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98708b89-3d0a-4157-829c-d924b2a12cde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f0f5a9f-22d1-4933-9835-76a8ff7ac335"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eedbfcc9-4832-48a6-b4d6-8fd7c615a73c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68b2e044-2609-46be-854c-aab704d69180"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fcd8a74c-1dc2-4df2-9a5e-1c10b2f63e09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de0c033d-59f3-4025-ab83-cd7aea370748"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d44fc99a-848a-420e-839a-83ab56c3b90b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4d2631c3-4ebd-457a-b2b9-153bd9477426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6d23041-c4f2-4931-be2f-40bd7d26ae85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c96c7385-82ef-4599-80e6-038e6c9b4ea2"
            }
          }
        ]
      },
      {
        "id": "10a5db53-2594-4e7c-a914-ff12a1da934b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "81f60b59-0949-4689-896c-b9836adda343",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29e657ff-e2a6-4f2b-bdd0-0f98efdf34d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44ff6d8a-8a3a-4465-b32e-99364b38cbf5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bd8e91-8cc9-46c3-b173-325703739cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7f33c6-5224-4e6c-8bae-a8a10cd34eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f98b5df-2d03-4ebb-b270-20ec89a1d9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "394558b5-af95-44d9-a8c8-c8bad24e6118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d22f717-f57e-4bb0-8186-ac6e5b38123d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3485249a-dcf7-4ee3-8243-9238b4cc66dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af53147-69a8-4383-9262-2e079ce2045b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd25a88-5073-48e9-afc7-bcefef42b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ce005c-268c-42e7-941d-80e39b8c03f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed21786-8171-4c7e-a20c-989c54948734",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c798807-e30c-458b-8cb8-d70bf75e2b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d693733-8fd1-4863-8b43-8b7af9917690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747ca5e4-bcfb-48ff-a4f0-45eb69a6666b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e214ba-1bd4-4f57-9c5f-7059b08cbdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ccb507-b72d-4dd9-9ddf-9617526cf31e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fad5553-1b5d-4652-a3ec-03ed45cfb111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48084786-255a-47ef-96c3-f10f8fb42075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6875d0-7695-4b99-896c-3916e7b4d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f270d6ff-3ff1-46d3-a8c1-aa1057e539c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b9b5fd-ca65-44e9-8d1f-2116a5ef2018",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ce95df-63dc-4442-b107-3401c7e57441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df9131e-303d-4f20-a62d-b1a16373beb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915c17ce-58fa-4389-adc4-3cc1239aeddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f81dc57-9e22-404d-8a89-d632f4694d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87498968-d47e-45ee-8f3c-6592b904b32e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d4216f-b76e-4912-af7c-26f80ed8c20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa11a38-cad6-4ff1-be8b-2889e6edd361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877e7e48-290b-43c5-aab4-0420a3520da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "272712b7-a93d-4532-8c23-1c80661149bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721bc9de-fa1d-4753-8b6e-a3b37473724d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f3e695-e1ff-44fe-ac5e-2a4f3efe7fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a0f4a1-4e6c-4f2b-b473-997d6ae0b46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714ae3a5-ce8d-42bf-a010-44ea3a6001b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2511a61b-13e6-4398-ba2b-266818fc43b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e9dd79-541f-4965-83ba-53c90127b98d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6876d629-f31a-485c-8c53-a8845258dde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9214ee0a-6cbf-4b15-ada7-59923b34bc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db775c34-5558-4b37-84e3-1b727717721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed59df9-212e-474a-b7b3-53354fd935dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c537f73-4fb0-424a-ae22-102116fc6ff0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40334bef-fa1d-4ce6-a117-bb102d93aa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0246a4aa-cede-43cc-8860-0d3de886435c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa2abd5-3bdd-4364-97d4-026dd4799a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "827396d1-98a1-4cb7-bfd1-d462b49902e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00818173-6a5b-43eb-b4b0-cdca7263d008",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b5dfad-b997-4c60-a6d1-45485a9905a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d7a1f6-9c60-4119-b8a4-9090ed979aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1866ec-ba2e-4807-adbf-d618fc3d7c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae7e40d-2f86-4655-bae3-8df8e971d19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40373db7-3c87-402c-ad7b-c39d1f07c9d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6284df-b8e5-422b-9f1d-d01208a3a4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb662270-5b46-45b5-aec9-2a6ade1b53c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133bb26c-ebc4-47b6-be86-8ed33f2940f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "56f69fb3-e466-4b31-af8d-6f5f5debac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dd043e-8a83-4f1b-8ab8-923d339ca0cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c07b5e4-11f6-41c3-aa8e-4301c7acfcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f40d86-abb1-4c10-a6ec-fc5c7290e0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78235d6-470d-4cf0-9351-aef7b7c6a2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8292386a-1fcc-4f53-9b36-eea64ae0127a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9dca7-0c4d-4ae2-b477-f8f32092db48",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f56554-c114-4ec0-8fa9-3fe876a1635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f221ce2e-4a77-4013-9e4a-2b1d473d743a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64186aac-fc84-4948-9cca-9c1277853037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "499d9cda-5599-4fcc-8b9a-58fde31bb76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eb10f3-f91b-4321-b7ad-20337cb5b774",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f6b099-8b4d-4ec1-9c21-88f1282946f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565f5543-0f44-4d0d-b2b0-8dcb04651a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ce895e-ec20-4208-a3e7-852f0738f4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "932b4819-c20e-4545-9d06-c3a1e33b0f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad9889e-25d0-4cc9-a4d0-0042da07dc1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8da740-8ac4-4548-b62e-0ea5da01b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66da754-721e-44ca-a54a-0fa0e6757730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f31544-4586-419c-8e96-ba813061fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "307b0151-5398-45a6-aa33-df1b8c3bd58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e390a6-e814-4cc1-87ee-47e1d757b5b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafea2f2-2303-4706-a19a-8068cf3a0de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a2434f-1169-4371-bdd0-3161d43c5318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083f1bfc-001a-49fa-bbc8-43dccf55baa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b985ca38-4a9b-43fc-ae43-113f035b3247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e921fcc3-4ba5-47f8-86b7-9a432b4dfa69",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a8907b-0c38-4d26-b278-45999f09a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db01d390-accd-4c40-b7d0-b1c7c3e590a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a65887-02a4-490c-9900-c215c4ddc0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d9b50-7101-4d2e-96fd-007738c622f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ccf7a-f343-49d1-9490-5923760a417b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95428ea-40ed-405a-8273-f991da031b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819a7e63-298a-4813-bea7-e9c03dfffb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d54f39-fcca-4eb2-910b-bd99c8722451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc86924-ee34-488f-874e-c9e15e049004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c6db15-40e2-4fdb-bffd-5bd8925fd846",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1369c5f3-f271-48e1-9653-798bcaa47321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71689626-376c-4bc0-954c-bd151e399925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5c4f2b-9056-4415-9878-41ade2648918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab706ef3-7799-4d68-975d-8174a8a334a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197de23f-08bb-46c9-bb4b-18c80be01be9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620968cd-882a-4494-8c88-feca47774ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ccc0ca-0de8-4c97-aa8f-afa3c5ac8402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9909da24-85ab-45f8-b893-b61cea18bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3c3167-1b08-4359-bbe0-bd30de9407bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c0ec9f-70af-4109-a02d-26eab18dec1f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb09ae8-0d90-41f3-9f03-4b7593baca8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56df2a0a-cad6-4afa-a5b3-1d60e9794b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f139692-4303-4989-8da6-6473df9f5df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b47fc1-5189-4f61-99fc-727ab3f56c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bee322-a136-486a-92a1-379e765bbb7e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9248389f-e455-4ebf-bc9d-1b9aeeec26eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02218879-52bd-40d5-bedc-d37c291a6799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2c66fb-312c-48e0-bf86-1fb21258be9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39b3591-3e2f-438f-ae75-d095590cc444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1df1a7-ccc6-4d54-9b6d-92d11a664349",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423c4e54-ca33-472c-8ff6-d52e552c7d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2de863e-4e77-4a0d-a9f7-678eafb2ba04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6e2195-68f0-4d2e-94b4-c5d456e1e566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c2c8b7-f462-402e-a6d1-f768c1a5b0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f871816a-a461-4bdb-b829-3a2d3216f30a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abe6394-32e3-4edf-b724-8a4dfe73dff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94da0a3-806b-461a-ad5d-b27a01b2c649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53db7ab5-ca3b-488d-aa97-26dc1f6e1a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352ca7a8-6600-4451-b82b-d66dfb8717de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c46ec1a-13ec-4e61-8928-76a4b5a4214a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871b677e-2ba0-4328-b7fc-aed5fda8f6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8791e6-a68e-4171-bb20-a3a13cb17a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278db3f-4855-4d63-bb42-2c3af95b48be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280d6af2-7b8a-4791-8b73-fe27ad69c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4346076a-0b2b-4c58-a198-b2b3a4d57c3e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d778228b-1aed-4b2f-86d3-da063cfd36bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41361035-34bd-459c-9c9c-da4be344fae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3a2cd1-9b92-4c3b-a469-37c2fd76a495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b408b163-ce6e-4a1e-8b64-3f3386617d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfb0992-3cc5-4d2e-82a9-98e2151762d3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b7bb05-b169-4469-a1c5-ec5783d0b3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b966cbec-099c-4a60-b0b3-3a58dc5e71cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e01a2c2-4c01-4b83-ae08-9a526a20ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2a63a6-6a40-4e97-bfe4-3e4663e6b404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c06aae-a18b-4595-ba12-cb5e924142a3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47833eec-17b1-4328-a12f-3b117130319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7334929-50bf-4144-9c37-01a94685bc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d33df41-b133-4c81-9788-34e5360717c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdb7960-b185-4719-9d03-65e782d90012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e975f2b3-e597-4848-81a3-ce12bed714ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19a0efd-4d93-48f2-9461-9105a4ee322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14544991-6412-46ba-bc12-20a2d99ce833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d913ffa-2018-40c9-b3bb-26c415e00fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "744f4acf-bcc9-4291-a0d2-7e48a0b8d4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c3ed12-7154-407b-b28f-4e6c5ee93635",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dd31ed-0c5f-4fc7-b5da-543cd3191cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a6c49d-3535-4b51-b08b-b35b3372c4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40154ec0-4845-4dc0-977d-7da0a63f296d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55d2833-83b0-48de-af31-ce0170dcb70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c881dcda-561f-426a-b4c9-cb3f66f633ec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4eb176-3fa5-40f8-8c30-b45b80770846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf37ad0a-587d-4646-b906-4343a239fea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4f9b5-b75c-4a75-9c9c-37c6655dc8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a945da5c-f73b-4ed1-9257-906261c1153f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c008abe7-8283-417d-87e3-18f79574dc45",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcdfbf7-6d37-48b8-9324-489b836fd7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230b7272-4e3d-4f0c-a4bd-d6c730354bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00121017-6138-44ff-841b-a554cd5b06bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19fb1fa4-574d-40db-a473-b58affd30cfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20ecdd84-923c-4d92-ad3d-b2c5d774919d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ed2ab4b-dcd3-4bbd-be69-5b0c6f19a003",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0906ae-50eb-44f7-b173-cb50d92a08ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bf910e4e-cbc1-4bf7-a851-8266d924d519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572cc134-2cd8-4486-ae17-3ef978969cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1101dd18-191d-403c-8b1d-8b952ea6f3bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce895ae4-6f76-4218-bb3c-17a53a3291df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f829768a-047a-41ee-b904-5090b0fb50a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca2a2a4e-d3ad-4fea-bd23-bbd467040da3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdded070-849c-4f88-a804-767b1c1e1882"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e571b6d-e501-41a7-9cf9-ddf76183d7a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67fc735e-960e-4dae-aa9b-454b2e22c0ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97792cee-c353-40be-9dac-901a64c744bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ade89b20-4168-4aee-8af4-56df08235d89"
            }
          }
        ]
      },
      {
        "id": "713d62ca-f04f-431c-8493-4901eb7d651d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "01e00ac2-4165-4ba2-a187-50699b080811",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6c6887b-f841-48d8-9bd3-e3170d7ef52b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12d86b4b-f3f4-4a42-90f0-3b23d85f23c4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a282c67-5b48-40aa-b906-852636bf08e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f342543-c961-4c51-9351-054e5ea4f1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fc23ad-cd97-40b7-aa1e-6a245e99bc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa274c75-0e2b-46f0-bb54-351258ebc4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0871bfd6-d818-4619-8d15-17b74e2e05a0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8678db-262c-4e26-be16-27ec4d39be3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d34e839-276a-41d9-9af5-7a28de291484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02939a4-0bb1-4f80-a33d-4e71f8fbfe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8139e478-477c-4bf5-88b8-86ef86c1a32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27347f1-88d7-48a8-bc51-bb3a7f450a1c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a00b4c-7130-4ff2-b26c-54c535d2b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5a6302-8b0f-4f49-84c3-d5064e1bd91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f2f481-ab0b-401a-8704-75733bae0bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e659893-5671-4813-92e6-2fd01158b5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f2a1da-d8b9-4859-b545-461e351220a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00042709-7ed2-45d8-873e-1f3e6c3957f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8afcc63-454d-456a-beb1-3ad7807ee529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccf60c2-4392-4ffb-8c5d-ac0fda80a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5223fa1f-c166-41c9-9a0e-221b70175b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f66bb40-7599-4d27-b431-f4ccad10842a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a041b92b-74b9-4ee0-afa5-79964ba706c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5b0c88-5945-4a05-95cf-b2aced7f979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f6561d-f331-4fdb-9272-b02fcbb49c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23a606c-0489-40cf-b3fc-242ce767f1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3101b6be-9879-4309-b3a8-a44d0e771637",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecee32f-cce3-4820-8bb2-11aec9eb17fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e61c0d-6236-4b5f-a1c5-6514616ca243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbca22d-f707-4e80-8329-c06252173571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb3fb6d-f469-4882-b3a1-9500de9d282f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9d5b52-e884-4e6d-be1d-df09c2dbf39f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be77acb4-d3ad-479e-be88-950b206ff57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba73855a-c923-48a4-9ad9-3e61f2446c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ab023f-ea19-4680-a70d-04140c23ef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8fee45-bfae-41a9-9f11-48f62846d4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d884c65d-dcb6-4e89-a3fa-bac537d0a868",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ef5b02-da85-4664-9fcc-89205af250ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed7d032-ca00-4b9f-b6b6-e551a09ced08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb6305e-6e64-472a-85f7-0eccf96dbc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e5dd1b-32a9-43a8-981d-4658f874a6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d582bc78-3576-41af-b7a9-2f4a4db6bd12",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766d76ba-f0f4-4db4-8bc4-70aa03930b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee208aca-e4a9-459c-853d-89d85f430b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796818ea-d238-4788-8b2b-655fa127015b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea9686a-cf28-4812-a319-b2d769cb3043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b28f917-ea9d-457e-bf4a-388e275ddb8e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4643674c-216e-46f9-aba3-68ea101867d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e3e2b1-792a-4ac0-b455-c93e7c1efc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7b5e0b-1ffc-4d80-91d4-f9687c45d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd12333-fc11-40e5-9c95-955e6665dfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ea1a33-f489-4608-9794-8d40c0ddd8eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19453fbb-9084-4972-ae23-4fd3e284fe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e351e56f-b925-40f6-be2e-7b543330b018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8272af90-a7a1-4f5f-9f08-55cf34b9de2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c89303-38c7-494f-aa8f-02fff88ceb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59f1187-86ce-49e9-98b8-097c4792304d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198053b2-00ed-459b-85f9-5b94c406995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4739c329-1ec8-4215-a901-6bd17771f80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb8042-b9b3-4edc-94a5-ffb7f56d40c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75de21b5-01c9-4c4e-b283-350b915beffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0ba104-8f81-4ad6-b92b-1246af5cdbfe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27baabdb-70df-43a9-b95d-618d151a447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f005c2c1-b35e-4e05-92d9-0cf11a2d3940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5b7888-7a20-453a-87fe-19f28e558dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d92e56f-ad34-44ba-b356-ca997bf4cbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303b416e-7702-4223-ab38-5d6fc91418c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b7501a-36f1-4397-bce0-1d8ea144db82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327ea328-b0e4-4fa6-bb55-843ae8cfbd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783b0f1a-4cee-4c65-bed2-4f5967a51620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d89c15d-cc6a-4916-be45-446da16636b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d75f438-6bd8-4af6-be8c-5766d546403b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203ce1d-b78b-48cb-a7e9-e40dadea2ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65171fe-f398-48f5-a867-77564567efbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4679a960-69ed-4835-bf5e-de47753e809f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8489b508-2f8c-40c9-bed7-a5501e901c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a02324c-65d4-40db-b44b-bfeae80459b3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08309b8a-faff-4de3-b59d-7ac6c5990122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230ea34c-c87e-41b4-b3b6-8d431f86d836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6072fa34-6ba9-4ebc-8bba-b2ce379571d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6f56d8-b3b5-41c7-a838-425f51b01e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7bb310-d506-4dd9-9981-ae84cdab33ab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699ecbc8-6a49-43b9-8ec5-6aec42841918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc79ed3-7813-4e66-9498-c0c0d90a6634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a27dd4-d235-400c-b3f4-1d7da932ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8940de69-f6ce-454c-aefa-323614c14861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf8ce7a-9df4-4e9a-9de8-c1d627c44dc9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b69143b-4b9d-4c5d-baa1-42d33e38cf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca54a99-5db4-4d54-97b3-ad124397a170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed8a786-0502-4086-bfc4-ac478d8f63af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d8ef07-b38e-4e94-9436-dd239677cb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a18af9e-8fe5-4a89-a04e-05046239b5e8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82735e4-d963-4dd5-820e-ae87e1d42bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fdf6f5-8597-4ebd-b6c2-f76b7ebf0206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b3a117-76ed-40fd-85ef-de0b39d27270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc87165-fb53-4be5-9150-686a6f468bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902a1236-6ae1-4ff9-b0d4-7148591f4191",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f349fd8e-653b-412e-a730-4fdf9f83d670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d91fa4-2f96-4dde-ac10-43ac702b6515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d1ff49-7a17-429f-85d4-4c62a3d742ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3842f8-3625-4458-97cb-a4436229bdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e9bbe3-8966-4cc2-a2d1-788eeda0cf04",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31d424c-b9d8-4686-b83e-7ca55ec1b7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca199ac-f836-4c36-8c99-d415d49a2c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83af136f-34a0-4dce-a0c5-adf96aea0999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df304987-50d8-4e2c-a0ff-01b90928d92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96285928-706d-4153-965d-40063ef15638",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cf7583-cfc9-45a2-8362-a18ac06c1846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178b4055-b962-4783-bbd8-d9c14be3c932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca6d109-c865-47d7-97be-b9c7598b5d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad1eb05-a98c-40fb-8c66-f8c38e751f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41da8a7-49d9-4ef5-96ae-22ed6ce75c54",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600d48c1-4f56-4477-a4a5-7ecf5483cb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935c9752-2990-445e-b360-bf31868b983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda710e0-07b0-475d-a4d9-275a2f28cb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e4537a-9b4c-4622-92ff-53e954a60fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40dd1e4-7580-459c-94b9-1bf89444620d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568deab0-b9fe-471f-93df-989dfc096fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e758c7c-0809-4d0e-9877-3a1612a3ac44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d48655-5e08-4d25-8325-cd739bf3e932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82d7fb9-2ea1-4561-92ca-9dd0d0b8915d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df800ea9-2536-438f-bea3-93bcbcc318e1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a9d103-9acc-40a5-bbfa-09eff51ca158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8842113-5d38-477b-861f-4da2d9e46e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cab062-5aed-4eab-b5d6-1ec6b1ca18c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b252d8cf-76c3-4281-8a2d-0f8db15c4f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f32c484-bb22-4ba5-aff6-88f5b8b45cbf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3e2d45-cd15-4024-b2f7-08722db34d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e1e59b-664d-43d1-a4e1-2275e671921e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cdc151-31ca-49b3-9c34-8b8995aabc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6e9851-6c30-4c52-b802-1e7de23bee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37b1fa1-9d67-46b6-a470-fcdd8caed87b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8a8ab1-c49f-4290-a9d5-992dcb5e999d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d0a320-b24b-48c3-9527-b4db65007a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2306abf2-d713-4d15-b9f9-7abd787f515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "064d6c29-c185-48ec-a4e3-43ab545c01ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee37b126-5375-4ded-8cdc-301f3d292f36",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c19c10c-567b-4c77-8083-3d9b3881dda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84ab15c-f7aa-4110-a0bf-e71b42b87a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4362a8a-d0ad-4671-b9bf-a84519a88118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "463ca481-8a66-4341-8d3b-f7e55fc07044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d7b94c-5f7e-4fa6-883d-d7032ba741a9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc6ed1-e1bd-4f3e-963a-60c1142ce521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566ef54c-fcd8-4518-97c8-1b60409c8fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b089e699-f140-45b4-a19f-182fd234fbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf63002-42b8-47f4-80ce-14fd3324eb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8788e08f-aa65-4937-b58f-6b45e5987502",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e4843-15d5-461e-a77b-2e66f6b3fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863eeb33-093e-42f3-b1f2-4ae06a5682c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f04d03f-c255-452f-bc0f-6a0ec36043ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6bb764-be95-4297-bd02-e4fa58fb5739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48acfe8-ec6c-4f84-82d4-1a2041da7dfc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9907d27f-18f8-46e3-9ec8-3d3fff6fbe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f42d64-4e8c-4551-9fa8-a8cc349863d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d40ddf-d62c-408c-9117-b4ff8843ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a1025d-81fb-4669-8244-c5d3106d0737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ce2148-0d07-4ba6-9788-d698ca24bb9f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc487cd9-b95b-4207-946d-84e91588f4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10097bdb-86bc-439d-9da4-16e4cb9f6d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3786d336-6ca6-4b39-81e9-768406e07da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c887c6-8a9f-48ff-94a2-c04f27faae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c10fc0c-f789-47a2-95cc-76d05409772d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c9677-4a54-44c4-928e-130df6f54f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152efdb0-b3d9-4d21-b568-8071378b4f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1744ee2c-c78c-45a6-98d5-8c95e10c5305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e5b531-754a-4134-9cfc-5e1e0be829ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03ff428-247d-4e18-aa6f-62565649a4fe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4385d787-99b7-4982-aff7-760e531c1a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc5b1d9-1013-4a27-bfe2-4ef6a94616ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e638a3f5-0ef0-473f-806b-12b505add247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0874511-63f3-44b5-813e-8c09974e2e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69e3dce-c750-49d6-858f-0146d1247573",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8e60a6-c37f-4643-bab6-01776e10c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40129bac-213f-4b8e-9056-16f52e384c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7396c6-0b6c-4b56-bf82-43ceeebfd4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fd3d3c-4842-4ccf-a404-20a444cd7468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac0ccd5-9e49-4904-b684-d285ecd30fd1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0061b0db-dc66-47c1-a645-0da256ba8fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864c3696-a498-4b98-b290-653ec563f383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f235e-5e50-4403-bc1d-0caaf02d403a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6b5b6a-8d0a-40a6-a140-1000c7bfaedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653ac4d3-ac18-4fa6-89b5-93f3ced3f564",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c37622d-3056-4511-b2bb-f302ba5fcd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a908291-eb67-43b7-85e1-edec8efe4abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab134459-856b-47a9-b604-604374cdc834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50147dd6-e971-4028-9498-7f4f2273b4e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "144c2dee-bfe2-4862-bf3b-9b5d7d36f099",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d5288f1-9e16-4e47-853a-2b2c0927c63f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34598d50-4ec1-40a8-a980-8a006b29e1fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29ceb70f-ee45-4810-9d51-a3224dbb65aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c46cc9-f2a4-4ff7-a5f0-729dea4a8348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e6cb8b9-585c-48d6-b857-3122dfdb0f01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c034691d-2c8a-4dbf-aa69-a270b60dd4f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a1dfe10-80f0-43c6-a086-2dd794b5ce5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "def1480c-b7ad-4175-a391-31dcb03ce12a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da72d6c1-4c6d-4bd1-9e8a-34470c1a5730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4498314c-2431-4fa2-930a-4619de7bc798",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2df6beb4-153b-44fa-85d3-ea1056716138"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4139775-ec34-4825-81ec-51152d795382",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df05182a-ad39-4e9e-94ed-367ac1e7c67a"
            }
          }
        ]
      },
      {
        "id": "5a16d42d-3d37-4af3-a1dc-e9b4a0f1cdcf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c0ec7264-5067-4e08-a824-ae2ca982a543",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e9d9afe-7ec7-4696-951d-cf6aa784eca9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a9646a5-1e29-479f-8a22-a1fe5c1742a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865132c1-5c20-4529-9703-2b6596417579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13ae55c-00d4-4a40-9761-1c712d902608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e42a726-8b04-41a3-932a-6e64d6c74c8a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27547566-491a-4d19-8679-4daa52b2127b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3756fccb-bcc6-46e6-9e0d-01968effa9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a24eae-997e-474e-8a39-9a83bc7de999",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be616659-0ce4-4a07-8e44-8cfc88892289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204f98e7-f94d-40bd-8e32-fce2d48046eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b769ab0-c20c-4003-89d0-882060f8d4ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a108b1-a3b6-4728-95ac-c89524e40ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1262904d-8f66-42fb-9c15-b161fffa8c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cd2e7c-9750-4ac5-bd90-50db35052ed6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287517f6-6e3e-4bdd-b8b9-4450376b0056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5371aee8-3025-4d08-950e-8fdd7ad17793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8018e3-d0d9-4dbd-9c3a-af5b31ab73d4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4063acb-0033-4d0f-ba49-e189f8fa34b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07c0db3-0e70-4306-bb4a-465e8de8ec0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e68683-fba5-4044-8328-9dbc8da76dfd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1587c1e5-d672-4877-a25d-ffacd3bf1018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276d07b7-a8cc-4e56-83b2-c033c5127715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bda6af4-2b25-431d-a938-b53d8532d9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb584af9-96b0-412c-917e-47f5ba87c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed6c37f-6339-419b-98ac-882606a945d9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93306a96-f4f5-48f9-8b6a-73860c7fa0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7eb380-95c5-4509-9de6-a0a3f154b22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68a5f24-2327-476f-a05c-6f55ab91804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e2dd77-bd79-43a1-9f0d-79734ced0182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4984a025-e68b-427e-b84b-5aa0ea1e3cd2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0f11de-331b-42dc-9428-398fac7a9371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c068ce52-de21-4773-b431-f2b69a25c89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3372cf4c-6f46-4106-bd0a-7bbe6dc77bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffeb2a8-1604-47cc-8665-7ef27b99e1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7d6a3c-5e26-4c2c-ab65-7cbc5435251e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92c8eb9-594f-41db-89fa-1a12c5c142cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2786447b-fde8-4a6e-a0e3-41ce2f7134f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fcd6ea-f85b-42a3-87cc-c9a66eaea572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe2c880-b250-4de7-b5de-f3627809c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12958df5-48a2-42a5-aee2-d74ad296c6cd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba717d0-3d58-4b31-a1de-27e69d3ed005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb7e2bb-fb85-45a4-a7f4-28cd45c72223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8cdb1e-517f-4c5c-9ce2-13fe5cae1043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4eab4b-bdba-42ce-85fd-c2481107c259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a7e27-24ac-410e-82aa-6505e36f83fa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384f4ee5-af70-46a3-aa9f-18146c29c54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329bea00-2a43-43c2-a2e6-dc1c97bc6d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0d5155-fa92-4862-9ad2-c09675f97d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15faf99c-f287-4243-a776-50892dbfc512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fc1cb7-73a2-42eb-8785-289ad5ea5127",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7eded7-1446-4cf6-8184-47d21461c22e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928ae82f-7e3d-48e8-977f-ec0c18216c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e280d53-15de-4539-9987-9e56dfc1ddd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c9e278-0505-4e34-802d-6f1501cb24fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66966c93-708a-4e8a-ad7d-a10f1bfb2307",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5003ca6e-7a92-4c30-82ee-e76093815a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cbf14a-c5f1-4f8c-9e36-2fac455ef31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229ac470-84ec-48e3-90f8-3925bf9850fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a25cb57-1eef-403a-b556-915a55754cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332b4e70-17f8-4174-9b01-3c00a04e0336",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c145306-2d33-4765-a7c9-27e12b728ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b73fc9-dcad-4c76-853b-01487ae7e26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e2faee-6d28-43e3-b7c4-b9aee68f1172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351e554f-284b-4fcf-9851-2c604695f46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170a86d0-d319-47d4-aafc-2e2175d64c82",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0627bf8d-a5dd-49c6-8569-70b0fc97674b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb7fff5-9f05-4baf-9941-ac5ae34e5eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f00dd4d-778c-480b-b216-0b7d5e9c7251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fad96c-6408-4ba0-ad16-772d955a7181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf08d5c-837b-4339-ab89-e8390ad1a5d3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0805020-a160-4b4c-a926-b8168a9d335e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368004e6-d657-4ec7-9169-b9484b57412d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8b4e60-0bea-4ed6-bcf1-ed395f2ccf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fdb8a4-f25f-45b2-9b0d-71f9f9072de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbbcf58-cd68-46cf-8a44-a1ab5e42121e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366f0889-1924-473f-aac5-7dc8f88d4f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7339528-7a1e-4578-b48f-623d2aad1d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68619397-71e7-4a14-a358-61608979dfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8243b84-fc15-40c6-a5e9-c1de736feb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce6cf0d-feeb-4482-8092-3f59c083f17f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fe8e6e-e0b9-4e80-b9b5-7fb7ea0880fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c75782c-af1a-4999-becf-0a9832091ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e1df5a-0fdf-4b7e-9447-97423473e22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6593a660-ab3b-4a90-aab5-a885e51f1466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bb7449-4625-48d0-aa0d-87bd68789892",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac5d2b9-1398-4627-bbb4-47c68be0cd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d83203-f029-4e8a-8b70-83bfde8d2b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ca42bf-ff36-40c5-bbc9-f9fedd3b26ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2342c5-b4bd-49a7-9f9b-8b88fa877047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be68b9ee-740e-4756-9bcf-9b1a5999c26e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9586f7-b108-4d06-bf26-9c388a8567f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ae67fe-67b5-430d-80aa-b06d61212269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0367dd7d-2804-4183-a5a7-7aee0ce41756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef3fb83-7926-4974-8979-4a7ab788c1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ed6c6d-92f5-4ab9-a4e8-284cc8eb1ad7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ae1393-82a0-4a6a-845f-98d68b4eb37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45a3af4-c845-4da9-b3a3-c25cd2aeb90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92230715-8889-4428-8abd-69b26022f4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47da3c1-1582-4e73-8490-5d01130dfd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3926fda-f2c4-46e4-95d8-6c09871fbce2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6220cc9-4acd-42d6-99cc-cf0990c5b1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33f65c9-b45d-4192-9fc4-fd8e2445df5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c406b80-4b6b-40a7-a325-2fa0f7ea5ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274afc8c-6f23-4146-9f9d-360a95af35df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14baa63-4c40-4e1f-bb95-b33be4441d6c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770f225c-a291-4aaa-a0d7-406b7e3a74a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982c222d-1084-4175-933f-ad6630a7fdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6420bf-158e-4657-84fc-d75dbe4653b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32057e7c-0527-4b6b-bc00-ca8c396cd92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c145eae1-c766-4b43-a876-0b99dd08f241",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ad7d80-3a9d-43f3-9ea3-0fab4dd01773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780789d9-61c0-485c-929d-43194816cdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33731f8d-e79d-4453-8083-f9619bba7b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ed13ca-f1cd-4f0d-b625-dddf862aebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59115929-049c-470a-8756-de1b36969232",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88cfd3f-18e2-4a9b-9d81-4e5f88bb8766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5c99be-7ab7-4f3a-ae25-cbc313387d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b462413-a03a-40dc-8256-b5173429809e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017b513a-99cf-42dd-a7f4-2ed9dde6e7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372ff3fa-d9a3-4b8d-93dc-58af12e7bee4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cf9dd0-9bd3-4ab7-8963-5ee133a9f751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d572df-a1f0-4dc1-b1be-ac7de5e71c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac39b9f-5d96-4ada-a46d-130d075817fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2435bedb-c941-4bff-aed1-917fb3b19af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb0b7dc-e632-4d64-bf45-ea6e27083e3e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3d5f0c-3cff-43fb-8d2e-d6d0e27b117f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d955f1b6-9088-4d96-837e-60afebca227a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d7300e-767d-4fa4-94f6-44ba58ab248c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acf31f1-3142-427f-8048-1a69dc3223c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51378f2-7d7e-4eb0-9c83-68ee12cc9447",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f6ce37-5e3c-4280-a22c-d0cb2517aa86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92554361-daa0-405b-9fe5-000690bbc2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5deb8b90-22a8-49d8-bc3e-a7376f3b8c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93584c2b-fd23-4cb3-8959-f4f8834673da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcd9a06-c23e-40d6-8390-fafa77253c13",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b74d751-460c-4e44-b466-18c5fb4915d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec1a572b-1c2d-49ba-a939-26459cd42419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ff2379-9799-40f3-9111-c6a8b356a0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0a994d-22f3-4ac5-8b5c-cf66c94ca01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69642ff-c84f-48a7-b31e-e310f9bcfcf8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc79722-a953-4755-810c-192169da2135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab30acb8-1c05-459a-8e96-710c3c851c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c076e28-1664-4cd9-a5d4-78e944c752eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3488bea6-5351-4611-8955-e3e643dcad49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21636388-0fa6-4e49-a3dd-ccd6ee78f437",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1c2d0c-59a7-4f0f-bf90-7857362eb44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed348cbf-ac97-4d42-91b6-cef6766eecb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4afc9a-44a2-48e2-b93b-782450501999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47d67d7-b2ac-46c8-8791-6144874802c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f3b9ab-b6c0-4050-a7fd-8511ffa79773",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872f8655-ab32-47e4-96b2-cd9d5327c1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a13e39-42f0-449d-9675-43dd30668890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e6df17-a430-4719-b5bf-5f5ecd41998d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1161bfb6-d772-4c0a-b4a1-02e7ccef4116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e59ec6-cb97-4bd3-bf1c-6d699399653b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6f16b4-b3fb-4299-807f-ee8775de51be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74d3d92-e4f4-4aa9-90ab-52f3acf9d678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48279f86-6805-40a2-a40a-a803713b8835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037caa7c-814f-4ea1-9364-0c3dc08129cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c95e31f-3dfc-4b41-b64f-f1134190a126",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5ee26f-944d-4612-a136-a5249fa8cea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cc4d53-471c-4872-a768-1eb45f583578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c547e8e-6bd3-4a59-b5f7-c7d5817207bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87308ef4-a11e-4f25-b142-806cc188a417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d17fc70-bb54-4da9-8082-a844e1a6e6b9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bbc977-adec-4d17-89e6-e1b6a79a24f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878af896-fc88-4a90-b163-fde7880991cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae8eab8-dace-4f15-b804-38b998b28a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83076db0-d875-4546-b9c8-195e1cdb1741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30f8799-db36-4c97-bc8a-d3e10d2d9b02",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22c1648-335c-45af-9d27-9d4e09f12eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6864ba2-be6a-4aa5-8d21-aeef43c489a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1fbfe6-97b7-46e2-b89f-75dd4f3463f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83a152d-992e-4ff5-a6ca-7c3379ee538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdbad48-cb07-4cfb-8f19-06138fcb6044",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deae0f79-e043-461c-a078-eee45702a644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f864a5-1157-44db-b319-d73fdae57e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a54bd54-89fb-4776-b0d9-b4adee13f2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0061917-b6e9-4d1f-8cd7-bea6dd906b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb98a19-340c-410d-8fbe-53c001906bc0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6183730-b8dd-4966-8e00-c643d1bdceec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd675817-6876-4d2f-8bb3-e0141cda011f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d07c6ad-139a-4ec0-a3ce-329bc2862e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0142accd-8b8c-4852-ae04-81ffce0dcff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f333426-f945-419a-84b1-d96d6172b959",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bf4e8a-8e7e-437b-bfe8-5c95526ed436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c303191-f021-4ae3-ba32-94bf27a21296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9cfba6-ae72-47d1-b690-4026d50b53a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01775397-9277-443b-b6b7-bf054f1af3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d8fa94-07f3-47bf-8230-69f967024579",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4561c1-9dbb-43b4-b30a-eb253c191c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdffbf51-c64f-481a-8690-981c9d48fa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb744bc-eba1-4f3e-bef5-3c92d53fde75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61855aa5-c5a6-438d-8592-8cf300178fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750783d3-c787-4584-9a85-15e8edd758ac",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b6782d-a063-46e9-bc77-d0f4459d1ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6638b83d-90e2-4bd7-bab5-bf3c94170752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6907e60e-abab-4234-bd29-f73fe474d562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793c62ed-f755-4906-94d3-0fc43d4af6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a02ce0-7a17-49a3-9f39-7d1caaadb2e9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f68c53-b2c8-4c29-96ad-a05e7ad483c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18965fea-b661-42db-82d6-b214f93c92ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93167108-a6f2-4b96-9636-fd3d9422d2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fa8e03-6787-474f-9d18-7aa6d1c06645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b383cf-dd8d-4b57-8828-206a289d4f29",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9618124e-c072-4e5f-890f-184dfea885c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a862740b-c3e2-4fa2-b088-97f4147dd02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5cf95e-b394-41fd-867a-d01661c124a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c87cbd5-9e1f-44d9-8de4-7fd315bc1eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e22e41c-65c1-4315-9956-9288c8e74cd4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099a312e-3f29-4ac3-86ad-bd2ce271891c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3695ad86-d68a-403f-9258-e76d9aeec080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616203cd-70f8-4054-9a6d-e96972ce27d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e311fc72-7298-4b56-a293-f3c5cd5b5eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e120a3f7-d297-4912-a8a3-ccae76993c82",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b675a4-bf9f-4889-9e44-a049a8d1f44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3df1163-fea6-426a-9e03-aa14bd0fec91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216a2b7a-7af3-40a3-bbb3-fefb829915ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a869fd5-eafb-4705-934b-191f4a69942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c671099-7f86-4719-89fc-a1865e51d29b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2a7b95-72a0-4848-b4f0-e6c64d7300ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6ff74c-8684-4f81-92b3-d3b897b7217f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b747a2a8-6e22-45a4-b650-b0adc76bc873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81dce5a-bea1-486d-bc98-da0afe773dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316ad4a3-9770-4a10-932f-b6f3cd4b333e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c3ab65-660b-4783-8fb8-7234a77b2b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa433ec-c9ec-43db-9644-453b6e8e4b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3c1345-e1ed-4b7f-b145-334585cfccf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6728b413-1241-44a3-845b-fae137b80e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a74848-7d76-43bd-a3fa-6d6644fd688d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caa3153-5d25-4f58-9e0b-75da82cf43aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db95063a-8aac-49e9-9e91-1141062417a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d762d-9c80-4aba-8304-52127e61eab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aee1d57-3b2e-4090-95d3-1e95ade6fa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d48e42-60a9-43eb-8d5b-efd66a17eb49",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7391f68-6772-458a-acce-8a50ab98a4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc3c47a-f6c6-47c2-be3c-075c49dcc6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2e99c7-08c5-41aa-a990-3fc8fc84f3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05592864-a9f0-4af2-83ef-ff28a7ddad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746b925a-f2aa-4c2c-a7cd-7b3844a9ea48",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ae3aa8-d300-45ac-8c47-1f89e977fb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9260d9e-78d6-4ca3-9efa-38b7c522847d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0565f42f-a4e9-46f9-b442-0285d94b0d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8c4543-ad1c-45dc-80aa-74bf1860ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a180d9f8-88cd-4694-822d-5d170ccf5d5d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6769c-8772-494e-8af0-992e37911ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e562578e-c330-4ade-999e-a583701404d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7464fe40-3a43-44eb-a746-5dfcb66db303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5617e1-e1b1-4ecb-85ec-ad3575e03e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6bb46d-d128-47a1-9800-b40dd4849c42",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b0999-349b-432c-807d-b01b206b91d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2390df-93b9-4b57-bc2a-f9054db39a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d8ed5d-aa85-416f-9896-93592d213d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24248491-95c8-4599-9a55-86de667f97a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dceb7d-57bb-414e-abf0-5f1679c46095",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cbadb6-2660-43ce-97af-393b9750c6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab73262-2a79-4734-b8ef-9b4e62658d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5462dd02-fc52-4973-8d90-2cc644e1ef94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5459e46f-6060-4030-bd38-f842aa3d56e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9a546e-c7fd-4684-8579-607b380a0130",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5b2a96-2a28-4cee-a5fd-67823b1063e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8813fc-46db-4859-9d99-8c713aa6a6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076bd253-f940-4f9f-b9f1-fba09f1503fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e1ec81-4c40-4e0e-ab60-a7aa20fe37d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f02a082-8a86-4544-a42e-0a9f5709558c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8848c880-0049-425b-8925-4003f034b6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f5fb07-482b-4274-941c-f4195d6384e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ed00bc-06e8-4fc0-ba24-46372e45b716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35681e45-48cf-421b-859b-d19d629585ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00ab6aa-5124-4340-9d29-11d0a499a450",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3f9449-be16-4a0e-bebd-711c7722b56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7062e6-c594-46e6-8d21-9bfb9e320600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6457a33-8a3f-4611-b04b-144ebdf6e47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcb78d3-0229-433b-9c30-447fcbb2fb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ab21f-07d9-4c64-aa7c-1ce31d83af75",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b626897-62bc-4d2c-85e2-1726c6feedfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b3c78c-c164-41d3-8370-d9616ef46e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19c3fcb-c90f-4368-a036-8e03eb00887f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efbe832-7a70-4b30-887a-570a5de056a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e062a22e-8869-41fa-8f26-2e233e74003b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c3f0c2-0d5d-4961-9876-5ca58a0493c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe170a3-2cc0-450a-8be7-c6aa31f408b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03003b7-f955-4925-b437-b8436167910a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db681bba-1fef-4a7a-ae30-39ee18159e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b234782-8782-4dc5-90c3-c145e95a611e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d7fa69-e1df-4bf6-8fad-10a5122bb91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5345f718-b648-455d-933d-9e72c5d769b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0180fd08-fb94-4adf-9ab2-4590bca8461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411f8e4c-9fbc-4876-bdb8-5131ff8392c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c934258-f692-4454-b59a-c42e9f73eb31",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6aa7bc-ce7e-4f60-a498-3edacdb8b2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd2fc6-5ec2-4e42-95c3-3c8e4a489dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539c23c1-7d5b-4371-9431-872ab04e7fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fe5cb0-4f70-4c36-b4a2-3e8a4bd2b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4ff382-1584-4032-a20d-03cc9b0f6274",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90214af3-e89f-4427-a126-dc8c9759b9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bd3e7b-716b-4f66-a0aa-82f952a983a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f27c171-8bca-43cf-96bc-496555b23d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722e96ec-4db7-4064-886d-51e17ade47cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff64b4a-7f50-41dd-8a69-ad7baf4a4040",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fc4354-dd18-4c38-812f-479911f0b3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2facead4-1e35-43dd-a91d-cdacad62bc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f2027b-5507-43d2-ae75-a7d8542c7a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a574b4-2288-4924-9e3f-c4c0723584c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e42f46-e17b-469f-82eb-840bb71d6690",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e286de70-01c4-42ee-bed8-24604048037b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0d3768-857a-4824-bc53-a59bde7776d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fabeae-a305-42ee-94c7-0f24c4e7f0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc030672-fb04-4de6-b2cc-bdfc5d974288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d3af27-605a-4f7d-9b9a-d30cf286cf3e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36825bff-4191-4d89-80cb-1b2a56486965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8cd8be-7c1b-4a30-b40e-8babe053d8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b5826e-f99d-4ae6-8731-1826320ffb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba24c529-e62e-4ad1-a441-11e98bcb432d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7992507-ed88-401b-968a-46c910679ec0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ec9be9-ab85-4f49-bf47-a784a99f7779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f523d6-e2c2-4acf-961c-9f0f8542520d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbef4274-49f7-451e-809b-3474dd3d42c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc68946-c737-47b4-b6ca-cdf50b6bf7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5918e5d9-8be2-4fee-996e-0d05cbf84030",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a179a3-6fba-46ea-a0ad-71e2ffc53fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cd853e-602d-48dd-8423-820c0fc9bc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a94467-ea7a-4644-a214-491cf40250cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de2a411-4851-4b32-a54c-369988cc6366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd97a71-a1aa-4af1-b6cc-5de9e39af5be",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47cbc10-5a68-4e16-b100-2a07a8b044bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7573138-64b9-4a32-bbdc-059edcf399fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dde851-1c6a-4851-82a8-0af55d25dc39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80844f36-5a22-4a13-8357-72b28d427b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6442cd3d-d0a3-4f01-98a5-c6c270ba2381",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a399c8f2-223a-46fd-9931-395a78b46791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1882989f-69f5-44d1-9d89-42251c77ddce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806693d0-c4b3-4e8d-ab60-e3b878a42518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9991351a-906b-4f1b-9ab6-c987d64fecf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f259db95-080e-41ef-9038-630db33fc0f5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aa36b0-9de1-4564-b70b-3a15faf337f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e40029-95dd-416a-bffe-8b43fe9a3f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fba453-4912-481f-a487-8eb0d87d81b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0279932-6237-4ded-a137-115f26d41e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b669575-2b84-4782-885d-7a333e632247",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7861744-84fc-4421-b6ee-21038d2f3cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319dfaf1-dcfd-464f-9a86-6b9cd0a773ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1875c6-3757-408b-96f6-0aa739c2e2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b72fe6-d042-4d22-bb6e-569386f65349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a502d111-9817-43f1-a3d9-1ac6fa23ef88",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e9be8-4771-49be-b57a-98e65fd0e071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a7a0e4-f330-4233-8970-481dec42a896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf3c67f-e1e4-4110-92e8-43f60ad90567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728498aa-f403-43a2-874e-988878d601b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ce46e8-2a2a-453c-998e-dcbbaefde308",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61fa1e4-66e4-41fb-a68a-42629b89ff91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c28d61-78ee-4cda-8834-3634e5a771a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85f27b0-8b22-449d-b419-9182f633ee24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4819c393-f93d-41ea-98e8-1df9742c6555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ad8f0-6695-4901-8aab-9cd060320c35",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70baf2a-1acf-4742-8140-7a1a39c76d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f5edb6-710e-4f46-81e8-18eac6c408d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735861a2-64aa-41d0-98f6-88aede1a4682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc8c5d4-1924-4a1e-8138-306bb546993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ba698e-5f8b-405e-b544-3cf732e143cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0da5451-e6ac-4fc8-8561-409cf3dfefc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab89149-a6a5-4faa-af3a-27ce9e80ff5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c6e17b-764d-4130-8af9-562907516860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3294fa16-66df-4636-8068-bf86219f4128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea25269-0995-4c47-b0e3-00a0799fb3d4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4296e52e-5edc-410d-a50b-02b81e0b22b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d418c0d1-6436-4542-83b5-e51ff7fd833d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591f5780-2df9-4afc-ae08-db2f7824387e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efee7f2-153c-4dd3-a52b-68d879003d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d3ccbf-1404-4a2d-9c6e-238934b403fc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703d95e6-d595-43f5-b2ca-87a78ecb2769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2021f3-65e3-4366-be75-36a599fbc881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9b5d12-df25-4439-ae27-45c96d7ab4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6126cf4b-f83c-4ed1-ba1e-2d029208c12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b217c79-d311-4e5d-8518-14896cc3e526",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cd6961-f7d7-4d74-8c02-80365ddf7f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39c69d2-346d-4a2b-8deb-e7f6fc71ebe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6774bcf6-12e1-4b24-89de-5dd262da2822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151faebd-c93b-43f2-b546-fd7942efb08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf9c6ac-4c80-4e2f-9df5-b4b0165aceb2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c643476-0da5-4f57-a651-cd3ca8e95e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f088b20-a22c-4dd1-9d73-4140111239b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06330496-7b8e-4dfd-b840-66d68ee0038e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d53bf0-26c5-4867-87ba-4082354cbec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a5cff2-c869-42cc-9a1b-be2900a566f1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6fe1c8-5d55-44ad-a914-ae263f376483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f10d465-7dc6-4bb6-95cc-75ab3c64a810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7250fe0-9b8e-4fde-8320-6eff7325fdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993b106f-e842-4230-a588-f7fe9f0e9c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa10241b-3348-4219-9748-74dda5a7ef23",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5e91ee-5cc7-4dc0-a0e3-834ddaf0dd98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8905b80d-00ab-4d67-aa17-6e1fe2366bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120721be-b232-4cfa-ac04-fb09d8ad2804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c8e057-2fe5-4b56-8459-67540b61e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce1b8b-fec4-490e-961f-827c7414616d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c028841c-ef21-465b-a2ef-335bc4a1be08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfed13e-6a31-48c4-972a-5a70feb2682d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22e9244-5199-4759-8dee-724977e6593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd52c237-7f01-4c84-8dbb-b1a2116ad868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415e3c71-bd89-4464-899d-b0afc9b6bdcf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a153a5-2a84-40cd-a131-51daae1edda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352e0437-5d34-4c98-ab2e-c6f4b66e0645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74de635e-6dac-4fa3-9ba0-965dd9ff0333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6086d1-d182-4dec-ad37-03ec7626faf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe001f4-b4cd-4ba4-bb74-13ebabe9a35d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303beb77-3d78-42b0-a3a5-c83e2f54830e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4dd892b-36ed-47de-9de6-f48d21a95679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0357e2ba-128a-4b55-8807-9d40bc731b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd620f27-122a-46df-86f7-13bcd1ff2190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbcb5c2-887c-4a33-888d-d297c3ba16f8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e9a666-e247-49aa-82a5-36c3d6e51013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2017b251-4ce8-477d-b6f0-192cf98fcd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a50c90-10d2-4d1e-a6e6-19791aa1d2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07d4831-1c9f-405e-b8b5-d4d684590152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1c2035-0af3-434a-ac18-e32e7ce691b8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c11edd-9ea0-438b-bd41-5498f32f1da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bfa96d9-9524-497d-937b-49c8fafe1e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2ec3a-e20a-4232-a77b-74606e923f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ab544a-f83f-4b59-beb1-8bedf93a62c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6394e136-d627-4c7d-9d9a-982724bb8dfe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f764ae3-eb47-401e-a024-1236a96e7cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90102b12-72f6-42bf-8480-94852a758562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35996b4c-a188-441a-a48e-3209bb8fd744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de4bbf8-b0ce-4101-90c2-7e6cad4ba96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ead02a5-4fa1-4841-b985-29dc453cfd09",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d021e-8cc3-49cc-abc1-604b5e2d5b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90011b1d-2dd0-4b84-afb8-fed2d3e90062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10a3978-6c2b-49b4-ba3b-4674c48d3f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91f54ec-43c2-4dc3-8586-f83a188015c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3f49fa-5bba-4bed-b001-341300ecce9e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55967d-2167-49f7-b33a-d994014ace91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b722fef9-683e-4d6f-b868-924fbd1997e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e72f31-ed54-4ef4-9921-f04b02e61b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22511c4-1180-4595-a2e0-0be6b5a5a271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437baafc-d652-4b70-b307-4172b22c44ba",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c98936-29b6-432a-939f-402e29cfe2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8d5759-e715-4fce-adf6-aa4924fa2705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d53386-6acd-4188-a99d-eb11923a12b2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b12b1f4-a963-40ab-993c-18f466205bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29695159-f148-451e-8215-b316f5595d0e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606684ca-fcd8-4088-9921-d2aa66963e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be75cfe-007b-41b6-bdcc-c6ca50a49e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1215d1-58d4-4976-8c9b-b0d9060702ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de71b302-b0a3-48d3-a70a-0d71e307ea68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3942e85a-4d09-4362-911a-8a9e023da76f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588d8e00-e81f-4707-bf10-3e8983c7296a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a5ebcd-123b-4491-bdd5-131e984b560a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd76d7e-93ca-40e7-900f-bfb7c5fc6b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b0b662-f450-4191-91a3-5875db1b01c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c32dd-8b5c-4024-bff2-dc9bf6041560",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7070207d-653d-475a-8794-b4a4d78bbc37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1f7213-cf34-4e1b-8b3f-57e2283e3679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b167464-607a-4aea-bd15-2b114aa38bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe11f8a-6091-46bb-80b4-a98e58031e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb53c20-ffa9-4610-8b65-4ec103fcc307",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbdd264-8b1a-4908-b82b-b26cedf2e036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61afdaf6-c68c-43f1-b862-c50dc23385aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce1ba8a-6c3d-46a5-a28d-b1fe01f6d57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fd369c-a381-4b2e-a1e3-d25116370dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8d5d4f-2e40-4143-89e6-0b3680a9990a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6e04ba-dec2-4148-9827-d4213e624fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec20df33-09e1-491d-8362-f7c29db3c62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad544fa-82bf-4cdc-ad11-669b02b7ba75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2bba5d-e38e-4552-a0b2-78bfc6ee118b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba589ee-5b70-49f4-9bfb-b13500235189",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ade0cd4-c7fa-4b60-b193-1f325ef22c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc18500e-6c65-4ffe-b706-d6ffacceb6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6899f5d-a089-4889-aa2c-b6351824f699",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae7e036-ccc4-4988-bcd3-f68581505174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2ac944-6346-4545-8646-0557723144b3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030394d9-0589-4de6-b6ce-1cd910e264a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa801c7d-f909-413e-b56c-eeccb7b426ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a87a57e-7da6-4df1-b21f-05862c6996c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7cc4b5-6ef0-4778-8607-936411e08b7c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc26f402-c9d3-4e09-88eb-2a6d5d9bf9ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d152e003-ccd3-4734-a990-77cec7f5b6a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d7d3668-7427-48a4-b148-4857a425fa6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eaaea9c-a1bb-4e71-8248-1c3a805156ee"
                    }
                  }
                ]
              },
              {
                "id": "31873ec1-cc0e-4ce5-a0d3-e021439bb12f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70084874-49a0-4746-ba70-d800eacff5f0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9e9266-81a8-4513-84d3-f8c8a677bbd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5a8621ff-164c-4981-b8e6-7b777c04ea7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085cec27-4f36-417b-8fa3-307b8d96c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42149723-aa79-4639-837c-8ab5967d07c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66fc2388-ae29-4876-ad1e-ddbe344ec679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dad52a42-76b6-4591-b7b9-9183048c717b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3c104b5-5dec-47f6-a1dc-7b9b77d3a473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df45026f-5961-4733-b9d2-7bf83ba1864c"
                    }
                  }
                ]
              },
              {
                "id": "858ed7d5-07e8-4a64-a76f-c31c03cb4700",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b7876cda-eff2-4887-a593-b1df13e3dc5d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2917258-76c2-4e55-a95e-4c30d263475b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "70cdd216-2b04-4f61-a818-f4faedd53741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf69644-a71f-40d6-8bfe-9dbb8b050eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc238a80-a0aa-4466-b50a-e8f0bf106702"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f25e7c54-bb6b-4f95-b5cc-f477d1e376bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4407064-3bb7-4899-8803-928c855b0ba0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "541f9cdf-4dcb-4777-a700-ef1669e3edb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8b327db-ec85-431e-a10e-ecc4951d6a7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "632cfc24-96d2-4d22-a333-be1b074b7fb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae9e0917-7082-416d-92ab-ed39f1bf41cc"
                    }
                  }
                ]
              },
              {
                "id": "4c9250bf-9ce9-4262-ab63-fb9be1f7c92d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60f79e9f-5d52-4eb5-8dbf-1d1577bf7696",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "055ec6b5-41c8-4f07-a7a2-f90ea9d04694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09465cce-4f1a-444f-848e-f9451f8abe49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f8f97ba-8edd-4947-a31a-571cac279be2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e62c673-1ae2-4b83-ac6e-c70b9149bc9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12ed7d72-49cd-4183-87ed-fe0d787052ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdd3c50b-c53d-4c6a-87d6-9142bca725b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a06eda6e-9caa-4db7-a0a2-1d260b45280e"
            }
          }
        ]
      },
      {
        "id": "551edf49-1eaf-4566-9c41-9e0503f30b7a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "43901d5a-fc99-4c7c-bd13-9cefeaa63812",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a2256a0-f8ae-43de-a456-d0b74775d19e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34ddbf51-547e-4869-8b87-fef927b78374",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02878810-2c01-45a5-b13a-2faddba11b56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6b227fcf-ce26-481c-8385-f85c9c61ed8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7798c41b-b1fc-47b3-b58b-84f46e2abc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45da9e45-4801-48f5-9e2c-2f453a0b01cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "417ef0b3-eaa1-4248-82a5-98f2e16a9a59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb74370-2ac4-4957-a99d-70d636ba8d5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08778bbc-6427-49b5-bcc1-52cdcc05b666",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f7d94cc-839e-42e7-a3aa-5cfd91687c9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ab7917e-47c9-4035-852f-a1cea929c9ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "090155fe-d51a-437e-9349-a227f8180b58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fc10788-149b-44da-8fff-1c37595034f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c4365db-122e-4c55-a413-61b3ea79ee26"
            }
          }
        ]
      },
      {
        "id": "38234140-a392-479d-8429-42c262a07a08",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c48dc2f2-19ef-4afe-a078-bd4ad4103b12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c471f9d9-cabc-41d7-b377-47cf15bee5eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1335687-939c-4930-9704-67a59d376bd3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55a50d2-48d5-4279-804e-cb1857170f8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d8dd8de-2d30-41e0-ab03-d29193492521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5084ffb5-47b6-45d0-85e2-4d342d3ca522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6fcf9df-a0e4-4d5e-9395-1113c40c3cb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69bfbdba-8dd3-40ba-8428-882b60b8f8db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ab66c9-5a8e-4f53-89fb-a5f5216f1829"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54c2e3e6-8b41-45ca-99f8-9ff52f0c537c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba3bc26e-7696-467a-8846-4f385fe8d88c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f234e0fb-6fb6-41a1-a672-9b757dd58bec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88c0b1ac-5926-454e-aa9a-61a594a8477c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13f0d43a-8af6-46c6-bce6-0da4d54883d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1df1e197-eb78-40f2-8a44-10bbcea1cdf8"
            }
          }
        ]
      },
      {
        "id": "1ae56e87-f17d-4956-a56b-10c0b4905c3f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "24cb49c6-7d45-45e4-b911-8e57327aeeae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4159506f-d014-49ae-ba80-59ed009e08ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e9db5f4-5a1c-4e02-92a8-c86d9b5bc2f5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42170c64-174c-4809-874d-f9f4227b59fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f8a3a01-ca01-483c-a259-027dab5c8480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64a67f8-3749-485b-9eda-1e90a31c956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4f3810e-3704-4e53-aa17-d3f1baae75fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee7db5c-1a96-41cd-bc0a-0792b8ea0619",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f13b2d22-2582-4efb-ac36-ec217fb83cb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b094f98d-c0cf-4213-91cc-bc1fde3c1017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79d6b81f-6c76-4f48-9a7a-813df2c7e7d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81557216-2d96-4b3d-bd1f-00f3d6c13eed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79304132-7590-43a2-adc8-31cb157671cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50a83c9c-35d2-459f-a279-8f27eefffae4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74d8e284-7e2a-41c8-b6c8-5975a348f1f3"
            }
          }
        ]
      },
      {
        "id": "992e79f7-ce58-4c00-a1ea-aa68932ea551",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1802ea1-819f-4c3d-b025-fc72779dbcb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe50bbff-d05d-468b-97b9-7c212f53fb5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "822b2b7d-b60b-4600-b7ab-a3151199f90d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cad0e566-4cfc-4fcf-9c1d-2bacc9aa1445",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d205ea08-4c3a-4b77-9279-815c6b24a9bc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.86619718309856,
      "responseMin": 6,
      "responseMax": 346,
      "responseSd": 26.518855602005015,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689986496560,
      "completed": 1689986529314
    },
    "executions": [
      {
        "id": "45f3b3f5-4f84-48e1-9d15-632233ebe843",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86990b4c-fe7a-419a-9c29-747b7693998c",
          "httpRequestId": "fbae0bf0-119b-4a0b-b4fa-8460c2d6970c"
        },
        "item": {
          "id": "45f3b3f5-4f84-48e1-9d15-632233ebe843",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e3e8afcc-4636-46da-ae4e-cca6ca763613",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "68cdb733-b484-4e4d-9084-8711add70ad9",
        "cursor": {
          "ref": "94b65a1b-4a25-44d2-a560-3a17fe3f726f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0d5b5d78-f545-4f26-b408-7f182f5d6171"
        },
        "item": {
          "id": "68cdb733-b484-4e4d-9084-8711add70ad9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6341deb5-2dc0-453e-8191-6bff3585414b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "afb1cf21-66e3-459d-ac91-90dbd000975a",
        "cursor": {
          "ref": "7ae73733-5c72-4755-b0ad-2d3ce3f7ac88",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3e0918b7-c64d-4b84-8227-02bf09109c71"
        },
        "item": {
          "id": "afb1cf21-66e3-459d-ac91-90dbd000975a",
          "name": "did_json"
        },
        "response": {
          "id": "e09c60bf-8530-487a-997f-24576ecbcc5f",
          "status": "OK",
          "code": 200,
          "responseTime": 211,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d70ce1-23f4-46b8-9c69-b39ce5045f68",
        "cursor": {
          "ref": "ae6adbbc-0c1b-4615-a209-7920006ecb7d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b85deff8-93e2-43bb-bc5a-def192b45441"
        },
        "item": {
          "id": "23d70ce1-23f4-46b8-9c69-b39ce5045f68",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee65bfba-32f4-4032-b1fb-e602a02d4a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d70ce1-23f4-46b8-9c69-b39ce5045f68",
        "cursor": {
          "ref": "ae6adbbc-0c1b-4615-a209-7920006ecb7d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b85deff8-93e2-43bb-bc5a-def192b45441"
        },
        "item": {
          "id": "23d70ce1-23f4-46b8-9c69-b39ce5045f68",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee65bfba-32f4-4032-b1fb-e602a02d4a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc88c9ee-70e7-4bf8-834e-779ade74c1dc",
        "cursor": {
          "ref": "99421dfb-0a97-49f6-9941-c8bb29c4d423",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5cae080c-c71c-4644-a3c1-d0ce1cf8b56f"
        },
        "item": {
          "id": "cc88c9ee-70e7-4bf8-834e-779ade74c1dc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f9f5baa0-6951-49ae-aa95-282afc0ac823",
          "status": "Not Found",
          "code": 404,
          "responseTime": 346,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57765d6-863c-4027-be4c-1922bddf5c03",
        "cursor": {
          "ref": "e7171e04-e0dc-4460-b574-0abb76556f58",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6bab4cd5-5003-46b7-9cc6-25506daf880b"
        },
        "item": {
          "id": "b57765d6-863c-4027-be4c-1922bddf5c03",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5f17025c-56fa-4338-bfcd-48ace9de437b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e37c9a0-7aa9-4cc3-91b0-83f0e9945139",
        "cursor": {
          "ref": "819599cc-18d1-4ced-911e-efa2056e8e23",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d662662d-9355-4f97-9770-e96f1df484e0"
        },
        "item": {
          "id": "0e37c9a0-7aa9-4cc3-91b0-83f0e9945139",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "05b51f64-cff0-4889-879a-bce864332372",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b37bda-8b58-4838-b9eb-c58825a8f049",
        "cursor": {
          "ref": "2fe11744-171c-4090-b96e-4ba8c8f1ab2e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "683026e9-7fc9-4d78-a794-99472cb6e3bf"
        },
        "item": {
          "id": "77b37bda-8b58-4838-b9eb-c58825a8f049",
          "name": "identifiers"
        },
        "response": {
          "id": "ac880fa7-9b0d-49c7-b0e7-dfdb1c63e434",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d15ab25-4d5d-4931-ba47-efbf0d1ff52e",
        "cursor": {
          "ref": "491e6f02-fde7-492a-9556-feb5fb1caef5",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7b71fa8d-e049-480b-a84c-0362cd184448"
        },
        "item": {
          "id": "7d15ab25-4d5d-4931-ba47-efbf0d1ff52e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7b07a5a4-41b9-48a7-832e-a16f8116df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e902f7db-dcfe-4396-8451-4415d3fd150a",
        "cursor": {
          "ref": "a295ccc4-86e6-4714-854c-da09af260e0b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c78f936d-8543-4c82-a8dd-d38bded07c72"
        },
        "item": {
          "id": "e902f7db-dcfe-4396-8451-4415d3fd150a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "efbdd695-b61c-4dba-ab03-d598c8d6d8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0677f105-24b1-4bfb-a81d-332aa1739b1a",
        "cursor": {
          "ref": "3f16a4e8-f8af-4cfe-b24a-c65d2a766bc8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e734d840-1048-41ce-bf91-9ffb2ff8f373"
        },
        "item": {
          "id": "0677f105-24b1-4bfb-a81d-332aa1739b1a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "361eacfe-9a4f-4eda-b25e-d89dc51c8ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd855502-692b-470a-b4ef-d3ed9cfc1760",
        "cursor": {
          "ref": "f6a58687-3a49-4f39-8ea9-fa66f92c731d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0142fb7c-a8bb-40a8-bb68-ae1f2f45d4d3"
        },
        "item": {
          "id": "cd855502-692b-470a-b4ef-d3ed9cfc1760",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bd6b79a1-b9ed-4554-b349-8e9f33036482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4db92-376a-4433-92a8-29fae9779179",
        "cursor": {
          "ref": "3f96bc6a-3a0a-47e9-82e2-ea53a06745e3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e4ac8978-faf7-441f-a0ea-5ceeffff47e2"
        },
        "item": {
          "id": "cfe4db92-376a-4433-92a8-29fae9779179",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e52fd763-00b8-4243-955e-42884edaadf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b31e7e5-7884-481d-ae74-b123276858cc",
        "cursor": {
          "ref": "152a30d8-3e77-40f9-8068-97cdd0b93bde",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fe332864-fd63-4e34-82cb-a08c23ffa233"
        },
        "item": {
          "id": "7b31e7e5-7884-481d-ae74-b123276858cc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9adfdcc5-1808-4970-b855-12c858eeeb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6af362d-4f06-4f66-818b-99b2eed8d70e",
        "cursor": {
          "ref": "3bce1094-a2f2-449b-aab6-72a84cc88739",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d27291b-b212-4ec0-b389-5a3dcd0b9b1f"
        },
        "item": {
          "id": "c6af362d-4f06-4f66-818b-99b2eed8d70e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ea4ad8d0-8c4d-4a5e-8111-23c033a66c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d11d8e7-c240-48d2-97bc-90d789e85ca7",
        "cursor": {
          "ref": "e433a6e3-50c7-4e96-9edf-6f4a7a3890e6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5f1b0399-91be-4bdf-8f3a-86b27153da1e"
        },
        "item": {
          "id": "2d11d8e7-c240-48d2-97bc-90d789e85ca7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "06f2c98a-1dcb-48e9-bd03-bf9112542a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3702544d-dfe2-4d03-8253-30a00f955499",
        "cursor": {
          "ref": "343a5afd-f8c0-40e6-aca1-107a972a19c3",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "51dad4bc-13b3-4b9e-ba3b-ae1c4fac1ce4"
        },
        "item": {
          "id": "3702544d-dfe2-4d03-8253-30a00f955499",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "66ee15c2-a361-45fb-97eb-80c0b09cb97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c5427e-ae7c-4072-91dd-17673e18ba4d",
        "cursor": {
          "ref": "a25b8384-67c9-468e-b31a-7e1d888cd01a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "96f5a268-2e81-4624-ac3d-198cbe4b9b12"
        },
        "item": {
          "id": "66c5427e-ae7c-4072-91dd-17673e18ba4d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "04a3021f-a2c3-4a8c-b23a-194111c14a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30fa349-036b-46a8-8914-6406b36fb760",
        "cursor": {
          "ref": "407c01b7-52d2-43d7-818d-09cb036aa066",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5a3d4630-64fc-4023-a8a5-08455bd92c3d"
        },
        "item": {
          "id": "d30fa349-036b-46a8-8914-6406b36fb760",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b63c5675-ec91-4c18-bff5-04adacee886c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75b2af4-0774-4a4f-8c6b-0963d986abb9",
        "cursor": {
          "ref": "b5b856f3-c84a-4da9-9cec-1c8fa0482d74",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e8fe006-b2f3-4dc8-817f-d4ccdd83ce27"
        },
        "item": {
          "id": "e75b2af4-0774-4a4f-8c6b-0963d986abb9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "417908a3-e6a3-41b5-9699-c230ad244505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fff03b-f090-4fe7-85e0-2ca3ba0cd575",
        "cursor": {
          "ref": "b2d5e2f5-f669-416f-903d-a6a3399d0f8c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5506fd34-d433-48d0-82fe-b1898c40e6c6"
        },
        "item": {
          "id": "76fff03b-f090-4fe7-85e0-2ca3ba0cd575",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5c24e78d-6172-40b6-8b81-60d99fbdccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa6f0f-bba2-48e9-b203-8600f93a395b",
        "cursor": {
          "ref": "aea9462b-8ca5-4b73-a82d-bb2eeca8c163",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f40cf57e-51c6-45e2-8385-5a82f0629af0"
        },
        "item": {
          "id": "56fa6f0f-bba2-48e9-b203-8600f93a395b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d8de361c-e56a-4b4f-9361-2562b8902ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7366b1-6cff-4f9b-ac61-1078ed2d21f1",
        "cursor": {
          "ref": "1f541635-cf83-449c-bf25-513adb802626",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ce8af20c-f758-40d3-ab32-cf1f3d0c4a55"
        },
        "item": {
          "id": "9f7366b1-6cff-4f9b-ac61-1078ed2d21f1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "93510932-c8cc-4a9f-ae86-be1606f5afdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650b3104-1c2a-4d4c-95ba-38020d093f4c",
        "cursor": {
          "ref": "1f59ab0d-2e59-4a81-883c-dc6734adad6b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1e6129df-10e0-48d5-b342-f709ab1eb7d8"
        },
        "item": {
          "id": "650b3104-1c2a-4d4c-95ba-38020d093f4c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "52d60f14-c98b-45b3-a700-f3dcbfc4b0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61962b-86a9-4a37-81f3-54ffe3f5a856",
        "cursor": {
          "ref": "481b693f-7bb5-40e2-aa07-e155c553e4ce",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9567c631-4506-412e-a60c-afb7ed942f81"
        },
        "item": {
          "id": "ed61962b-86a9-4a37-81f3-54ffe3f5a856",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dbb85be8-3008-4aa7-bac2-1829a6c44a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4faf8ff-62dc-49f1-a53a-112f689cc337",
        "cursor": {
          "ref": "b938b563-d801-4b08-b755-70bd070f71ad",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "66164ef0-4b9c-44df-9e08-20cb36279bfe"
        },
        "item": {
          "id": "b4faf8ff-62dc-49f1-a53a-112f689cc337",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "58bc6b67-779b-48ef-8920-a6ae861e7254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf74a3c-345b-4ede-a737-b0c000bc7780",
        "cursor": {
          "ref": "1ab862dc-6017-413d-a6d2-a5ec4f7676b5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d4f18790-0286-4b9b-9726-e7402cd0383f"
        },
        "item": {
          "id": "0cf74a3c-345b-4ede-a737-b0c000bc7780",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2361c799-00b2-4e49-a2e1-8831aa72afbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2340ef8b-35d3-4177-b681-04ede6dc1522",
        "cursor": {
          "ref": "f96f71b0-8980-4768-acf7-caf1f2ff87cc",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0ed987a4-fc1d-44cd-927b-6693fde9547a"
        },
        "item": {
          "id": "2340ef8b-35d3-4177-b681-04ede6dc1522",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "17480174-82db-4dda-a534-c9fec4d50320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e226984a-9942-48d2-8f8a-b5af83ad19ad",
        "cursor": {
          "ref": "65723135-92b3-4feb-9304-cb303da6ae8d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "33b7c20c-ceb1-4ecd-88ba-e0cdc6894ebb"
        },
        "item": {
          "id": "e226984a-9942-48d2-8f8a-b5af83ad19ad",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "227f94a7-03b1-4290-99a5-859fd399c55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62d8dd4-edba-442d-a070-711f45518cd5",
        "cursor": {
          "ref": "18b3dc71-1388-4d84-a525-d0adfdf98c3a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "093dc8d4-341c-4710-85d5-d3a0852827a3"
        },
        "item": {
          "id": "e62d8dd4-edba-442d-a070-711f45518cd5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "768b5070-9ff1-4a84-a01e-7477f183ed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae54495d-21b0-4f65-8511-7fe64ad14ad0",
        "cursor": {
          "ref": "e1845461-6809-41d0-b237-e3b05a6074e2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4e4d395c-9e3e-4b92-ae98-85dd613673b2"
        },
        "item": {
          "id": "ae54495d-21b0-4f65-8511-7fe64ad14ad0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "039b1847-457c-4487-b43b-d643e0f32080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045f4d8d-14d6-463f-ba0f-7044f67bbe10",
        "cursor": {
          "ref": "b0090ba9-1136-459e-94a4-e9d3b691ffd1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2789b483-2eb9-44db-b930-23c7223b3d36"
        },
        "item": {
          "id": "045f4d8d-14d6-463f-ba0f-7044f67bbe10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bb6f0d0f-34a2-4ada-90ac-f80b0ffe18cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56c7838-505a-4490-81d6-9dd324a05f41",
        "cursor": {
          "ref": "18289e0c-1843-449a-92d4-d4cec7fe598f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "54a08e69-cdb1-4848-b4d9-61f171b7c811"
        },
        "item": {
          "id": "b56c7838-505a-4490-81d6-9dd324a05f41",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2f6f6703-a175-4ae5-bdd4-cbf9aecc1f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bd16dd-0cba-4e5e-9171-831289fd787c",
        "cursor": {
          "ref": "c785767e-cc80-4374-9164-3d8808e8373e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6d2105f7-6d9a-42d4-b51b-d92c52d80b27"
        },
        "item": {
          "id": "b6bd16dd-0cba-4e5e-9171-831289fd787c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "899201db-4b27-4ea9-999f-7568ad60ce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3991d15b-77d1-4ed3-ade0-4674ec932b7e",
        "cursor": {
          "ref": "94f1f401-89ac-41d2-bf8b-04e43bab05bc",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f173c636-6184-47bd-b58b-8a0cb65aba64"
        },
        "item": {
          "id": "3991d15b-77d1-4ed3-ade0-4674ec932b7e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fd373cb7-bc7b-47c5-84cf-90cfb72b8616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d010a-a4a7-4bcd-80da-4d0f384286bd",
        "cursor": {
          "ref": "e2d31846-3b4b-47cf-b0f3-626afd4f8b14",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "401cc013-7311-4ec6-a86f-5a97ed761823"
        },
        "item": {
          "id": "823d010a-a4a7-4bcd-80da-4d0f384286bd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b6a87778-e1e5-48bc-b824-883769ed67f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14cdbd-f0f9-4bec-8925-1235dee2844a",
        "cursor": {
          "ref": "7d2093ed-d2cb-4b71-8855-da13567f6474",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5560857b-65a5-41a9-a66a-c3c1a8d88742"
        },
        "item": {
          "id": "7c14cdbd-f0f9-4bec-8925-1235dee2844a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "620b301d-4620-473a-9f0d-04a021522b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06db3b1-caf0-4a82-8827-cd0b9c95584e",
        "cursor": {
          "ref": "3b67afdf-c4fa-4581-8a8a-ac51a55f0c0e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d383df7d-79d8-4aa2-9471-e1d73b631093"
        },
        "item": {
          "id": "f06db3b1-caf0-4a82-8827-cd0b9c95584e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ffa26e3-c1fa-455d-84bb-56de8f584bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1643cab-e087-42b9-abfb-71e4cecff3b5",
        "cursor": {
          "ref": "38ab5eec-035f-410b-b86f-75569e4dd1d9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0b73f7e1-2841-4026-abf0-9542f33770ad"
        },
        "item": {
          "id": "b1643cab-e087-42b9-abfb-71e4cecff3b5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f8d352fe-6741-4c2c-b927-2024d81c1aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ade33a-fe9d-4a6e-a86b-23633eeca302",
        "cursor": {
          "ref": "b4a61c3e-deac-4a64-9aee-d6616dab2ae9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ac8abd9b-5246-4f06-8c66-a768ca97bedd"
        },
        "item": {
          "id": "e2ade33a-fe9d-4a6e-a86b-23633eeca302",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c1e5b153-d148-4e1e-a1aa-ad05cc2992e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3397867d-b141-4ef2-9393-961deb6c3c5c",
        "cursor": {
          "ref": "13fd8c8f-8ca8-44d9-9837-c18a5eaad516",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9fd3bd5e-dc55-435d-8554-7a832d358df1"
        },
        "item": {
          "id": "3397867d-b141-4ef2-9393-961deb6c3c5c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "633d64b9-6e0b-457e-874c-a5a2bf71c71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4291b079-21ab-4410-b6a0-5688cbb04aba",
        "cursor": {
          "ref": "9f8ca3ad-30c7-43e3-849f-86e2abfc19dd",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d548339e-55ab-4e05-9c38-04706d6e6a96"
        },
        "item": {
          "id": "4291b079-21ab-4410-b6a0-5688cbb04aba",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c5abd6fe-d4cd-4e03-9406-abe2bc3f1d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6313348f-f5ad-4cf6-be4a-a7ac9ee6466b",
        "cursor": {
          "ref": "9304698c-a6c8-478b-be2a-88674446a330",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2e1b89ca-ec90-4eaa-bd09-389ce44aebca"
        },
        "item": {
          "id": "6313348f-f5ad-4cf6-be4a-a7ac9ee6466b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fa711766-00a8-471d-97eb-76fca5df1339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc19cdeb-d80b-495f-8972-599fc20583ca",
        "cursor": {
          "ref": "b918ef2d-b700-4307-b11d-6cd588a4f156",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c1d30dd8-d77a-47ee-bc28-35aba516016b"
        },
        "item": {
          "id": "cc19cdeb-d80b-495f-8972-599fc20583ca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d5647a39-a1b4-4e7b-a932-c34e2b3261c1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88999a57-574b-4ad6-a622-f3e3538ebc79",
        "cursor": {
          "ref": "6e2bb61f-2bf4-4fd2-a6ce-6502304ffe8b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a1b8c1b2-0034-4856-be9c-8e3b28b6cbaf"
        },
        "item": {
          "id": "88999a57-574b-4ad6-a622-f3e3538ebc79",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "82e4f679-e538-4d34-8f7a-5b1d618eae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce166340-b305-4e6b-9731-bff44ea58c7e",
        "cursor": {
          "ref": "8067d87d-b3f7-46d1-ab11-d12ddcee527e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d0bd7663-66fd-4ea3-862c-f9c31247be6b"
        },
        "item": {
          "id": "ce166340-b305-4e6b-9731-bff44ea58c7e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "10d281cd-17d3-4a42-a6d7-b8a8e449eb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eec5ea-37ce-48e5-9ebf-a580b2d7251c",
        "cursor": {
          "ref": "b234898f-6341-4f6b-9a84-ee22ec5f5b25",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cd216bcb-f145-4b47-b137-6049462f03aa"
        },
        "item": {
          "id": "a4eec5ea-37ce-48e5-9ebf-a580b2d7251c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7a69c5f3-2dbc-4f22-8673-d7778a76583f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0803995-5fc9-4e82-a170-1d6f0336d8bf",
        "cursor": {
          "ref": "a0b37fdb-8865-4e99-8496-dcc80714eaa9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c745a2b7-391f-4611-8e7b-9ae1e14dc4c2"
        },
        "item": {
          "id": "c0803995-5fc9-4e82-a170-1d6f0336d8bf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db40b1aa-3a82-4ca5-a97d-87176216e4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef7484d-4818-4315-abc5-14d728c59cd1",
        "cursor": {
          "ref": "a47602ed-6177-43f0-8e11-bfb85da052bc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1bccf3ad-f45d-4c7f-b301-c92c18fc5600"
        },
        "item": {
          "id": "1ef7484d-4818-4315-abc5-14d728c59cd1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a178ae8-03f5-429e-8244-6c174960eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544439ce-8f18-4453-9e9a-b69a0057b19f",
        "cursor": {
          "ref": "72baca6e-995f-4a8e-9796-a20ce33ea28f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d0b337d7-a680-4769-accd-a93eda3bc9a4"
        },
        "item": {
          "id": "544439ce-8f18-4453-9e9a-b69a0057b19f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "25d5d30e-ce55-42bd-a10d-8928bee52871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b3cef3-3738-47a0-9cf1-4cc68aaa94c8",
        "cursor": {
          "ref": "9839e273-44e7-4e7e-a521-7a99bf995c86",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "de5f7ee7-520e-4733-818e-70ce9b3a1952"
        },
        "item": {
          "id": "02b3cef3-3738-47a0-9cf1-4cc68aaa94c8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "42ae7b47-917f-44ff-be6d-8114c057d18a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bdf8fc-c36a-40c2-8b5b-b5ff4f8dcb2c",
        "cursor": {
          "ref": "ec2292aa-2a03-48bf-806e-97703cc802a1",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f7786b6b-ba2c-46fc-8697-aa2e94e6f8b7"
        },
        "item": {
          "id": "93bdf8fc-c36a-40c2-8b5b-b5ff4f8dcb2c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b6ef2897-0988-432e-be6e-4d8f53456e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a781c3cc-d44f-4acc-a760-8ee06778824c",
        "cursor": {
          "ref": "9252b809-f4be-4e4b-a638-cea197f719b3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ebf08dfe-0533-4ee5-9dbf-4a710f9638de"
        },
        "item": {
          "id": "a781c3cc-d44f-4acc-a760-8ee06778824c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a9615770-75a8-4251-a1f2-ee45b1ab313e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead063e4-c3aa-4572-abf7-41cfb8f3c236",
        "cursor": {
          "ref": "b1a26554-de38-4b5d-aa3c-39b36935f60b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "90d0e93b-3403-47a0-acda-3990c6ee50ae"
        },
        "item": {
          "id": "ead063e4-c3aa-4572-abf7-41cfb8f3c236",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "de9695aa-05bd-4914-8340-d64fe89b448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb4313c-23e7-4235-9528-608ec1d6f722",
        "cursor": {
          "ref": "70926921-c24f-4cf1-b68e-6be47cfde4e0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c4b7939c-9eb3-4bf1-ba80-93cbb7120d19"
        },
        "item": {
          "id": "9bb4313c-23e7-4235-9528-608ec1d6f722",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2af4d4d9-80d7-425c-9f58-02338582b5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac4be3c-3570-443f-821a-bb60a09291dc",
        "cursor": {
          "ref": "47392d2c-09b9-4666-9a52-3fe469e86323",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6c030ff7-3dee-4a2e-926a-93d92af2368e"
        },
        "item": {
          "id": "2ac4be3c-3570-443f-821a-bb60a09291dc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "01154d4a-77bd-4813-aea1-3e1769715051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efef77e7-bbfc-4203-9fee-943bc4f5e76c",
        "cursor": {
          "ref": "dd92801f-7ab0-412c-adc4-f69835e01bed",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "97854ff1-d02e-488b-81fa-326449019813"
        },
        "item": {
          "id": "efef77e7-bbfc-4203-9fee-943bc4f5e76c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6aa11500-aea9-4758-a8f7-916e0fa1324e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eccb308-1ef2-4b34-8d8f-b2bbf7704ac5",
        "cursor": {
          "ref": "54c2df75-6979-4b2e-98ef-44842f46ab17",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ed352a07-b342-45a0-a100-d7462d52734e"
        },
        "item": {
          "id": "2eccb308-1ef2-4b34-8d8f-b2bbf7704ac5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "93031c29-3c3a-44d5-aa79-c97a048f0fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9584bd7-5e65-4734-bf41-c3fa196fb4fc",
        "cursor": {
          "ref": "060505c2-687a-4ee4-8df7-25d5a2024891",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e42d12b8-1fc5-4985-b42f-98f81532fc2d"
        },
        "item": {
          "id": "e9584bd7-5e65-4734-bf41-c3fa196fb4fc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9fe748f-f880-4a79-98cc-9a882de99c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a8734-fae8-473f-a16e-1e388c1d0aed",
        "cursor": {
          "ref": "0e6f5892-9967-43f1-9a3d-b2b23461efc4",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7f9c9064-caea-46cd-bc48-bd4e9b98bb15"
        },
        "item": {
          "id": "fd0a8734-fae8-473f-a16e-1e388c1d0aed",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "12a22958-ed43-44d9-86fd-f7ed20f8716b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b492e34-550e-426d-beb3-28167014d84b",
        "cursor": {
          "ref": "69e3ce77-9dc4-4f22-b683-463296a29775",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef156a88-e9cc-4b66-9d30-39b693b3db8f"
        },
        "item": {
          "id": "9b492e34-550e-426d-beb3-28167014d84b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1359f4b5-dd99-43bc-a233-2e56e4112c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2568d33-3f40-4bda-9e01-cd8c495b0c08",
        "cursor": {
          "ref": "43c85ebb-87c5-4fc1-8df0-4e54eef4cb22",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "79378ffa-1a05-4841-a97b-e78563bb6888"
        },
        "item": {
          "id": "f2568d33-3f40-4bda-9e01-cd8c495b0c08",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ba9ca4e4-133f-4747-9cf6-3883307c8c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c7cfc6-6810-4674-911f-66596d5dd7db",
        "cursor": {
          "ref": "74e8f874-50d0-4dc3-889e-a54186d2a51c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bd4e212e-3cc5-4e32-8a29-b85cd70934d4"
        },
        "item": {
          "id": "14c7cfc6-6810-4674-911f-66596d5dd7db",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e6cbee79-cc98-4d0f-8741-aa960313b812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b7041c-f0ff-4562-9682-7bb33dfa1c4e",
        "cursor": {
          "ref": "a9094130-a5ef-49df-8df0-a8060f06efc7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f94cd9c-47ff-4fc3-aed7-5e69ce99bb4e"
        },
        "item": {
          "id": "28b7041c-f0ff-4562-9682-7bb33dfa1c4e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f6880e7f-04d6-4e41-8499-dea8c3b5a698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21376a3-dda4-46e8-bcce-b7d210cf46e9",
        "cursor": {
          "ref": "7bfca444-1abe-49af-87b0-003709a2144f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ad368589-ed08-4b8f-a0d7-9c61339d4f6e"
        },
        "item": {
          "id": "f21376a3-dda4-46e8-bcce-b7d210cf46e9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ebdc2e02-3fe7-4016-8269-7b563d74983a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33126e6-bb91-42a3-b417-2d4e58dc2e4e",
        "cursor": {
          "ref": "73cc5205-673b-4d55-ad9f-925ae3fda921",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cac05c66-f7df-4d28-b1e4-ddd46c81ce14"
        },
        "item": {
          "id": "a33126e6-bb91-42a3-b417-2d4e58dc2e4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c5297e68-bd51-4ca0-a67d-a32eb8a46a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addaa848-0e56-4569-b67b-a7487b53d8cb",
        "cursor": {
          "ref": "b5b89e9f-e055-47f3-92b2-4ee3d814a11b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37ad96a7-61df-4134-a7f4-73eb6f3611f9"
        },
        "item": {
          "id": "addaa848-0e56-4569-b67b-a7487b53d8cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bf90a743-5a1f-4d48-b0b6-7f89a776a751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c229dae-a75c-4d21-98b8-8e9f7468f48c",
        "cursor": {
          "ref": "3d60eda8-8d42-42b9-84de-34c5615f8350",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f700886a-598a-4728-bf33-7717c6a9ae18"
        },
        "item": {
          "id": "8c229dae-a75c-4d21-98b8-8e9f7468f48c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60412a0c-c47a-497a-bea0-8412aa828a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86eb398-1322-4d3f-b21b-1cf3c6f02722",
        "cursor": {
          "ref": "29657f5c-f1e2-4d12-8e1a-3057194b0ece",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "caab2460-a132-4fe5-bac7-df5901294388"
        },
        "item": {
          "id": "b86eb398-1322-4d3f-b21b-1cf3c6f02722",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c45951f1-c95f-4488-b8ff-ed0c7ea2cf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdc76a8-8c55-4840-9086-3546d5922b0c",
        "cursor": {
          "ref": "256adc87-e9f8-49b9-ac8c-449f8cc9b516",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a9b9dc5c-07bc-43e3-8a50-1257681975f1"
        },
        "item": {
          "id": "ccdc76a8-8c55-4840-9086-3546d5922b0c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "edaf8f90-5922-4657-a9f5-9435df74ccfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80689b9-276f-4021-bd2d-a5a82218d1aa",
        "cursor": {
          "ref": "832b12f8-cf7d-443b-ae8d-d0a8b57d1a4f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "af659831-9415-4e00-854a-9865d17116db"
        },
        "item": {
          "id": "c80689b9-276f-4021-bd2d-a5a82218d1aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b0d2d4b3-728d-4f69-a6b7-44cf77b233c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4903f64d-6521-4591-895d-04e8da7515d0",
        "cursor": {
          "ref": "01c750b4-0133-4c83-982d-ce49989f759c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "215d7488-1186-4e72-ba29-71644cefabbc"
        },
        "item": {
          "id": "4903f64d-6521-4591-895d-04e8da7515d0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bdfd59a2-7e08-4de2-a2b8-34d3f0de2b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f43b38-4b44-466f-9096-71f8a1454867",
        "cursor": {
          "ref": "15f6fa97-5b9c-42dc-8caf-1dc142569d09",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9fa81faa-5ba5-4dec-ae79-ca5c8de86bb4"
        },
        "item": {
          "id": "51f43b38-4b44-466f-9096-71f8a1454867",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0ceeb88e-6ce8-4aae-9163-d4004042c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf24d08-abc7-454e-b8b1-15186bf393fc",
        "cursor": {
          "ref": "a4af0b35-857b-4b99-85e4-177ab6dc927f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "100b0211-d09c-47f0-817c-4e25c68ba5c5"
        },
        "item": {
          "id": "6cf24d08-abc7-454e-b8b1-15186bf393fc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c10f308f-a568-4ef8-9d4c-203b79c6ec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c869121-b0c5-4690-aa5e-af4287b35513",
        "cursor": {
          "ref": "ed52d787-4fc2-44d0-90d5-009b86978be0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c9cf5c8e-ede7-43b4-b9d9-bdc217cdee19"
        },
        "item": {
          "id": "8c869121-b0c5-4690-aa5e-af4287b35513",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7e5a7e98-03c2-4c31-8a0a-d8bd49e559b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24418801-d6d9-4f4a-8877-6e5d1bccd233",
        "cursor": {
          "ref": "7042706b-944c-4736-a141-233a5eaf68e9",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5ca0b890-ce01-4372-bb48-21fe706e657f"
        },
        "item": {
          "id": "24418801-d6d9-4f4a-8877-6e5d1bccd233",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b08a96cc-85cc-4349-b260-67bd0e9e0bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abcb7c8-19b8-4de4-9a7f-010c9f09ea75",
        "cursor": {
          "ref": "641d77bd-4d58-4f0d-bac9-74e77d489481",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "40bd4450-f048-4ef9-8d3e-24c4c385226b"
        },
        "item": {
          "id": "1abcb7c8-19b8-4de4-9a7f-010c9f09ea75",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7d3dd6e4-2157-4422-bc8e-d4f075fd99fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b99b78e-0e59-42e8-adac-cec05ba91959",
        "cursor": {
          "ref": "cffc2b27-7a14-43c3-869d-8e9906213159",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7c5ca484-72b2-48c3-8b54-be156a6e9ae2"
        },
        "item": {
          "id": "3b99b78e-0e59-42e8-adac-cec05ba91959",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b19283f5-4923-441a-867e-626a99896b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d0c044-a4e8-4556-a35a-8444ebb43739",
        "cursor": {
          "ref": "188d3232-5fa6-4b9c-b659-8f1be800dc54",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "748a49b4-c714-4d8e-9e0a-f23a8c1af29d"
        },
        "item": {
          "id": "02d0c044-a4e8-4556-a35a-8444ebb43739",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b76e61ae-79f9-4a49-98b1-c5366264b2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d36925-4c9f-45c8-b47f-ca4286713917",
        "cursor": {
          "ref": "189e0f6d-a9b5-44a1-aee9-5c0fa3e02a29",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b6b211b7-54ad-49c0-933d-a3d31df7693a"
        },
        "item": {
          "id": "91d36925-4c9f-45c8-b47f-ca4286713917",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e686abf1-2516-4316-8389-8fc6d5fe0b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9101366c-2612-4887-8eb7-46ec00c9e950",
        "cursor": {
          "ref": "5938f4f2-028a-473b-9ab0-11b47a08619b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a55b0b4f-c015-4a62-8e4d-81f963f09015"
        },
        "item": {
          "id": "9101366c-2612-4887-8eb7-46ec00c9e950",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b867ec18-74b5-4c5f-8ba7-216d7f4c9c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c48db0-ee4f-4d42-a7df-faf46e19a983",
        "cursor": {
          "ref": "4e358b93-f98e-4857-9e7d-e1a3f2b76af0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9f92fbdf-7ebf-4234-9691-ceaf3d752b5b"
        },
        "item": {
          "id": "67c48db0-ee4f-4d42-a7df-faf46e19a983",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5005a140-b675-431f-9ad1-168ce6bdff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83499f6f-44b5-4837-ad12-3970e02734ca",
        "cursor": {
          "ref": "2242a508-8591-45c7-9c2e-354b259191c3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9b88b1e9-d2cb-4848-8c33-276efaa291a4"
        },
        "item": {
          "id": "83499f6f-44b5-4837-ad12-3970e02734ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "156e198c-b51a-46bc-adcb-332dbffc7903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a3b802-0875-4856-a8a8-02fb584d0313",
        "cursor": {
          "ref": "e9521a1e-53c8-4eb7-a748-e825df45bbf2",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "57877440-0148-4d7b-a6c9-3712b7a6b899"
        },
        "item": {
          "id": "30a3b802-0875-4856-a8a8-02fb584d0313",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8d675d84-fc4b-4aac-9833-d8db5fddf159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be87840e-e51a-42ad-a03e-2ac8460c1f04",
        "cursor": {
          "ref": "332b07e5-53c7-4049-8515-f2d24faf1b85",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2c33aa0f-1623-41ff-93fb-75e7ef63e96a"
        },
        "item": {
          "id": "be87840e-e51a-42ad-a03e-2ac8460c1f04",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "afd3d9f2-f841-4637-8b60-8df527ec83b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cc2f58-d70b-4433-97ac-34368a4a8f37",
        "cursor": {
          "ref": "2b36c389-6178-4656-814d-3cd526c52575",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "25cf015c-3c35-4e37-9746-e69dd3cc4d91"
        },
        "item": {
          "id": "36cc2f58-d70b-4433-97ac-34368a4a8f37",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2be19398-ee0c-4912-acc9-4806016a901d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5c8dde-06e9-4e16-800e-7c61ca237e80",
        "cursor": {
          "ref": "f6575c83-87b9-45bc-9e1b-b5b368c77a70",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8dda6be0-9cdf-4074-b0c3-f7c0476e6693"
        },
        "item": {
          "id": "6c5c8dde-06e9-4e16-800e-7c61ca237e80",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "33ebb445-704c-4667-a561-6ba7da76b14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a1497b-3f40-48f8-a2bb-7b653e01ddbd",
        "cursor": {
          "ref": "8b487a53-e954-4102-9c87-4f21c9bce7a3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "948583ed-c866-4062-be7d-edb93c687138"
        },
        "item": {
          "id": "00a1497b-3f40-48f8-a2bb-7b653e01ddbd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "003a71e2-6eab-49a8-a37b-d12dc834dc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54ff6ab-428d-4563-84d5-ee27879decf8",
        "cursor": {
          "ref": "07eda91a-773c-4ac7-ae7c-9d41c582cf26",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e7f93151-97d7-431e-884a-d5cf19429a79"
        },
        "item": {
          "id": "e54ff6ab-428d-4563-84d5-ee27879decf8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "98e855b9-7341-45dd-8c47-4f6140c11def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f716c26-b9dd-4ab7-9ff8-1fca22a3f324",
        "cursor": {
          "ref": "1fd486d1-3dc4-465f-bef4-dbed06585bc1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "50485af3-c587-44ab-8691-9d3307fa160c"
        },
        "item": {
          "id": "2f716c26-b9dd-4ab7-9ff8-1fca22a3f324",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "63f33aaf-8442-4276-aa13-020910c9a168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f88eb3-6516-4430-98d9-762999ad0da8",
        "cursor": {
          "ref": "e4ab9f14-32c3-45d0-b429-29f849630977",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a42f28c1-1eec-44cd-be85-08a48a53239e"
        },
        "item": {
          "id": "b2f88eb3-6516-4430-98d9-762999ad0da8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f8d152f6-8801-4551-a4db-caf3cbe69dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5493fc6-37b9-445f-945d-2465f37a536d",
        "cursor": {
          "ref": "b18782fc-1981-4b1d-8305-ef44990669fe",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e1a3d829-0fb2-4b7d-8444-39d7a4e2dc25"
        },
        "item": {
          "id": "e5493fc6-37b9-445f-945d-2465f37a536d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7e35f823-1906-4bb9-a744-834ff092e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9f922c-032c-410a-9296-7754952fa5e8",
        "cursor": {
          "ref": "e8412df2-3bdf-49ce-b2ce-76e3a65222ec",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3893c16d-ef8d-461e-88f6-17002e18fe50"
        },
        "item": {
          "id": "ac9f922c-032c-410a-9296-7754952fa5e8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "445ad0e4-5b19-4111-b084-00d74b54dba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9611dbf4-682d-4c41-94cb-3b70effb98f2",
        "cursor": {
          "ref": "51e92388-9105-437f-ac22-917d68725406",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7ec07d01-d081-428e-a6b9-2650980db9c9"
        },
        "item": {
          "id": "9611dbf4-682d-4c41-94cb-3b70effb98f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f0df40ee-425f-43bb-99c6-e2f4659041ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20476b3c-7b47-428a-bdac-a6731f80e4ae",
        "cursor": {
          "ref": "2cb6bca5-c537-4e19-a24e-7862d1112750",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "237861d6-dbc4-4eda-b4ab-b29667ad633f"
        },
        "item": {
          "id": "20476b3c-7b47-428a-bdac-a6731f80e4ae",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "44cda881-6a12-4a9f-abc8-41264e429fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3790ce3-5a11-409b-a94e-b40db0283ccc",
        "cursor": {
          "ref": "c2ca3ca0-b068-4f8b-8c72-4a67b0c1f661",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c89c1397-eab1-4b09-8a34-37ff23bd4f8c"
        },
        "item": {
          "id": "b3790ce3-5a11-409b-a94e-b40db0283ccc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6d51bdf5-074d-4b31-bf6c-f5db30219cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374eb167-3e48-4138-9315-f85425f7f877",
        "cursor": {
          "ref": "998f680e-1918-4b1e-8eaa-3405687e2883",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5c478a61-521d-47c1-a9ca-f8d0ec4f89cb"
        },
        "item": {
          "id": "374eb167-3e48-4138-9315-f85425f7f877",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bb7f1892-c52d-42b3-9f3f-9728787b20d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b1470-63e6-463f-80f6-c3e406621c01",
        "cursor": {
          "ref": "ee14bd6b-f25e-4e80-89ad-7ec45f22061d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "422f328a-24d3-4c0c-8204-32809a9787ef"
        },
        "item": {
          "id": "338b1470-63e6-463f-80f6-c3e406621c01",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ec37d100-1a7d-4996-9752-f4533429eeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e0b1a2-dd2d-4c86-8e4d-2467ca4b31d5",
        "cursor": {
          "ref": "caeeae98-45ac-4298-9738-d60323fc3781",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "df578a4b-af21-4551-83d2-adf4b898887b"
        },
        "item": {
          "id": "78e0b1a2-dd2d-4c86-8e4d-2467ca4b31d5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0fc9107d-bb2d-4162-bd23-4f050fcffaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9551fe2-dda9-41e9-97e8-458a78988607",
        "cursor": {
          "ref": "20de1677-a551-4033-ab29-3dbee6cea6f7",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "32edb41f-0a8d-484b-bfe6-e0737dad7979"
        },
        "item": {
          "id": "b9551fe2-dda9-41e9-97e8-458a78988607",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "002da3a5-d1c9-4580-a06d-297147d077d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083a1210-451d-4647-a562-0741e7af5139",
        "cursor": {
          "ref": "d9cc5145-bdb9-46e2-a2f5-44f97a69981f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "35dd83d0-3e26-47ed-9253-8d890b9de16b"
        },
        "item": {
          "id": "083a1210-451d-4647-a562-0741e7af5139",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "150ac32f-5e83-4a18-a487-4de7f5d261f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8985f0-8cb5-4b5e-80a4-34128ef5c0d6",
        "cursor": {
          "ref": "8c73c4eb-ba44-43d3-9094-1eb19ea55e39",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2b325870-292b-4231-930b-18cf2d1730d0"
        },
        "item": {
          "id": "1f8985f0-8cb5-4b5e-80a4-34128ef5c0d6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2bb566c2-e01a-41ce-ad3c-06688c4316d4",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b426f5e-183c-489b-9ceb-4c860a50b820",
        "cursor": {
          "ref": "4d1015e4-0664-46d7-8cb6-06a3fa7a1164",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ea7d87f-c852-42ad-a6ec-e390eb657c31"
        },
        "item": {
          "id": "8b426f5e-183c-489b-9ceb-4c860a50b820",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b558b184-3cf9-40b6-9e34-89a35c15af14",
          "status": "Created",
          "code": 201,
          "responseTime": 211,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155c9b3-6b77-45f8-970a-dc928ea6b388",
        "cursor": {
          "ref": "87ce68a4-3f72-4ea3-b06d-79296f92ffcc",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1623869c-ea85-441e-875f-c88dce606a6d"
        },
        "item": {
          "id": "c155c9b3-6b77-45f8-970a-dc928ea6b388",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f12f8a62-6986-4987-aa49-73195a26fcfc",
          "status": "Created",
          "code": 201,
          "responseTime": 231,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f6407c-87f2-4ee8-a434-11b29c851242",
        "cursor": {
          "ref": "9221336a-ccc3-49d4-83a9-19b71fb0682e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f0a983e6-dbd6-4ecc-8969-00837baad461"
        },
        "item": {
          "id": "f4f6407c-87f2-4ee8-a434-11b29c851242",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3c8307d3-8fb0-4a47-9572-d6901db10f89",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c97c1c2-786f-4d49-862a-26dd32af0c93",
        "cursor": {
          "ref": "42902fda-12be-42f8-ac75-3b67b5526f2b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9f162874-178e-4485-9856-4adcc17a9f1f"
        },
        "item": {
          "id": "4c97c1c2-786f-4d49-862a-26dd32af0c93",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5116ba48-47bc-4428-baef-9cd2a2a528b6",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16c3974-48c6-4a4f-907c-e5f4d1d87012",
        "cursor": {
          "ref": "79f9d328-cdee-402c-a3f2-c654fd679c5d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb4150d8-b053-4245-90f0-f050b83c9dd9"
        },
        "item": {
          "id": "b16c3974-48c6-4a4f-907c-e5f4d1d87012",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "24276eaa-a24a-4d32-b90c-3b2573ed1dd7",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ff6d8a-8a3a-4465-b32e-99364b38cbf5",
        "cursor": {
          "ref": "71b7c279-9bdb-4656-bd2e-3eadd528868a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "34c53b99-1c53-4de4-8c44-d0c11ef9b018"
        },
        "item": {
          "id": "44ff6d8a-8a3a-4465-b32e-99364b38cbf5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d7f81468-dcea-474d-8a95-9cc7c278b47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d22f717-f57e-4bb0-8186-ac6e5b38123d",
        "cursor": {
          "ref": "d5983764-748b-47fe-8a17-937ade413dec",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "80fc7f35-b74c-4249-a1ad-f2a660b6c3fc"
        },
        "item": {
          "id": "0d22f717-f57e-4bb0-8186-ac6e5b38123d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "819d2dee-89fe-40de-9c3f-73f943abf8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed21786-8171-4c7e-a20c-989c54948734",
        "cursor": {
          "ref": "ac654b3a-d28d-434c-beb5-ae8ae5394983",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "667cb11d-0713-492e-bcb7-88aaac8095fb"
        },
        "item": {
          "id": "9ed21786-8171-4c7e-a20c-989c54948734",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "db22f1b1-0383-4b62-9500-4b594243b767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ccb507-b72d-4dd9-9ddf-9617526cf31e",
        "cursor": {
          "ref": "a6796110-6412-419f-a682-5449d03ee94c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3480c972-278f-4583-b50b-22c3faf9b947"
        },
        "item": {
          "id": "08ccb507-b72d-4dd9-9ddf-9617526cf31e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "00c74f98-1e7b-4b2a-830c-29f02635642a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b9b5fd-ca65-44e9-8d1f-2116a5ef2018",
        "cursor": {
          "ref": "2ede9c88-3299-4e98-93c6-d105c5302723",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ab2a7162-6672-4fb1-9c6a-7a45901b34d9"
        },
        "item": {
          "id": "16b9b5fd-ca65-44e9-8d1f-2116a5ef2018",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "35cbe2b9-1752-4ee8-93af-b1b095260356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87498968-d47e-45ee-8f3c-6592b904b32e",
        "cursor": {
          "ref": "a166ca33-197e-475f-ba38-b8fe1ef58020",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6bba5928-ba13-4942-90ee-9068934057ed"
        },
        "item": {
          "id": "87498968-d47e-45ee-8f3c-6592b904b32e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8cd0740-cd7f-4c08-ad90-dd3a52e095cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721bc9de-fa1d-4753-8b6e-a3b37473724d",
        "cursor": {
          "ref": "1da3ccff-8e6a-47c7-b4cd-dc24c2bcd7c9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ee04473c-859b-4dbd-a547-be20bdee2765"
        },
        "item": {
          "id": "721bc9de-fa1d-4753-8b6e-a3b37473724d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f63a65f7-1341-4cd9-ac0c-e166c93a179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e9dd79-541f-4965-83ba-53c90127b98d",
        "cursor": {
          "ref": "fe168bb2-7a54-49c5-a501-70f047ac019d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a4c5be3-9e8c-4146-ac6a-033a2a311ccd"
        },
        "item": {
          "id": "01e9dd79-541f-4965-83ba-53c90127b98d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92095b50-5c46-43f8-9adc-849959b78f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c537f73-4fb0-424a-ae22-102116fc6ff0",
        "cursor": {
          "ref": "a62811c0-073b-40ee-93a5-4381f2e6c8cc",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9d4a34c4-cebd-4e7d-bc89-0929eba1b98a"
        },
        "item": {
          "id": "0c537f73-4fb0-424a-ae22-102116fc6ff0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c97f1dbd-a36b-44d7-aa4c-8072101280fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00818173-6a5b-43eb-b4b0-cdca7263d008",
        "cursor": {
          "ref": "c5269a0b-54ba-4309-ab32-c54172cc7017",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "56eb5e8e-04dc-4015-9570-fbefaf9d6599"
        },
        "item": {
          "id": "00818173-6a5b-43eb-b4b0-cdca7263d008",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "20204a18-aadc-4892-95e6-6b5cccb82b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40373db7-3c87-402c-ad7b-c39d1f07c9d9",
        "cursor": {
          "ref": "0c5bd05d-17fd-476e-ae35-2f645cd48c48",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f0880c25-593b-43fb-96bf-a6ca6b83ae08"
        },
        "item": {
          "id": "40373db7-3c87-402c-ad7b-c39d1f07c9d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "114072a0-d20e-44e6-ac69-2b3a2066615c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dd043e-8a83-4f1b-8ab8-923d339ca0cc",
        "cursor": {
          "ref": "fb42026f-cc02-4296-be03-1bbd39d4a209",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "291a6cc5-7307-4fe0-a672-c5704a36165a"
        },
        "item": {
          "id": "66dd043e-8a83-4f1b-8ab8-923d339ca0cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b5748b92-fdd4-490c-8f05-49c063aaca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9dca7-0c4d-4ae2-b477-f8f32092db48",
        "cursor": {
          "ref": "d05c0b43-1637-478f-bd42-b3ee299e2ca0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6cb07ad4-1924-41e8-ac40-cabd045d2517"
        },
        "item": {
          "id": "b9c9dca7-0c4d-4ae2-b477-f8f32092db48",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "379890ff-dfdd-4a8f-877d-aa06ecc09196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eb10f3-f91b-4321-b7ad-20337cb5b774",
        "cursor": {
          "ref": "7a3234b0-cc0c-4262-93c1-25cf36d696d8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5fe1c7bc-3454-44ef-a355-ce514d9b461d"
        },
        "item": {
          "id": "f4eb10f3-f91b-4321-b7ad-20337cb5b774",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "027cb232-a21f-47b7-97fc-9511ceb52e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad9889e-25d0-4cc9-a4d0-0042da07dc1f",
        "cursor": {
          "ref": "bfec5b0a-87ca-41c2-85cd-a04278a84782",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ab102e3b-55bf-40f2-a471-7676f18ae19b"
        },
        "item": {
          "id": "2ad9889e-25d0-4cc9-a4d0-0042da07dc1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "47b96465-e371-4c3f-83d4-d9a00e67e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e390a6-e814-4cc1-87ee-47e1d757b5b9",
        "cursor": {
          "ref": "30063022-ad09-451c-9f0d-11e1351ad95d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "da8d738a-34cf-4a81-90ee-ba8236872a73"
        },
        "item": {
          "id": "32e390a6-e814-4cc1-87ee-47e1d757b5b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "57287311-04f9-4f5d-b8a8-0bcc67d5935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e921fcc3-4ba5-47f8-86b7-9a432b4dfa69",
        "cursor": {
          "ref": "f0c1e8fd-60be-4ee1-8fc1-1c875149a976",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "75d77288-fdf3-473f-868a-d7f136897116"
        },
        "item": {
          "id": "e921fcc3-4ba5-47f8-86b7-9a432b4dfa69",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20695ff7-7ce5-4125-94e2-781958c992ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ccf7a-f343-49d1-9490-5923760a417b",
        "cursor": {
          "ref": "f3ebd968-92e5-4ece-a6ba-cb68ed0ec5ce",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bcf8ad21-3bf8-4887-a0a6-2632a8c86a80"
        },
        "item": {
          "id": "f49ccf7a-f343-49d1-9490-5923760a417b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03442364-a6c4-4e18-8865-11a283ff6282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c6db15-40e2-4fdb-bffd-5bd8925fd846",
        "cursor": {
          "ref": "03df527e-c6c9-4d49-a36e-07836e5843f2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "83c2f933-b259-40ed-8e74-a664bd9fda75"
        },
        "item": {
          "id": "62c6db15-40e2-4fdb-bffd-5bd8925fd846",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e38e97da-baa7-41dc-b7dd-ac04376268e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197de23f-08bb-46c9-bb4b-18c80be01be9",
        "cursor": {
          "ref": "632efe1b-003b-4fc1-94bd-447e90fda27b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d428f686-2319-4e87-ae32-4466f1fcccdf"
        },
        "item": {
          "id": "197de23f-08bb-46c9-bb4b-18c80be01be9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b3c330a-bf24-4a18-bfe1-1882076d0c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c0ec9f-70af-4109-a02d-26eab18dec1f",
        "cursor": {
          "ref": "ae17e1f4-826e-46ec-8167-ef9e3ade7300",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f5a4e46d-773e-4ed2-8a9b-ff6f22143244"
        },
        "item": {
          "id": "78c0ec9f-70af-4109-a02d-26eab18dec1f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "92889ffd-0710-4e53-88d1-f66b539d0445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bee322-a136-486a-92a1-379e765bbb7e",
        "cursor": {
          "ref": "7656f052-607c-48d1-aaa6-31baf683a16d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "57e31a69-5020-4b8d-921c-a024bb6ddfad"
        },
        "item": {
          "id": "19bee322-a136-486a-92a1-379e765bbb7e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "060a6bc9-57fa-40e0-9254-bd36ac68e2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1df1a7-ccc6-4d54-9b6d-92d11a664349",
        "cursor": {
          "ref": "1b6a521d-d444-489d-966d-71d4eba57877",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "14d109dc-50c9-42fd-989e-63428ef9cce5"
        },
        "item": {
          "id": "9f1df1a7-ccc6-4d54-9b6d-92d11a664349",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a99fb1e7-290f-4681-91b3-97588560b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f871816a-a461-4bdb-b829-3a2d3216f30a",
        "cursor": {
          "ref": "1795ba03-ccf5-458d-a4c0-070801c81ec1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4bb0004b-3af3-47ff-ae1c-85da7c7f1255"
        },
        "item": {
          "id": "f871816a-a461-4bdb-b829-3a2d3216f30a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b5bd755-2ceb-433a-86fd-cee446c45f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c46ec1a-13ec-4e61-8928-76a4b5a4214a",
        "cursor": {
          "ref": "76ed6761-7bed-48e8-bbc1-bc739b41526e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "97a3f3df-af5c-49d5-9c97-6a3a375d4d44"
        },
        "item": {
          "id": "6c46ec1a-13ec-4e61-8928-76a4b5a4214a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc2dac2e-fc0a-49a7-a5ad-85fbce755db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4346076a-0b2b-4c58-a198-b2b3a4d57c3e",
        "cursor": {
          "ref": "c43138e4-1518-42f3-9553-ad2bf62f42d8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "58b2b592-40df-4441-8f95-4eb3396ad9b0"
        },
        "item": {
          "id": "4346076a-0b2b-4c58-a198-b2b3a4d57c3e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5bd8d6f1-b511-4046-b31f-a2f31e261172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfb0992-3cc5-4d2e-82a9-98e2151762d3",
        "cursor": {
          "ref": "e6f830d9-aa91-486d-9f16-dc0c9dbbdc71",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9f77f3f9-7464-4c37-868c-ecbf186a012d"
        },
        "item": {
          "id": "cdfb0992-3cc5-4d2e-82a9-98e2151762d3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "842432cd-a565-42a7-86d3-58f6df78ab4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c06aae-a18b-4595-ba12-cb5e924142a3",
        "cursor": {
          "ref": "6d5b7dad-0d4a-48d3-9a62-ae5f9936cb37",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e76da7fc-11c9-45ce-9f3d-7f323cb35956"
        },
        "item": {
          "id": "f8c06aae-a18b-4595-ba12-cb5e924142a3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5389665c-c40d-40b3-b039-1e0f71018fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e975f2b3-e597-4848-81a3-ce12bed714ad",
        "cursor": {
          "ref": "62b9953e-1f3b-426c-9e8d-9d7a6f343b0c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d71149e6-f501-4f29-9e29-511af9fc8b37"
        },
        "item": {
          "id": "e975f2b3-e597-4848-81a3-ce12bed714ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a410dc98-629d-4a72-999a-f19facc96550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c3ed12-7154-407b-b28f-4e6c5ee93635",
        "cursor": {
          "ref": "640e8221-46cd-4d2c-8b2f-5a6b5143276e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3e3a8439-031c-446b-b326-45cad8e9c715"
        },
        "item": {
          "id": "b0c3ed12-7154-407b-b28f-4e6c5ee93635",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc0a2369-9e04-4d58-8ee2-051e3d82a854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c881dcda-561f-426a-b4c9-cb3f66f633ec",
        "cursor": {
          "ref": "dd6e6431-d8b2-478b-aff2-bba5f44e3c93",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a1428438-74fa-47dc-b2ae-8494a9bc7025"
        },
        "item": {
          "id": "c881dcda-561f-426a-b4c9-cb3f66f633ec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "73c639e1-8fba-456e-ad10-d3de3f50d2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c008abe7-8283-417d-87e3-18f79574dc45",
        "cursor": {
          "ref": "8093e693-8611-4d4f-a00d-0d026be74aaa",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3d59abf8-732f-40bd-8428-fa1d21511b2c"
        },
        "item": {
          "id": "c008abe7-8283-417d-87e3-18f79574dc45",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "08a1a4ec-68a8-499f-bb15-7f0d0126a630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2ab4b-dcd3-4bbd-be69-5b0c6f19a003",
        "cursor": {
          "ref": "ee1879b0-5ae0-4c0c-8493-d428e39fa2b0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f151591-f97d-4b4d-b325-3b627e4b16ec"
        },
        "item": {
          "id": "5ed2ab4b-dcd3-4bbd-be69-5b0c6f19a003",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ec544ce0-8c25-48c5-8860-417dbe82b55c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d86b4b-f3f4-4a42-90f0-3b23d85f23c4",
        "cursor": {
          "ref": "4d24b733-7c0f-4a93-9501-1f370a505939",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "55edaeb9-c28e-442e-9008-9de5594b9fbd"
        },
        "item": {
          "id": "12d86b4b-f3f4-4a42-90f0-3b23d85f23c4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8fbfa22b-869f-4e80-a156-c92b7bf5e05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0871bfd6-d818-4619-8d15-17b74e2e05a0",
        "cursor": {
          "ref": "f275289d-4555-4dd8-bdf8-320f4f532bda",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92b75847-74d9-4275-baf3-c74987f062a6"
        },
        "item": {
          "id": "0871bfd6-d818-4619-8d15-17b74e2e05a0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6b788d09-78dd-4e36-b708-27f585762453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27347f1-88d7-48a8-bc51-bb3a7f450a1c",
        "cursor": {
          "ref": "7b310344-d3f7-418f-9db8-32d291cc8401",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81203dee-4a44-40ce-96b8-28ba924a35cb"
        },
        "item": {
          "id": "a27347f1-88d7-48a8-bc51-bb3a7f450a1c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "86628dbd-15df-431a-bc9b-3ec745a3b731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f2a1da-d8b9-4859-b545-461e351220a4",
        "cursor": {
          "ref": "04ab7dbc-6857-482c-a305-75c078bbd54c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f1e6b40e-7392-4f5a-b068-068c0c9cde59"
        },
        "item": {
          "id": "55f2a1da-d8b9-4859-b545-461e351220a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d0e85665-890f-4c15-b5ef-7ed25b47540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f66bb40-7599-4d27-b431-f4ccad10842a",
        "cursor": {
          "ref": "3899462c-75f4-4ec8-96e2-a2e45238d345",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "00145693-1df4-458c-819d-72597e276959"
        },
        "item": {
          "id": "9f66bb40-7599-4d27-b431-f4ccad10842a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44fedc83-aa6a-40bb-8733-4a7ef29233d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3101b6be-9879-4309-b3a8-a44d0e771637",
        "cursor": {
          "ref": "530f82c1-a437-4bc0-83a9-9c00a5c80341",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "75f49ea8-0fac-48c6-9a52-b37eac0831fd"
        },
        "item": {
          "id": "3101b6be-9879-4309-b3a8-a44d0e771637",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0a178f3-8909-4c69-a596-844bc169f227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9d5b52-e884-4e6d-be1d-df09c2dbf39f",
        "cursor": {
          "ref": "a714be87-a096-43c0-a8af-5b66df0944a4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7d6e4b70-3303-4fae-bc72-0ffa6f87fc8b"
        },
        "item": {
          "id": "bb9d5b52-e884-4e6d-be1d-df09c2dbf39f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9a7305f3-9020-40b8-ad12-9daa2a04c8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d884c65d-dcb6-4e89-a3fa-bac537d0a868",
        "cursor": {
          "ref": "459c8711-3005-412e-b851-5986df7df952",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "021c3a9e-6fed-442e-910e-f0903ccd072e"
        },
        "item": {
          "id": "d884c65d-dcb6-4e89-a3fa-bac537d0a868",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "104a3312-a458-43b2-9e47-497d492dbf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582bc78-3576-41af-b7a9-2f4a4db6bd12",
        "cursor": {
          "ref": "a1484741-4c4b-4c86-9943-b4a31f8bf274",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a153d6eb-6273-4f8c-9ea3-c906eba11e7f"
        },
        "item": {
          "id": "d582bc78-3576-41af-b7a9-2f4a4db6bd12",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1bb5434e-7f0a-4e4c-b931-5315ee2efe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b28f917-ea9d-457e-bf4a-388e275ddb8e",
        "cursor": {
          "ref": "3eb6cd99-7a6d-4335-bb1a-f492a00d766b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "201f485e-7029-4111-8827-ad70fa10dfb9"
        },
        "item": {
          "id": "8b28f917-ea9d-457e-bf4a-388e275ddb8e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "664f3a88-042e-42e4-8b74-fb4913724379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ea1a33-f489-4608-9794-8d40c0ddd8eb",
        "cursor": {
          "ref": "e4cf3f42-ade9-48fb-b129-541a6bab5334",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "838ebce9-100f-4d34-b6b5-100d11c0248e"
        },
        "item": {
          "id": "f8ea1a33-f489-4608-9794-8d40c0ddd8eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b37daa3-cd62-4075-a32d-6f3cb0f79117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59f1187-86ce-49e9-98b8-097c4792304d",
        "cursor": {
          "ref": "738ffa1c-3723-48bf-9061-cde9e9c2cb98",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "67063b82-89c2-4412-a470-6925853ac107"
        },
        "item": {
          "id": "f59f1187-86ce-49e9-98b8-097c4792304d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "755cac29-9a0f-4c73-9bdd-b966c54c5024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0ba104-8f81-4ad6-b92b-1246af5cdbfe",
        "cursor": {
          "ref": "11b62bab-3cb6-4000-bfc0-f4bdecd71e13",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "218e11e7-8ec0-4f9e-903f-5ae0099ae34c"
        },
        "item": {
          "id": "1c0ba104-8f81-4ad6-b92b-1246af5cdbfe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "398fbe9a-f71d-47a4-8c3b-f6ec555013ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303b416e-7702-4223-ab38-5d6fc91418c9",
        "cursor": {
          "ref": "93afa749-30b5-4b76-a15a-4ccaf467e154",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "702edcd0-5700-4982-95c6-0e4c5ee619cb"
        },
        "item": {
          "id": "303b416e-7702-4223-ab38-5d6fc91418c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "65e736b5-b2fc-483a-9237-61022d9da479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d75f438-6bd8-4af6-be8c-5766d546403b",
        "cursor": {
          "ref": "e85bb8dc-492c-48e9-8b97-4b838abffcb1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7303701e-4e53-4797-8fee-76f670286932"
        },
        "item": {
          "id": "4d75f438-6bd8-4af6-be8c-5766d546403b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cce36e82-d29a-4a77-8f86-68778cb7affb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a02324c-65d4-40db-b44b-bfeae80459b3",
        "cursor": {
          "ref": "80f4f274-51e1-457e-a55f-91a0e3693450",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "24122d49-7caa-4435-bd16-a0ad9dad86e7"
        },
        "item": {
          "id": "4a02324c-65d4-40db-b44b-bfeae80459b3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db2cda5f-bc13-4a30-9f3e-8a15177c2a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7bb310-d506-4dd9-9981-ae84cdab33ab",
        "cursor": {
          "ref": "7162533e-cee1-4427-a23f-246e27977d38",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2913eed6-d91b-4f43-83a3-24dde0120665"
        },
        "item": {
          "id": "fb7bb310-d506-4dd9-9981-ae84cdab33ab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "623e3451-ffd9-4fd8-80d9-d622b5b78daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf8ce7a-9df4-4e9a-9de8-c1d627c44dc9",
        "cursor": {
          "ref": "a67975ef-c165-4ce3-a955-c31fc57fdb3c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "eaf4bc8e-369a-4c49-8ea7-e72a8f4432de"
        },
        "item": {
          "id": "5cf8ce7a-9df4-4e9a-9de8-c1d627c44dc9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a07a10fe-7a08-47b2-a16b-646c10265922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a18af9e-8fe5-4a89-a04e-05046239b5e8",
        "cursor": {
          "ref": "ff081b42-636a-475b-ab20-c07855db5068",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "28ea3c9a-e3fe-4fdc-b51e-bca56729ce44"
        },
        "item": {
          "id": "0a18af9e-8fe5-4a89-a04e-05046239b5e8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ad863eb-45cd-49a0-9541-1bea5d3886d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902a1236-6ae1-4ff9-b0d4-7148591f4191",
        "cursor": {
          "ref": "b0e6c07e-dd2d-4213-9c92-ef18cbf62d41",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b50cb64a-c773-4956-88af-9d560cdcf171"
        },
        "item": {
          "id": "902a1236-6ae1-4ff9-b0d4-7148591f4191",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "03d2fb1d-6b75-434d-b55b-f3cbd91e1aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e9bbe3-8966-4cc2-a2d1-788eeda0cf04",
        "cursor": {
          "ref": "4cc1234a-79c9-475b-b804-7150217c26d9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7f27a433-4c72-467a-8927-ebe074d9ceb6"
        },
        "item": {
          "id": "50e9bbe3-8966-4cc2-a2d1-788eeda0cf04",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b967dce-b145-4b60-8a55-dcdbeff04e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96285928-706d-4153-965d-40063ef15638",
        "cursor": {
          "ref": "6f8b298a-6657-4db7-84ca-5f6b77d1b1a6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "00a91a5d-82c8-4043-a721-05d95af9a5e2"
        },
        "item": {
          "id": "96285928-706d-4153-965d-40063ef15638",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "948a6755-830c-4722-a019-77bd21d4cca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41da8a7-49d9-4ef5-96ae-22ed6ce75c54",
        "cursor": {
          "ref": "5841fc8a-bd4a-41d2-8077-77f126b2c94b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0090c1f0-183e-4ac4-add7-83a3ed883651"
        },
        "item": {
          "id": "b41da8a7-49d9-4ef5-96ae-22ed6ce75c54",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "79ab7e6f-ce5b-443a-b592-e562ed3b4db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40dd1e4-7580-459c-94b9-1bf89444620d",
        "cursor": {
          "ref": "699d2cfc-c97d-46fa-902e-70f694ba089a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "147a36c1-9793-44e1-a14a-54dee848ea81"
        },
        "item": {
          "id": "d40dd1e4-7580-459c-94b9-1bf89444620d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a61290e-7b00-4b5a-95e3-27764b4c784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df800ea9-2536-438f-bea3-93bcbcc318e1",
        "cursor": {
          "ref": "6ea90db6-82a4-4151-94b9-f10097945059",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a8df1df5-56f4-4da7-9def-b1dbc650a955"
        },
        "item": {
          "id": "df800ea9-2536-438f-bea3-93bcbcc318e1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fa013234-de3a-458f-831e-39b72927f7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f32c484-bb22-4ba5-aff6-88f5b8b45cbf",
        "cursor": {
          "ref": "91b6f519-5c04-4020-b036-4a05baaa5e19",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "297a29b2-36f0-4d59-84a7-58dcae674852"
        },
        "item": {
          "id": "7f32c484-bb22-4ba5-aff6-88f5b8b45cbf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d955900b-0296-43d4-8456-a552b769721e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37b1fa1-9d67-46b6-a470-fcdd8caed87b",
        "cursor": {
          "ref": "8666a0ca-ca62-440f-9fb1-a22ebc1000fe",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9fbedce5-439e-4e56-9f5e-fa6d6b2a0d50"
        },
        "item": {
          "id": "b37b1fa1-9d67-46b6-a470-fcdd8caed87b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "88a8d02d-32d9-41b2-9ccd-5755fb4c8c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee37b126-5375-4ded-8cdc-301f3d292f36",
        "cursor": {
          "ref": "08ba02f6-bccb-43ac-86a6-d3a37fccd55e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af3a7421-b37e-420c-82d2-74e7070b37c0"
        },
        "item": {
          "id": "ee37b126-5375-4ded-8cdc-301f3d292f36",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d94d8f64-9094-4a7f-aa1a-ef24e5eab21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d7b94c-5f7e-4fa6-883d-d7032ba741a9",
        "cursor": {
          "ref": "77d0760a-4fb3-492b-9380-5bfde3b54811",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6e7f4901-e859-421d-a21b-cdb12d72148d"
        },
        "item": {
          "id": "95d7b94c-5f7e-4fa6-883d-d7032ba741a9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c6c29800-68db-4c72-8e93-7e20fac6476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8788e08f-aa65-4937-b58f-6b45e5987502",
        "cursor": {
          "ref": "9be91eb7-aa98-41c6-b574-c75ddcbc4ce0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c47d3eac-23d8-4fbc-978f-998b1b35e598"
        },
        "item": {
          "id": "8788e08f-aa65-4937-b58f-6b45e5987502",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1fd2aae7-9109-4baa-a992-9b4b0d0a9b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48acfe8-ec6c-4f84-82d4-1a2041da7dfc",
        "cursor": {
          "ref": "4e293fee-4ce2-4ce4-b43b-1b1ff118cc08",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "de8fd423-9765-44dc-b142-5718bf9d430c"
        },
        "item": {
          "id": "a48acfe8-ec6c-4f84-82d4-1a2041da7dfc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a834a903-f1af-4350-8e53-49e5141f3fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ce2148-0d07-4ba6-9788-d698ca24bb9f",
        "cursor": {
          "ref": "68ae9025-82b1-41d7-ab67-a8c10eb59692",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eb1bfbda-3493-4adb-be4f-5427b9418831"
        },
        "item": {
          "id": "65ce2148-0d07-4ba6-9788-d698ca24bb9f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "552decfa-95a8-48f3-81a7-91aa62f91ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c10fc0c-f789-47a2-95cc-76d05409772d",
        "cursor": {
          "ref": "a60ceb32-5902-476b-99b9-5c960b0f3296",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b68dc6cc-9d80-48cd-9395-340110587b09"
        },
        "item": {
          "id": "9c10fc0c-f789-47a2-95cc-76d05409772d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1c2bf636-a4e3-49a9-95d5-128c4f0475b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03ff428-247d-4e18-aa6f-62565649a4fe",
        "cursor": {
          "ref": "14bd56a3-f041-4d2e-8cc9-1ab262d75a6a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "68bf5114-1d7f-4c65-a8c9-5b0d151bc725"
        },
        "item": {
          "id": "c03ff428-247d-4e18-aa6f-62565649a4fe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "50314a6c-c220-4f14-8563-116d2208290a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69e3dce-c750-49d6-858f-0146d1247573",
        "cursor": {
          "ref": "b85fe1de-0c68-4ded-87d9-da88d7562102",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad3d92ba-40ff-4164-befb-21bd42bc4f80"
        },
        "item": {
          "id": "e69e3dce-c750-49d6-858f-0146d1247573",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dd50bd0d-f091-4137-bd6a-990a9f98c7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac0ccd5-9e49-4904-b684-d285ecd30fd1",
        "cursor": {
          "ref": "0cd541a4-32c1-4b76-88e8-46daf96fd0b1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "565fef1e-0cbe-432c-84ab-b28661fd6e48"
        },
        "item": {
          "id": "bac0ccd5-9e49-4904-b684-d285ecd30fd1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2cf0e581-3d22-4713-9bd5-31b22aca21f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653ac4d3-ac18-4fa6-89b5-93f3ced3f564",
        "cursor": {
          "ref": "41818a93-1cdf-4565-a8a4-89e5c6600ac7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f234e70a-ccfc-4500-98c3-1658fc23c71d"
        },
        "item": {
          "id": "653ac4d3-ac18-4fa6-89b5-93f3ced3f564",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "38965fa0-7f87-4145-a390-8e781884ddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5288f1-9e16-4e47-853a-2b2c0927c63f",
        "cursor": {
          "ref": "b0de5203-cdfd-4e21-a815-e611c8dd417b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "12dbbb85-6d5a-4931-9877-cc1af6ff810f"
        },
        "item": {
          "id": "7d5288f1-9e16-4e47-853a-2b2c0927c63f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "45838daf-3712-4b06-81e0-b84e4c44fc48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9646a5-1e29-479f-8a22-a1fe5c1742a8",
        "cursor": {
          "ref": "c6f98ce2-272e-4e19-90b1-68c1f166870b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bfa24dbb-061f-4b2e-a83b-a2593a3d67b8"
        },
        "item": {
          "id": "6a9646a5-1e29-479f-8a22-a1fe5c1742a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2045a361-f0e0-41fe-bbd8-4b8f8aa7ab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e42a726-8b04-41a3-932a-6e64d6c74c8a",
        "cursor": {
          "ref": "a144b48e-dbc1-4a41-a7a0-ed62c7207aeb",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "04534ba6-7eec-4687-8e41-501ff2c380c6"
        },
        "item": {
          "id": "6e42a726-8b04-41a3-932a-6e64d6c74c8a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2ccdefb6-0aff-485a-9a80-d03539e8e3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a24eae-997e-474e-8a39-9a83bc7de999",
        "cursor": {
          "ref": "f7c3c7b2-b6fb-46c1-8c1e-0f63704bd2ef",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "090d0528-acf8-4b69-b22a-ef57dec46c3a"
        },
        "item": {
          "id": "c4a24eae-997e-474e-8a39-9a83bc7de999",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cfaaafdb-52e6-48ad-a3e9-a9db22bcdd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b769ab0-c20c-4003-89d0-882060f8d4ba",
        "cursor": {
          "ref": "be98b05f-706c-461a-8594-dbbaf2f535ca",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "40959aaa-d2a5-457e-8258-3d709dfc7805"
        },
        "item": {
          "id": "9b769ab0-c20c-4003-89d0-882060f8d4ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e8720739-165b-4091-a59c-f570d69de6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cd2e7c-9750-4ac5-bd90-50db35052ed6",
        "cursor": {
          "ref": "6c35d439-1c8d-4a06-bfa9-bd8e6cf23ba3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4c6a1b95-ed40-467f-a95c-c6108ea21f1c"
        },
        "item": {
          "id": "42cd2e7c-9750-4ac5-bd90-50db35052ed6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "816a1102-886c-4cae-b532-10eddaac3990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8018e3-d0d9-4dbd-9c3a-af5b31ab73d4",
        "cursor": {
          "ref": "41557dc1-1797-4d26-bc80-c3c10379ddcb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "30cb4228-7221-4859-a489-56cc3b97df05"
        },
        "item": {
          "id": "db8018e3-d0d9-4dbd-9c3a-af5b31ab73d4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "53409b3b-086d-446d-8fc2-9e4fd9b0a038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e68683-fba5-4044-8328-9dbc8da76dfd",
        "cursor": {
          "ref": "71322fe7-8401-4b9e-a29f-65420605005e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "20300880-005e-41fc-82a8-9d3498540a69"
        },
        "item": {
          "id": "e0e68683-fba5-4044-8328-9dbc8da76dfd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "66a666d1-de09-47ba-bdac-726cd02dd1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed6c37f-6339-419b-98ac-882606a945d9",
        "cursor": {
          "ref": "291172fa-4fe4-4f4e-b7a1-f02047a7e707",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ab8a55f0-20b0-4dce-a583-2883aaf57da7"
        },
        "item": {
          "id": "6ed6c37f-6339-419b-98ac-882606a945d9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a82536f5-6992-4d8f-a1c0-6f09246be927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4984a025-e68b-427e-b84b-5aa0ea1e3cd2",
        "cursor": {
          "ref": "664c1983-f8a7-4341-a3c1-19afde58b475",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2671f415-b904-4d04-bbd9-d139f63d73d0"
        },
        "item": {
          "id": "4984a025-e68b-427e-b84b-5aa0ea1e3cd2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa37a06c-8956-46e1-9837-b6e1c80957e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7d6a3c-5e26-4c2c-ab65-7cbc5435251e",
        "cursor": {
          "ref": "26b52b8c-8df8-4f4f-89f5-aa4a0d9dc69f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6dba6754-4ee5-4153-b6f6-9dc2b7c7c826"
        },
        "item": {
          "id": "1a7d6a3c-5e26-4c2c-ab65-7cbc5435251e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b023bd12-b75f-4292-9115-3777d99d35d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12958df5-48a2-42a5-aee2-d74ad296c6cd",
        "cursor": {
          "ref": "e2547d2e-2b90-49d1-b48a-dbd29b09e46c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "215dff4a-48f6-48c9-a0c6-e7e4319230d9"
        },
        "item": {
          "id": "12958df5-48a2-42a5-aee2-d74ad296c6cd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d4fae7c2-7f07-437f-b5a0-ef107e4910ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a7e27-24ac-410e-82aa-6505e36f83fa",
        "cursor": {
          "ref": "bd3af3ef-f9f7-4ea5-b2b7-cd45a084e46e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee1e503e-c1a9-463b-8669-b1896b4d248f"
        },
        "item": {
          "id": "d64a7e27-24ac-410e-82aa-6505e36f83fa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "53614ced-764b-4365-af77-86a73f7ead04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fc1cb7-73a2-42eb-8785-289ad5ea5127",
        "cursor": {
          "ref": "84863067-4db5-44ae-8b63-efb560409bf3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9ee9af0a-a707-4530-ba30-72863cf3a434"
        },
        "item": {
          "id": "f9fc1cb7-73a2-42eb-8785-289ad5ea5127",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b6130e48-e4a3-4155-9562-6926406d6a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66966c93-708a-4e8a-ad7d-a10f1bfb2307",
        "cursor": {
          "ref": "82ba1f06-4966-47c2-9862-f68e4b7432a8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "db71d1e6-c2d5-46cc-992a-d09f55eb8811"
        },
        "item": {
          "id": "66966c93-708a-4e8a-ad7d-a10f1bfb2307",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "333c7692-8fa4-43c2-bd51-a80cd0bb4bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332b4e70-17f8-4174-9b01-3c00a04e0336",
        "cursor": {
          "ref": "e3a248f5-ea81-42bc-97f1-a3b0baaba0dd",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "feb0e8e2-23d1-4204-bb17-c9972f6302bf"
        },
        "item": {
          "id": "332b4e70-17f8-4174-9b01-3c00a04e0336",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ea6ab48e-43d2-4746-9cbc-532ef8ae5f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170a86d0-d319-47d4-aafc-2e2175d64c82",
        "cursor": {
          "ref": "9269d6db-9157-4037-bd41-034829c57c1f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a8493c19-b6f8-408f-b64c-7886b7fb2c67"
        },
        "item": {
          "id": "170a86d0-d319-47d4-aafc-2e2175d64c82",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cca82d9a-1073-49e5-8dd9-6dc536feea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf08d5c-837b-4339-ab89-e8390ad1a5d3",
        "cursor": {
          "ref": "ad1100ab-2917-4186-acd2-9597d31b962e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "10e71335-01bf-4926-9dc0-30c4edcc1bcf"
        },
        "item": {
          "id": "2bf08d5c-837b-4339-ab89-e8390ad1a5d3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "276e6596-1c05-4605-8aee-bb7d7eb2f1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbbcf58-cd68-46cf-8a44-a1ab5e42121e",
        "cursor": {
          "ref": "39abf404-aab9-416c-94e6-31959c75416b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5fd01c8b-d418-4f90-8e42-93a5d4698496"
        },
        "item": {
          "id": "bdbbcf58-cd68-46cf-8a44-a1ab5e42121e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f411b6f9-4aed-4f1f-8d8c-eadbbe2d3728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce6cf0d-feeb-4482-8092-3f59c083f17f",
        "cursor": {
          "ref": "48bbefea-8ae2-4328-940c-f03241cb297c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8a6f17f1-e2e0-40c5-a259-834b841d8c16"
        },
        "item": {
          "id": "8ce6cf0d-feeb-4482-8092-3f59c083f17f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8980c629-565e-4c3c-9b12-a171548149cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bb7449-4625-48d0-aa0d-87bd68789892",
        "cursor": {
          "ref": "27ee3954-daa3-41c1-84b5-267936a18327",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3722b7a3-3efa-42aa-a3a1-47bca12237eb"
        },
        "item": {
          "id": "b1bb7449-4625-48d0-aa0d-87bd68789892",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "928feba6-c8df-4a7f-a374-57aa4357f3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68b9ee-740e-4756-9bcf-9b1a5999c26e",
        "cursor": {
          "ref": "3505dbd8-8896-4901-9dab-5ec3149403e2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "426e5b4f-c92f-4c10-9144-5c7c91ffc46e"
        },
        "item": {
          "id": "be68b9ee-740e-4756-9bcf-9b1a5999c26e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "117ecf9d-6557-41d0-897f-229a691c0d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ed6c6d-92f5-4ab9-a4e8-284cc8eb1ad7",
        "cursor": {
          "ref": "794174ec-68e8-429a-8c72-e48272b059a9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b3d18813-a493-487b-a7f1-31f1d6acc67b"
        },
        "item": {
          "id": "d5ed6c6d-92f5-4ab9-a4e8-284cc8eb1ad7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dcef7734-7492-4507-972f-3853642bcd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3926fda-f2c4-46e4-95d8-6c09871fbce2",
        "cursor": {
          "ref": "ae474d48-a9cc-4be2-a522-033521b9ea13",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9678f95a-24fa-4241-819a-5a85c2459e7e"
        },
        "item": {
          "id": "b3926fda-f2c4-46e4-95d8-6c09871fbce2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f8df7115-1260-49cd-af35-1ead8d83a1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14baa63-4c40-4e1f-bb95-b33be4441d6c",
        "cursor": {
          "ref": "b830d652-f8c9-4246-b10e-1eb7864bfe65",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0945c498-8c81-4c0a-822a-05c4b08b4abf"
        },
        "item": {
          "id": "e14baa63-4c40-4e1f-bb95-b33be4441d6c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "67ec9091-3232-44bd-981b-a260c82170f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c145eae1-c766-4b43-a876-0b99dd08f241",
        "cursor": {
          "ref": "c918a298-8048-4bf9-b57f-4c3ab01ea6a1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e7b006ed-86ba-4a74-9ab2-6872c1589df7"
        },
        "item": {
          "id": "c145eae1-c766-4b43-a876-0b99dd08f241",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "911a44c1-f48d-47c2-85b8-6e412948064c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59115929-049c-470a-8756-de1b36969232",
        "cursor": {
          "ref": "1077c50d-1856-45f2-b8b7-429bba52564c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1a3762cc-d0f2-4299-bcb2-94670b61721c"
        },
        "item": {
          "id": "59115929-049c-470a-8756-de1b36969232",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a50e2952-dc69-4346-96d6-60d6eaeed07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372ff3fa-d9a3-4b8d-93dc-58af12e7bee4",
        "cursor": {
          "ref": "b6b823aa-94a7-439b-919c-01792720e551",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c7a80b05-9961-43db-86f0-7c1c7fce2079"
        },
        "item": {
          "id": "372ff3fa-d9a3-4b8d-93dc-58af12e7bee4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3a636797-79de-45b9-a64a-40a53b9717b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb0b7dc-e632-4d64-bf45-ea6e27083e3e",
        "cursor": {
          "ref": "69d1330a-60d7-49a8-bd04-9fc9f9f8d427",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c11423a2-e27b-4891-b1b0-4d0f31dab7d9"
        },
        "item": {
          "id": "feb0b7dc-e632-4d64-bf45-ea6e27083e3e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aba40f67-3028-4e41-baa1-e1280797c4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51378f2-7d7e-4eb0-9c83-68ee12cc9447",
        "cursor": {
          "ref": "7143daf2-d091-4697-ab1c-c38e580ea1a3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b9f84bda-e8b6-4e0a-bf73-280512e3847f"
        },
        "item": {
          "id": "a51378f2-7d7e-4eb0-9c83-68ee12cc9447",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2acdd15c-d2b3-485a-9544-b141cf092790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcd9a06-c23e-40d6-8390-fafa77253c13",
        "cursor": {
          "ref": "6f724482-482a-4486-b899-48f05956f766",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "86e5b0b9-8dd5-4d67-8081-613fb11a8b5e"
        },
        "item": {
          "id": "2dcd9a06-c23e-40d6-8390-fafa77253c13",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5c3d1596-4a29-4864-8810-702ad0dc3731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69642ff-c84f-48a7-b31e-e310f9bcfcf8",
        "cursor": {
          "ref": "7776d31c-1cd1-4cb7-9925-bb81963530e9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "426ec79e-bcfc-4e06-9da6-9f5b08acb11c"
        },
        "item": {
          "id": "c69642ff-c84f-48a7-b31e-e310f9bcfcf8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "91c17264-d4c6-4c35-9f0a-c22c425d2626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21636388-0fa6-4e49-a3dd-ccd6ee78f437",
        "cursor": {
          "ref": "4f3cb2a5-42c1-4fdc-a891-18c35eccc5f1",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aae3dbfc-34be-4c0e-b08d-8ea9b325c0ca"
        },
        "item": {
          "id": "21636388-0fa6-4e49-a3dd-ccd6ee78f437",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b291ebc2-c6c2-460e-b1f6-78272f458962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f3b9ab-b6c0-4050-a7fd-8511ffa79773",
        "cursor": {
          "ref": "f4d3ace8-673f-497d-9b89-bebc6a9a2e32",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a6b865a8-6b02-4dfc-ae88-09d7b6ef1a19"
        },
        "item": {
          "id": "41f3b9ab-b6c0-4050-a7fd-8511ffa79773",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "94b5ebc9-9603-4a43-a981-cba4e3edd0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e59ec6-cb97-4bd3-bf1c-6d699399653b",
        "cursor": {
          "ref": "b061df0d-8a13-4ec9-b086-387da0172134",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b0d4986d-164b-41a9-88ef-f397155fd587"
        },
        "item": {
          "id": "f1e59ec6-cb97-4bd3-bf1c-6d699399653b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6374b4dd-8a7b-40b3-9774-affef1a775f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c95e31f-3dfc-4b41-b64f-f1134190a126",
        "cursor": {
          "ref": "1491ddbb-d8c9-415e-9e84-e30325e2640d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b1231dd4-628e-4a38-a832-76f035f425fd"
        },
        "item": {
          "id": "8c95e31f-3dfc-4b41-b64f-f1134190a126",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "01e27902-f0f5-43b1-a21c-47839a2a69f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d17fc70-bb54-4da9-8082-a844e1a6e6b9",
        "cursor": {
          "ref": "b0ec49f8-b37f-4bd6-bca2-454524ac349a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "698bec4e-bd03-4eed-880f-0063fa4c1f3c"
        },
        "item": {
          "id": "7d17fc70-bb54-4da9-8082-a844e1a6e6b9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dd79a4a9-5a2e-46f1-b4ed-a5136c5a5d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30f8799-db36-4c97-bc8a-d3e10d2d9b02",
        "cursor": {
          "ref": "a5dd1414-6840-4ac3-a12b-05ae42676e15",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da94d4c3-2778-4262-9197-6d240fccb91c"
        },
        "item": {
          "id": "a30f8799-db36-4c97-bc8a-d3e10d2d9b02",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "593347a9-dbed-4d07-8ac3-564d5b563c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdbad48-cb07-4cfb-8f19-06138fcb6044",
        "cursor": {
          "ref": "e4a7b3cb-ca06-4d1c-ac14-a95d2311f126",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d2dc2452-bde4-4fc0-84c9-9294201d6933"
        },
        "item": {
          "id": "2cdbad48-cb07-4cfb-8f19-06138fcb6044",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "02b603c7-502a-4ca4-9830-a46eec95c432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb98a19-340c-410d-8fbe-53c001906bc0",
        "cursor": {
          "ref": "3d05aa6e-59d0-4835-abea-a44ab0b2c538",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9f24d67a-de20-45fe-b100-1a70f6bd06eb"
        },
        "item": {
          "id": "7fb98a19-340c-410d-8fbe-53c001906bc0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1fcce87f-eef5-4809-bd6e-c13cf46b49a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f333426-f945-419a-84b1-d96d6172b959",
        "cursor": {
          "ref": "e22368a2-991c-48d3-af0a-223941348ac6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5bb6a07e-31ae-412c-b37c-b77b655e3ac5"
        },
        "item": {
          "id": "4f333426-f945-419a-84b1-d96d6172b959",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4347d308-f1f0-464e-a9cd-8b547a954fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d8fa94-07f3-47bf-8230-69f967024579",
        "cursor": {
          "ref": "8252bcb4-edb1-4878-a838-d25085ca31e9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0a84f8be-520a-4410-8453-009eea3e6037"
        },
        "item": {
          "id": "01d8fa94-07f3-47bf-8230-69f967024579",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2eb14d88-70b8-4c62-bf5c-80774c85dd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750783d3-c787-4584-9a85-15e8edd758ac",
        "cursor": {
          "ref": "49804486-5435-4340-8dd2-9ab8eede9a48",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5e87520e-2af0-47c0-b1df-915962088c6d"
        },
        "item": {
          "id": "750783d3-c787-4584-9a85-15e8edd758ac",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9e96b1b8-b9cf-4065-8f7f-c1b675ffbc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a02ce0-7a17-49a3-9f39-7d1caaadb2e9",
        "cursor": {
          "ref": "0a2d0165-a025-4751-ad92-fed78dc486e2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7a724ceb-559e-485b-981c-a94e908560b1"
        },
        "item": {
          "id": "39a02ce0-7a17-49a3-9f39-7d1caaadb2e9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "35822954-4cc7-4430-9b9d-e66225dc5399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b383cf-dd8d-4b57-8828-206a289d4f29",
        "cursor": {
          "ref": "93de8a02-3bd8-488a-bc50-bf8031e17a38",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fff0a3d6-cb44-4aba-95f6-eac8dd29d8a0"
        },
        "item": {
          "id": "27b383cf-dd8d-4b57-8828-206a289d4f29",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2682ec33-4d31-4785-b6a5-8fd2a2761e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e22e41c-65c1-4315-9956-9288c8e74cd4",
        "cursor": {
          "ref": "06dedb3f-01d5-4964-9fa7-93493474816c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be49328c-62df-4377-963a-b8bb47db3924"
        },
        "item": {
          "id": "0e22e41c-65c1-4315-9956-9288c8e74cd4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1ce28656-b4b6-4468-8bf4-37c8dce9ae83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e120a3f7-d297-4912-a8a3-ccae76993c82",
        "cursor": {
          "ref": "98000ea1-9d6d-416e-8cac-126d75b24b03",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "edd2b40b-237b-4c69-b62d-2b580adbafc2"
        },
        "item": {
          "id": "e120a3f7-d297-4912-a8a3-ccae76993c82",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "65904537-4e21-4eac-a764-c159187ec4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c671099-7f86-4719-89fc-a1865e51d29b",
        "cursor": {
          "ref": "60576ef6-6e9b-4431-a075-b97482fca39d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "82091824-9742-4931-a7a2-24f8106ce093"
        },
        "item": {
          "id": "0c671099-7f86-4719-89fc-a1865e51d29b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "500b6e29-975e-4034-9e46-78f23064d9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316ad4a3-9770-4a10-932f-b6f3cd4b333e",
        "cursor": {
          "ref": "b9f308db-eb64-4143-ae85-1d455cbdeb50",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4aac899d-89df-4448-93da-2dc2546933d2"
        },
        "item": {
          "id": "316ad4a3-9770-4a10-932f-b6f3cd4b333e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b70730dd-8a58-4eab-add2-d74d6b597e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a74848-7d76-43bd-a3fa-6d6644fd688d",
        "cursor": {
          "ref": "84726cd8-1a63-4225-ac6a-06d034db75c2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "07605d9e-a5a0-4fc5-a946-6a8f9b820d49"
        },
        "item": {
          "id": "67a74848-7d76-43bd-a3fa-6d6644fd688d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2860365b-5629-4cd6-8cc3-53259d9cbae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d48e42-60a9-43eb-8d5b-efd66a17eb49",
        "cursor": {
          "ref": "0695e59c-24b5-456c-b038-4beff06e55aa",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f2819af-774a-4ba0-b705-ffbaef8c312a"
        },
        "item": {
          "id": "83d48e42-60a9-43eb-8d5b-efd66a17eb49",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a3fc45b-dcff-49dd-9119-80820a2fbec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746b925a-f2aa-4c2c-a7cd-7b3844a9ea48",
        "cursor": {
          "ref": "8739b173-87c9-421d-8dd4-5c9de6e30ebc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "661d6a7f-9a57-4757-867f-3984bc3af29d"
        },
        "item": {
          "id": "746b925a-f2aa-4c2c-a7cd-7b3844a9ea48",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "27362951-b0f3-436e-9719-183adc413765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a180d9f8-88cd-4694-822d-5d170ccf5d5d",
        "cursor": {
          "ref": "5eb260f2-228e-4c03-8885-4255673d510a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "feb1ba7e-ca43-40a6-9c9f-c94a4fc9b5ef"
        },
        "item": {
          "id": "a180d9f8-88cd-4694-822d-5d170ccf5d5d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f95d9753-1fda-49f8-af58-07f9d6fa455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6bb46d-d128-47a1-9800-b40dd4849c42",
        "cursor": {
          "ref": "a26c6c28-1ec6-433e-839e-6598ddaf10e8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "05e3efc8-29c7-4cf3-b17b-3037b3f627f2"
        },
        "item": {
          "id": "2e6bb46d-d128-47a1-9800-b40dd4849c42",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "842a897d-3c21-41f0-a74b-e51679a2b812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dceb7d-57bb-414e-abf0-5f1679c46095",
        "cursor": {
          "ref": "72734b7d-09f2-4bc7-be77-fa501855cf73",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fedd1e1d-77aa-4f5b-8084-1b4b9e91fc5c"
        },
        "item": {
          "id": "32dceb7d-57bb-414e-abf0-5f1679c46095",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "39771c96-0eb3-4e8f-9d20-45479ba6fc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9a546e-c7fd-4684-8579-607b380a0130",
        "cursor": {
          "ref": "7d0f1aad-3b25-40bc-a78d-9435dc173048",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fbc1684c-2734-4010-b5d8-b63c1999b169"
        },
        "item": {
          "id": "6d9a546e-c7fd-4684-8579-607b380a0130",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "07144666-9bab-44c6-bb4a-5295b8874d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f02a082-8a86-4544-a42e-0a9f5709558c",
        "cursor": {
          "ref": "2e88b098-6326-4f92-873f-e200232d09fe",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b3a0d5ee-25dc-4b7c-ba54-e21f8d7e1f84"
        },
        "item": {
          "id": "7f02a082-8a86-4544-a42e-0a9f5709558c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8129b1de-6d23-4391-b872-c5eb6ac018d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00ab6aa-5124-4340-9d29-11d0a499a450",
        "cursor": {
          "ref": "2aae7933-0df6-4ed0-a6e0-8c0f864e9eee",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "43cedf89-cb6f-4a6d-a86a-bbcd70575464"
        },
        "item": {
          "id": "a00ab6aa-5124-4340-9d29-11d0a499a450",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ba31fed6-7ea3-49b7-a76d-713620510493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ab21f-07d9-4c64-aa7c-1ce31d83af75",
        "cursor": {
          "ref": "caf6717c-c3f1-4eda-aeba-b276f3aa7ce4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ce270617-0593-420c-87ed-29e633b22883"
        },
        "item": {
          "id": "be2ab21f-07d9-4c64-aa7c-1ce31d83af75",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c2b55823-8861-4c72-8ae6-25b120c6a7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e062a22e-8869-41fa-8f26-2e233e74003b",
        "cursor": {
          "ref": "b62b365f-e3bf-4895-88f4-55e7d6251925",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "523bbf05-000e-4df8-9cc1-c2077dad9412"
        },
        "item": {
          "id": "e062a22e-8869-41fa-8f26-2e233e74003b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "82b9653d-9025-4475-81d9-702b04947cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b234782-8782-4dc5-90c3-c145e95a611e",
        "cursor": {
          "ref": "35b59642-18ef-49d1-8c90-d3aabb54e0f6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24960b79-36fc-41e0-a695-89e295295abf"
        },
        "item": {
          "id": "2b234782-8782-4dc5-90c3-c145e95a611e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c9c4c272-4618-4ca6-85c2-89b1e1c41e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c934258-f692-4454-b59a-c42e9f73eb31",
        "cursor": {
          "ref": "dd533c49-0ad9-4d66-a025-b7fd4a808794",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e86a2930-f0e2-4531-b01a-cf23d4d0ed51"
        },
        "item": {
          "id": "3c934258-f692-4454-b59a-c42e9f73eb31",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15ea8e3f-05db-4455-87d8-a034b0c53072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4ff382-1584-4032-a20d-03cc9b0f6274",
        "cursor": {
          "ref": "3f55c6c4-44f6-419c-9c38-3e2d62aad8d2",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9fbee9b5-db7a-4cba-b916-9e4d4f4fd2aa"
        },
        "item": {
          "id": "0f4ff382-1584-4032-a20d-03cc9b0f6274",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b352cd9b-94cc-4fc5-9551-d46c0f67e9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff64b4a-7f50-41dd-8a69-ad7baf4a4040",
        "cursor": {
          "ref": "731c917c-d9d3-42ee-9385-a318c2d2348d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1329b240-4dbe-4ed7-b85b-58997ce745d2"
        },
        "item": {
          "id": "0ff64b4a-7f50-41dd-8a69-ad7baf4a4040",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a15fc41a-1489-4331-b459-49e4f6062b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e42f46-e17b-469f-82eb-840bb71d6690",
        "cursor": {
          "ref": "b7a1e03d-67fd-48c4-92d4-3c284f520f9d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "79f2e179-581a-4eca-a259-08408e3f8296"
        },
        "item": {
          "id": "13e42f46-e17b-469f-82eb-840bb71d6690",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "50294de0-c72d-4043-97bb-95c035edfd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d3af27-605a-4f7d-9b9a-d30cf286cf3e",
        "cursor": {
          "ref": "4572c5d4-9536-4cb5-9a04-7a2053279558",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c007a828-6214-40d9-afe9-4c0a423bb9a1"
        },
        "item": {
          "id": "b3d3af27-605a-4f7d-9b9a-d30cf286cf3e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3dcd4178-a841-4d95-8931-f3ab1373ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7992507-ed88-401b-968a-46c910679ec0",
        "cursor": {
          "ref": "be11a43b-265c-4d67-b962-05186b5e7169",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bad76fed-fbfb-471f-ad16-3a218ede8205"
        },
        "item": {
          "id": "a7992507-ed88-401b-968a-46c910679ec0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f746b7bb-d195-4dd6-a27e-abb684d43a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5918e5d9-8be2-4fee-996e-0d05cbf84030",
        "cursor": {
          "ref": "388a3db6-ec50-4a60-bc18-3dd3a08f5244",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "da5502a6-350c-46e4-a32d-8fa7a187d461"
        },
        "item": {
          "id": "5918e5d9-8be2-4fee-996e-0d05cbf84030",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b744db9a-1b7a-4e56-9b29-5a3003d5e1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd97a71-a1aa-4af1-b6cc-5de9e39af5be",
        "cursor": {
          "ref": "292ca943-97c3-4b41-add5-b3777206cd58",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a9f2d8c8-1445-4b61-b0d8-50dcd8882437"
        },
        "item": {
          "id": "3bd97a71-a1aa-4af1-b6cc-5de9e39af5be",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0284d12e-d3e9-4d69-9fef-c79394cc8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6442cd3d-d0a3-4f01-98a5-c6c270ba2381",
        "cursor": {
          "ref": "f1609ff6-3404-4f3b-96aa-72d38bf496c1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "903a1fd3-1c26-445e-b00d-2a063e74dcea"
        },
        "item": {
          "id": "6442cd3d-d0a3-4f01-98a5-c6c270ba2381",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "103bacd7-eb56-4585-be20-9ca6e417587f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f259db95-080e-41ef-9038-630db33fc0f5",
        "cursor": {
          "ref": "7cf7b2d3-02fc-469d-9959-edf737700406",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3e75632a-9022-4506-8a75-12af8fc40602"
        },
        "item": {
          "id": "f259db95-080e-41ef-9038-630db33fc0f5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7ec0df60-090c-463e-81ac-69a61dd8e8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b669575-2b84-4782-885d-7a333e632247",
        "cursor": {
          "ref": "40ceccdf-93e4-4a31-9f4b-d2ce712d740c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6d26baac-7026-4d3c-ba8f-57fac36fd900"
        },
        "item": {
          "id": "7b669575-2b84-4782-885d-7a333e632247",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8b7ab02f-c065-4993-b716-bdfc8e67406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a502d111-9817-43f1-a3d9-1ac6fa23ef88",
        "cursor": {
          "ref": "fec7936b-d7d9-4725-a073-8a4fa63c99cf",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a59dd7d-bdef-4dda-b3d1-62359f1ae0bc"
        },
        "item": {
          "id": "a502d111-9817-43f1-a3d9-1ac6fa23ef88",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c2f0f28-0158-4afc-a889-b62c27113d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ce46e8-2a2a-453c-998e-dcbbaefde308",
        "cursor": {
          "ref": "5f4f1664-40e0-4178-954c-673470246d26",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "08c9cbe9-dbf2-4dc2-b35c-d7cf407fab13"
        },
        "item": {
          "id": "62ce46e8-2a2a-453c-998e-dcbbaefde308",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fe7e1e7c-955b-4744-a526-65f3ab6bb3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ad8f0-6695-4901-8aab-9cd060320c35",
        "cursor": {
          "ref": "6f34e228-54ed-42b2-b0fc-7e45fe011007",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0fb929d8-32a8-4095-8d88-219077eff523"
        },
        "item": {
          "id": "dd6ad8f0-6695-4901-8aab-9cd060320c35",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "aa10dc76-22de-486c-b825-40e68bbb1fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ba698e-5f8b-405e-b544-3cf732e143cc",
        "cursor": {
          "ref": "c0c50386-9397-4b20-aa3c-68ed0428837d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2affbf89-0f59-4124-b3ae-1285d24b0181"
        },
        "item": {
          "id": "c7ba698e-5f8b-405e-b544-3cf732e143cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d8ea1181-906d-4526-9c98-3f5a4cb1b8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea25269-0995-4c47-b0e3-00a0799fb3d4",
        "cursor": {
          "ref": "add55d1e-dd61-4879-976e-534401f31904",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ce3ab0e5-56e0-4577-b499-8a5ffc899e49"
        },
        "item": {
          "id": "eea25269-0995-4c47-b0e3-00a0799fb3d4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "301829a5-7dd4-43b5-8575-c31c3c1e56fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3ccbf-1404-4a2d-9c6e-238934b403fc",
        "cursor": {
          "ref": "57acb827-727e-49b8-8a7b-9fed77b53372",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a33615e7-4f38-4c72-99c5-c2eb72714ad9"
        },
        "item": {
          "id": "12d3ccbf-1404-4a2d-9c6e-238934b403fc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7435f33e-89f6-4770-bcd7-061facf6b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b217c79-d311-4e5d-8518-14896cc3e526",
        "cursor": {
          "ref": "1a678334-8eff-4fff-bdbc-90a9d13644b2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "54eacf42-af28-40c9-9d5e-744f3f00a7b1"
        },
        "item": {
          "id": "0b217c79-d311-4e5d-8518-14896cc3e526",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a00268ba-4f3e-492f-aa01-374af15e468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf9c6ac-4c80-4e2f-9df5-b4b0165aceb2",
        "cursor": {
          "ref": "50559b2f-4947-412e-bf42-42be80d3b841",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "77e795c6-7134-4900-aa95-d83e9df69eeb"
        },
        "item": {
          "id": "7bf9c6ac-4c80-4e2f-9df5-b4b0165aceb2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e802ad8b-157f-4caa-895b-50fef66950fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a5cff2-c869-42cc-9a1b-be2900a566f1",
        "cursor": {
          "ref": "17be1289-6954-4d40-9c9a-19780d932e96",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d144c0f2-3e59-4654-a75c-172dc9efee6f"
        },
        "item": {
          "id": "14a5cff2-c869-42cc-9a1b-be2900a566f1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3eab1c74-9b08-46f2-9517-17e97bb9ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa10241b-3348-4219-9748-74dda5a7ef23",
        "cursor": {
          "ref": "8ff476bc-e464-47c4-9b4c-1d8ba9423ae1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b7f74419-0ace-4fdc-9e62-a555b9de104a"
        },
        "item": {
          "id": "fa10241b-3348-4219-9748-74dda5a7ef23",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "564736f1-dc0f-40f4-805d-bb3d8f821620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cce1b8b-fec4-490e-961f-827c7414616d",
        "cursor": {
          "ref": "e3430eaa-3b42-43eb-98d2-58b38da96ef8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dab65c03-ef64-4a18-9376-e97f5e3240af"
        },
        "item": {
          "id": "2cce1b8b-fec4-490e-961f-827c7414616d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "477b84bf-f087-48b7-950b-291ec380d7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415e3c71-bd89-4464-899d-b0afc9b6bdcf",
        "cursor": {
          "ref": "c26c4cef-16d3-423b-ab75-9fbb376935c2",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4c20d595-1d54-459b-983d-6023510bb107"
        },
        "item": {
          "id": "415e3c71-bd89-4464-899d-b0afc9b6bdcf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "abe0b4ab-bb03-4e23-bdd3-a763b63fc6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe001f4-b4cd-4ba4-bb74-13ebabe9a35d",
        "cursor": {
          "ref": "028ab876-d0e4-4c56-8dfe-7958cd215847",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b99deadf-d5ce-4415-8278-356c311787fb"
        },
        "item": {
          "id": "5fe001f4-b4cd-4ba4-bb74-13ebabe9a35d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6616742a-5dd7-492f-ba3c-ad7c9a5b0f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbcb5c2-887c-4a33-888d-d297c3ba16f8",
        "cursor": {
          "ref": "8397e314-e391-48cd-9495-7b6ca0e2fee5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4bacff56-189b-4243-ba52-0b1c09130659"
        },
        "item": {
          "id": "3bbcb5c2-887c-4a33-888d-d297c3ba16f8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4dd140c4-93ff-4335-aa99-ca5b2894df11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1c2035-0af3-434a-ac18-e32e7ce691b8",
        "cursor": {
          "ref": "13a3dab8-852b-4e0f-85ac-adc37a27eadd",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "af878ed5-e611-440a-a663-0d1499768c9b"
        },
        "item": {
          "id": "bd1c2035-0af3-434a-ac18-e32e7ce691b8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bef5b593-3670-4e7a-afa9-efeafa915151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6394e136-d627-4c7d-9d9a-982724bb8dfe",
        "cursor": {
          "ref": "4a413284-2dc1-4238-adaf-18771829079c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "68fbd28d-811d-4efc-945e-2a9be11cacc4"
        },
        "item": {
          "id": "6394e136-d627-4c7d-9d9a-982724bb8dfe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "adfade19-fb8a-448f-b16f-a97ff04c9e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ead02a5-4fa1-4841-b985-29dc453cfd09",
        "cursor": {
          "ref": "aa45f393-21a3-4ff5-ae68-70f0a1788374",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b4403505-60c0-4a85-b135-06d167c7039a"
        },
        "item": {
          "id": "0ead02a5-4fa1-4841-b985-29dc453cfd09",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c19e9549-637f-4a6a-bfa4-2b8099ac7b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3f49fa-5bba-4bed-b001-341300ecce9e",
        "cursor": {
          "ref": "5dd1f7ad-858a-4966-adb7-2cfced9cadf6",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bf3bb23a-1390-4aa1-86ad-caf335c30a5c"
        },
        "item": {
          "id": "5d3f49fa-5bba-4bed-b001-341300ecce9e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "68e4346c-84da-4557-9b2b-54bea23aaa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437baafc-d652-4b70-b307-4172b22c44ba",
        "cursor": {
          "ref": "cbd1c57e-9c14-4ee2-9ec1-164851ae3ae9",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8981208f-737e-4f2a-b158-a31ce83ae893"
        },
        "item": {
          "id": "437baafc-d652-4b70-b307-4172b22c44ba",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dbcede2c-d8c1-499b-b72d-4e8c1bb8c28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29695159-f148-451e-8215-b316f5595d0e",
        "cursor": {
          "ref": "d39c086d-0ed0-4baa-bb7c-949a3a7477fe",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a230acdc-acb2-43e6-afce-d7aea33a621a"
        },
        "item": {
          "id": "29695159-f148-451e-8215-b316f5595d0e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2611a3bb-526a-4ec5-95b2-78f015ea2eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3942e85a-4d09-4362-911a-8a9e023da76f",
        "cursor": {
          "ref": "2b78f051-e491-471a-bca5-1a060cf241e7",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9a7c3a5c-86a0-46cc-bb68-ac2448bf46df"
        },
        "item": {
          "id": "3942e85a-4d09-4362-911a-8a9e023da76f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "72f1e28b-7e92-4eed-a2fd-bec35b5ea66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91c32dd-8b5c-4024-bff2-dc9bf6041560",
        "cursor": {
          "ref": "b776bb78-c16a-4eea-905d-7b6ea3aca26a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c32dd799-7d51-42ef-96d5-af8b4145c892"
        },
        "item": {
          "id": "e91c32dd-8b5c-4024-bff2-dc9bf6041560",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf7efacc-9104-4144-a54f-376b8a8676aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb53c20-ffa9-4610-8b65-4ec103fcc307",
        "cursor": {
          "ref": "dc546670-3bc7-4e8c-ad75-744af699335b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c74c752c-d429-4083-9795-5480e9d2e3a1"
        },
        "item": {
          "id": "acb53c20-ffa9-4610-8b65-4ec103fcc307",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4a6c2a5-79cd-48c7-8d4a-6073b6dbb11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8d5d4f-2e40-4143-89e6-0b3680a9990a",
        "cursor": {
          "ref": "e9002f49-0c05-42f6-8a2c-ab6e3f5576b4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "13a4a728-8a2f-4b12-8199-743a61876648"
        },
        "item": {
          "id": "3c8d5d4f-2e40-4143-89e6-0b3680a9990a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b57fee08-e716-4ba0-8a79-cf25532998b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba589ee-5b70-49f4-9bfb-b13500235189",
        "cursor": {
          "ref": "106cb8b3-dc51-4457-9a86-2586c376de07",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1944dec0-1b1b-41f3-b791-268bf8d3e7b1"
        },
        "item": {
          "id": "0ba589ee-5b70-49f4-9bfb-b13500235189",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c30dfdf7-a77b-46d7-a32c-a5dcb0162fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2ac944-6346-4545-8646-0557723144b3",
        "cursor": {
          "ref": "6c5a5843-b43f-4d9e-82b6-888e318a5eb8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1bf7467c-7d19-4105-8bba-a8450104a72b"
        },
        "item": {
          "id": "4d2ac944-6346-4545-8646-0557723144b3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b65e75b4-7ea5-43d8-acfb-b6abfb877183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70084874-49a0-4746-ba70-d800eacff5f0",
        "cursor": {
          "ref": "3c7db8ff-45e5-4bbc-a581-7fb721df794f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d9007837-6f34-46c2-bdf5-2baa79571c01"
        },
        "item": {
          "id": "70084874-49a0-4746-ba70-d800eacff5f0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d49ab8a1-2927-4c0e-a64d-81dc11ac1c68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7876cda-eff2-4887-a593-b1df13e3dc5d",
        "cursor": {
          "ref": "e3dfce30-82bb-4fb3-8c0d-057ad32785e3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "df6bbd09-780c-40e3-a895-3587f5210c7a"
        },
        "item": {
          "id": "b7876cda-eff2-4887-a593-b1df13e3dc5d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c7363f5-5e13-4e05-bb45-bbd3b731e8e1",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4407064-3bb7-4899-8803-928c855b0ba0",
        "cursor": {
          "ref": "7f335824-b745-4f1d-9c80-61b6a3f8f7e3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "06fefce9-ba3b-4cf1-9600-cd72e2f741f6"
        },
        "item": {
          "id": "e4407064-3bb7-4899-8803-928c855b0ba0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d4955828-8a53-4fe4-b7b0-e232a9ae33d2",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9250bf-9ce9-4262-ab63-fb9be1f7c92d",
        "cursor": {
          "ref": "b873e49b-75c7-43cd-93fa-67b9805999b9",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8b2eccb6-deaf-45aa-b099-4ee0d72b9a2c"
        },
        "item": {
          "id": "4c9250bf-9ce9-4262-ab63-fb9be1f7c92d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ab44f075-f55b-43d6-a7d8-f17fd84afac8",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ddbf51-547e-4869-8b87-fef927b78374",
        "cursor": {
          "ref": "051744c9-8d05-4cba-aa8f-7525c14cae9b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "baed57d8-8ea5-4948-aa66-e3f32cbe6ff7"
        },
        "item": {
          "id": "34ddbf51-547e-4869-8b87-fef927b78374",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a22a6971-29e8-4a84-ba98-157cb0354822",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ddbf51-547e-4869-8b87-fef927b78374",
        "cursor": {
          "ref": "051744c9-8d05-4cba-aa8f-7525c14cae9b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "baed57d8-8ea5-4948-aa66-e3f32cbe6ff7"
        },
        "item": {
          "id": "34ddbf51-547e-4869-8b87-fef927b78374",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a22a6971-29e8-4a84-ba98-157cb0354822",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1335687-939c-4930-9704-67a59d376bd3",
        "cursor": {
          "ref": "d1f516a3-708d-4a5d-8eed-e9c7213abec5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a3fc007b-4151-499c-a422-2bb8c262b35c"
        },
        "item": {
          "id": "c1335687-939c-4930-9704-67a59d376bd3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c113a6f4-2896-4b08-93cf-a9fbdd6665b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9db5f4-5a1c-4e02-92a8-c86d9b5bc2f5",
        "cursor": {
          "ref": "4a8169b1-cec1-4bd5-8244-16f7b5df8b01",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f4dfe7dd-4981-48c3-9ebf-0b93eeea9698"
        },
        "item": {
          "id": "5e9db5f4-5a1c-4e02-92a8-c86d9b5bc2f5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "316eb052-291c-4870-b832-0ad149ca7eb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}