{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d314acf1-744d-43a5-be97-f3bb973dd5cb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "344d46d7-5668-455b-a032-49fd452047f1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfee57f5-524f-4087-8cc7-cae9884f026b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9fdd4e4a-8c9c-435b-8b95-1bcd90ef5467"
                }
              }
            ]
          },
          {
            "id": "660694b8-5cc3-43aa-b3fd-61ead8c57f45",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3e7bf81-3cc8-4125-b897-b882314e281a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14f93235-2b25-425a-aae3-5593af80d4eb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "469f2e2e-b8e7-4d3c-bd0d-99281c9acc44",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5c4e496b-5ab8-4b54-8b98-2c75e282789c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3362627-3c23-461c-9fa0-31e26b2e2b46",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38badf9c-d474-4952-9c3b-a65ad40f64bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea731214-fba8-44fc-9866-f4c92b2be7ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d852df4d-5ca0-4f06-925b-6e3ea7bfb734",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0042d492-ae5d-4cfb-8f51-3c2743e1d51c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b801c279-2205-45e1-a92e-2ee3539e92b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b1bce1-8d20-4fe9-a518-e9b686c51533"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f481e770-3f5e-4a4f-9b33-2091e91286f2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ed2e83f9-9124-4970-aa3d-9482b3290a2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "179fc349-38c9-44be-a7c3-c8d4b9f1b17b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da8735ea-d64d-4117-87b3-c8a6cb9a293c"
            }
          }
        ]
      },
      {
        "id": "9d8d68b5-b299-48d8-8e30-3ca1fd057fcc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "25574c17-6fb7-4560-8a36-7714978619c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41a7ee1d-60e8-45e3-901d-7da98903a5ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e52c619-0c34-4017-a10c-28af24b09d46",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7725b8-d5e0-4634-805c-04424e62a86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0803960a-d56b-4690-99e6-1c97606e4800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb74589-6acc-4621-a906-521ec8d28ae8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5b7481-133c-4ab0-bbf6-c88a7b449b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be3b27f1-83dc-41a6-93f6-5054626d58d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8af5fa-d125-44d9-9d5f-c6670256808d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49adca23-8b69-476f-a9b6-a77b597741ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c5bd9d2-4225-45cd-96c1-2564ad43ea01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e52f51b9-5845-4435-abf3-dc8df83546b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e21bb3b-e997-4f4d-8ab8-fb39cb5f4db9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8996d5d-070e-4ec5-b040-f561f16fdacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9152a07a-136c-4a4c-8496-02d87346cf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8915ca64-8451-43d9-b3c7-b4d45cdc6f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7af6ba-4728-46be-886d-3ae18a8c9a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b389e378-cee7-4120-83bd-b256849c1123",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aad9ee-44ba-49d4-9b06-6c55fffa34df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6df75728-d7ff-42da-830d-8fdbe8864d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e46ede-ed44-4b5c-a992-90a1d518caa7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "57421e41-d487-4938-815d-a0eda9debc87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2855876a-295a-4c0c-ae02-97f31127e01a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "519f2e04-a714-45fe-956a-9548d272d3e9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c694723-cf98-48f9-9ac5-01ba4c11fdfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "909a2e8a-6e02-4bf2-9880-bee95df0d385"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef9e727f-2e5a-4a1c-adc3-c30d6d0815dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b9dac6fb-deae-4932-8425-d795b3d7ec10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "908eb522-b53e-41fd-b231-a4f1436054a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e77f9ce6-bcf5-4be3-84e6-e973ec56214e"
            }
          }
        ]
      },
      {
        "id": "52fa993b-fc1a-4c70-bfa0-b7d3059dde0e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c5520bd9-d3c9-49b6-823f-c3786874edee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d83834ad-f39c-4bd7-92d9-7c504c3c50b3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "359e3d1c-0447-4211-b84d-270496c8af89",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1cdcb4-8ebf-4e1c-92da-b1f953ed2a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba011b0-c28c-4e4c-b1bf-6d9b42093110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acf6a92-a87b-4278-b44b-924848c27d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "664c2957-3500-4273-90e1-2c5aa4e0aed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6030b486-3d8c-49ea-bf88-6628c7d1899a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bf954a-801b-4968-8333-45ebd60d1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e3e793-d29b-4b1b-a79e-ae44d0632389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5aee0ed-c514-43ba-a5f9-875d793f2b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b1f582-aa9d-418f-b820-b40741ca8ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f50ef20-5eba-4e11-a72e-501e7c5f4248",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efdaf8a-fc9e-44c4-ad8f-5c141e4d0855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da093ef-795c-472d-8693-e4e6417d3087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8371f42-22fd-4b49-be26-a586ac2d26bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab185c4c-5e80-4f97-9d9f-56eb6d17f9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc5e465-b5b9-446c-9e2d-05edc737e916",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4072ce06-9c66-47a5-b3c9-30d5222cd542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9844885f-8f12-45c7-95de-e09f90e68c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfeef1e-4e18-4100-bc7c-e7600e97cc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c13ff4a-8ce2-4841-a7b3-ebbf590f7bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6ceb1d-f9a3-4592-acaa-86510b3376fa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed6a651-f4e7-46f3-9e42-8be46b9cb7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374924a1-720a-430e-b96e-2faa914d1482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c649c3d8-53ed-4712-819a-88facdfbc51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79cabdea-6a57-475e-af54-35de5131f931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e24557-1f47-42e6-9faf-8a9ded85c986",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14515e0-1495-455b-9187-b4cdd6c05a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1f1851-213e-46c2-b858-b5dc5c15b293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9374dc-8817-4b9e-95bb-c877e8159979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4dc3bb6-d3b0-4ddf-9228-2d71f3bbd125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9852d1dc-5609-487a-8841-4d097ebf91d5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6edd88d-8e45-435b-bfae-20ef72d252b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00b9163-a7b9-42aa-9114-d68520bf499c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d84c226-206e-4bbd-8efb-711bb5f47b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42c8c5db-19f7-4613-b871-ba63722d1e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659a29a3-d626-4598-a17a-c12b2fb261bb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021bfb3c-b431-4109-bac8-ff81ab20c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bbc991-b230-4d7d-9cc1-5879d8f6a239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16e0d26-32e7-4560-8a71-52b50927554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4fd0b4-5b58-4df6-87e8-48983e309b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9c626-53d3-45a9-9407-ea6265a80efb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26d07e7-d459-4f8e-9371-d0010d7c86a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548d6750-141c-4b01-a297-23d0f3ed0bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72e80a3-9cc5-47f3-87b2-72bfa60ee5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de0518ba-60e2-474c-b071-223d156531e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7511613-eff4-4be0-929b-79580626f705",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f213708d-faf8-471a-baf6-cb7155475696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd2f3eb-c784-493c-bf85-1306917d7207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab61dd6-dfef-44c5-9835-d827d93ad374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29dc048-b6ae-440f-b629-e8e216177c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eacc46c-218e-454e-804c-a390e1146578",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2d13f8-0ce3-49fc-a4fd-66b57f12a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184f965d-72e7-463a-bbbb-d86f01d1f014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ab1482-c31f-4e25-a5a0-b0964a01e7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fc88209-bd98-4323-a278-330235cc99e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb596b0-2fff-450e-8c9b-ebae380c0469",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1b1d69-1f94-44b0-ad5b-0b422f047af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45873f2-edce-4ddc-948d-5ba81a3eec64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ff755-d74f-43af-aaa4-4ec72cc83410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2325de73-94bf-44f5-b45a-3c6d277ec6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79842bf-1db7-4319-b272-11f25e7d25ea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf8f215-6d1c-4afc-a972-1c018f9e8b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7925009e-f0d4-4ffe-a39d-f30d1a918b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d86c9d-295d-489a-9690-689b6d6c7509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "334b83e7-b48e-41e2-b5b0-3ba73afe6c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef4ff49-99fa-41ef-b767-c884086f406e",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55450ff9-51cd-462a-8362-0c99f32f90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effd036c-b7e6-490f-965f-fe5dde803600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857aae8a-024a-49c0-a86b-12fecdd2d156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "844db2e2-0de7-4c61-807a-e324e7d6cf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8800826-abf5-4b0e-af45-dd8a1286d70b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f8f641-5b9f-4bf3-b03b-f410fa859bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e312ef0c-3b87-4039-9da2-635d68f2680a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572fff38-6376-4a13-944a-9d7235e6f3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75150113-c08b-4c43-864e-53ec81097ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e63c8cc-553d-4c54-9218-6fc4ebabadae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b5a6b-03d4-4761-aeaf-822609ba5946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01cfd69-bfc3-4100-8099-d21455e80beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68728444-8585-4be9-b12d-71ad6225208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f6d3b10-1558-4b5a-a2d7-f65640992a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae829a12-c382-4a5c-9a0e-2397728efe98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf4bdd5-f08a-4275-9810-bbbc7fd973a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef31669-5703-4cde-9482-7896dbe4a998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9869b0d8-cf4f-4ee7-be3c-b885ff1782c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a7d8419-8d3d-4bb1-9b8d-77520cabfb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02820c07-a7da-477a-b663-493800dd5ff3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b91a429-6e1f-4158-9bd0-58c70554de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe82faf-a2d9-4fbd-b4d2-360c45f0499c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39829b-b7e4-4928-ad81-895d6d64751e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ce6003a-880c-41a0-8fdc-4918579c7d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5eb5fa-7214-4f0c-bedc-31f5fabba4d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536578b4-c3f5-43b7-8a89-7a56f6454b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44186326-b137-46c2-88d4-f89e9d123b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6cbc58-79ea-4598-a2ed-289edf2d6bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "598bfa96-8624-4afc-80fa-2b3e82cfefa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a522ae-eae4-4ba5-b2fa-0b4550599323",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388c4c59-40fb-432d-9a93-2a05774b0a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2826ae0-eb1b-4936-9bba-0c0640c472e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897263fb-e621-4e5a-8573-f7e5b4b6b0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c26137-6efa-4d78-9921-d77182b16b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3112d920-6ddd-45ad-a7c0-121620408415",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b770df2-ddf8-4f83-b4a7-6e8994805f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac18ea9-1408-4bb8-8bf3-c4fb721388a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7105e374-04a0-4416-9d68-e8156efc8972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9fb5ad-c1fe-46b4-ba34-c7bc2cb931a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a160d021-ac1e-4830-abb0-a4dc6e4f5191",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884c68ae-ec69-46b2-91bb-c0953a2de1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6a1645-d4a5-49a9-8fd3-4ce32ae02992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b4a755-0a71-4c57-bf12-7bf5bd34540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d696f9d-f6c9-468d-b4bb-1f8c6978c092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a595c-a962-4458-99fb-6cb691e0b001",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b109e738-2e9c-47f6-9cdc-81504b2103ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0bc01a-ca15-466c-9395-2c27bbcec4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dfde60-21e4-47c7-8411-1a2b96179482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c563ac2-40ed-4466-90e9-fa53d799da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba790bf5-91ea-44f2-a127-af319e2f3c56",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec35c34a-d7b5-417b-9dc7-b3cbb269f68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acb7f1b-b0ee-437a-ae63-4a573243b026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64119301-ded6-4611-a83f-be4d4ca6afb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a3e477-6413-4a2d-b5ae-a18ab48df7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55efa45b-7824-4e3c-800c-5ed9f099a43f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974f6d4a-6052-43d9-b682-afde8d564d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfc34cd-29c3-4ef8-9363-e3144377291f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bcbe98-44cd-4946-a3b1-5fd8b50c11b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd39496d-1b14-46a0-89af-b70786ad55a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31893360-8fea-4d54-8ccd-e7e525b928c6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577641e8-06f7-454e-8378-b2896f2eecf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007edc08-201e-4aa6-97d6-9aaa651d812e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85694f1e-cf38-42e8-a64f-3864c5d83ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97fd5ce-d2d9-4d6b-8e3e-abd21efb2f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b32fac-3a99-4f25-90da-dd0aa2f6ac25",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c9f1da-04ef-4c48-8761-649aad9c10dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66780244-8c94-4010-8167-6a8d0e531f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88786b4e-162a-4a6f-a72c-d95ae52d626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79124fd0-8643-45a6-a49d-54d8333dccea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabac4a0-51c0-4397-8245-190262fef5b6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613826eb-8576-4e6e-8bd0-103d5fd21154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e873109-5136-48e4-9433-d3e7e58151bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecf67da-b515-43e4-bc89-e421cfb37b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06716c0-f83f-4c47-9d32-cb83366841ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0dd1b5-b0b2-40ed-b97b-e3f37b02cd67",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a0782a-fff5-45c5-966d-60d6135f1757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da9a244-1dc2-44e1-b18f-1adcac73d208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5c8ca6-b15a-4cf9-9237-2b85459b0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16aa2459-9a9f-4427-88e1-a38fecbbaca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0c5885-e66d-4e2f-aa5c-390ec7965ba7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff17a0b-3fdf-4bc4-bda2-eecada2e880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e122a7-fdf7-4d8d-8ec8-4667ec805660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a33b37-5549-4dde-a955-ecbd5ed9e2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e0647f-65d9-4efb-a91a-9611a4e9151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30742159-340f-459a-a93c-be64e8103e3f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dfe3f9-96e7-4195-b069-fc44a5b8dfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f50d9b4-1743-4772-82ae-c23c40acdba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f159abcb-3b13-4503-91da-7aa05a275785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b754d2f1-59d0-4c92-8bcd-404cfda200da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec75cbc8-5641-497a-85ac-c12f02277741",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32929fb3-7dc6-434e-a3ea-dd135caf57c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95f4c74-3581-4ccc-a67c-c3b249ebef85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b49e992-fe49-4372-86f0-f1a3a45ce538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaefead8-9065-4afa-9f65-a4feafe2581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2168d745-1c74-4ed9-b9d8-e8e4b1e26cbf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c2745a-a169-48b5-a179-bdae3c2d4b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9df17d-9cc3-4f49-a625-d650a021fe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b204e7-8ab2-4548-8202-4e5e64cc033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c495649f-ce1a-4970-8645-8344d04b742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6ffdaf-3431-405c-980d-2140767a36ad",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dae2ea9-da98-4770-af00-db128f1d49f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48ad8de-e857-4501-ba2a-b1ca348cea7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a1b8ed-4340-48e9-9af6-04df6b3c3d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f01bd9-ea6c-4696-8458-f95c6c904dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad5dcca-98c4-415a-94fc-68eb96d17ef6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa2fff2-22b1-40ea-8f50-3f4b7d74d670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bdda04-cd33-4a8a-a2d9-4c93adee2256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab8da1a-fd92-433a-950e-77d3388f8f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a2fc8a-666d-409b-801f-c53e997a17f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58753ee5-9fe2-4409-aae5-ffd1bb0c776c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead4b42e-fa90-4f4f-9b51-0c9045080387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa73a72b-c04d-4602-a4bf-1f7774d06b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdff453-51a2-4ad0-be2d-b604469ee7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a74cdee-8054-4297-b8f8-99ea2f3030e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a63b172-4920-46a3-aff7-c7c605b0e323",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13463fc-6cf9-41d3-9fe3-6eff41499400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e07d3c-893e-4bbe-83fe-233e9cac45fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c13405-bb1e-4016-b175-9b7bdffd93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1999f997-2e48-4ed6-9b2d-2497ec0d64c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b442189-9d49-4be5-b746-1ac758b32e29",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc52589-f047-4941-8265-c8b5a131554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fde48df-d278-41ef-a009-a1976ef8be3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c39b76f-8942-4c44-badd-0c5d8ff77522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d9b3ad-d670-43ad-8cfc-34f3d084a2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b756789b-facb-4d77-b360-a19bce9d04e6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deee1cca-6cd3-4cd7-99c8-5889fa457673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba4ddb9-2233-48cc-8419-71b23de81d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ccf3d7-cca6-4c92-ab25-735e750ad040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d83891c8-734a-4a2f-b1b5-270432b0673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36b3651-1b93-4f7a-b0f2-99d24db95e8f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcba23d-b86f-466e-9632-09660f94a523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95774cc-5106-43b4-8b2f-3a3eb7947427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464eec4a-4814-4e91-9d9b-adfc60ddd94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d16123-1adb-4dbd-955f-54b534152ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072892aa-3388-4c4d-8c91-ca05f2a30a02",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c53f1ff-300e-483e-825f-3d8ecc424587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ac64b7-96f2-4af9-b272-978ffb63e507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594386c5-3d4d-4e75-8892-0a85eceba2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "535963aa-5309-4d5b-a201-efde3fbb5ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9f25f9-6e4a-46cd-bcc3-27b3d91becd6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7931ad2-4925-409b-bd8f-a72611ac03d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f901e-da5e-4e02-b6c6-cf675db7dcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195e0b02-8036-4357-abc5-b83f396d50a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d272c7b-259e-450b-bf5b-7f9619a2521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f81c5fa-70c8-4db3-953c-d93161411c70",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d8aa08-0c5b-45a2-bcea-9a800dd1ce22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c40769e-99bf-455e-b9bf-603647a5b7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef77d7a8-062b-4a4b-860a-033f65312de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebac8852-cef2-411d-b397-3bea04b9618e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb76933-2c12-42d9-b037-4a31c8e7d76f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba16a5c-ef53-47db-95d8-6902f30cff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fa89a1-0998-4dbc-bf57-4ea5db9dd9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6158c0ab-c002-469b-b478-e2a861f30089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd4785c-9597-4226-b802-261c780ad9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbfaf09-f4fe-471a-8822-a311dbe2dd85",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c50857-1dfb-40eb-81ae-6f4fd5fe9ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cb4527-0d11-4894-a4e1-026b550c3a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6db1e9-d8c8-432c-b7df-64fbdbb5c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1beab1e-edb6-4138-870a-d0851a0c9740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d1616b-e9a2-42a1-87a5-e3cca6b1a149",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4c14d0-59dc-4e25-b6ab-0d750be8a06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd180caa-5a1a-4a5c-9855-8a69dc8afe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71b2d4b-bb66-4b43-87d3-3565abef59e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4340eb6e-a6c3-4754-8581-61a03651290d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53da0558-aaa7-4e22-bcca-73e31f5478dc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a94423-87b0-4946-a292-6ffcfd01439b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d286865-a820-4b9f-9a6d-21d05aabe33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562a1220-7491-4d2d-9e24-695caa0d5636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54983db-aea8-466f-87e8-60a4002569a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374f57f7-24f7-459f-8cf3-ba6513dbf0ed",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d76b2-957a-4b68-8600-184bf42d7b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab104b6a-2ae2-48c7-b39e-a687d6f6f685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5787ed5-cc56-4a7e-8a2a-6df0a91dd084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b330eb9-9c0a-488b-ad36-2598dc54a800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a30a786-4675-41f0-ad45-eec5bd5daae5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0bf28a-7936-44dc-8d00-0c8129cc03b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce18ff8-1e45-43e8-8de5-b8bf0fa8633d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1327334-1214-4bf5-b511-ed26bb827994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed30cfc1-86b2-4e22-abbf-00ba5298ef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9961ba4-c59e-4230-be63-5b7c30557e73",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8093494-38d8-4d85-9ead-9958e31257b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c6c3d-f85d-4daa-9117-146e7f3eb26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1888a17f-3928-40d5-9be7-901c053cdfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30ae6fb-9f5a-448e-af47-46fb92a4b5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a2eba1-5cce-447f-b362-dc6d484187b0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b777b8e8-7cdf-4301-8224-6ac3001fffe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5271f1-add9-4cb0-8063-d6fc1a5ec18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c97fca3-5e67-4b09-96af-5bbd9bcbabb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78f2a020-3f84-4937-ae4a-dab42cc5b900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c263cb-143a-4653-b999-63c3d29bebf4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b34f9-782b-4225-8fcb-377f48ff6f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdcf1d9-49df-4083-84eb-3239049dd64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751ed172-bd15-417c-8a5f-3602d2c7db27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8057361e-87ef-4853-af92-7068f5f671fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7653553c-d7be-4809-a9e4-a264536a6078",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995703f-e7c9-40df-9c0b-0e3af17aefd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78851c98-bba9-4af4-b392-52497f679abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762a41f8-ad90-45f3-80d1-2a9b3e8de4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27ae8d3-c580-43cf-8b0a-1a0aa8aaf059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b8e3d5-3f27-4b55-aa43-909a69d2b2b8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85c3fbd-ea54-4331-b861-d865f9803114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb170ae-5f80-42a9-b055-bd112d7e44e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d58477-a4af-4442-b3e8-66cefd50f140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1a5a5c-f60a-4b08-a8c7-7851e931d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85515cda-c842-4f8c-b9be-7dcfc4f528d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e017e-def7-4f56-8b83-0733e4002fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cc4274-c08d-411e-bf3a-5a01d64eb20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8398040-c202-4ae0-9507-db2d8b5cfebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c44f57-3174-4fb5-a5c0-575ffade786c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895883c-9d79-4eda-a9c9-da463906635f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0541a631-ac06-4f2e-8964-0f9ce45b7c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cf8bcf-cce5-4bda-a3f4-081ed0e2b5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0147f2-1778-48a3-8b38-817a0b93bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "becba0cf-e7ff-4b91-ac1c-71d87fc64ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd98368-33a9-4626-8925-209d61c25fd6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad1b8f6-b865-41df-a63b-8ca666bddaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ee9e02-ead4-4185-8e43-86757fb548a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0edcff-4d84-4fc7-9a47-b69f154b06d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f43323-8795-4649-9f39-2872312b5aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88e81e1-f5ee-4adc-835c-af005334e69d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702b7385-e00e-4e79-a195-c6f28b245ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78747b8d-abbc-44f9-8d17-442a22c5333b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b518e8-726c-4864-b17f-b1a85ae6169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1a37bc-2641-47c2-bce8-81e6a557c143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bdb902-4e4a-4bd1-a57e-6e04b73d936c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a95b8-d97f-4bcc-9474-c6f0d332e181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d4c647-cad6-4e03-9c60-2c76ec5f46fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b718310-09a3-4389-9297-83e2b501108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27d2e12e-2771-4c98-a6b4-5c2fb46ad586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f6a6ed-1cdc-4319-907f-cbd464dbc0fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74b5364-a532-4652-b9ba-4ba1601d00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab2e7be-3e92-4f72-abc5-90e0468d3fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156a010b-9a86-4b17-bddb-e47c3d0e836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f31c24d0-2d17-45bc-897c-36cbf4a28a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa28310-b8ac-46ea-9cac-91e479ced66a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237d5336-55f7-4919-acbe-1f6f2dd71a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6645c0-5dd3-484c-a090-b81ea381b31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0731caef-d0cf-4dba-966d-685f09fa7ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ca8be0-f5de-40d9-9308-6abf0bca287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d43d7b-7aba-489f-be3e-e8a7cb481ad3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afd2567-b747-4efe-9861-d823ab9d5823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685e2708-acf5-4690-bb7d-2f816359fb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c11bb7-b597-4ceb-95c6-85bbdc037ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b7457b-5558-46b7-8268-65b3fb372a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3dfad7-82e8-45c6-b67b-f72d9342dbe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc7731a-a1c6-4d0c-83e5-ae6b75ccc345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444b6b12-7423-4e9a-9323-38c8c8c4cfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5630500d-a413-450c-b607-24c7547e2a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d8e2e6-8539-42f0-bc13-bdbe3338c796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e4b9e4-ed82-4caf-91eb-c9b4fdc8ecc5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956b916-2ecf-479b-87d2-eeba079e5d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84553ed0-b089-4ace-bd2e-7791c7012c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e91d4-0b24-4c56-ba13-6d7f08fd8155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4082bc10-1aec-4cf5-81f1-f90ba6bd347e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b8acdd-249a-41bf-ac9c-5c98f525a12a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddb57c7-066f-4f49-83b7-cc0f0dcf44e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb2ec82-190d-46b1-81b3-9c71554f735f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8199c3df-ae97-4e67-811e-904a570f2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b25882-9544-420b-9981-969110950c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bffc55-8e7e-44f6-b4b7-c6fed9233c34",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c9e28-cbbe-43a8-90b7-cba85216536d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e79103-6c89-46cb-96fb-56a5ca5ecc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdda201b-6dbd-4ead-b508-b8de3541270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d343d90b-9cfd-4d14-9b0f-d2f3be27e8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3593a35-3dc7-49d6-8465-ad4155a7e278",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e4abe6-f477-46b2-b0b7-46b4e6fd77db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5380b8fe-17b5-43b4-bc8e-11ad6b8b290c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219d358b-bee8-4cdd-983d-900630116da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c54a0a4-f0b6-41c1-bd43-b1a0b3900971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab7f694-6fcc-41de-8170-99276e655285",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f357431-1e8c-4be1-8afd-8fae1f1c1995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0452df-c974-427b-9597-d7bb70ab62b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd942da7-4df3-4450-a131-c76805013507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b2f81d-037e-42fa-a284-edd137e1da07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655f558f-b8b3-479c-81c4-d8ab548321cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48578e7f-7709-4947-b910-98dbf5b5b6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5055de52-9d60-4d29-9b87-468de9ccc3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc4f42-4909-49ea-b9ae-4504764860f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28888d4c-2d9e-490a-bb03-79ee77f3be9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1a9735-0d8b-4614-a747-b07997ff9f99",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecad9e7-a66e-41b1-b3b3-b1c6b6a8ca0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868b9f32-0fd7-49b2-96a3-2a4bdf0e58ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898556ac-2518-4724-8854-b9c23e9b3048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eb33e9-253d-413d-b97c-9229287f0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18ef815-e190-4f06-9453-43d8fc6b20d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d8b01f-98db-4ca4-8e73-8d223caf9f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab8cd75-8a48-4fa9-a5d1-1a08565f9d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b77341c-a1ec-4e01-9fad-f96e6cffd3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b51bee3-e900-4514-9dce-ed49f90a7cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf39d7a1-830b-40df-9f7d-58d91dbcc1f2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05baecc6-95b7-4366-877e-506ff1fcccc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1ef7f6-cea3-474a-8fa1-d0f09499460a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0610546-5ee9-4e2d-b252-eb7422f4f880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23a7796-be6e-41fa-b053-2553866cd76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d501c79-0112-4823-a49e-cab1c90632bf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7947f3-4077-4b3f-ac04-c477855d3ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9416dea6-8239-4be3-a927-217d38dd7cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293704ce-d54c-427c-8b9e-89323135ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "930e0e1d-2850-47aa-a081-9e63bcbd1627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77428e42-c17c-4fdb-9391-c9bbd0023ca2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0122b0-14c8-4884-ac9b-007414118e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2645d668-24ff-43b8-b8e5-2ed28c65a2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb9b7f2-c375-4994-87d6-184f506d5c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f846fc-e9b4-4bcb-9b7b-9bde89025c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282c9c8b-5dcf-4785-bee5-ef77c3b257eb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6a009a-ed9b-447e-8198-795afc87b395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7a9149-c9a0-441a-be48-900fee5b6f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89c7543-5269-4c75-b9fb-819f93370be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77dfc85d-1b44-4fcc-88a9-9caf85e85299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b90cfbf-283e-47ca-abae-f1dbabb48277",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d61226-06d9-4515-bd49-fdf024d9fd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28b45e4-6308-4985-9465-c920bb8d3c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea94e602-7b22-4d7b-9dba-22757a209ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa085817-ff32-43da-af88-a8c31dec1532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9ef4fe-8046-47bd-9d71-9257f9cc6b72",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd1d23-0dcb-423c-9d6b-5634358bd849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed9d282-416c-4926-b9fa-608ad24a64e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b16a55-e72d-4188-961d-0b8beeab174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2319b2fc-4169-4176-ae77-579e65442aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c31d0a-0e7e-440a-9f72-cd3939c07463",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9647dc-f127-41dd-898a-57c4fc9263b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbe8465-5437-4dd8-877b-408f72a87613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97c0141-ab59-4381-b4fa-7c53de63d7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e734b9-a2d6-4fc6-be42-1c9af0cbefa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab97fc69-40c3-451e-86ff-72b094826d00",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f00915-4a81-47ac-971e-d69b73ba5c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972c4a95-340f-4b56-af47-63389e2eb2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540d052d-7260-4bc6-b366-ed2f31890c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a65cd34-e1ce-43ff-bf3a-7e29b2cbd05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6478f022-6ae2-42b5-8a12-0bd257c60223",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ad0d31-1954-4968-8479-2f57ff5a55e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311802d2-bbf8-41e2-8319-847fb789cada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b41de2-d83c-4bf3-a906-7e1b8f22e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21464470-5299-48bf-9267-9d1a82028eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee379195-336d-47eb-8569-5050623e3e3b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545433fd-f130-4d6b-86be-c8ed29d610aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2760f109-c501-4e49-b2c0-32adbb9e0b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0204e5e4-97a6-4d47-9072-e19c3b73e207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37978cd-4743-485e-bcb4-817147d83808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683109c6-0ae2-46ec-bb1d-46a7817fcd79",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bf65c5-1cec-48a7-b580-2db7b206dae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e282e1-c038-46e3-b053-309476812941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb16acc-aa50-467a-98d0-2e5c0f6bb0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "521574e2-9004-4bf1-922f-3965f00d7ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c30af45-52d7-497b-b448-13005ddb2f4e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36161eaf-eba0-44a8-ac22-af1eede4cb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea56eb8-67d5-4bdd-8044-8d53ef4aa955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fa54ef-417d-4b42-83b8-cbc668bca9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "463ff61c-2be8-4ea7-a82a-974deeab164d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19019407-ef73-4be7-892c-3d2d5233b343",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b482cce7-97fd-40b7-a189-083e35113304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b437d1-d0c0-443f-9688-08e1fdda6e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6be6f7-3810-4dbc-9dc8-3843f4945d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21896510-ab66-47c1-858c-5c10df994a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d03ab2f-21e7-477c-9839-b33ea006bbed",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da85b40d-069b-4c45-ad9b-5ddf6f316e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f892252-0a2f-4f21-86a5-309cfba8c972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6101a9-379f-46fe-a887-b20fc23d2b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee8d283-b894-4f27-ba43-aad5ece0d898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79876f5-5e19-4dac-a6b9-09ec8a8bed45",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f59b55-b5cb-4a72-9b85-52310c0843cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a322c5be-1a6f-433a-a904-82989a4b7dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f478f63d-e51f-4dba-8ebb-9d830d8a15e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a689dfc9-fbec-4704-a4e3-17e2ba20a5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0023ec-09a1-4b73-8236-ebdff762873a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75118193-2e63-4d73-8576-452be20187ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e37f38-189b-4c6a-aaf1-334d6951ed3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91969096-22f7-4abd-aa29-7d400b4ad218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4039f33c-9602-4c59-8a13-ef9df8a2efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464028ae-cb69-43c0-9446-4e78fa790433",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1919e-bd79-4ac4-96f7-aaaf77f0df96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebfbae6-6500-426c-9035-a0c171ecdd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4e3fdb-0fdb-4193-8c44-b3abc2ef26bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3c78c3-9e7a-44f8-991d-b3615b85507a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0f0e87-94e4-46c7-bddf-1ad2306c8a19",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd24e3f3-9f9e-4aba-a024-433d9b6b89f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9d8341-e5fc-458a-a2b4-da4a28a28a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49db4315-575e-4a7b-af16-a6318961b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a717a742-2b45-4ff7-8ce6-202662950130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c40537-5887-4f01-9e3d-9de7392f1d5e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dba818-2135-40c2-97c2-966ef722348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c32b51-fb91-444f-9a23-330f2bd61a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff4a509-2267-4ec8-97f7-7e48526962a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a1bcfd-a07b-41ad-8d81-64f6fbc91b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f07131-83c2-4aa5-9c17-534891aec2c8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5de700-0e3d-41b6-a7a9-e679d13ebce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d26eec6-d1bd-480c-8f9f-d1251795c47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15bcdba-cff6-4996-8480-57af3ae4a4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdd3841-65de-4a08-bdaa-0cbf78ee596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48979979-7020-4a1a-a083-a4945a656da5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07f5d7e-c72d-4628-a60c-605c29180bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21249642-97c6-46ad-a8cd-c2c34b0bfa98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6671c70d-a563-4593-b9f3-e684b444416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68ca0397-e3bc-4211-b9a4-f8c04945a79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5149049d-a96b-4a0e-a017-f266e533ec12",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd2296f-e7e9-4cba-a40c-b0f8e155e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf37efe9-20e7-4a43-8b07-cdeb6e8e377c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04dadac-08dd-4e4f-a919-657aadb03d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2009455f-1df1-4774-9ca6-325caa4aa786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc513fdb-48ec-4005-bc31-315feb069d87",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b54fd2-d972-483a-8599-3910c5157f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dc286cf1-82c7-47a5-8c42-3b4bbbd4c5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02afca62-3b76-4e0c-b435-e96740c03061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f5cb04-c820-48fe-a238-f8c5bc76c338"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd7b5229-3575-4041-88de-9ffc5f393b42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be010eb0-452d-4cec-aa01-3a68d945ec15",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3dbefc-cda3-4930-9b5e-8bc52fd397e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb48190d-2358-4865-871a-9986e7d71452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44d346c-6b37-403a-9ee1-e92939795540",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a8e16d74-5f21-4e65-8f73-fababcb9a949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a45745-9c3d-427f-a107-533302d013f8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d975174-5104-4b9a-abfe-471cdb591703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c203b3d3-cec8-42ae-9efc-697ed90ccdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944515b7-48c3-44cf-b5a1-a3eb3c865282",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "33d6792c-8f6c-40cd-a9e2-eac75f5d6105"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6fc39f4-ec4e-43f1-b640-900213a30bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a011d5a-ef0b-4bb8-8fa4-637e707a8644"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d242071-d055-499a-9207-c35af1afa4aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d6e418e-82ec-470a-9018-0d42cf9c7e8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b17f300c-c982-421e-bb7a-0ec4bd929073",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ea473d6-e6a3-476c-abe2-b842585d9e4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b619605b-bce1-4fe0-8349-a5a293113b2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eaebce0-440c-4b14-8356-2772813c81d7"
                }
              }
            ]
          },
          {
            "id": "89c08b8c-65f5-46f0-8005-da92d4f2d025",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9af0b1a4-082f-40cd-9035-ea9ce46ba30a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cafb8e4-00bc-4a3d-958e-341553268be2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f087714-d090-47ea-a8f8-41e0745549d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85a7a69c-9e40-432f-b639-69f274dc4185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4060a96e-ef27-4ad7-91f6-0d4d3c6f7731"
                    }
                  }
                ]
              },
              {
                "id": "b289e0c4-ee61-43c4-a509-1c1c4811f29e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d660ead1-b038-4ef4-bd0b-7b286333a380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79d9ea22-ff27-420e-89e1-33f27a2c9ee8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "576668f8-a49c-4347-956f-fb498fc8b827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9204a03-0e1f-4fee-8deb-50c37f4fcc48"
                    }
                  }
                ]
              },
              {
                "id": "113aefdd-a861-4822-a13a-b0aeead8c4a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19747493-c38b-46c5-9c06-181e9c1930e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9866e94a-d253-4d6a-bb81-f9a8566745fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4997eaf8-b950-4d68-a841-75759e3da5aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "076be893-1fd7-4e00-876d-920b14c168b1"
                    }
                  }
                ]
              },
              {
                "id": "f297f753-b256-47a6-b021-76ad109bdcc6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "937c8ca2-3d1a-4a38-a3e3-d89a5b5cd152",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0302f6c-a2fc-4c38-87ac-07ee6300ddf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3ac938b-f796-4a6e-adef-65a8de5dcf4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ba4ae251-f8c6-4193-af77-320dedc23b79"
                    }
                  }
                ]
              },
              {
                "id": "1d1540f7-09ed-4731-9d25-5b4aee53077b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20dda47e-fca4-4f5f-9530-c3a7cd6b2700",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a2b2d97-2d9e-4259-a507-83925de66b22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6d969f3-2eb2-44b5-b927-5135dc3770f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3662fcc-89ff-4a66-8bc8-d5fe348a585f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4131a62-dc28-4637-9bc5-6102dcb21a42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae96c4ae-5ce4-46e7-ad52-48106203ed0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6f70b94-6f79-4ffb-aeee-d17d6921fad6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81ff51cd-c949-44b1-8fb1-1eed6d98f672"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1db6c61-ace7-4008-8785-6a8238998e3e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "97aa4584-2910-4128-a536-7ff2f38aa086"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e18d518e-7483-4b4f-b10b-f06b0fb63684",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bb41596-55eb-4d92-9003-6b886a465492"
            }
          }
        ]
      },
      {
        "id": "10b62c4a-f589-4fb0-81f5-d5168b58ac0d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03f78395-6241-49f8-a187-73d9522682cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "beb3b8ce-8137-423d-95c2-2d1c4b5e87b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "836bfc20-23af-43a6-a30e-349e1b4051d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138aac99-b001-4ce4-9261-02ed87a7c779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f437c114-7ee1-4440-a4c5-22dc6bdb037b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c1d1a0-c6a4-456c-ac74-301545d7fc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87d31fa-ddf1-419a-8f18-f3b314c47864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cfa543-13e6-4e9c-9aee-6ef9cf8246d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379eb71e-41a1-4ea0-ac6a-bb368e2bbf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea30487-31d5-48fc-8638-898af8b117d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aef71d6-b03a-47f0-a396-7934545cb35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "133e1e1f-1334-4786-9524-82fc562fe50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef205936-d280-4d39-bf1a-2a95407bd873",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d335f40-1796-406e-acbe-92ea762a6a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578b3793-8be8-40d0-bbab-ddea0099ae35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d302de81-686a-4d73-a60e-1da90d99a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7d0abb-0b62-4e26-9cfc-3b8fe7f38476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbb27ed-314d-4c7b-9ced-b688f6aa8482",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefe12ec-4fdb-4c5d-be64-32d36e87f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffec898-78dd-44dc-ad10-ed91fd307028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72b5b2d-44ea-44d5-aeed-fea6ab1678b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee15262-3477-4723-9a43-1b227e7a3f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b9e6b-0b08-4b70-82da-4bc1a8a92dc4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739538a9-8160-430c-ba21-5b2611dbaf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183d73bc-cf32-4fb6-81b5-866f3a35cd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1f3681-8fdf-4961-bb3c-882779a94f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f9baed-5a02-4cec-967c-e3cf14878a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414ef055-9fe2-4820-8747-9e2835f23a68",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e322cbad-cee4-4744-b7a5-c002dc710f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d033166-5b15-46c7-9eb5-188644bf76e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8035fb6-330a-4703-ae93-d4ee494d1dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8331d98-ba9f-449a-b432-7da3e5640617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a99d38-72ec-418b-ac0d-082fc7beec46",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9ba49e-380d-457d-be4e-beae918dec74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031b04a2-2fe5-4624-8d47-5678de121acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a5044b-5f1f-4479-ad29-8482d354b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "208ce2ce-7847-4882-8612-4a3d26149e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b5e451-cac0-4f59-aa8e-9070745f2ae2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5191f1-ad27-4e9a-9688-de4506ff259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69b5250-9645-405e-b74e-1d3d9f5a5686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de950d6-cce7-4b36-b874-39ce491b1ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d23e6ba-fc15-418a-85ea-3739850983ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5187a0cb-b6db-4ede-8ea0-f81d562e07b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021ba358-7037-4f10-9fb6-8c3a0105f127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feaedee3-8a98-4a01-94c4-ec3e8412f974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd315e8-c4ce-4b42-a5d3-cfb170379b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe7e7fa-139b-4f9b-86fc-57d189fef8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8c4323-5ca3-4c53-9769-758d7740c447",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467c1637-fd86-4a0a-b450-88745a8d04c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b383d14-e811-408d-9022-fb3f3d9028d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842b2b1-c83e-4971-84c0-a653f11279d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90dbd4d2-d543-486a-8df1-939f9c4c5b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ca3c2d-842b-4570-be4c-6338deea3ad9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961f1367-6c50-4392-8cfb-975383e9d2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595d0517-4dc5-45d7-8335-92563b86a6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ded781-3eda-4129-a779-745ee060cac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "92179d79-8edf-4d42-bc9b-117bcd14d491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c20d71d-b57e-402d-981e-536c8ca038ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d8c2ae-13af-4d7f-8b24-c31a9de739c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed031113-e0da-49c3-88f5-871785472db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7de626-1433-490b-9aed-259ae82126fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "113d664d-97e3-465a-a8cb-27f56c954d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8bed8c-d84f-400b-a2f9-4b8f3401362c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe5bcc1-1377-4245-8888-2d8ba2083ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11950298-69dd-4476-a622-e8babc8f94f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3577531-6ad5-4945-9680-725dec94f946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "261f6ca3-8f83-4ae6-aaf6-b98259baa1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7c58ed-8680-44b0-a198-01961a350c57",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771483b2-01f3-4763-8600-198554d2b296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cb297e-6d4a-4b39-b1c7-2581affeaf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c97f1a-b4fd-42af-98ad-beb54e7ade2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd748cab-6ca2-4b5c-9b8a-3db962f7ef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0f3ce0-4dd5-48a7-93df-8d72cfe86ff1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7b9a92-c1c5-4583-90da-68f88b8f50a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19521d77-0020-42ac-a7d6-55da5358ffb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fed7f9f-7301-4d94-a535-2781b9efb1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca81b838-4361-439c-8f89-461609e0b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d81d97-105f-41e0-a16d-8bfec09c4507",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b51a840-598f-408f-895c-3a058f087fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496b9a1f-dda3-4fd1-a0b1-9f5f4f08ec8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe4e956-cdd9-4ea0-a4b9-ec7077acb16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "505820b2-a549-44d0-a64d-fd00758f747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff15f2ec-07bf-4ec5-a980-ef62d95a43bb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1b66d-0f66-433d-9de6-cfe369c0dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dba6cc6-24a2-4a27-8729-f99bdbbae051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b804b267-c614-4922-bb36-c4b82d999017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfc560a-49e6-40d8-8f3f-194af8e3118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c362af-c8bf-42ce-a235-2a6b5eb114f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbaa78e-6a9f-47ac-a506-8867f492a298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5022939e-565a-4635-85e9-11e64e82e437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80c4ffc-91f6-46b0-8cfe-87f2c84883d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c75079ec-2f0c-4f9a-b618-41d1ed3bbd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a7b510-f73f-43e5-a6d2-c96cfafb4def",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d40cbc-23fc-4379-9297-27e41fc85a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25a697d-6fe7-4723-bd1f-6fcfbc19bc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc167a69-7f60-4a70-bd6c-a23a006464f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e659d0a-22fa-43a4-9e62-2b7778dd273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c180a49-7ebb-43e3-8ac1-c9a73f332e69",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87a7301-6d3d-4404-aa7a-810b5f54b3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ce23b1-47dc-4318-837b-47d4730acc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96758618-51d0-4efe-b642-4948b131d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8512f320-9287-4484-87ae-adbcc19a79ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9868d53b-fb6e-4449-bc6f-68c4059e12d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc1e605-5fa7-4316-9003-40cedbfb0af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8913a47b-8ca6-4f4e-b418-ece784ac7b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cade5b-88c7-423a-8880-13014c3c2418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ace8582-c430-419d-9eed-3dbb4788d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e70fb9-657f-4880-84cc-29fd1a1492ec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30c13e-6c28-4869-a109-84484cdd33de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9537b17-b6cf-4e74-8da5-7e831d7f05c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70efaff-e22e-47c2-a8b6-c3eefc73727c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a06c16-ec46-4d11-b429-621fd0724b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfa9467-e6cf-4a7d-9a27-5dd9932afe8d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca03030-bd87-40ce-ae5f-263c7b2d97d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a039570-180a-4339-a3a3-91ab0311542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c2bc47-1a07-4f8e-b284-3d793709e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02490577-c525-4ab8-a273-9fbcf22a944e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06891359-d69a-4721-a1fd-d4d3ad81f218",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b727159e-1e72-4f8d-92a4-039cf2ae3e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8481e5-a071-41a6-a354-c80e72e9d639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eb765d-2846-4b30-92f2-81113772d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faea3894-158a-4e76-af93-20c1ba90e0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2517494e-414d-4658-9ef9-1d21e3763503",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc7c77d-b97a-44b7-b32b-f25f6623e11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59afa6b7-46bd-409a-9b59-3e777ac83f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0797f4ef-21fb-4cf9-a7bb-b7404e6d208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "443cb34e-0b4c-46bb-8409-b87b824ac7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4738e4-b811-4885-8bbc-ad4839cfaf3e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642c72e-90a9-4c13-b676-b62fd68995c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24091c67-b09e-43ae-b6c3-2ab370bc6a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3497026e-bb47-4ae3-89b8-de6824dcd42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab819ca0-6324-41d7-aaf7-2df0aaa528b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2cbb30-db44-4790-b589-57a5b251f9b8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560bed66-9a12-479b-92bf-b98e9158bf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8bda82-4248-43c0-b7b6-ebcf8e97cee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d62f50-a35c-4cf5-ae12-c6ca5c5ae77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79ebdce-160c-41a4-b537-bcefd5b3ec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63991467-46ab-4907-a5c4-07847b3074ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe4b798-cd41-402d-a820-9c240d92ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6130f6fc-db52-4001-8611-4bdb145fdb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb6b3b6-5ce7-486c-8aef-c45f35ca872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a8e08a-3244-407e-9230-9b9be5179ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8104de-bd60-4a2c-add3-aff8d8ebf476",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b954f812-13f2-4d6a-8bc9-7d7a6d173d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2150b5db-da4f-4916-be36-c6fd9636bbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b2db30-4cec-4443-97ab-ad9b5ddad532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e17b7e5-5b9d-4411-a2cc-d51ae8ccbf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67b4733-6f3b-47d1-8607-a4de6a82073c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1cb9be-70eb-4322-ba99-6710f151b88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13b65a2-7138-4e0c-9e53-2a6a21dab82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fdcad0-67b0-44f8-abe6-187597bd3f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d65532-a8bf-48d8-ac2e-fdecb17544b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3918d5-d917-442f-8a32-ecf4ebab7452",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914653c3-60b1-4eb0-8bc5-7d3227f2cac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65758cb-cfcf-4c8f-b9a1-d8aaeda33e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4046ff5e-437f-4958-8518-379648edad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aafc8c4-1f3a-4853-aa09-395220c00d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c50a1e-a8c4-49b2-8666-f9a46bbe0c6c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1628ac-5ae5-43c7-b187-fffcfa25464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0e44e3-848a-45cf-a479-b2450e5eeaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36425565-aedf-4fa8-9aef-581744978f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fd7d91-6182-4784-96eb-14aab0a37d84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e10b529c-4f4d-43f5-b661-8fbc908aff9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "764bb92f-b9b7-4560-8816-ca8710cbda32",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eceed3-e30e-483e-937a-6dcb1856f699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5370320c-2240-4b06-a409-238a0e6222c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33e1f07-5f1f-4b1a-b2f6-c2211f6f5e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "778b57ea-a44f-4b73-9eaf-e1aa036819b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2685f9c-ccbb-4fee-856f-282407d76f77",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4171a70c-39cd-4206-bc27-8c3608282c23",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "340e40e4-8958-4405-bfac-2ff6c653fa10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c8e17e-be27-4ce0-a39e-b4e5a1466143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e2c2adc-a1ae-4f91-96fd-4baad23fa781"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65370bdb-5cce-49d7-9f4d-2e7d5d2157a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "331e9fd9-cb61-4ffb-a9b3-16b77f098b8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de562df-6cb4-4786-940d-ccdc44184165",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edcdb08f-8e0c-4f05-aee6-9500e20b14dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12f27cde-b015-492d-9895-6011567c69a3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f73e347-7a64-48fa-93f8-cd6ea63126d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1adc0225-c9ae-4952-aeec-9c24d3ac9f57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f8be5aa-2f1e-43b4-9066-b542a08c88a4"
            }
          }
        ]
      },
      {
        "id": "fb82138d-2a79-4ee9-98ce-6bd2e524dd07",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "970ba071-152c-4e0f-9028-c9ba8ae88547",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1a7216e-2b77-47b0-8498-691bd9147946",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ef8759b-0604-4564-87f1-57db8c96e29f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca54d944-2d62-44a2-8989-ad65ce1eb01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5263306c-4f71-4c04-8fb2-7ff1d00aaabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12738365-00cd-4152-917a-dd768bc6b230",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b316d102-d6f2-4f2e-8203-b5925bf6a1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cb6f3c-1180-4739-93c9-ffdcc017c091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e196869-e920-489f-bc6b-245a0b8ae136",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc3b172-8600-43e7-be8d-861752242b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde8d1b8-f0d4-4785-a345-9199734638a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e51c27-d421-48b6-b789-382c63abc34e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be33cf88-8c35-4392-bde9-f293f7187842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ecc22b-87b5-42c7-b321-b1e3d7ed166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f07ab6-fd73-4ef4-b394-6953336afb52",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0437fc80-bb24-477a-9244-a79a308ef71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352cd18d-d9a8-4ae6-a8b4-08ef34e8f35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0279ec7a-59ec-4dd1-ab95-659379b967d8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60fb416-c25f-48bc-9617-fd302dd1249b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6410044e-3252-4210-ac1b-f7b63d0dc464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd616977-d568-48ff-b388-74408f525605",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a03ef79-832f-43ba-8d62-bebda25530a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a47fbb-c98b-4e20-8cbe-07cee72dfddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9933da-292a-4e62-8450-0aa9a449372e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540afddc-a93e-4f50-9998-ccb7217a739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a8cfa5-33ae-439b-92af-20826f60db72",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c2b9c2-aa08-4178-b0bd-2b4b400c05d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eab50b2-62ec-448a-bacd-0eb6e1e97263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2e3ce2-cf7d-4079-9300-c5d93e5223fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e39b599-28be-40d2-a5ce-1a2e42e72702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254ffadd-1128-40af-a9b5-85914aef007f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8767fde6-8e8f-4a61-a279-3436e3cae281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77f0882-5892-482f-95f2-9e87d57b857f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34955ae-50b9-4fbb-acba-846efe37a1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee67a10d-0ee3-4861-b340-614d93682e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121d1a0-5115-4070-a2e9-12d1dbd2a6af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71f8f28-70a4-4c1a-aee0-636b4a15aba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5849a215-03d4-435a-9dd2-e1e0758e46a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f318ccba-8a24-45f4-9764-d67bacbbb141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7f90a3-0bf1-4c32-8964-ba1fd6593a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d487dfd-2b33-4cbb-b75a-676988c9f0c5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f1d97e-7476-442a-8a25-71ef618895a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a77bc4-26bc-4c91-a959-f3685a8ae9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6bd461-95e8-4fa9-9a2b-e86567a2cfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae4ffbb-5516-48c6-bf6f-d62f77e13a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b079dcd-0d85-4c39-9a27-1008e26381a9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fb0dee-d9c0-41c8-97f7-d14d6323a551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf96bc6-9b25-48c6-bc4f-b41194913f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b662a671-db9d-475c-9ce2-e0a908618b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a04aa34-95aa-4594-912e-f4c75a8baa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76eb781-6a76-476f-9ea2-9fa26fb5cd98",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3019935d-0276-4534-aa4b-45459f56b65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54086d34-19b0-43ca-a000-54e9636eb43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d6e38a-0f9e-4fbf-baf9-23bd4e55c65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce7359a-2b10-4a17-b8d2-eb379044c1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03df43c-74a2-424e-a43c-33eece3d89e2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8c04b3-dcdd-402e-a2a5-c8127f9ff353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0114003e-c808-4d0f-86ee-208719d4a4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0113f3f-9344-44af-a194-ce24bbfe5339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b44089-518f-4321-a6fe-f58c891504dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b075c7a-1e7c-4b59-b9b3-29656d27664e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae6dc4d-425e-4760-b669-53683d736804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57de096-cb0b-45a2-96df-20c2d67df798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcf6f12-f2f4-4cd2-a5e5-1c430dac5e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcc1cd6-207d-48df-ab19-564bbf3d23bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417eeac2-4197-46bd-bb69-17beb2f2c6bf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370984df-4af5-4c07-aa8d-f9ab2767504d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa11898-937c-4ac8-9301-e18486cb8dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22ecef6-cbf4-4578-8d1a-aee4b1893372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fbb5f1-c215-42f4-ba24-872952890de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3042da67-935d-4140-9d67-47d62b009ee1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac33185-8892-4058-858a-a98509b77711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a651590e-1efd-4e83-ac18-cead1b24cce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7739f033-db4d-430e-8e73-97639404d53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a689da03-2e73-4a10-9bdf-4b081d49a52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a838ac8a-b5a3-4c2e-81e3-c59c1c0ca41f",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35828c7-f559-4096-9a45-70bbf6839ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd01f70-fd17-414e-9ed7-f9d2b00d0dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b2a10-598e-45d1-b540-f52e5e124b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27641ede-5cea-4023-81fe-cf5cb2ffa8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cbd62c-4567-4dd8-a72d-38918cb5ac90",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c0681d-3cae-455e-8454-67481c4a4db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567a08fc-8644-4684-aca2-e45ba35a127b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9982a9-c3cf-4451-b562-6bfe786ea7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23095861-d546-489e-914c-7dd364ee4080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90d1f85-25d3-44b9-8a40-02054b719254",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4362dd6f-9689-4785-bf2e-1abcbf228c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feeb7ca6-b4d5-4264-bedd-889a94419790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf03cc1-a239-4e7c-a342-d294e6084447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b4830c-7552-4cb1-98f7-0137bcc3ffff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50a031c-3850-4864-bfb3-7551ebe6b18c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35865e5c-eacb-4e8f-a70d-fc304c134e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80bee9f-2922-43ae-a252-f867678eb407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae602b3-3968-444a-8093-c21c9f020578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf8e572-e597-41af-b3d6-fdcedc6cfdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5cfe21-7524-4643-b4f7-80b8a3d596a5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0239b3aa-3600-4061-b94e-fa3b4be515a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc425eb8-3e09-4ad2-87d7-615a396ee91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b286d717-7fe1-4ef0-9118-f8f30b768afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ea5e46-c06a-470b-a87e-85e98a9fa7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16944f0f-1eee-49be-b0ff-6568ee84fdc7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaa4d2a-1f58-496a-a260-2028de4f0770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be5775c-2fd3-4583-badd-e51bc2cb5b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91556007-033e-4f2c-bdf6-eb8e4b24c19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0903372-1522-411f-a229-555f6d26ba59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581c8750-f81d-471b-829b-f10d3d07ad51",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fda87c-4aa9-483e-8423-ef6e0e67cff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1abe19-7b1d-4338-abae-76beffb6cb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec085f3-cc7d-4cc2-972b-06dae1197f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80626898-9583-408c-bf9b-a133c4c6ca0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc33857-7d39-4500-a9fb-3ad64644383b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a13b0ae-d9d7-4cba-bde9-f161564eb7a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e614b6db-67e1-4ae3-b3ab-a132fb4b8482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35cfb56-d2ca-447d-941b-89359759d26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70f93d4-ddbe-49de-bbad-5023c5f7c743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a298cff-26ab-46fd-8cd5-27089ae1ebf5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7f299c-2f68-495b-a42c-9f9e090b915a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944138fd-3e93-434d-90b6-37063e1fbbc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480b70f6-940e-4ba4-9450-9713a1a86bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c497962-8a8e-4bf0-a704-d242410f8b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ad3f2-07a8-4179-a329-3d7e6fe3db5c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bff689c-aebf-4b39-a3db-aacdc776c70f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff4f4bc-0869-418c-9670-cdaece4eff46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6380088f-b653-4b8b-8f8c-8907c4a70861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7adf1b-acbe-4bd1-9904-1b10df984b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16761f7a-c4ea-422d-883a-fc09ac0bd59c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d451da-1742-4be5-bac2-0b356e9e22bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab65ed9f-d21a-41f7-aeef-03a524dd5a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fafd78-6181-43a0-99d3-5506b1257422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a291901-944b-46aa-b695-f65bad107409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bf0ad4-d6e9-4df3-9995-eee15f5a9e4f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52938ae-b7fb-4fbb-a8c7-728605a0b6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f8b7ee-618b-437c-9d42-7a18cdc8f8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b93a047-32cd-4d0d-b19a-6a7b3c53517f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2564d6-4462-4195-a3e1-a5247d3f63f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd8cbd-4a98-4cc2-bcb3-0abec88b01ac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6b4338-cbc1-4f45-8ea7-757ee046fa47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14ba7e8-4209-4fa8-a3aa-e07efab77f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f781b23-013e-4735-97df-f7e8cebad1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea488ada-3539-46ca-a304-c2e881178abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6057e08-107d-45da-bc1a-4df7eefdd90d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354d55cd-e141-497e-8a97-1819302101e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb37cee-57af-4f8e-8bef-77befe032164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19df6fe5-ce64-450d-8a53-acc21104734d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4a794c-bab7-4bdd-8cf4-cf0d55c5ce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a5a902-fd1d-406c-94d0-bb259c9f3677",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd51a4e-4a30-417a-ace0-0f620634fb8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea99daa1-ad4b-46c6-baa1-f678b1c758ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684bd392-9ae3-4f8b-a779-e5d782574534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c22ea5-b781-4d7a-9d52-85e6c668ee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a6742a-b899-454b-a35a-71cf5fa1448e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97c882a-2aea-403d-9253-f67a35ebed99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d23c74-8ab5-483f-830e-27668ea943ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae8938-0775-43ca-a293-2c80389c883b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3ed6d3-3587-4c77-ae34-c95d6022843f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5a909b-840f-4b5e-8b85-b118fa9ce8f1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be58f90-844a-489d-bb0e-db47435b17dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de07b558-05b1-4652-a32f-4133e9e8ca7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c63e3e-6f20-474e-a6ca-66386b31892c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce6c586-a70c-4601-8e48-702ff72e454b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42413aaf-cf36-4311-91d1-95d1b9d087c0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211c40a0-dcbe-4af0-811e-92cd020f26e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f93bcba-75d9-4384-ae64-2c2f0f28c1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d20b68-a368-4678-9cbd-1b52a7ec5c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf07c31-fadb-4a36-b03e-1891687ed89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc78e723-d604-4385-a18a-159149273d06",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980abdde-362a-4642-99d2-93d54375a270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1f2e7c-3087-4222-810f-d6148b5839e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b312d8-c599-49a4-92a4-bf24ed8d1232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a1a24e-9adb-4cee-bb31-5c9919890a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c1da00-b8d4-4204-b335-6586e6b580f9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b3df9f-6218-435c-8b78-9a42f57a9e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9017470c-3119-4894-83cf-6ae96f75cedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f55c49b-699d-42ef-b735-18adb198b818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec2b994-d0fc-47b5-8d77-3de24bc3f1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c691155d-81ed-4f37-ae37-10de154dcc6f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaddbafd-af6a-4a17-94b8-a568482eb159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f84c014-9242-417f-9dc3-80f9385656ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbf3814-eddb-49c2-b197-1829545f901a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8ac79e-3b59-4337-b429-d6d284dd6b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8d4f93-cc13-422b-9fc0-a8bb53849936",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e883f2-f579-4508-9c6f-bb5cbb8e25b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a281970f-bdce-4545-860c-d7f48a65ab33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91690f24-39ed-43e7-b5bc-ad6949c9e800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142c11be-105d-4f0e-a1a7-d11d95182ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68973b41-17e2-4b7b-a0f3-17cba5090a58",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fdb6a-b2cf-46cf-85e1-8bac1d713fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fdd5c8-35cb-400e-aa47-3b9e32a9255c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b03ed06-c05e-4fd4-9298-4032f3b7b42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7981522a-dc54-4f8d-a1ea-154fdebbfed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25aee99-1694-4430-bb15-08c23dc85212",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a444907-2ff5-4239-8700-1cd2516c822a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a07dc2-ca1d-4446-855e-39d6a18ec1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038f7744-a3a5-4280-a04d-b26585463974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccf5ec7-62a1-4c7a-a33b-ecedb6e373f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af23f20-80df-4c04-abf0-40e37afdbaa4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5692a1-b0a1-448d-82dd-243381671fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b735a4e-4e1d-42d9-90e3-0f1100ae7b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46bd02b-cfd4-4ae9-947f-725fbbb67f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2e8379-7f5c-4601-ac7a-13d2ade4fe31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cd91af-1498-4220-8ee7-01166290712b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37101664-8638-4cf3-aa26-2c209fe1df31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc7a6d4-ae02-40f0-ad9e-74d7ab6e63b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c80cf3-0e24-4663-9d86-2b80437c0088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73204400-fc28-41bf-9bc9-db1000ea601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa97a1ef-727a-4d6c-8577-fb5c37309eb7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65ca589-9900-4e3c-ae97-8489ede4fa35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033dd940-9fcc-430a-bd3a-b5200ea02186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900074c3-40fb-449f-81a4-2e856fac107a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00befdb-ab83-47c8-9f4f-e7d04da95062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f5f4a3-4eac-4f72-8f15-3e740f833ddb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b275040-3884-4c9c-b095-761b7bc80c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa8f03c-2617-41d7-9417-11ebd88f453f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200789cc-b7e7-41b1-9e1d-e1a82e122331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9550bef1-c9f7-4239-b677-819700ae1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5207940-77fb-4dd6-8d95-fa473a1cd8fe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad19589-a846-4103-8618-fcbd844b26c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd107e9-9cbc-44dd-9956-ea80b919a1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92744476-83de-49c9-8390-0dd910456ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d9d755-e00a-4467-9dad-b0226e62b5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1378760-7ac6-4d5d-bb61-bb5fae08868c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10bce72-4a0c-4bf1-a792-c3a3f9d57eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f23872a-14a4-44d9-98e2-3120cbc1d5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b3416a-91fc-4076-afe6-d2055ab4b5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541a459e-641e-49cb-a621-ee3836cc7a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331e5f3c-1042-44b4-a087-8f5fc7d41808",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80011985-bf52-495b-9d73-42595e0b1122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e035e367-2111-4f11-b21f-0a9b6c0e4264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63023aa1-7a70-47ab-aaf4-b36ab1eb3ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6271eb04-efce-4af7-b9b5-1c738f482c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627ad699-8e6f-4daf-b4c8-644083478555",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f435c5-dd62-4710-badc-83996517caa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d19286-3f47-4ca7-8cdc-01a1980e9811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b965a1-591f-4aa9-ad9e-2b860842bbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ce0876-a224-49c2-af18-a97258ff1c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e46ab31-3dc5-4d05-86bc-d67c5312c26c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17440778-91bb-4a9a-896c-1d19c2753182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b38f2d5-c361-4648-a0e3-da0a56f90ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5aa607-ef8f-46a9-8921-c15314712868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48c9588-edcc-4178-82c9-cf5c8977a4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f58baa-af6c-416d-b14a-b06c6afecfa9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043e8349-b81f-465a-be9f-faaad918b446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7adb4d9-f860-4249-a1b6-f7fc2e344894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca039e54-a774-4bcc-9300-13d9c4b14b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bc9dff-e4b2-404d-9240-7b887c9b3a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18347884-dd27-4b3c-9ac6-f2939e4286e9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a5327-91c6-4bc6-bb88-21bac0c7e5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121e23f0-33f0-46c1-9af8-a092ba8da94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d0b324-aadd-44cb-8a94-5e5e238d14c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643ea19d-b3ab-4892-9e07-58294676a114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e406b777-1382-48c4-8a38-f5b6cb043290",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3aedf3-ea55-4a7a-bc7a-d109a30e4d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9951436b-8498-40a4-ae7f-82804c440ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12c9107-6847-4558-b0fd-2ed1d33cfdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dc8145-807e-4d92-84b7-46b1e839c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74293db7-d30d-4828-8f36-e5486b5adc02",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b95cb-cbeb-40b1-b91f-ceb9e502bc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d8ca58-11f2-4608-8431-4a7555d81283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faf1f4a-3eda-4faa-9f0c-8b02cdde1af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef75b83-42d1-4104-a9fc-194d94c06bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326aed8a-4a2c-4785-9375-53bc5905db92",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0363bd44-efee-4cda-b866-aad38479d9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01efe1a-59a0-4cd7-8d8d-5e6ac9e06699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a05a38-37fe-4c89-bd8a-9e1e977e94fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9410e9f8-58ad-42be-a3c4-75d260a6fac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485995ea-1b61-48ae-8555-af56b38addde",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43416764-fc6f-462c-b690-63a410ba1158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30ab98d-1295-4ce9-9b8c-fd914b2f8175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7ecd48-1a68-4f72-ac55-4c3bcbfd00d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea033ea-89f2-4ad7-a7ef-5cc3797b48eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725557f2-68be-4cfa-a38c-8f07849cbfec",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fa1761-6f55-437a-89e1-21afee4021df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c44ba2-b80d-4b50-b142-76903f725190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7211282-ae3c-45db-9ee5-fe8dd1313791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb3e1c2-b264-4941-84af-20aaefb4c9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e125da-19ae-4a2e-ba8e-cf4c8a7216f1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d702e54a-d254-4c38-ab48-98f8565c5fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c571fd1-72fc-4557-ac62-286571aa7269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b588ef48-ec16-451a-8775-19850acc69da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f318627-0c5a-4db4-8449-c3476fba4298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6eb2ff-5c73-44e5-9530-bef1ac2ed4c2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260377b7-03b8-4b12-9eb1-c58fb2182352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9af2a1-0814-4775-809a-8edc56241273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42343eb-fd6d-4702-a10c-3bd4ac760a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a09aa21-0dab-4c1f-8770-0ae0ce825a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24926de1-4663-4c78-a1c1-93b22a3e6412",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64e77e1-643e-4dc0-947a-9d7437c717fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a9a074-6331-4256-af0e-4052576255ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d7926-e1e5-40f5-9280-e54d73463b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f467dbb-4ddd-4e5e-801a-43e9cd4be1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6758dc-8996-4e82-9ab2-e3bc8dac3eb5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb2a605-cab4-4f35-aa9d-d8f7ce75215e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52889842-6c62-446e-8695-7d01ef2b9324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2278e9-0b8c-46a9-adb4-6d21b87b9945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10704e1-cae6-481f-a38b-8adf31508426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a4a14-6a0c-4f50-be75-ab68ddd7c535",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfb7f8b-71d8-4a6a-a944-450edeffd67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf572d7-463e-48d3-9288-3fb1d7fcd37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27da1df2-d082-4278-8bb7-4394040b28f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b27fa2-91de-4a9c-8e24-cbbebc0badf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bd7692-a901-40e2-9f7a-f3abb4d5175e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e0cb94-1f8b-4ade-a3f9-e095eda4bbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0eb8e4-a726-4efc-aa7b-63df8ae92d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598b6899-c0c9-4d84-945e-44132c6e7594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0d46d5-4ad5-4812-acd6-c27f3fb79069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db907223-9bd4-486f-8651-a33375747d3f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83801ace-d94c-4c60-9cb8-7eb43eca8e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd3a706-0b13-4550-b5c2-78f6338125aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10bc904-3fe2-497b-a82e-ff1cc8762c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5260dd19-bdb5-45d9-94a9-24859c96d74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b468df3a-dc17-47ed-9f31-ee588d2f7ee4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdb718e-a8df-490c-874a-35765c23c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347b28e6-04f4-4b6f-989a-43fda775cbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a30995-1d9d-4acd-860e-1bbeaed0684c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7b18bc-627c-4823-8875-7c51312ba66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0431a4-b57f-4ece-83c7-f041182e6ae4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89984ff-7634-485d-9059-f9543f66c094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "926c3be0-d0a4-4c45-a8d2-63decad56b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba39da33-1f11-43b6-8f66-aa742d3d1d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4da527c-8df1-484f-b475-d35cd74b718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c09a0e7-204c-4d14-afce-7b14b961ff90",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdf823d-a2f0-4fab-a986-96b469f20855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b0e96c-377e-409e-a8d8-e4f7ed9fe6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83157835-27cf-43f2-8b24-7566f062673f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4772b1a-4bb1-4da6-a830-2f0bddaa6d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273c914f-77df-4190-8277-4e671feb61dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cabc53-6a24-4bbf-8910-ca85ab5e1d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5133a7a0-bb35-48bb-ad29-f9ffd919192a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a854ffe-2050-4fbd-9e36-d8c4313a3e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64842c4-b0b4-4e6c-90d7-3dca78bcef90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75667230-07fc-47f7-ac7c-9ccd895802f8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d96e8c-d885-40ba-b868-ca37b5d068e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d72ac2-57ac-4111-a6aa-8c75783a6eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de3458-dba9-43a6-ac6e-2ad22b5a9d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a43e2c-a910-41e5-91de-300d7d6944c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3384ac-8310-4089-9efe-b17cd51e6c71",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2c4362-186b-46e7-a241-76e8ad519494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff28aaa-7f7c-4488-85b4-2cb336e694ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8709af31-c3b6-4682-9447-7239e2844188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff5be2e-6585-4c37-9a26-3c4f3d6cf68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3e906b-96c4-489c-9740-c38f686b42e9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aed2b66-867a-45bf-a2d4-408aaa482f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a509fbd2-7461-4dc2-9073-3d0f957cfba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b22d84e-ffbd-4552-9512-5fbc0b9b8f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caec8404-e0b4-43e5-93ba-6dbc4395d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6e63c2-9b69-484b-9d8f-a6072380c023",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25351c0-101e-4915-99fe-4654bb65259e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec02c3ce-91a3-4ec0-a54c-e88cd814912e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22ea0af-7647-4b65-a6e3-4207abc96800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5647ca9-ed78-4009-a9ba-e8feae233e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f8add3-71a0-4f12-a906-85b72be9caf4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e669a669-432f-42e9-8b30-134e58a74ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21769671-c1c2-4bec-8d2f-956c77cf22d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcd9ae3-7206-4fef-a439-56a9c5aee340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3112945-de94-457b-b755-89027bfa4237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b56f60-26ca-4a62-928a-980753c870e5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b15fd9-cc09-49d9-8ddf-84d17d8e6f61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf738ab-fbd4-43b6-ae24-a3d99bee2a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9c8550-f24b-4888-a0ad-9c5f5a522998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313f1991-c17f-4845-a84b-511338c019d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d395c1-78f2-4df3-bcd7-0f7784290a7a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda868c1-8975-4726-bd8e-4112ece5e998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc989d8d-b817-452c-8918-eb0ba7dcced4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbfc22a-c575-47fb-9fcc-6f354c38d45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2484b962-9dcb-4045-b70a-e9ccfb280325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d1de90-78ce-4894-815f-f95908e2056b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f44a9-d5da-4fa3-a7c9-a132a43d5331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa782b4-cdde-4d0f-8396-c7b9eb51eae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c20b6-1f8b-49da-aac8-c1d077500cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501211be-3b6d-409f-bf4f-7d9dbf0e036f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a494e13-0003-4cdf-8ce7-d8aa2f39edcd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a298a2-3f4c-4c72-a5ec-1d228b1f25c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6478d13-607c-4f83-8de3-11c9bf977bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c48485-61f9-4c51-bb81-ecf2338a896d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273aa0b8-3f84-45c5-84d3-c9740a39e642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1957b53c-3caf-497c-a983-9a16c4c62ce6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c829755-eec7-451f-b895-a3fa24665e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94752084-f100-4b77-a4a0-ce42664cfd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893a9f52-0109-4874-ac38-d9f314146fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b34e0b2-56fa-42aa-af26-cee23673c4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b124f754-c219-468c-860b-e7b61b485e9d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f86878e-81c3-4347-a942-8278d8ca7442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789f6cd1-7c0a-4324-8d2d-d996834fb54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78fd772-423d-44c3-9091-5d60e964856b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea06973e-4834-4faa-8a21-4b9c6d3f1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d72ef22-2541-4cea-9f37-7dade02372cc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631ff542-f366-4b59-ac13-e10f61f55a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2aa0ed-d515-489c-8568-aa5e37f8c304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08f7d7b-7363-482b-831a-26f93e2e1cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc42ac35-eb66-4be9-8147-d83bc3fed587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbb8f8e-3dff-4a32-bbfe-9f96a950c1ae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe4dcec-2931-419a-8109-c4b81ca81c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff77b6c3-8e1b-4dd3-b10f-56ea2edf593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1d3e51-8774-4103-a26f-69d2824705cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51c4e31-e0ef-4673-98b0-cb4f955ba14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f167ff12-9cd7-4279-af3e-9985def0aacd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a515545b-77c1-490e-ba82-82cc4bec9b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bce0bb-ee2f-478d-96f9-ff0afc030b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d352849a-f363-43e5-b430-f014e894719e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be79fbb5-9018-4b05-ac56-225e35279d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef78eed4-6f3f-4231-8738-857d9a0fc94e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61623698-5656-4fba-be43-12e3ee60d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6679c6ea-d116-4d8e-b783-9d13adfb48cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a324fb0-6785-49e3-9c97-84cd53202029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9261725c-bfca-45a4-9642-d646b9efd88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be4aa3d-ed17-4b10-a4c1-25049bfc6719",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d134c24-1c63-4729-9356-86e2291c292d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb9cebf-04d8-4720-af5a-3e4fa716f783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07bd2e7-fa0c-45b0-a20f-215105fa5731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9570c1ee-6f85-4789-8955-36c274b80083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6982e243-4b1e-4c1d-af10-25eefd883bf8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e7a1f-c2d9-4249-be59-6ab2d9d25889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8a2949-cb02-451b-81b5-7f577c181bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ed4d87-2232-416a-a26a-14747da720ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536a9711-a4b6-43a4-b293-cdb556d4f205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeff83c2-5032-4ead-a027-67f168884e77",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcb2dec-ca31-4e6d-8c67-6450d7dd7858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721f76d1-dacf-47c7-b15e-21082d56ff68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa785105-91db-47d1-b306-3276167c5986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8323e13e-998f-460b-b2f1-3ce39dc4b98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183da9d8-d92b-4ee5-94e1-b4ddb0a9d689",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7043a-aa9c-4707-9a8f-af2c31610803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c484a7-7e49-405d-ae3b-bef5dcb7a6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bb123d-9ca1-41f6-af43-8064c0cead02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47c0e71-98a4-4267-bb15-4e4eb9ed5f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85950b66-d2e9-4523-8865-d790f2ee74e9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10b026d-26e3-4a5b-bcbc-e5a6ff276bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54eeef4e-a686-412d-99f3-cc59cc3cee3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60012cd4-c840-4ec2-8933-d495df62c263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2287746-184e-4ee5-a026-4d7645cc1e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534fa37-c3c9-4199-bd29-e7d7b6a9428f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a55af3f-bf73-4d73-84c0-72db20ea15a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079559ac-17bb-469b-b85f-912c7045875f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2ea238-2999-4991-aca8-2f2170aa2239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd42a67-7291-41d0-93ec-a2bfc86bb7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cda9af9-fd8e-4455-bdef-3a81bb72d2c0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0037526-614b-468b-8644-bb6a6e659a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e7b5d1-cc34-470c-9cd6-04e3a2261008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6e890d-127a-42a3-b8bc-cf7313d49842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fa1c43-19d6-428d-8b07-6b6565c79538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec88db34-e895-47df-aa65-ca19e6a1347b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167a7dbb-be45-41f3-a1b4-85d689cf60fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e0832d-0c5c-405e-a653-0b54918f44d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f52d1a4-1380-49cb-956f-3c173b026337",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5f38f2-48fb-4428-90c7-1d660ab11e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba75533-a28c-44c9-aa79-86c7708e2414",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88446762-e834-480c-aa25-023b26b648e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7f0f32-f051-4072-8cbf-37ac4c1b07a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6c250c-c1ab-4f77-99bf-39ac57c881b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7033b919-ab88-4d11-b3a7-7c87737d213b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e82b8d3-1fab-42cc-92c4-fdd949cc2319",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173b9898-9a6f-449f-ad4e-8757b35f2c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385c70ca-49b3-4ad2-b980-700937f68dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5643523-fd27-4140-8233-d4c1f2649a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd0a432-e9a4-4505-a656-063e071608a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dec086f-01ac-47c1-9853-7a33ba287256",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97113bbc-a9b8-4050-893d-20d45ccd7fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc404bb3-d92c-4f26-85b7-20960c5be66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df84947a-a051-47ba-974a-db0fa089bf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5663a350-90f8-4d6f-ac03-b31865280200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e1331-ab4b-44dc-87d7-b6b0c5942418",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ccf6b9-0dbc-47b0-baf7-b3d042f6ec05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cd0403-dc2d-4030-92f1-5eba840d0156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c9ce2f-44a8-4dca-8b0a-db98986d4c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b54331-277c-429b-b5e8-b8e2338fb80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0013b1-32da-4409-90c8-f8cc49304f8b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ffce8-7d28-4e23-b104-73da312928d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc837e2-f3b3-4511-af8a-8b06202deb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d62292-ba6b-46ae-ab99-9bc935e66bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c142ce8b-3afb-4dbc-a7b7-f6609f9361a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5341c2-bd37-4e72-aa3d-fe9a4a3161ec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21458d24-d7b8-4ac7-8729-9edc7a026b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7418bd-523d-433b-9d7d-52125fd2128b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33095dd5-9422-4de7-9c56-7bb8c01fae48",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62282dd6-ec57-4265-b48a-1087cbeb4468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19319b82-492a-4311-94b1-3c74a395c274",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df8a62e-af9c-4232-a967-c9829aa042d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69da2977-4ffe-4bef-bc7b-d9623dca967e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7442cb7-376e-4ae9-bda6-74e17e6f41a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e99126e-98b3-466a-bf74-6afdb112954b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2b3105b-f5c3-4e60-9220-32993174b74d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca0ad10a-c5e0-4ff5-b522-90bba5881c40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78013c36-535e-4c0c-bf1c-808f20eaec04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9868c99-43ec-412b-a895-7b6bdd1215cf"
                    }
                  }
                ]
              },
              {
                "id": "87a2b5df-a316-4356-ba99-73b05b5bc239",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b98cf54-d865-4d68-a700-28004741d011",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ec5d0d-43f8-4f76-846c-e48c9962fe2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "53d526da-b1c1-4405-b7b3-b37a361c04b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4805f8c8-b23a-43f9-bb50-5590939dd50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dd69255-c14f-4d7a-b8e8-c49a5f3fe50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6e8032-c72f-4d33-8fcc-077d00e21157",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49b2d76-e315-44ad-a635-3447092ecf39",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf82754a-2deb-4e05-acd5-19f72653d19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bd5ddb-6e1b-486c-86f5-45c03ee634f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "032ce273-0caa-43fc-aeab-cdd36a7b8da8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24415314-c904-4746-abe3-20a4623e91e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a09d7893-0e3d-442e-98ad-6753e1a4675c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a27cfb81-c820-4be9-b467-e8d311460ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0234d74-9803-4842-bf2d-9b7f50bb0cb9"
                    }
                  }
                ]
              },
              {
                "id": "ef2b007c-b72b-4a51-9fef-de8b2659674b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3ffae2bb-ff96-4550-aff9-7391dd6c2ff3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6dd77d-8da1-4090-93f5-6211d9a90c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2dc9e4d9-0219-4277-aa7e-6c258969a4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54e561c-9836-48c8-a8b0-b526be1e44d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dd4764-a5fd-461b-839f-c6db8d7846eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca777d6e-ec27-4c8b-ba35-bcebf862c0b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "329c1882-d245-4ce6-b604-15384aebe2ca",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22799029-a472-4161-a5ea-ba19ff80a538",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb39fb35-7874-4ffd-bc80-e91df4431a83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a7ea7c9-9a05-4728-a793-6dbd61a89e84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cad99eb0-87cf-4361-9607-a81dc012e2e0"
                    }
                  }
                ]
              },
              {
                "id": "c5184cad-2e9a-45f2-99ca-e318229f365c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ffaa4c6-878b-459e-a876-cff5bde7c73c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f60acab-2682-452c-9b68-9205b846e5d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "932367cb-c2ac-473c-b673-54c549a3cd1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c7d3255-1270-49a3-bae7-486e44dd850b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00373bc6-9e50-43fd-bf1d-1d53e3e86eea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0964a8ba-ed7d-46a7-bd10-3e8e9374a826"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13560a51-05a9-4fba-8fe3-00de9ab92ffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9319913b-fddd-42f2-98d8-0f78beaeada6"
            }
          }
        ]
      },
      {
        "id": "ba3930fd-337f-4a0c-a1d3-717f13140f0f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "001d803b-2cfb-4e80-9948-b5458c0dd875",
            "name": "Negative Testing",
            "item": [
              {
                "id": "778df2fa-7d0e-479f-9c58-9436359cd35a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dc8aa9-9944-49b7-8035-9c1557a46d17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "164146de-9d23-43eb-a9ca-0e6b903ee220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb07e1d2-e0ac-4c08-b935-6dd761aa3854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffdd4ea5-9fdb-4084-af09-74401dc0e873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983e9a7c-0805-4359-90c8-5794bfd99088",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0554f8c1-9edb-4223-984b-315ac04bb4cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "730a3e39-87d2-4c9c-9a64-be60e58ab74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4e4dbb-4f2f-433f-bd31-30841e94b315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbae14f5-3743-44ca-b336-cb17d4a57d04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e25f3918-8f49-41b9-98b9-e259487ff2cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ecc2aec-6942-4599-bae8-75873f184d6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12ddf1da-2999-45e6-94c8-f0477a8fe16c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43b0fec8-5bff-4edb-ba7e-26b3b655c9a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1edd823-1cc3-4dd8-9df9-60712835382a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ba97d0fa-f7bb-4ec3-a4d9-f9f4a18cfa03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45bb0098-c95f-4f8e-8a82-d2f1d3c05d52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ea07746-2658-44f0-bcf1-bcbd1b21c3f3"
            }
          }
        ]
      },
      {
        "id": "5fd41c14-6ff1-46aa-a8f5-34ab8feeef51",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ddd0430a-8281-4f21-aeb3-a4875963ed49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b91cd555-deca-41ec-aaae-21fe5c6b4ceb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ba15473-9305-4581-ab95-b1f2366a9f4e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d57fbe-af85-4484-b00a-3a079f45c395",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "400ed06b-d90e-4b50-9da5-4e990369b44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6c66cd-30a4-4e55-9584-f0824a615639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0da87b59-cf0b-4802-94d1-29660fe88c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5217105a-9706-4dba-82b2-c2aa604c4000",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7fbf2-7960-43af-b63a-5dfbe8c391cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f4576ce0-3579-40e4-b797-49877cd44f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13bc66a-e122-4952-b65e-f34d0cff72d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb573101-692b-48ee-95fc-8574f7285c0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a8100ab-d7f9-4e98-a0fd-7d125a303942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eaaf237-33f6-4671-b6e3-95421032c456"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3cc6c6d-8366-4ddb-833b-9c46c9f483ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9100ee9c-148f-4fcb-92e0-189db7272210"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "479880e9-0b3b-41d4-9754-5a0974f2aafa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f9924662-c160-413c-98a1-55e70a3edc8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "611d31e8-7c6f-4bb8-9e15-fc858136a898",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "501804d5-ec76-4ac8-9ea9-7abc5ee40aaf"
            }
          }
        ]
      },
      {
        "id": "e8cb5c36-2062-4faa-a5fa-5599ceafdf92",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0132ef25-76c5-4cdb-ab0e-c7f1387849b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12eb98e6-479b-4641-9e99-81564323a981",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3583483-ec5d-4ca6-8219-0b6a922a2592",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89a9985-da71-45e0-92f1-72198291dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c664fdc-f0e1-4bd4-9c30-fee28adedf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1481a5-5a95-41a8-bc3e-ee137e04c4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8348f647-6ba3-4cf8-bfca-d8fb7656440e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ce5426-b5ec-4d7f-92a1-ba64dc2b2e0a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5d4a84-3960-43c5-aec4-63291d793ce4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "533f6f21-14e3-4095-8371-a5d94c18967a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e203ae6-a085-4002-bc76-ed2986aca637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea27068c-3c33-4b9e-b6fa-7a518771e826"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "872595d4-2adc-4dfa-9fbc-deaa9931dbce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb35753-0825-4465-b2f8-079999d57362"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a071a8-4e44-49f9-bece-54822448f730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc00a932-f353-4532-8837-dcaca2512f0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4f1b46b-3fcb-4786-88bc-0f02665d30d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e38a86dd-2c7b-498a-ae42-12958ced2997"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a29500c7-3262-406f-a9f5-22b3f9998fc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4895fc0a-b9cf-45e7-9007-2f8ef72c93c9"
            }
          }
        ]
      },
      {
        "id": "2883685c-94f5-4333-a770-2cec55471fc8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79e80cc5-f363-4a8f-aaf9-d39cb761e873",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "580df9eb-398f-4bab-ad75-3799a4e94040",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fb3ec36b-055b-43a6-b65e-11705f44611d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c1f4b1a-7a01-406f-92a0-f3546af12a1c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13d6ccdb-cff8-4ae3-b1df-a8a65c4403f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 691.965648854962,
      "responseMin": 10,
      "responseMax": 4882,
      "responseSd": 753.987579348867,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675816769049,
      "completed": 1675816961411
    },
    "executions": [
      {
        "id": "344d46d7-5668-455b-a032-49fd452047f1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "49cd0e58-b37c-4006-a4b7-3b3c59840696",
          "httpRequestId": "9c3bcc10-7fbe-4f70-b61d-31e6d8ee061d"
        },
        "item": {
          "id": "344d46d7-5668-455b-a032-49fd452047f1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "501942e3-3177-4354-8c55-3bde48b45c75",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "660694b8-5cc3-43aa-b3fd-61ead8c57f45",
        "cursor": {
          "ref": "db766638-9bbb-4be9-94d3-2d03f1bbab3a",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b3d30a01-8f2c-45b8-90a7-658d3dcb7a4b"
        },
        "item": {
          "id": "660694b8-5cc3-43aa-b3fd-61ead8c57f45",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9743eac5-b497-4be1-b4c8-bf2c6bd7142a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "d3362627-3c23-461c-9fa0-31e26b2e2b46",
        "cursor": {
          "ref": "cf5e571d-1686-4cf7-a088-6edc65a3fbec",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ed342511-cab6-4281-ac3d-0c1082cefecf"
        },
        "item": {
          "id": "d3362627-3c23-461c-9fa0-31e26b2e2b46",
          "name": "did_json"
        },
        "response": {
          "id": "60a8dfa0-f470-4e38-a38d-5adaaed4d5c5",
          "status": "OK",
          "code": 200,
          "responseTime": 944,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52c619-0c34-4017-a10c-28af24b09d46",
        "cursor": {
          "ref": "5c2e19cc-8224-4902-844f-f82c93e0644a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "40f0f40c-404b-4b31-be5f-ba4ac8373b47"
        },
        "item": {
          "id": "5e52c619-0c34-4017-a10c-28af24b09d46",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a7a9af2-5312-43a2-a650-83a63501b082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52c619-0c34-4017-a10c-28af24b09d46",
        "cursor": {
          "ref": "5c2e19cc-8224-4902-844f-f82c93e0644a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "40f0f40c-404b-4b31-be5f-ba4ac8373b47"
        },
        "item": {
          "id": "5e52c619-0c34-4017-a10c-28af24b09d46",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a7a9af2-5312-43a2-a650-83a63501b082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb74589-6acc-4621-a906-521ec8d28ae8",
        "cursor": {
          "ref": "a66f490b-6395-4153-8278-501cee24add5",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6956dc46-4ed1-4837-b609-d16bebcd71bc"
        },
        "item": {
          "id": "3bb74589-6acc-4621-a906-521ec8d28ae8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "84374292-81a5-4efd-ba0f-762b37e3a2d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 664,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8af5fa-d125-44d9-9d5f-c6670256808d",
        "cursor": {
          "ref": "bee0e7e6-2a41-490b-a7f4-1c1e487bdae9",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab00b4d6-9ac5-4f1a-8a4b-880127519743"
        },
        "item": {
          "id": "ed8af5fa-d125-44d9-9d5f-c6670256808d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "875a3a09-bf17-4502-8c83-34b5c3c7cc9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e21bb3b-e997-4f4d-8ab8-fb39cb5f4db9",
        "cursor": {
          "ref": "ce40b1df-231a-4f32-8081-2fc8b4d82636",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7eff06f-bb94-44b9-8c5c-165e0ad0d326"
        },
        "item": {
          "id": "3e21bb3b-e997-4f4d-8ab8-fb39cb5f4db9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "910509ee-2288-40ae-87e2-23968f66d984",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b389e378-cee7-4120-83bd-b256849c1123",
        "cursor": {
          "ref": "e314fcc9-549b-4df1-8ce0-4f385a0e0d6e",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42efffd2-4ab3-452a-871e-8c4b8abe254d"
        },
        "item": {
          "id": "b389e378-cee7-4120-83bd-b256849c1123",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ac15245b-fd34-4950-82b5-c425f387f861",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 836,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b389e378-cee7-4120-83bd-b256849c1123",
        "cursor": {
          "ref": "e314fcc9-549b-4df1-8ce0-4f385a0e0d6e",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42efffd2-4ab3-452a-871e-8c4b8abe254d"
        },
        "item": {
          "id": "b389e378-cee7-4120-83bd-b256849c1123",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ac15245b-fd34-4950-82b5-c425f387f861",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 836,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f2e04-a714-45fe-956a-9548d272d3e9",
        "cursor": {
          "ref": "471ee058-fcfc-4e2c-b975-c9fb91d7e1a1",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f686fdb1-38c2-4ad0-8b1f-efc0f6f40a93"
        },
        "item": {
          "id": "519f2e04-a714-45fe-956a-9548d272d3e9",
          "name": "identifiers"
        },
        "response": {
          "id": "00a7ab4f-cffa-40cc-a7a1-1b49bd921e31",
          "status": "OK",
          "code": 200,
          "responseTime": 1188,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359e3d1c-0447-4211-b84d-270496c8af89",
        "cursor": {
          "ref": "aab173af-d5ec-4fa1-9f4e-e44216b9df61",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63aff55c-6d58-4cf7-8b33-e87854db913f"
        },
        "item": {
          "id": "359e3d1c-0447-4211-b84d-270496c8af89",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c38fb16c-fa27-43d7-bc04-13bcab30b2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359e3d1c-0447-4211-b84d-270496c8af89",
        "cursor": {
          "ref": "aab173af-d5ec-4fa1-9f4e-e44216b9df61",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63aff55c-6d58-4cf7-8b33-e87854db913f"
        },
        "item": {
          "id": "359e3d1c-0447-4211-b84d-270496c8af89",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c38fb16c-fa27-43d7-bc04-13bcab30b2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6030b486-3d8c-49ea-bf88-6628c7d1899a",
        "cursor": {
          "ref": "27491025-6c7b-4f46-acb7-572742632668",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f0bb9b4c-a772-4a37-b5fa-5d280e01b455"
        },
        "item": {
          "id": "6030b486-3d8c-49ea-bf88-6628c7d1899a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fe2e3bbe-1a75-4ccf-8424-04a8ed9d0435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f50ef20-5eba-4e11-a72e-501e7c5f4248",
        "cursor": {
          "ref": "5eff0226-e120-401c-9f87-eb6050cecec2",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fb0a9556-fe87-4795-87a2-17106ea20895"
        },
        "item": {
          "id": "8f50ef20-5eba-4e11-a72e-501e7c5f4248",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "85360924-d35b-4296-94fe-bbe34aa17c35",
          "status": "Created",
          "code": 201,
          "responseTime": 3439,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "ffc5e465-b5b9-446c-9e2d-05edc737e916",
        "cursor": {
          "ref": "4fab955f-1bc1-4aa8-bb79-f8a991d9b7a5",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "08eee742-ea0c-451c-b3ab-c02b3efbce58"
        },
        "item": {
          "id": "ffc5e465-b5b9-446c-9e2d-05edc737e916",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fad11655-ba31-48cd-959e-aee7f73fcc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6ceb1d-f9a3-4592-acaa-86510b3376fa",
        "cursor": {
          "ref": "603be01e-474c-420f-b45d-94d8e1dd4fef",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99ac5040-025b-472d-8772-5bcb1b185e90"
        },
        "item": {
          "id": "8e6ceb1d-f9a3-4592-acaa-86510b3376fa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "db68bdbd-14bf-4adb-8ecc-e7289378198f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e24557-1f47-42e6-9faf-8a9ded85c986",
        "cursor": {
          "ref": "723e0819-8d51-4336-ad5d-b6f63ee54123",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b2f01e06-9aba-4a65-9b68-93fb500a97fc"
        },
        "item": {
          "id": "a4e24557-1f47-42e6-9faf-8a9ded85c986",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dcdf589c-d066-41e1-9117-8f99a747dfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9852d1dc-5609-487a-8841-4d097ebf91d5",
        "cursor": {
          "ref": "c1fbb3d5-5440-447e-9a87-a4bdf481231f",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4d14416b-bcb2-43f5-9f95-43c7ad567362"
        },
        "item": {
          "id": "9852d1dc-5609-487a-8841-4d097ebf91d5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "95a998f5-6f40-4765-aa7a-2c0fe91ff46d",
          "status": "Created",
          "code": 201,
          "responseTime": 4309,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "659a29a3-d626-4598-a17a-c12b2fb261bb",
        "cursor": {
          "ref": "9a37845c-810f-4e97-9683-921c1765c6b4",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7fda7be0-800f-4c91-b73d-d03b255e8a96"
        },
        "item": {
          "id": "659a29a3-d626-4598-a17a-c12b2fb261bb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "afa21156-0163-40b1-b3b1-96c87ad46a72",
          "status": "Created",
          "code": 201,
          "responseTime": 2742,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "a2e9c626-53d3-45a9-9407-ea6265a80efb",
        "cursor": {
          "ref": "73335fd6-f5d7-4a3e-8bcc-3c9b212bcda2",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b67c1727-8eca-46ca-96b4-0a84ebd1e03c"
        },
        "item": {
          "id": "a2e9c626-53d3-45a9-9407-ea6265a80efb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ca4dd387-5a98-4617-a8b6-da22dc946830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7511613-eff4-4be0-929b-79580626f705",
        "cursor": {
          "ref": "499e8250-bf67-43c6-888f-fcbb69d53ae7",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c92a8c30-933d-465d-bed8-e756748092f0"
        },
        "item": {
          "id": "c7511613-eff4-4be0-929b-79580626f705",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "77b55d7a-846e-4ad1-8137-4fa9c1f4c032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eacc46c-218e-454e-804c-a390e1146578",
        "cursor": {
          "ref": "73c2793c-2323-4db2-b59b-9d3eec3c53a6",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e1648eb6-e032-40fe-af93-2039df514476"
        },
        "item": {
          "id": "9eacc46c-218e-454e-804c-a390e1146578",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8a10f999-6e08-4ee6-8827-fc1f5ad5d254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb596b0-2fff-450e-8c9b-ebae380c0469",
        "cursor": {
          "ref": "525a3dec-2371-4607-a7e8-2def9b1a8b3b",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cdc7c80b-297f-4470-8e19-0b5a4a57c26d"
        },
        "item": {
          "id": "0eb596b0-2fff-450e-8c9b-ebae380c0469",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "82cacd4f-211f-4724-aeb8-de1dbf14f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79842bf-1db7-4319-b272-11f25e7d25ea",
        "cursor": {
          "ref": "2bf0e35b-1f8a-4206-94af-31f3dbf7431c",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3204e5f1-214b-4c9c-9185-7d83d3afd25a"
        },
        "item": {
          "id": "f79842bf-1db7-4319-b272-11f25e7d25ea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9bfaa6e5-6690-45c7-b2b8-cb53df3f8c3e",
          "status": "Created",
          "code": 201,
          "responseTime": 2447,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "0ef4ff49-99fa-41ef-b767-c884086f406e",
        "cursor": {
          "ref": "fa17928c-f300-4aed-b44c-083b88cc15c3",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d4b9abea-c4a4-4e98-9d63-ee23b4387b67"
        },
        "item": {
          "id": "0ef4ff49-99fa-41ef-b767-c884086f406e",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "f14bbabb-b0cf-4f34-b962-c1301e3ca299",
          "status": "Created",
          "code": 201,
          "responseTime": 4363,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "e8800826-abf5-4b0e-af45-dd8a1286d70b",
        "cursor": {
          "ref": "ce6fd1eb-19f5-4a90-b90a-fbb3c0bdf0e7",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "270f4d0b-38a2-425a-9d0e-c67e1d072c1a"
        },
        "item": {
          "id": "e8800826-abf5-4b0e-af45-dd8a1286d70b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1a503611-ceb1-4e93-b194-1964f4329b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e63c8cc-553d-4c54-9218-6fc4ebabadae",
        "cursor": {
          "ref": "3d9188bc-22ca-4fad-9155-46a98372bc4f",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a19829d2-7caa-40e7-a025-85e17bbce17f"
        },
        "item": {
          "id": "3e63c8cc-553d-4c54-9218-6fc4ebabadae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9594b49d-1997-4cc4-afe2-7021000263f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae829a12-c382-4a5c-9a0e-2397728efe98",
        "cursor": {
          "ref": "af725a36-187d-4d03-bce1-0ab352f2da2b",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5a12426e-fe4d-4fb8-abda-9aa963e443d4"
        },
        "item": {
          "id": "ae829a12-c382-4a5c-9a0e-2397728efe98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d955145e-8235-46a7-99af-4519931007a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02820c07-a7da-477a-b663-493800dd5ff3",
        "cursor": {
          "ref": "8470343c-b2d5-42d4-bc08-6bdee71f92b1",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5f1b1ec5-5131-4622-af76-29a426aebfcf"
        },
        "item": {
          "id": "02820c07-a7da-477a-b663-493800dd5ff3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2f78aecb-f140-4556-88aa-003b3003d883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5eb5fa-7214-4f0c-bedc-31f5fabba4d1",
        "cursor": {
          "ref": "d9608e87-b80b-4565-b4bf-ed43a4ca17fe",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "11eb15de-f06d-42cd-af25-a0f2423c099f"
        },
        "item": {
          "id": "2b5eb5fa-7214-4f0c-bedc-31f5fabba4d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6851ddf1-c6f4-4787-a2d6-1ce3e6058be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a522ae-eae4-4ba5-b2fa-0b4550599323",
        "cursor": {
          "ref": "a43c0122-8a4f-48cc-873e-cca3c87513a0",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8c096cea-10e5-49cf-a6ad-1ba4be014bfb"
        },
        "item": {
          "id": "32a522ae-eae4-4ba5-b2fa-0b4550599323",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "00207505-39de-45b2-a602-67fa1dafc073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3112d920-6ddd-45ad-a7c0-121620408415",
        "cursor": {
          "ref": "6b4b3714-8b39-4603-83b8-f325de3cdcde",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3dd0ad4b-d720-4c7b-8d4f-cf128f7e7eee"
        },
        "item": {
          "id": "3112d920-6ddd-45ad-a7c0-121620408415",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e26c9f40-e900-47f2-bf3b-509340e4c4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a160d021-ac1e-4830-abb0-a4dc6e4f5191",
        "cursor": {
          "ref": "d2a23d42-faac-497d-9b0a-2f464e79aa76",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "58941034-cb90-4c2d-aaef-3557e1adeb6f"
        },
        "item": {
          "id": "a160d021-ac1e-4830-abb0-a4dc6e4f5191",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "32e5e673-4dd9-4a75-afb6-69c6c0a069db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a595c-a962-4458-99fb-6cb691e0b001",
        "cursor": {
          "ref": "9b949afb-a18c-4a9b-b914-438b4cd40513",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c7b8cf89-1f9a-411b-9d1c-35088f641d55"
        },
        "item": {
          "id": "fc9a595c-a962-4458-99fb-6cb691e0b001",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6de5a0f8-8f1f-42c5-9b0b-2ccc7de41cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba790bf5-91ea-44f2-a127-af319e2f3c56",
        "cursor": {
          "ref": "6c362d20-0a8a-4ffd-ae08-5d60bfc84750",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "62ee3556-9f91-4b6f-a896-737e01e7db89"
        },
        "item": {
          "id": "ba790bf5-91ea-44f2-a127-af319e2f3c56",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7bfe239c-8c94-4fa3-9496-54915f8639e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55efa45b-7824-4e3c-800c-5ed9f099a43f",
        "cursor": {
          "ref": "c05fbcda-b91d-472f-8082-ca693f7df51f",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5b00189b-9ba1-428c-a4e3-6e17f1815451"
        },
        "item": {
          "id": "55efa45b-7824-4e3c-800c-5ed9f099a43f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b23fcc1e-7fdf-420e-ab76-f3506394a74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31893360-8fea-4d54-8ccd-e7e525b928c6",
        "cursor": {
          "ref": "e01e6704-176d-4a1a-98c1-ce0b8d0f818a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a84fb957-ac06-467f-9c90-980a92a125f0"
        },
        "item": {
          "id": "31893360-8fea-4d54-8ccd-e7e525b928c6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a320bdfc-4a08-4598-b47f-b52da2e222d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3927,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "34b32fac-3a99-4f25-90da-dd0aa2f6ac25",
        "cursor": {
          "ref": "da330f64-fa72-44a2-860b-9518846ec07a",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b8901dd5-e86b-4005-83c3-cc879e4c3697"
        },
        "item": {
          "id": "34b32fac-3a99-4f25-90da-dd0aa2f6ac25",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eae1120b-3c01-4eea-9dec-66680ab8dd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1772,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabac4a0-51c0-4397-8245-190262fef5b6",
        "cursor": {
          "ref": "fbf721a3-9af6-4ba3-8843-f6e778ee084f",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d8f11dd8-c33e-41c9-accc-4ee04cc3c55c"
        },
        "item": {
          "id": "aabac4a0-51c0-4397-8245-190262fef5b6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b4504f4-cf50-4219-83a4-ca84e577edbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1626,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0dd1b5-b0b2-40ed-b97b-e3f37b02cd67",
        "cursor": {
          "ref": "c20e2827-c840-44c4-a523-f28265327b81",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "37c956d5-5e72-4ecc-83d9-2cc99df64e88"
        },
        "item": {
          "id": "9a0dd1b5-b0b2-40ed-b97b-e3f37b02cd67",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "356bdd5c-f529-4b5a-9618-4c47177d689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1206,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0c5885-e66d-4e2f-aa5c-390ec7965ba7",
        "cursor": {
          "ref": "7837c6c1-2fad-4a9f-9b36-ad765d273929",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "416a0975-9c2a-4956-832d-483555953cea"
        },
        "item": {
          "id": "ee0c5885-e66d-4e2f-aa5c-390ec7965ba7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "258f652c-7232-4939-a12d-6867dedaa3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1224,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30742159-340f-459a-a93c-be64e8103e3f",
        "cursor": {
          "ref": "8a13b089-3ce2-4165-bc3a-40272bc628c1",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fb2f5090-57db-4e40-9bba-be8e4190c46b"
        },
        "item": {
          "id": "30742159-340f-459a-a93c-be64e8103e3f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6ce25294-f598-4117-8337-d2db8eb65b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec75cbc8-5641-497a-85ac-c12f02277741",
        "cursor": {
          "ref": "a5defe5b-55fb-474a-93e8-b7bdfd66b409",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "99171de5-c038-4ceb-a373-507b939cb850"
        },
        "item": {
          "id": "ec75cbc8-5641-497a-85ac-c12f02277741",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0601ea41-174b-462d-bcd2-151ac1e3faee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2168d745-1c74-4ed9-b9d8-e8e4b1e26cbf",
        "cursor": {
          "ref": "6a034a96-3169-48dd-94c7-5040c932ceb1",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "82664b5f-dad6-4cab-a862-f5fb8d9ea907"
        },
        "item": {
          "id": "2168d745-1c74-4ed9-b9d8-e8e4b1e26cbf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d15801d2-8a46-429f-97cb-c725b879c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6ffdaf-3431-405c-980d-2140767a36ad",
        "cursor": {
          "ref": "94ac9c14-283b-4d4b-8bdd-5b3bc8ba255e",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8cb587b3-6705-40e8-97bb-435b6c8cc45b"
        },
        "item": {
          "id": "ff6ffdaf-3431-405c-980d-2140767a36ad",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ea0d3625-c38c-4d2a-ad60-7f904f49c6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad5dcca-98c4-415a-94fc-68eb96d17ef6",
        "cursor": {
          "ref": "8f7f9633-cf9f-46ea-9b2d-9655bf146158",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "af25dc3f-d5f9-4344-b4a9-69b0b7d21155"
        },
        "item": {
          "id": "9ad5dcca-98c4-415a-94fc-68eb96d17ef6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4c5735bd-bb7f-4ac3-82f9-276187d5bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58753ee5-9fe2-4409-aae5-ffd1bb0c776c",
        "cursor": {
          "ref": "4f8ab5be-e678-4a42-8b68-464d55607a3a",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "58142185-ed1e-42e3-acc2-288114dcca9c"
        },
        "item": {
          "id": "58753ee5-9fe2-4409-aae5-ffd1bb0c776c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f71f2e32-dd6b-4761-821b-6e0f20e7a3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a63b172-4920-46a3-aff7-c7c605b0e323",
        "cursor": {
          "ref": "585bf069-327d-465d-b99b-7fdbecbfe7a4",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "06deb5d8-2990-4fd0-8806-68be0dab5d3f"
        },
        "item": {
          "id": "7a63b172-4920-46a3-aff7-c7c605b0e323",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e63a4e7c-4688-49c9-a783-4b0145cb981c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b442189-9d49-4be5-b746-1ac758b32e29",
        "cursor": {
          "ref": "70d636fc-2aa1-4bbd-a2f2-34369f7c8e9d",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c2ef89be-8d2e-4e41-a780-fecfaffc08f0"
        },
        "item": {
          "id": "9b442189-9d49-4be5-b746-1ac758b32e29",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "691fe0e9-ddd8-4486-832b-71aede5ea7c8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 633,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b756789b-facb-4d77-b360-a19bce9d04e6",
        "cursor": {
          "ref": "a570d14c-b182-4d9e-b46b-7fadeb5cfc2e",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "122b0d62-b18a-4fc9-b4ce-7c7b9739fbe2"
        },
        "item": {
          "id": "b756789b-facb-4d77-b360-a19bce9d04e6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "720e619e-1161-425e-87ba-5776fa5182a1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 543,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "b36b3651-1b93-4f7a-b0f2-99d24db95e8f",
        "cursor": {
          "ref": "949c885a-6349-4b77-96e6-62650bf23d64",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e794db9-5648-42ea-b58e-d3c84a9bfa83"
        },
        "item": {
          "id": "b36b3651-1b93-4f7a-b0f2-99d24db95e8f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6dde4d2a-e612-411b-aaa6-9fd28de055a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072892aa-3388-4c4d-8c91-ca05f2a30a02",
        "cursor": {
          "ref": "5c5b2fba-42a0-4347-886c-d91a93248489",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11e485d3-c001-4403-b3f4-c4f9cf7484cf"
        },
        "item": {
          "id": "072892aa-3388-4c4d-8c91-ca05f2a30a02",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ac290281-abc9-48e0-88c1-aa9251d4d0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9f25f9-6e4a-46cd-bcc3-27b3d91becd6",
        "cursor": {
          "ref": "a024e982-190c-413e-8371-edf42dd313bd",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77c11383-1f56-49de-be99-0142ad18dd8d"
        },
        "item": {
          "id": "1b9f25f9-6e4a-46cd-bcc3-27b3d91becd6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1f039e61-52cb-46bd-bdb9-1a955974981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f81c5fa-70c8-4db3-953c-d93161411c70",
        "cursor": {
          "ref": "dee51e05-9572-4a33-8dca-1630688f7b0b",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "784fcd20-1bfe-4c98-8bde-3682d4f961e0"
        },
        "item": {
          "id": "2f81c5fa-70c8-4db3-953c-d93161411c70",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "96ae3e8a-e372-492f-98e7-c58db28c33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb76933-2c12-42d9-b037-4a31c8e7d76f",
        "cursor": {
          "ref": "158a2235-5ed3-4fe4-8964-bd9b9eb08a0f",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c4f3cac1-9a17-484f-84ad-1d85dbf6595b"
        },
        "item": {
          "id": "3fb76933-2c12-42d9-b037-4a31c8e7d76f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b37a956e-6b39-47c9-837a-1fad7dc54af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbfaf09-f4fe-471a-8822-a311dbe2dd85",
        "cursor": {
          "ref": "2065d6bc-323e-4c98-9e84-f169dcc10f6f",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2c68d77c-5850-4214-9633-7d43f28bb002"
        },
        "item": {
          "id": "7cbfaf09-f4fe-471a-8822-a311dbe2dd85",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5a33d57f-4e81-4126-b54f-c361c5277869",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 943,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d1616b-e9a2-42a1-87a5-e3cca6b1a149",
        "cursor": {
          "ref": "27c67420-e076-4027-a63a-0b3d6027269c",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "949965db-ff5c-47d0-ac93-b5331b659fe4"
        },
        "item": {
          "id": "b3d1616b-e9a2-42a1-87a5-e3cca6b1a149",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "523b8aab-6800-40c6-9344-7f278cb89ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53da0558-aaa7-4e22-bcca-73e31f5478dc",
        "cursor": {
          "ref": "f06e1e87-e81b-480f-a497-358d9d8fcb2f",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b498f672-30bd-4811-88f2-491d5183dddc"
        },
        "item": {
          "id": "53da0558-aaa7-4e22-bcca-73e31f5478dc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7a427d76-7dd7-4305-9ec8-a76894e3c47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374f57f7-24f7-459f-8cf3-ba6513dbf0ed",
        "cursor": {
          "ref": "469059cd-c51b-4e4b-9ae5-a1b990135d5c",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a9f23947-2c17-4123-94b4-5cb0119c1032"
        },
        "item": {
          "id": "374f57f7-24f7-459f-8cf3-ba6513dbf0ed",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e19ee42e-af02-47fa-8ba7-b5312e9e5647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a30a786-4675-41f0-ad45-eec5bd5daae5",
        "cursor": {
          "ref": "90972911-dcbb-421f-9adc-b3e6bcc59ed2",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f527b5e3-6f21-40ef-bace-0c258cb2692e"
        },
        "item": {
          "id": "9a30a786-4675-41f0-ad45-eec5bd5daae5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d895b0fc-d637-4ea5-b7b4-64bf845aac54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9961ba4-c59e-4230-be63-5b7c30557e73",
        "cursor": {
          "ref": "c93aea61-17e8-4ace-bd41-3a186409f63c",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17e22f01-81be-4f41-a7ca-34a14a8cf1eb"
        },
        "item": {
          "id": "d9961ba4-c59e-4230-be63-5b7c30557e73",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2efc4638-2c1d-43f4-820c-fe0c234e6da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a2eba1-5cce-447f-b362-dc6d484187b0",
        "cursor": {
          "ref": "ccb8c901-c919-4a1a-beb3-274c08a2a2cf",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3515c236-638a-4883-825f-6d3f7bb78de8"
        },
        "item": {
          "id": "a1a2eba1-5cce-447f-b362-dc6d484187b0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "de1cff60-0cf7-46d0-85b7-abaaf07ef960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c263cb-143a-4653-b999-63c3d29bebf4",
        "cursor": {
          "ref": "d2f9a544-9d37-4dc0-9294-93c848a8026e",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "12d2d24f-702d-4b92-9328-60d8cd46258f"
        },
        "item": {
          "id": "63c263cb-143a-4653-b999-63c3d29bebf4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "82425aeb-35bc-4b82-9a63-b10eb13fb46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7653553c-d7be-4809-a9e4-a264536a6078",
        "cursor": {
          "ref": "7cab0180-b0d6-4c70-913a-1e4d02d08344",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0635c779-3fd0-4f87-8e5e-cb173fd739e4"
        },
        "item": {
          "id": "7653553c-d7be-4809-a9e4-a264536a6078",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b7b8912a-9656-4508-9ec0-715fd239b6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b8e3d5-3f27-4b55-aa43-909a69d2b2b8",
        "cursor": {
          "ref": "bc91b5cb-75c5-42e7-aa4f-672c5d58009d",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9848ac91-f08f-453b-b8b2-98f0a2636410"
        },
        "item": {
          "id": "b2b8e3d5-3f27-4b55-aa43-909a69d2b2b8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fdefaa5b-ad01-4354-9bf3-4fff527d9a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85515cda-c842-4f8c-b9be-7dcfc4f528d8",
        "cursor": {
          "ref": "80ae15a0-7510-4c69-aee9-0d9aa425914b",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "623b59d7-0bd7-45af-ae51-ad44db3f7920"
        },
        "item": {
          "id": "85515cda-c842-4f8c-b9be-7dcfc4f528d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee91e6a8-3758-43a4-b2ab-168cf904393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895883c-9d79-4eda-a9c9-da463906635f",
        "cursor": {
          "ref": "4d6c4927-b782-4160-9340-52170fa2bc2b",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c790d195-3e28-47f2-b746-bc7c40c741e9"
        },
        "item": {
          "id": "5895883c-9d79-4eda-a9c9-da463906635f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1693cac3-5c4b-441b-9f7c-e4be22193546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd98368-33a9-4626-8925-209d61c25fd6",
        "cursor": {
          "ref": "eaf1d09b-3d99-4b82-9e37-da2bfc62b6b5",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "49eed188-e21b-417f-9407-1417f8ee4188"
        },
        "item": {
          "id": "8bd98368-33a9-4626-8925-209d61c25fd6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d95cd9ba-c28a-46d1-86fd-7c1c757861aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88e81e1-f5ee-4adc-835c-af005334e69d",
        "cursor": {
          "ref": "f4fefc06-b30d-4107-8ad7-00f5019e8889",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fafe41ff-ff99-4b8b-a75e-1b3b8fad42b2"
        },
        "item": {
          "id": "e88e81e1-f5ee-4adc-835c-af005334e69d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c266b64-484d-4bcd-86ed-bc726372b2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bdb902-4e4a-4bd1-a57e-6e04b73d936c",
        "cursor": {
          "ref": "8e3103c1-9a2c-4c83-82f0-415c3ca083d5",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd919a35-1784-4dfe-8f2c-bf11ef921747"
        },
        "item": {
          "id": "28bdb902-4e4a-4bd1-a57e-6e04b73d936c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d4984b47-0635-41cf-87c1-cca10ccd9fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f6a6ed-1cdc-4319-907f-cbd464dbc0fd",
        "cursor": {
          "ref": "ae786305-4f15-4769-868b-5c4226c6b9e2",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a3cac65d-2b6d-4a46-a80a-4570e7222bc3"
        },
        "item": {
          "id": "93f6a6ed-1cdc-4319-907f-cbd464dbc0fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b9fbcb42-436f-401d-9209-4f609a9a5a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa28310-b8ac-46ea-9cac-91e479ced66a",
        "cursor": {
          "ref": "9f2df687-5671-4df7-a488-8328976c088e",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "60220e3a-e5ae-46af-8711-b13d940d4935"
        },
        "item": {
          "id": "faa28310-b8ac-46ea-9cac-91e479ced66a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76e19e75-a320-4731-b451-47ac36979c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d43d7b-7aba-489f-be3e-e8a7cb481ad3",
        "cursor": {
          "ref": "351596f4-9b0b-4319-899c-4e6b30dfbcfe",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c5de7415-a409-492d-8c3e-7fd2d224dc78"
        },
        "item": {
          "id": "d9d43d7b-7aba-489f-be3e-e8a7cb481ad3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9d87e87d-ffa4-47d1-8536-d3d6d320c9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3dfad7-82e8-45c6-b67b-f72d9342dbe9",
        "cursor": {
          "ref": "f6b0e1f3-5f0b-4c0a-8eba-08117f1bf5a6",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d08213d5-7e0c-4cff-a49f-5bc01282d20c"
        },
        "item": {
          "id": "8c3dfad7-82e8-45c6-b67b-f72d9342dbe9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "463ceeac-824a-4cba-895f-a5a9a9fcfb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e4b9e4-ed82-4caf-91eb-c9b4fdc8ecc5",
        "cursor": {
          "ref": "7fce03f1-ec6c-49a9-8c35-6ae73ddc1a55",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "febd1852-19ed-493c-aba2-ed03765b4bae"
        },
        "item": {
          "id": "b0e4b9e4-ed82-4caf-91eb-c9b4fdc8ecc5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8709f64c-7b6e-46be-a5c4-48bdd74e4d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b8acdd-249a-41bf-ac9c-5c98f525a12a",
        "cursor": {
          "ref": "86c97360-9e1d-4f0c-a1ae-4accc9b770f2",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2650d08-5f8f-4a1a-90ec-4cb7699a8677"
        },
        "item": {
          "id": "b7b8acdd-249a-41bf-ac9c-5c98f525a12a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6df5e00f-7bc0-4a10-8ffc-ec4a4070a3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bffc55-8e7e-44f6-b4b7-c6fed9233c34",
        "cursor": {
          "ref": "d5e666e9-48a6-4342-aebb-dd3c3f0930f1",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "104b367a-ff54-4f05-bb58-a748c95fca27"
        },
        "item": {
          "id": "c5bffc55-8e7e-44f6-b4b7-c6fed9233c34",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3f9dc73d-423f-45ab-b898-8c6bf954503d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3593a35-3dc7-49d6-8465-ad4155a7e278",
        "cursor": {
          "ref": "21a17192-b4f9-4987-88bf-942f72de4f11",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "669d2211-e7a8-4725-84ca-6591b295f168"
        },
        "item": {
          "id": "b3593a35-3dc7-49d6-8465-ad4155a7e278",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7c92172d-ea13-42c6-8f5c-7ce024bfd369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab7f694-6fcc-41de-8170-99276e655285",
        "cursor": {
          "ref": "f8cf94dd-13af-4e05-b9e2-eb9e59d9d393",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "48454175-9a68-4f42-91d1-5d3babbf0938"
        },
        "item": {
          "id": "cab7f694-6fcc-41de-8170-99276e655285",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e10fe067-767b-4e85-9f9d-d1d617576a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655f558f-b8b3-479c-81c4-d8ab548321cf",
        "cursor": {
          "ref": "f5de46c9-149b-4bbc-8d54-edc050949626",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "50071de8-cc3b-466a-af08-2fe11a1fd750"
        },
        "item": {
          "id": "655f558f-b8b3-479c-81c4-d8ab548321cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8656b183-25f6-442d-8b38-092b9e35d4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1a9735-0d8b-4614-a747-b07997ff9f99",
        "cursor": {
          "ref": "0cec2e79-722b-4827-a174-6b1eeda6d8fa",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3dc304e4-5bdc-450f-85b1-2de8442d4e78"
        },
        "item": {
          "id": "af1a9735-0d8b-4614-a747-b07997ff9f99",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "016d2c61-f254-4983-b89d-186be9f7959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18ef815-e190-4f06-9453-43d8fc6b20d0",
        "cursor": {
          "ref": "6d88a76b-a7ac-4895-be2d-eb00c121812b",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9a7fdd5-7a6b-49c9-8544-6adfb81125d9"
        },
        "item": {
          "id": "a18ef815-e190-4f06-9453-43d8fc6b20d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d44c2b3d-825d-46b2-8d53-ba8d1e97666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf39d7a1-830b-40df-9f7d-58d91dbcc1f2",
        "cursor": {
          "ref": "57166c76-1d2d-4a90-b3ee-908acd110e5d",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c74e3888-eaab-45ac-bf6a-a9e0ce0816fb"
        },
        "item": {
          "id": "bf39d7a1-830b-40df-9f7d-58d91dbcc1f2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c6affb77-4c43-4984-b0a5-c17ba67e8604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d501c79-0112-4823-a49e-cab1c90632bf",
        "cursor": {
          "ref": "879894ab-147f-48b0-944a-354f1734f505",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a1826c0c-bb65-416d-bdfe-403a4f4bdb85"
        },
        "item": {
          "id": "7d501c79-0112-4823-a49e-cab1c90632bf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "291d448b-0a8d-4913-b35d-6dfc1e172aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77428e42-c17c-4fdb-9391-c9bbd0023ca2",
        "cursor": {
          "ref": "9d319746-ece1-47de-ab82-2af78be34632",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "920702a4-7e21-49f9-a9b5-c8408ca3ad5d"
        },
        "item": {
          "id": "77428e42-c17c-4fdb-9391-c9bbd0023ca2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bdb9fd32-dea3-4402-82bd-344422ac05ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282c9c8b-5dcf-4785-bee5-ef77c3b257eb",
        "cursor": {
          "ref": "4f2f34a4-d6af-41f7-9d18-2e205e40ee8b",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "50b384f3-d46b-48bb-a22a-c4daab51e373"
        },
        "item": {
          "id": "282c9c8b-5dcf-4785-bee5-ef77c3b257eb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "62a7f5de-470b-4b22-b456-369399f8c275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b90cfbf-283e-47ca-abae-f1dbabb48277",
        "cursor": {
          "ref": "dc221081-294a-472a-a3c5-3ec213d29f77",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "310a7690-24ac-4279-98a8-f0159f8e55b0"
        },
        "item": {
          "id": "5b90cfbf-283e-47ca-abae-f1dbabb48277",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "57381e57-5bd8-4541-9335-aacf5bd6b28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9ef4fe-8046-47bd-9d71-9257f9cc6b72",
        "cursor": {
          "ref": "dc3b5cfe-370a-4000-b1fa-38d9fa9e7137",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8cfaffc7-78b5-41c5-bb4a-932ca97175ce"
        },
        "item": {
          "id": "8d9ef4fe-8046-47bd-9d71-9257f9cc6b72",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "20cfaaaa-60f2-40a7-ab3d-75941121b4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c31d0a-0e7e-440a-9f72-cd3939c07463",
        "cursor": {
          "ref": "5930c3e3-5bbf-41c0-b362-e64b344147c9",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4958ef13-8ec2-49fc-857c-838c0545bf9c"
        },
        "item": {
          "id": "d0c31d0a-0e7e-440a-9f72-cd3939c07463",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "74d62e11-3bb9-41a5-b1bd-17bbee981816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab97fc69-40c3-451e-86ff-72b094826d00",
        "cursor": {
          "ref": "fcd290ec-d094-40d7-affb-277934049317",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab11c7c0-5cb3-4242-88d5-92eb0a7e04da"
        },
        "item": {
          "id": "ab97fc69-40c3-451e-86ff-72b094826d00",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "289fae1b-e604-41a9-b4e5-141b3838de8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6478f022-6ae2-42b5-8a12-0bd257c60223",
        "cursor": {
          "ref": "ad087fcb-42c1-440d-a267-d413f5f2be1e",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e707a05e-46d0-4636-8a28-a225fa91dff3"
        },
        "item": {
          "id": "6478f022-6ae2-42b5-8a12-0bd257c60223",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d1b720ee-2edf-4b35-8f5a-20de70ab03d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee379195-336d-47eb-8569-5050623e3e3b",
        "cursor": {
          "ref": "8141bbb4-ec6d-4583-a293-2e34f6d145c7",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f1eb0f7e-a819-43e2-9d9e-c214f6815c5d"
        },
        "item": {
          "id": "ee379195-336d-47eb-8569-5050623e3e3b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f3c9d5e8-e96e-46ea-ada1-3aabbf5c4256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683109c6-0ae2-46ec-bb1d-46a7817fcd79",
        "cursor": {
          "ref": "dc1a1da0-e558-4b4d-83f9-fa40f4446bc1",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d1785824-1fd4-4f5a-96a4-7337f9ddd1f3"
        },
        "item": {
          "id": "683109c6-0ae2-46ec-bb1d-46a7817fcd79",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d5162c3f-e022-45f5-9ef6-46df0ece16cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c30af45-52d7-497b-b448-13005ddb2f4e",
        "cursor": {
          "ref": "5ccc8514-3b7d-420e-9dfc-80e397886922",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fede0118-8da7-475d-b73a-766e183044a3"
        },
        "item": {
          "id": "1c30af45-52d7-497b-b448-13005ddb2f4e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "10e1b5ad-4cc6-4f5a-8cc9-2fb8262a9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19019407-ef73-4be7-892c-3d2d5233b343",
        "cursor": {
          "ref": "eef4e9e8-c438-4e70-8cb8-ad9c9ff7b07c",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5ab2fb02-b60d-485a-b936-9c1f62c3ecb9"
        },
        "item": {
          "id": "19019407-ef73-4be7-892c-3d2d5233b343",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ef7dcb4a-8c57-41c8-b7f7-b4fc55d867c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d03ab2f-21e7-477c-9839-b33ea006bbed",
        "cursor": {
          "ref": "20fb7f22-5560-4e44-9980-022686d1fc36",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5b08a837-4b65-47a7-b7ca-1a97fffb5d43"
        },
        "item": {
          "id": "1d03ab2f-21e7-477c-9839-b33ea006bbed",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a7814279-20e4-4ff1-b184-8f1cba26aede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79876f5-5e19-4dac-a6b9-09ec8a8bed45",
        "cursor": {
          "ref": "42a2c692-0cba-41cf-b4a6-1cea1a64f06c",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d93a59b6-33f0-4690-90e6-1df3e3cb3f9c"
        },
        "item": {
          "id": "e79876f5-5e19-4dac-a6b9-09ec8a8bed45",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "889a903b-05cf-4281-8da3-4424d3f9d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0023ec-09a1-4b73-8236-ebdff762873a",
        "cursor": {
          "ref": "b3cea7d1-ea4c-429d-aa54-a467771fa07a",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1647f60f-1a1d-42e4-9b28-d716d0960376"
        },
        "item": {
          "id": "5e0023ec-09a1-4b73-8236-ebdff762873a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "886772fd-e359-4bc2-8e19-726b3fab825b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464028ae-cb69-43c0-9446-4e78fa790433",
        "cursor": {
          "ref": "896bc67c-8a66-45ba-b669-9d558a4dd6a7",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a6a16233-bee8-4d53-a39c-750523600565"
        },
        "item": {
          "id": "464028ae-cb69-43c0-9446-4e78fa790433",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "55591c52-2e16-4835-bb65-f7172af57dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0f0e87-94e4-46c7-bddf-1ad2306c8a19",
        "cursor": {
          "ref": "d04eaa02-00db-4dcd-89d5-d8e746ea7273",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7e685d2b-b5ed-410b-acc3-e46597f3f484"
        },
        "item": {
          "id": "ca0f0e87-94e4-46c7-bddf-1ad2306c8a19",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5679c125-8058-401c-95d2-c444f3a263ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c40537-5887-4f01-9e3d-9de7392f1d5e",
        "cursor": {
          "ref": "67e06516-5d1e-464f-99f6-dab986e78b23",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8833fe9a-7e56-45e6-9d1e-922db2528c51"
        },
        "item": {
          "id": "f7c40537-5887-4f01-9e3d-9de7392f1d5e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4ffed8bd-5529-4006-a88f-a2c4176e68af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f07131-83c2-4aa5-9c17-534891aec2c8",
        "cursor": {
          "ref": "b9d7b39e-a10d-4e5c-9cf7-1406797d7d27",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5df90c79-d76b-4103-b25d-37a739f49824"
        },
        "item": {
          "id": "58f07131-83c2-4aa5-9c17-534891aec2c8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "87d24ec2-88d3-422c-9499-90ebd5243ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48979979-7020-4a1a-a083-a4945a656da5",
        "cursor": {
          "ref": "8ee01627-8636-463b-91ff-e7dc0e7e75fd",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bae1dbf7-4e8c-4e88-849b-c8a4a0f83f41"
        },
        "item": {
          "id": "48979979-7020-4a1a-a083-a4945a656da5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c1d99ed3-1aa1-4adf-8308-ac970bf1a831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5149049d-a96b-4a0e-a017-f266e533ec12",
        "cursor": {
          "ref": "e3623c26-8977-42e0-af02-9097f127e3c3",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "af9e1ca1-5f5f-4003-b82b-44070bb7b1b2"
        },
        "item": {
          "id": "5149049d-a96b-4a0e-a017-f266e533ec12",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "08b3020b-2086-4477-8ecb-6cb9d0ade212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc513fdb-48ec-4005-bc31-315feb069d87",
        "cursor": {
          "ref": "53ac540b-ebd2-44d8-8734-8f7d196cd4c0",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2f35999e-8dbf-4315-a0a4-501079ef1f7c"
        },
        "item": {
          "id": "dc513fdb-48ec-4005-bc31-315feb069d87",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aa6ee28a-9ed1-42f6-b0a4-1c179a4e099e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be010eb0-452d-4cec-aa01-3a68d945ec15",
        "cursor": {
          "ref": "dd4d2175-9184-47f5-b10f-2232e8a1ae37",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "862ae562-ae97-4599-bac2-b5343ba6ff24"
        },
        "item": {
          "id": "be010eb0-452d-4cec-aa01-3a68d945ec15",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ed1ab6ef-0fc8-443a-bee9-3dc96659142e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a45745-9c3d-427f-a107-533302d013f8",
        "cursor": {
          "ref": "661065a6-5b71-48fe-9e91-27211d4a7d9d",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c02be882-2f2c-4247-a3c5-80eaa58675d9"
        },
        "item": {
          "id": "45a45745-9c3d-427f-a107-533302d013f8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "107ac84d-2d7e-4c94-b500-6e48b0d6487d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af0b1a4-082f-40cd-9035-ea9ce46ba30a",
        "cursor": {
          "ref": "dc21f85d-e0a9-4aad-bf25-410c14c7faa5",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2174f405-fc7d-4837-af1d-2c1f4e96c12f"
        },
        "item": {
          "id": "9af0b1a4-082f-40cd-9035-ea9ce46ba30a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c4367081-1225-4f94-a722-506394c58a67",
          "status": "Created",
          "code": 201,
          "responseTime": 4482,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b289e0c4-ee61-43c4-a509-1c1c4811f29e",
        "cursor": {
          "ref": "2e1de755-ab20-4dc7-a006-fd1bd3c4bf7b",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "58b9d533-c201-4fd1-8ffc-34d4c0b777d6"
        },
        "item": {
          "id": "b289e0c4-ee61-43c4-a509-1c1c4811f29e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "215e79ad-3e16-4b74-aea8-6b18dc86ecdd",
          "status": "Created",
          "code": 201,
          "responseTime": 4882,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "113aefdd-a861-4822-a13a-b0aeead8c4a8",
        "cursor": {
          "ref": "1dd8b4af-54ec-4838-b325-ff7117afa16d",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "87d58519-e1d5-44fe-bcd1-3c2c9e18f363"
        },
        "item": {
          "id": "113aefdd-a861-4822-a13a-b0aeead8c4a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d05e5e0d-8598-4fed-99cb-db9f5cb5fdd2",
          "status": "Created",
          "code": 201,
          "responseTime": 4007,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f297f753-b256-47a6-b021-76ad109bdcc6",
        "cursor": {
          "ref": "4a88aa3d-602d-4a1b-aacc-2b881ed00a79",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "96f02195-a0f9-4b2f-bdd4-918ddb951132"
        },
        "item": {
          "id": "f297f753-b256-47a6-b021-76ad109bdcc6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4fdc9c26-2d36-4cf9-a393-379fb3b70b99",
          "status": "Created",
          "code": 201,
          "responseTime": 3999,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1540f7-09ed-4731-9d25-5b4aee53077b",
        "cursor": {
          "ref": "987ffd60-8a64-400b-9c22-934e1535cfa5",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1e91603e-53c6-4665-8348-36edcf883ca8"
        },
        "item": {
          "id": "1d1540f7-09ed-4731-9d25-5b4aee53077b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "df85f990-c28f-4cad-90b3-d6a38f59be42",
          "status": "Created",
          "code": 201,
          "responseTime": 4849,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "836bfc20-23af-43a6-a30e-349e1b4051d0",
        "cursor": {
          "ref": "829d4053-edbe-4246-a201-d064a22bc671",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "126eeaf8-f3f9-4645-a11b-a0dccf8b5420"
        },
        "item": {
          "id": "836bfc20-23af-43a6-a30e-349e1b4051d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "027da9a8-8051-44ea-b0b1-ab46eed326cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836bfc20-23af-43a6-a30e-349e1b4051d0",
        "cursor": {
          "ref": "829d4053-edbe-4246-a201-d064a22bc671",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "126eeaf8-f3f9-4645-a11b-a0dccf8b5420"
        },
        "item": {
          "id": "836bfc20-23af-43a6-a30e-349e1b4051d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "027da9a8-8051-44ea-b0b1-ab46eed326cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cfa543-13e6-4e9c-9aee-6ef9cf8246d4",
        "cursor": {
          "ref": "4abc507c-d532-4bc9-b374-bba21f87537e",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e59109e3-f864-46f6-bd26-a5af6fe27a7d"
        },
        "item": {
          "id": "65cfa543-13e6-4e9c-9aee-6ef9cf8246d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c0b2a62a-3c47-428c-a755-040adafa2514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef205936-d280-4d39-bf1a-2a95407bd873",
        "cursor": {
          "ref": "9b1bc887-12c4-4a66-a133-21ae08b5b91b",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ed1783ec-f014-4dbd-818b-73a8786fa2bf"
        },
        "item": {
          "id": "ef205936-d280-4d39-bf1a-2a95407bd873",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "44f55378-aa03-40cf-9830-008b3e126d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbb27ed-314d-4c7b-9ced-b688f6aa8482",
        "cursor": {
          "ref": "83894013-45fe-44f4-9a4d-0900ef46c4c5",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "205a4c9e-824d-4def-af5d-393355550bf1"
        },
        "item": {
          "id": "ddbb27ed-314d-4c7b-9ced-b688f6aa8482",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "206b842d-3db4-4117-b21c-d081cccbc144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b9e6b-0b08-4b70-82da-4bc1a8a92dc4",
        "cursor": {
          "ref": "c0512e2e-3123-4194-be28-a1f3b0a93bbe",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad088948-a757-4ba2-94b7-d9d89329916c"
        },
        "item": {
          "id": "b26b9e6b-0b08-4b70-82da-4bc1a8a92dc4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75fe7fb9-3802-4083-a036-aea93c9c8aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414ef055-9fe2-4820-8747-9e2835f23a68",
        "cursor": {
          "ref": "59a9cd8a-4742-4d2b-a137-9d27a7b00700",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8dc3b796-d6d1-4906-8c24-c32b48e6571d"
        },
        "item": {
          "id": "414ef055-9fe2-4820-8747-9e2835f23a68",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7aef366b-7b73-413d-8a03-3e8488050a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a99d38-72ec-418b-ac0d-082fc7beec46",
        "cursor": {
          "ref": "faab6d6c-85ea-414d-adf3-6245b9794576",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "147e5760-26bf-4916-8b03-923b8b3323b8"
        },
        "item": {
          "id": "f5a99d38-72ec-418b-ac0d-082fc7beec46",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e91820d3-f577-4595-992c-486074a31196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b5e451-cac0-4f59-aa8e-9070745f2ae2",
        "cursor": {
          "ref": "1b643ea7-9e55-4f3c-b0a5-d21d21d672da",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9f6a87ec-9113-4345-bbb3-de1a3835cead"
        },
        "item": {
          "id": "a1b5e451-cac0-4f59-aa8e-9070745f2ae2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e99fa89a-8d59-4731-b0ca-2416857bbdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5187a0cb-b6db-4ede-8ea0-f81d562e07b7",
        "cursor": {
          "ref": "f424ee74-59a0-42b4-8300-3852a82b1b8d",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0d0b4958-2f4d-4596-ac26-7d7709998b36"
        },
        "item": {
          "id": "5187a0cb-b6db-4ede-8ea0-f81d562e07b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85110a67-3bf9-4e7b-8fd6-ccbaf7dca67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8c4323-5ca3-4c53-9769-758d7740c447",
        "cursor": {
          "ref": "c2cbf78b-2dc3-4132-abf6-621e2ef52a6e",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eeb1bd16-75e7-4dce-8658-4c344493af23"
        },
        "item": {
          "id": "7c8c4323-5ca3-4c53-9769-758d7740c447",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e690b3bf-5534-4072-9ea7-8f319862d436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ca3c2d-842b-4570-be4c-6338deea3ad9",
        "cursor": {
          "ref": "5d429073-0a44-4206-8976-1cb67b067e02",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "18c76960-1e92-4509-8974-c2e47b915125"
        },
        "item": {
          "id": "54ca3c2d-842b-4570-be4c-6338deea3ad9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41e7cafa-f7ba-4ae2-8265-afb0ac3f6182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c20d71d-b57e-402d-981e-536c8ca038ff",
        "cursor": {
          "ref": "9061650d-7e3d-4f30-8710-e00bd7247b66",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e6350a63-c0f5-4b2e-8abe-e81afabbdfb1"
        },
        "item": {
          "id": "5c20d71d-b57e-402d-981e-536c8ca038ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "62e188c8-06d5-4647-98e5-d25a4f548a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8bed8c-d84f-400b-a2f9-4b8f3401362c",
        "cursor": {
          "ref": "8b77a78c-5c77-4580-9018-e119ff30d371",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "99a823c8-f6bd-4c27-aff1-815f9ef7725e"
        },
        "item": {
          "id": "ba8bed8c-d84f-400b-a2f9-4b8f3401362c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ccee517d-e28c-4ad5-ad24-50ac916ea5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7c58ed-8680-44b0-a198-01961a350c57",
        "cursor": {
          "ref": "a3505339-f5e3-4e42-865a-4c25bc48b76f",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e14d2bc-bbf0-425a-9cac-01df84c25691"
        },
        "item": {
          "id": "fe7c58ed-8680-44b0-a198-01961a350c57",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4df0ac1f-362e-4a26-a6f0-fab7d8ad0213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0f3ce0-4dd5-48a7-93df-8d72cfe86ff1",
        "cursor": {
          "ref": "189f586e-2742-415a-b6fa-a26fc225c21c",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a5d3c406-4473-4b3a-ba88-7a470e4a597e"
        },
        "item": {
          "id": "aa0f3ce0-4dd5-48a7-93df-8d72cfe86ff1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8488291c-a5cc-4c68-b29f-7de6dc8b57a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d81d97-105f-41e0-a16d-8bfec09c4507",
        "cursor": {
          "ref": "216df836-abc9-467d-b425-d7c1882c404f",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ca7a7bdb-c1ba-4628-ae42-6f72a5cfdf4c"
        },
        "item": {
          "id": "f4d81d97-105f-41e0-a16d-8bfec09c4507",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c148a21b-5995-403e-994f-3b29cb7add46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff15f2ec-07bf-4ec5-a980-ef62d95a43bb",
        "cursor": {
          "ref": "3577ef56-a4a1-4c5d-8c46-711b94c27718",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "38913de0-3603-4a7d-8ac1-e108cd77c276"
        },
        "item": {
          "id": "ff15f2ec-07bf-4ec5-a980-ef62d95a43bb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9e77035a-7dda-41c5-bf7f-e610a25aebcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c362af-c8bf-42ce-a235-2a6b5eb114f5",
        "cursor": {
          "ref": "91116bdd-8149-405b-9673-bc1a2239caf0",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "296379d4-3d86-4a57-ba20-1c93d8facff2"
        },
        "item": {
          "id": "86c362af-c8bf-42ce-a235-2a6b5eb114f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3261b94a-b171-42e9-83c2-2a81929f73b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a7b510-f73f-43e5-a6d2-c96cfafb4def",
        "cursor": {
          "ref": "f22ec389-084e-4807-8279-2d6ad8ad62fb",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c159331f-f8ba-4301-8163-c9af7ac3368d"
        },
        "item": {
          "id": "b7a7b510-f73f-43e5-a6d2-c96cfafb4def",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adeb1517-8803-46e8-8481-48600ad6b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c180a49-7ebb-43e3-8ac1-c9a73f332e69",
        "cursor": {
          "ref": "a68bd3c4-161f-4f59-afc4-faad66104a30",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6366f6f-1c7e-4fdd-b280-67eac95a0399"
        },
        "item": {
          "id": "9c180a49-7ebb-43e3-8ac1-c9a73f332e69",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "718b1d55-5a98-4424-ad6a-3c03dd4c2b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9868d53b-fb6e-4449-bc6f-68c4059e12d9",
        "cursor": {
          "ref": "f6679c8b-940c-44e6-9300-eab467129dfe",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "28e471fc-30b5-4370-99ce-12634da010d2"
        },
        "item": {
          "id": "9868d53b-fb6e-4449-bc6f-68c4059e12d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5c07559e-6921-4200-b771-dd1368576051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e70fb9-657f-4880-84cc-29fd1a1492ec",
        "cursor": {
          "ref": "be6dc6af-58df-4a12-8edf-f35175d33835",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8706a8ef-bf18-4945-81d7-803c11207b6c"
        },
        "item": {
          "id": "23e70fb9-657f-4880-84cc-29fd1a1492ec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b55e95c-efe2-4485-9fd3-ee9b33d030e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa9467-e6cf-4a7d-9a27-5dd9932afe8d",
        "cursor": {
          "ref": "b4b3a8c2-d563-48bd-aefe-3e9f1bc68d3f",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "91359f0e-7111-4cb9-8c0a-b16b26a7f08b"
        },
        "item": {
          "id": "fbfa9467-e6cf-4a7d-9a27-5dd9932afe8d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26ee3cb1-0a00-472d-b540-f314ea6b16d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06891359-d69a-4721-a1fd-d4d3ad81f218",
        "cursor": {
          "ref": "b461b481-2709-4293-badc-d014b08cb422",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6fbe29b1-eff6-4af9-a5ae-6f0d983b778d"
        },
        "item": {
          "id": "06891359-d69a-4721-a1fd-d4d3ad81f218",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2f897926-69ae-4896-a770-8423713abae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2517494e-414d-4658-9ef9-1d21e3763503",
        "cursor": {
          "ref": "3ce8517b-36ef-4a69-a2aa-d722e1bbe17b",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "80481896-4d19-4478-a2cc-c7d08a27eac8"
        },
        "item": {
          "id": "2517494e-414d-4658-9ef9-1d21e3763503",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "03108c13-9c0a-430d-aea5-98d0a020f568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4738e4-b811-4885-8bbc-ad4839cfaf3e",
        "cursor": {
          "ref": "3c2960c9-79cf-4fb7-9584-c0d4519f79a6",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "de4c14ec-3c76-4c59-b7cb-f97c881ef5c8"
        },
        "item": {
          "id": "1a4738e4-b811-4885-8bbc-ad4839cfaf3e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3e29c77-3714-4b8f-a95b-22e766fb8d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2cbb30-db44-4790-b589-57a5b251f9b8",
        "cursor": {
          "ref": "300277dc-340e-4ff3-a93d-bbb8a610be2c",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "efafc0a6-2cf0-434e-bfe6-317eebfd58a9"
        },
        "item": {
          "id": "5b2cbb30-db44-4790-b589-57a5b251f9b8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f0bae68d-946e-4e58-ba41-4a027d5d47d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63991467-46ab-4907-a5c4-07847b3074ad",
        "cursor": {
          "ref": "02074e66-22a4-4028-abc9-35bb4d1443f9",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c8a6b552-3942-403c-9969-35bcaac0f14e"
        },
        "item": {
          "id": "63991467-46ab-4907-a5c4-07847b3074ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ec1f9759-39e5-4d7c-a51f-2ced526e76bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8104de-bd60-4a2c-add3-aff8d8ebf476",
        "cursor": {
          "ref": "60e0678c-db87-4caf-b733-e6b35d5973a9",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a1b8c5c9-bbe6-47e9-8a1b-120cde203d6a"
        },
        "item": {
          "id": "0d8104de-bd60-4a2c-add3-aff8d8ebf476",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a27475a-d68f-4bc4-8f80-a6b34e94a5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67b4733-6f3b-47d1-8607-a4de6a82073c",
        "cursor": {
          "ref": "09974728-242b-4ab1-973d-5863fdb242c4",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b0cb55d2-0c65-4cb1-bd6a-f4a991853258"
        },
        "item": {
          "id": "e67b4733-6f3b-47d1-8607-a4de6a82073c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c636396-6444-468d-b6ec-c6526b1eea25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3918d5-d917-442f-8a32-ecf4ebab7452",
        "cursor": {
          "ref": "321677bd-d07a-4462-9a4c-c79edf7643a6",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f2796d93-1124-4f6c-ac7b-7d1c008ba4a9"
        },
        "item": {
          "id": "0b3918d5-d917-442f-8a32-ecf4ebab7452",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf391584-e9fd-4752-8f92-539e10d50f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c50a1e-a8c4-49b2-8666-f9a46bbe0c6c",
        "cursor": {
          "ref": "626b185a-6490-4c64-9403-511dd7da2fb3",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1ca8e8ca-4469-4e55-86ee-89561b7e5f04"
        },
        "item": {
          "id": "f8c50a1e-a8c4-49b2-8666-f9a46bbe0c6c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "94d59052-3741-4edd-8aba-cb9b14a09a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764bb92f-b9b7-4560-8816-ca8710cbda32",
        "cursor": {
          "ref": "ce3ed808-7808-405b-90fc-090b3085caef",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f5d70fe4-2972-49eb-a629-946855de5db0"
        },
        "item": {
          "id": "764bb92f-b9b7-4560-8816-ca8710cbda32",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "68a71ae9-d0fa-4ee0-9544-70e39be47ae5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2685f9c-ccbb-4fee-856f-282407d76f77",
        "cursor": {
          "ref": "8ed8e633-dcea-416b-9248-e64a3111e26e",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "53bd22da-6391-4807-8549-48fa3b794778"
        },
        "item": {
          "id": "e2685f9c-ccbb-4fee-856f-282407d76f77",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "eb391d37-717f-4d39-8d4f-faf1a7630efa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 553,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef8759b-0604-4564-87f1-57db8c96e29f",
        "cursor": {
          "ref": "24a75195-2d75-4a45-931c-beea46af37f1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c9d7a34e-65b5-470f-b22c-ed37e663f999"
        },
        "item": {
          "id": "2ef8759b-0604-4564-87f1-57db8c96e29f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "12923149-2637-4860-bfce-ecf3586d01e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef8759b-0604-4564-87f1-57db8c96e29f",
        "cursor": {
          "ref": "24a75195-2d75-4a45-931c-beea46af37f1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c9d7a34e-65b5-470f-b22c-ed37e663f999"
        },
        "item": {
          "id": "2ef8759b-0604-4564-87f1-57db8c96e29f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "12923149-2637-4860-bfce-ecf3586d01e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12738365-00cd-4152-917a-dd768bc6b230",
        "cursor": {
          "ref": "3e506fa4-3552-4190-b44a-ee6f627a286e",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27e64418-dfc8-4c2a-b8b1-5939b58d2eb5"
        },
        "item": {
          "id": "12738365-00cd-4152-917a-dd768bc6b230",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7ed01963-0784-494a-8302-cac54c7e28aa",
          "status": "OK",
          "code": 200,
          "responseTime": 327,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "0e196869-e920-489f-bc6b-245a0b8ae136",
        "cursor": {
          "ref": "4245add3-03b9-45d1-a16f-2c52492bf728",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3255431a-9cf9-4b26-a348-c60036f0821b"
        },
        "item": {
          "id": "0e196869-e920-489f-bc6b-245a0b8ae136",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a40c4430-63af-4b8d-a138-2cbe83c8439f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e51c27-d421-48b6-b789-382c63abc34e",
        "cursor": {
          "ref": "494ac470-380d-462d-9f63-793d8b823447",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "590e9a56-549b-43ab-934e-d9958ce3cf7f"
        },
        "item": {
          "id": "d1e51c27-d421-48b6-b789-382c63abc34e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cb641cd3-0b75-487f-8b88-11e45a5f88e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f07ab6-fd73-4ef4-b394-6953336afb52",
        "cursor": {
          "ref": "7ea85953-8e44-47f7-bc50-b21f073582c5",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "122ff868-e6d5-4070-8af1-9497e3dc8656"
        },
        "item": {
          "id": "76f07ab6-fd73-4ef4-b394-6953336afb52",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f110137b-bff1-4ade-ba33-c583d419957d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0279ec7a-59ec-4dd1-ab95-659379b967d8",
        "cursor": {
          "ref": "2490a5b1-2ab3-4a9a-b574-b2329dcdb4aa",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "04c2098f-e823-4ff0-af2a-5b76d125cc73"
        },
        "item": {
          "id": "0279ec7a-59ec-4dd1-ab95-659379b967d8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0efc5b18-7c81-474e-b0e4-4afe515b5a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd616977-d568-48ff-b388-74408f525605",
        "cursor": {
          "ref": "096723fc-0f88-4d71-9a72-3281e7b6cc3f",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d684da95-630a-4055-b29a-aafca7e70841"
        },
        "item": {
          "id": "dd616977-d568-48ff-b388-74408f525605",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2f0bf333-9c1e-41f2-ab4d-ab1d6785c97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a8cfa5-33ae-439b-92af-20826f60db72",
        "cursor": {
          "ref": "a6ea254a-5945-4f65-b263-0d8040fe64ed",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "245fe588-1a36-4ce8-957c-5136311b2083"
        },
        "item": {
          "id": "08a8cfa5-33ae-439b-92af-20826f60db72",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "585e5cf3-27b5-451e-9d19-c44be5d03942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254ffadd-1128-40af-a9b5-85914aef007f",
        "cursor": {
          "ref": "beda7b00-09fc-4b08-a29f-3e68b4f16291",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "39949de8-9961-42d1-a86d-becf2935f05f"
        },
        "item": {
          "id": "254ffadd-1128-40af-a9b5-85914aef007f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ba97899f-72b2-4c02-bc11-6f002eaeb279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121d1a0-5115-4070-a2e9-12d1dbd2a6af",
        "cursor": {
          "ref": "764469ad-b07c-480c-a0c3-f8bf3476f463",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "da6d53a0-a350-41a6-bfee-74a73e6d8376"
        },
        "item": {
          "id": "1121d1a0-5115-4070-a2e9-12d1dbd2a6af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "81f54b16-4338-4d90-ac9d-8d0635fe7f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d487dfd-2b33-4cbb-b75a-676988c9f0c5",
        "cursor": {
          "ref": "8d2289e5-56d6-453d-bf30-fd87701fa2dc",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eae5c1ab-822d-430f-a4e5-ce63aa3d011a"
        },
        "item": {
          "id": "7d487dfd-2b33-4cbb-b75a-676988c9f0c5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f4f9d5bf-ad25-476e-b4e3-f968c20416fc",
          "status": "OK",
          "code": 200,
          "responseTime": 411,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "6b079dcd-0d85-4c39-9a27-1008e26381a9",
        "cursor": {
          "ref": "1d401bab-f21f-49bd-9fec-d82bdae437f1",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3b9a4d7b-8054-406e-9502-28ce9e3d2f18"
        },
        "item": {
          "id": "6b079dcd-0d85-4c39-9a27-1008e26381a9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d37edf5f-e0fa-4387-9b10-0db7423c9ec9",
          "status": "OK",
          "code": 200,
          "responseTime": 375,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "e76eb781-6a76-476f-9ea2-9fa26fb5cd98",
        "cursor": {
          "ref": "5ab61edc-d987-4f4a-b45f-73fb7fd6c888",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "443f5eea-afff-4517-91b7-221b9635fdf6"
        },
        "item": {
          "id": "e76eb781-6a76-476f-9ea2-9fa26fb5cd98",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3475cfc1-29f1-49bf-b52c-667fbdb82d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03df43c-74a2-424e-a43c-33eece3d89e2",
        "cursor": {
          "ref": "9fceff37-5e2f-49c4-921d-7a076f683f2d",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cd614f6f-cee5-47d7-8469-00a071ab5b5f"
        },
        "item": {
          "id": "f03df43c-74a2-424e-a43c-33eece3d89e2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "018b357a-d634-41d7-b9a8-26dd5581bb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b075c7a-1e7c-4b59-b9b3-29656d27664e",
        "cursor": {
          "ref": "676aed5e-51ec-4737-99e1-47005d4624ba",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0a46fc2e-35f9-4c91-8289-e5449354f163"
        },
        "item": {
          "id": "2b075c7a-1e7c-4b59-b9b3-29656d27664e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f401f056-a224-4e14-bf92-100500f85289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417eeac2-4197-46bd-bb69-17beb2f2c6bf",
        "cursor": {
          "ref": "6ad782a3-5d16-4410-a2ff-d67aa6dc7c42",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e62e6450-cf68-4d98-9ba7-ad4dcafad6f9"
        },
        "item": {
          "id": "417eeac2-4197-46bd-bb69-17beb2f2c6bf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6d725679-23f1-4919-a437-a0f7881c9386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3042da67-935d-4140-9d67-47d62b009ee1",
        "cursor": {
          "ref": "86998301-878b-4293-8aa4-aa1cb5a74d33",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "959a2a85-6c1f-41a6-8197-0289d6870cc3"
        },
        "item": {
          "id": "3042da67-935d-4140-9d67-47d62b009ee1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "11db6c3f-e8be-492e-8e92-c0da79a7565b",
          "status": "OK",
          "code": 200,
          "responseTime": 617,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "a838ac8a-b5a3-4c2e-81e3-c59c1c0ca41f",
        "cursor": {
          "ref": "407f0d80-3a82-445e-8d11-9e9bb9e0c952",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "efca3f17-3fc1-4a48-af71-3c1f749b6fc5"
        },
        "item": {
          "id": "a838ac8a-b5a3-4c2e-81e3-c59c1c0ca41f",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "580ec9f0-790a-4060-9b58-24cd817b415e",
          "status": "OK",
          "code": 200,
          "responseTime": 2090,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "e6cbd62c-4567-4dd8-a72d-38918cb5ac90",
        "cursor": {
          "ref": "116f78e6-9bb7-494b-93c1-e611dda57e4d",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "713b7da5-52b7-4457-9a36-fb3e471092e4"
        },
        "item": {
          "id": "e6cbd62c-4567-4dd8-a72d-38918cb5ac90",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd07aa2b-f143-4151-9ac3-7c20116d3c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90d1f85-25d3-44b9-8a40-02054b719254",
        "cursor": {
          "ref": "e8264a3b-9561-4eca-9cf8-1759d5abf339",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "624249a7-79e3-4057-b6a3-1a0155d17944"
        },
        "item": {
          "id": "a90d1f85-25d3-44b9-8a40-02054b719254",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c6389a77-c4bb-4296-afcb-e18c5e76d872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50a031c-3850-4864-bfb3-7551ebe6b18c",
        "cursor": {
          "ref": "a282ccc4-a659-4973-a9be-440da29fa5a8",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6cf818d0-cbba-4464-916c-dbf7ee8a3410"
        },
        "item": {
          "id": "f50a031c-3850-4864-bfb3-7551ebe6b18c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2acbd8ec-142f-4c90-8889-c2a9e5b4eebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5cfe21-7524-4643-b4f7-80b8a3d596a5",
        "cursor": {
          "ref": "e7740c4f-2c3f-4b11-b276-124b578510df",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0c455223-124b-4633-b621-e790441c6ed7"
        },
        "item": {
          "id": "dd5cfe21-7524-4643-b4f7-80b8a3d596a5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c2a22b66-3938-4ff3-bdd6-3d7961005ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16944f0f-1eee-49be-b0ff-6568ee84fdc7",
        "cursor": {
          "ref": "300bdcfb-8be7-4c87-a60f-07f1cf72dbcb",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "332cbe34-8fd7-418a-9590-fa6380971970"
        },
        "item": {
          "id": "16944f0f-1eee-49be-b0ff-6568ee84fdc7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4ee093c7-97f1-4530-ac32-d723dce46163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581c8750-f81d-471b-829b-f10d3d07ad51",
        "cursor": {
          "ref": "f1f5e278-4982-43f6-a867-8651ce3607dd",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d9dc2026-e69e-487a-b8b5-1eb2feca5f96"
        },
        "item": {
          "id": "581c8750-f81d-471b-829b-f10d3d07ad51",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2cfcb0c2-0816-4569-953c-64a0d46c9525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc33857-7d39-4500-a9fb-3ad64644383b",
        "cursor": {
          "ref": "7a82d87f-59d5-497e-99d1-782645e8bb28",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a92b2614-1d28-46d4-8e10-d6855992c959"
        },
        "item": {
          "id": "3bc33857-7d39-4500-a9fb-3ad64644383b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "13b42131-ee14-4345-adab-3e8974813ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a298cff-26ab-46fd-8cd5-27089ae1ebf5",
        "cursor": {
          "ref": "a88b1a19-5675-4d04-8a26-1399df36ffb5",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9d38b526-7615-4382-aa0c-2f34d576f7d3"
        },
        "item": {
          "id": "9a298cff-26ab-46fd-8cd5-27089ae1ebf5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d29639e-97dc-43f4-82ba-a92348dc9b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ad3f2-07a8-4179-a329-3d7e6fe3db5c",
        "cursor": {
          "ref": "6e2d8072-db6a-457d-972d-638c30b0dcfa",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "58500c39-5b57-47bc-80de-70367f14cd87"
        },
        "item": {
          "id": "b30ad3f2-07a8-4179-a329-3d7e6fe3db5c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "742a69b9-e1dd-4210-87d2-5a8afaff7f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16761f7a-c4ea-422d-883a-fc09ac0bd59c",
        "cursor": {
          "ref": "9e0463ed-79c3-42bb-bbab-f16205cc896e",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8e31f784-9bfa-4d44-8798-c6ab2bf91ec9"
        },
        "item": {
          "id": "16761f7a-c4ea-422d-883a-fc09ac0bd59c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9aae09ec-c272-4e67-ba40-abce99b509d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bf0ad4-d6e9-4df3-9995-eee15f5a9e4f",
        "cursor": {
          "ref": "501ac7d0-b439-4911-8bfc-87521f84ed8b",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "baa21d6a-8b95-4f00-a945-36d599ff6c3e"
        },
        "item": {
          "id": "35bf0ad4-d6e9-4df3-9995-eee15f5a9e4f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c901ab43-e4de-4d5b-aa4a-6520acee20cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd8cbd-4a98-4cc2-bcb3-0abec88b01ac",
        "cursor": {
          "ref": "c3a4edf2-9d8a-4fac-a0d8-07d3a06fb503",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e7fba7c-dc96-420e-a4dc-3219237015e5"
        },
        "item": {
          "id": "56dd8cbd-4a98-4cc2-bcb3-0abec88b01ac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b385cd2c-f874-495c-84e8-3f470a241dfc",
          "status": "OK",
          "code": 200,
          "responseTime": 402,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "f6057e08-107d-45da-bc1a-4df7eefdd90d",
        "cursor": {
          "ref": "52973f40-ed50-47aa-800e-bd0cb98f9686",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a3ecd97-892b-4909-9feb-0411de3f63f8"
        },
        "item": {
          "id": "f6057e08-107d-45da-bc1a-4df7eefdd90d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e5c4a156-8889-4a31-ae2f-a80c9fa1ecae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a5a902-fd1d-406c-94d0-bb259c9f3677",
        "cursor": {
          "ref": "801afc15-a244-4d1f-bda7-f7221bbc3ad2",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "06c33e24-3910-49d2-b4d8-8b3ac45bb513"
        },
        "item": {
          "id": "11a5a902-fd1d-406c-94d0-bb259c9f3677",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "67957958-0b4a-4611-b701-423a0edd4f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a6742a-b899-454b-a35a-71cf5fa1448e",
        "cursor": {
          "ref": "4c1f4bf9-e438-49ef-9988-bf59d84c01eb",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ae2d3b6b-1740-4903-b1f1-5e7a27b0c6df"
        },
        "item": {
          "id": "d3a6742a-b899-454b-a35a-71cf5fa1448e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6fbe9f3f-c831-4b8a-9d3d-1375664a8381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5a909b-840f-4b5e-8b85-b118fa9ce8f1",
        "cursor": {
          "ref": "1f2ed4a7-0641-4436-b295-6491d9f742ff",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1aab7fb2-7be3-47c3-91a9-e8aea411c8a9"
        },
        "item": {
          "id": "4d5a909b-840f-4b5e-8b85-b118fa9ce8f1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b68bae02-9e81-4dcc-b7d4-2fa62ea55658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42413aaf-cf36-4311-91d1-95d1b9d087c0",
        "cursor": {
          "ref": "7fed7d72-6e27-45c6-bb11-65b414a70877",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "916b48e5-12b3-4a53-93dc-39920262c6c8"
        },
        "item": {
          "id": "42413aaf-cf36-4311-91d1-95d1b9d087c0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b37471ba-8715-402c-b364-cfdb5cb85b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc78e723-d604-4385-a18a-159149273d06",
        "cursor": {
          "ref": "e7681992-3c9d-4f94-9fbb-d86c8f23dd8c",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "080ee8a9-c1bf-4fec-8e25-baae68e40b9f"
        },
        "item": {
          "id": "cc78e723-d604-4385-a18a-159149273d06",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5986419e-5f04-4d25-8157-bf50b71dd8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c1da00-b8d4-4204-b335-6586e6b580f9",
        "cursor": {
          "ref": "29272131-e2f3-4609-972b-3e7112207210",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "24e07ee6-761d-4720-85fa-61e3ee65f897"
        },
        "item": {
          "id": "86c1da00-b8d4-4204-b335-6586e6b580f9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fccab3b8-1679-4dee-b480-503c71ff29d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c691155d-81ed-4f37-ae37-10de154dcc6f",
        "cursor": {
          "ref": "c8480a68-8276-42d9-8baf-94ea036f778a",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3a81a537-66b5-464c-a95f-fe290985674d"
        },
        "item": {
          "id": "c691155d-81ed-4f37-ae37-10de154dcc6f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f5c701ca-6cfe-46e6-a200-eb1eab745664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8d4f93-cc13-422b-9fc0-a8bb53849936",
        "cursor": {
          "ref": "ec978d16-2478-4773-9879-0526448f9040",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20b98b28-9f5d-44c5-9afe-82872270c4b1"
        },
        "item": {
          "id": "fe8d4f93-cc13-422b-9fc0-a8bb53849936",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a7c8d800-0bb4-4e62-beec-4e5d16b7f507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68973b41-17e2-4b7b-a0f3-17cba5090a58",
        "cursor": {
          "ref": "01d4c642-9615-424c-be10-2efa5bfa7b15",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6a0b1fc9-b1d8-4a77-80ff-9d493ae2fbff"
        },
        "item": {
          "id": "68973b41-17e2-4b7b-a0f3-17cba5090a58",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fa74a72d-628d-4178-86c4-a96194f65342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1159,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25aee99-1694-4430-bb15-08c23dc85212",
        "cursor": {
          "ref": "3fee5b7a-aa03-49b3-8af3-9f2b123fe5f1",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7ee10866-e3ad-481d-bdec-8414b3eabe3f"
        },
        "item": {
          "id": "f25aee99-1694-4430-bb15-08c23dc85212",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2cd9557e-7959-486b-9dd2-5a8457e23dfa",
          "status": "OK",
          "code": 200,
          "responseTime": 1113,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "1af23f20-80df-4c04-abf0-40e37afdbaa4",
        "cursor": {
          "ref": "e0b8a6d3-2d8d-45d4-9ad8-3197d1958f5f",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "24fd9492-23b4-49f4-a278-0f71cbfeee91"
        },
        "item": {
          "id": "1af23f20-80df-4c04-abf0-40e37afdbaa4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e4a7538d-f3fd-470e-8e4e-1227a58fc524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cd91af-1498-4220-8ee7-01166290712b",
        "cursor": {
          "ref": "b61b7af1-638b-4f20-b303-713c2aca1666",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f1c9964d-b0ec-4035-9859-0ae1e977453c"
        },
        "item": {
          "id": "31cd91af-1498-4220-8ee7-01166290712b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e784fc12-c8f2-469e-816c-e03962ab126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa97a1ef-727a-4d6c-8577-fb5c37309eb7",
        "cursor": {
          "ref": "15b2b135-d046-4543-89ba-ccc2ec5fa21d",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "72106eeb-5211-4d7c-91f4-babd8f04b6e4"
        },
        "item": {
          "id": "fa97a1ef-727a-4d6c-8577-fb5c37309eb7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4954940a-444d-4538-aa41-56007236477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f5f4a3-4eac-4f72-8f15-3e740f833ddb",
        "cursor": {
          "ref": "afbaedb7-28ff-4c1b-9041-3e3535a473be",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c9f163d4-ef6d-44a3-a838-15dcaab5371f"
        },
        "item": {
          "id": "22f5f4a3-4eac-4f72-8f15-3e740f833ddb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ac8f885d-6bc6-4ab6-8481-772536ff7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5207940-77fb-4dd6-8d95-fa473a1cd8fe",
        "cursor": {
          "ref": "028ca7f5-ca13-47d1-af82-c65056326752",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "45162b4c-64c9-4983-ae84-7478c6c9b0ab"
        },
        "item": {
          "id": "c5207940-77fb-4dd6-8d95-fa473a1cd8fe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ba739f21-2480-44f6-9af6-751d3d8fc9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1378760-7ac6-4d5d-bb61-bb5fae08868c",
        "cursor": {
          "ref": "490477e1-93c1-4014-9060-5171f5fe800b",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8533bc5e-41e6-4456-b976-095adfdbf84a"
        },
        "item": {
          "id": "a1378760-7ac6-4d5d-bb61-bb5fae08868c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "16e0334f-f7cd-439d-803d-07297828c02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331e5f3c-1042-44b4-a087-8f5fc7d41808",
        "cursor": {
          "ref": "8d88afe2-0a80-4cc1-ac0e-9fe31ffb24aa",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0bd19f90-e62b-467a-8384-b8c0fb2e424d"
        },
        "item": {
          "id": "331e5f3c-1042-44b4-a087-8f5fc7d41808",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0e3fd1c2-273e-4b4c-94d2-ac8470d27990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627ad699-8e6f-4daf-b4c8-644083478555",
        "cursor": {
          "ref": "bd5d8247-a3f6-443c-95fb-0556552a5e91",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d6d6a158-62aa-4e2a-bcfd-38192925ef96"
        },
        "item": {
          "id": "627ad699-8e6f-4daf-b4c8-644083478555",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bea1184a-b208-4e37-b031-45ef9bd94ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e46ab31-3dc5-4d05-86bc-d67c5312c26c",
        "cursor": {
          "ref": "4fe13ff4-58db-4b31-911b-9855f8d86835",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5bd723a8-2259-4518-88f1-dd111a62ebf3"
        },
        "item": {
          "id": "3e46ab31-3dc5-4d05-86bc-d67c5312c26c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6c4b2624-4f77-4aeb-8933-dfbca830c01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f58baa-af6c-416d-b14a-b06c6afecfa9",
        "cursor": {
          "ref": "71cddb16-aa34-4b93-bfaa-4f0e4c974112",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73c4a263-f598-46f6-9472-845d59a582ba"
        },
        "item": {
          "id": "29f58baa-af6c-416d-b14a-b06c6afecfa9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b766087b-dbe2-40e8-a2ce-9ee6e0363363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18347884-dd27-4b3c-9ac6-f2939e4286e9",
        "cursor": {
          "ref": "5540c16a-30b4-4b23-812a-c5a5154b066b",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aeb41d43-2d43-4626-9e50-e7325ee376ae"
        },
        "item": {
          "id": "18347884-dd27-4b3c-9ac6-f2939e4286e9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "20c98aae-22ed-40e9-8fc4-b800dc3c3f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e406b777-1382-48c4-8a38-f5b6cb043290",
        "cursor": {
          "ref": "78d511dc-bd7f-4023-920c-a07ab57dc54b",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba3aa1dc-59ff-453d-b5f6-54aa3b571247"
        },
        "item": {
          "id": "e406b777-1382-48c4-8a38-f5b6cb043290",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "53e8796b-3322-482e-90e2-2dd22696fff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74293db7-d30d-4828-8f36-e5486b5adc02",
        "cursor": {
          "ref": "368df16e-583a-4d0c-9eeb-c75c05f88b1f",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "47e4460f-6f10-4113-bf3d-f6153fc97fe3"
        },
        "item": {
          "id": "74293db7-d30d-4828-8f36-e5486b5adc02",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fd65dee8-b5d4-452c-a9b2-0962156c4265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326aed8a-4a2c-4785-9375-53bc5905db92",
        "cursor": {
          "ref": "6de1d667-ba22-4f3e-b4d4-bdadcfaabb11",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4dfe6d60-2a4d-473a-b5fb-b669bbce59f5"
        },
        "item": {
          "id": "326aed8a-4a2c-4785-9375-53bc5905db92",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9bb65354-7334-49ec-ba86-3bf2a9aaf141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485995ea-1b61-48ae-8555-af56b38addde",
        "cursor": {
          "ref": "b3d3e27d-0386-4c10-b2ca-b71a31760a12",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8e0ed60d-3f0e-48a1-a04e-6112706781bc"
        },
        "item": {
          "id": "485995ea-1b61-48ae-8555-af56b38addde",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "51b34724-bbfb-4503-8485-bdbe86cc5e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725557f2-68be-4cfa-a38c-8f07849cbfec",
        "cursor": {
          "ref": "60c05987-5abd-4c59-ad0f-10e77c2e540d",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cdf55a45-19a2-4ebc-a84d-10e759926815"
        },
        "item": {
          "id": "725557f2-68be-4cfa-a38c-8f07849cbfec",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c5b72119-623a-445d-baf5-f226a32686da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e125da-19ae-4a2e-ba8e-cf4c8a7216f1",
        "cursor": {
          "ref": "bc068966-930f-407d-a320-0d426c68d9ed",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "26df4d9d-a818-4032-b652-8a0ebdad0886"
        },
        "item": {
          "id": "c7e125da-19ae-4a2e-ba8e-cf4c8a7216f1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0e6c909e-34b1-4a53-bad0-ec9e2f1970e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6eb2ff-5c73-44e5-9530-bef1ac2ed4c2",
        "cursor": {
          "ref": "54c093b4-8720-42b3-a08d-fbb449c93050",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d19e3d8-6c77-4cb0-a0d8-cbf0ec457ac3"
        },
        "item": {
          "id": "af6eb2ff-5c73-44e5-9530-bef1ac2ed4c2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7965154d-fad0-4859-a068-931d3a0400c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24926de1-4663-4c78-a1c1-93b22a3e6412",
        "cursor": {
          "ref": "4f39842c-127e-40e5-8398-795f1b124182",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "249b7800-e07e-4007-b332-45e771ef0116"
        },
        "item": {
          "id": "24926de1-4663-4c78-a1c1-93b22a3e6412",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "840c9134-bff1-4b9c-bf3b-c753bb3294bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6758dc-8996-4e82-9ab2-e3bc8dac3eb5",
        "cursor": {
          "ref": "154aa800-3650-49fc-8997-e9cd9b175269",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "401efd34-d604-44c7-96ef-36a00a40df4c"
        },
        "item": {
          "id": "6c6758dc-8996-4e82-9ab2-e3bc8dac3eb5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f862701a-da1d-4f59-82ee-9682262bc41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a4a14-6a0c-4f50-be75-ab68ddd7c535",
        "cursor": {
          "ref": "dfecab3f-2528-489c-96b6-cdeb88a5c09d",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bbb73f1d-3e78-46d4-9a97-471cf72da80c"
        },
        "item": {
          "id": "584a4a14-6a0c-4f50-be75-ab68ddd7c535",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f02df043-9c06-4126-a0e7-e0b71a8ffb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bd7692-a901-40e2-9f7a-f3abb4d5175e",
        "cursor": {
          "ref": "63f13f9c-4710-4a14-a50a-dea6d5b1ed74",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "de0cf922-bb1c-48ff-b19c-f2488e1d149b"
        },
        "item": {
          "id": "b5bd7692-a901-40e2-9f7a-f3abb4d5175e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d1c5b653-acc9-4b6c-8d3a-ebc89677fc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db907223-9bd4-486f-8651-a33375747d3f",
        "cursor": {
          "ref": "c14df908-07d9-49d7-9100-6d755b0c0728",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c4ab2271-26de-4b34-b3ca-b84bab66b807"
        },
        "item": {
          "id": "db907223-9bd4-486f-8651-a33375747d3f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e33f0b81-0cb8-4016-bee7-3fa4bff9df2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b468df3a-dc17-47ed-9f31-ee588d2f7ee4",
        "cursor": {
          "ref": "5333570c-2373-49c7-a279-0d3aceb7b213",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c43ff7fa-12e3-4de5-b6e4-3a4be9351285"
        },
        "item": {
          "id": "b468df3a-dc17-47ed-9f31-ee588d2f7ee4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "62caaa63-e3b2-4f1a-9479-c2bee9eff823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0431a4-b57f-4ece-83c7-f041182e6ae4",
        "cursor": {
          "ref": "1e31e3f1-06ae-4b71-9c74-c7daa0bb8547",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75e3a898-59cb-4e82-9561-1fc90831de86"
        },
        "item": {
          "id": "da0431a4-b57f-4ece-83c7-f041182e6ae4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8006e373-3ef0-470c-b81e-e288d57d68ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c09a0e7-204c-4d14-afce-7b14b961ff90",
        "cursor": {
          "ref": "1eb13b00-5fe3-4c2b-b741-c4757efb20f3",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "28631a03-53ce-4741-9e34-4b06a8a3527d"
        },
        "item": {
          "id": "2c09a0e7-204c-4d14-afce-7b14b961ff90",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9333d740-2b36-4f94-8fd1-dc5483a36b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273c914f-77df-4190-8277-4e671feb61dd",
        "cursor": {
          "ref": "5a635f34-85a3-4197-94a1-95df8434f51a",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a279d76-0ae8-419e-a63d-f2acd5d065bd"
        },
        "item": {
          "id": "273c914f-77df-4190-8277-4e671feb61dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "08e970fc-6640-4e3d-ade4-8114ee3f21f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75667230-07fc-47f7-ac7c-9ccd895802f8",
        "cursor": {
          "ref": "75edf2b1-c694-4d73-b146-0bae7ebbb934",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "03873154-ecde-4c89-b4dc-972b82ba578b"
        },
        "item": {
          "id": "75667230-07fc-47f7-ac7c-9ccd895802f8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6b7f02e5-8a32-42bf-9059-149bf7d90a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3384ac-8310-4089-9efe-b17cd51e6c71",
        "cursor": {
          "ref": "acba3309-0734-4779-87bb-5f80c2618730",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1b55784c-2e36-4546-a3a0-c5f0ddc2c0eb"
        },
        "item": {
          "id": "1e3384ac-8310-4089-9efe-b17cd51e6c71",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "86886e0b-ad21-4344-aab0-7afb68b8714d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3e906b-96c4-489c-9740-c38f686b42e9",
        "cursor": {
          "ref": "f53b1fb1-ba68-46c2-9c1e-e4318ecfe354",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c0c5856f-79f3-456e-af4f-8d2da2de84ad"
        },
        "item": {
          "id": "3e3e906b-96c4-489c-9740-c38f686b42e9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "58c209cd-e469-42f1-ae53-94ff755b6e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6e63c2-9b69-484b-9d8f-a6072380c023",
        "cursor": {
          "ref": "515940a3-8a09-4a86-942e-4f9c1010eed4",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f25c6302-8a46-499f-9352-34e4140bc6ee"
        },
        "item": {
          "id": "ef6e63c2-9b69-484b-9d8f-a6072380c023",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d715f699-94e6-4cc2-bbba-13ae61bfb66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f8add3-71a0-4f12-a906-85b72be9caf4",
        "cursor": {
          "ref": "5f8ab01b-d445-4c20-821e-87b6615c2fb1",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "95284055-a1eb-4c71-83e5-4b0e292eb770"
        },
        "item": {
          "id": "e4f8add3-71a0-4f12-a906-85b72be9caf4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3db236b1-b69c-4a68-89b1-be44cbd17b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b56f60-26ca-4a62-928a-980753c870e5",
        "cursor": {
          "ref": "bf4ce62a-34a7-4683-9e60-c2e5d54eae33",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a9a32027-4637-4f65-8487-4c3b959ea50a"
        },
        "item": {
          "id": "c1b56f60-26ca-4a62-928a-980753c870e5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5716d372-e388-4c29-864e-069407476cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d395c1-78f2-4df3-bcd7-0f7784290a7a",
        "cursor": {
          "ref": "aa2a1d16-bc6d-43bb-ba1b-cb36de8ae4ed",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3e351e7d-858c-41be-b923-7144b089cd77"
        },
        "item": {
          "id": "a6d395c1-78f2-4df3-bcd7-0f7784290a7a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "59641450-6a60-4c79-8d81-3dea3ec5bc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d1de90-78ce-4894-815f-f95908e2056b",
        "cursor": {
          "ref": "c7935086-8793-483c-91bd-c3b29950ab02",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "852db2d2-f8e1-4160-924d-9f5a54be81a9"
        },
        "item": {
          "id": "67d1de90-78ce-4894-815f-f95908e2056b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "19e72aac-da61-429f-a2ca-e90e3331ddbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a494e13-0003-4cdf-8ce7-d8aa2f39edcd",
        "cursor": {
          "ref": "0e20c137-abcb-4162-b626-09857589107b",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6b312f7f-d2f0-4d6a-9c8e-0d88bcf400bb"
        },
        "item": {
          "id": "8a494e13-0003-4cdf-8ce7-d8aa2f39edcd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "77bb451e-ab38-49c8-bbfb-6cc3c57fbaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1957b53c-3caf-497c-a983-9a16c4c62ce6",
        "cursor": {
          "ref": "30f6defc-780c-442b-9c65-1be6a4474ec7",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2f985227-ab57-48d3-be08-25d32102affb"
        },
        "item": {
          "id": "1957b53c-3caf-497c-a983-9a16c4c62ce6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c6055a91-0e8a-4cff-bbc2-dbafa63e1b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124f754-c219-468c-860b-e7b61b485e9d",
        "cursor": {
          "ref": "b05d74df-b40d-4bc1-8b20-c1f0fca81614",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9bd636c2-0fd0-437f-b4b3-deb9a6467dea"
        },
        "item": {
          "id": "b124f754-c219-468c-860b-e7b61b485e9d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dda84289-a9d0-44ee-8987-ea2d478846b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d72ef22-2541-4cea-9f37-7dade02372cc",
        "cursor": {
          "ref": "21e33098-2853-4581-a563-692991b2a27a",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a242595d-bf28-4362-b9bc-45fcbf082803"
        },
        "item": {
          "id": "9d72ef22-2541-4cea-9f37-7dade02372cc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d158a1ed-ad4a-453f-9352-ee94aeb2b5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbb8f8e-3dff-4a32-bbfe-9f96a950c1ae",
        "cursor": {
          "ref": "b421e1ce-57ed-4411-afb6-1c3886c96e79",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2ab85fc8-01d5-4e1c-b2c1-142d182a9758"
        },
        "item": {
          "id": "5cbb8f8e-3dff-4a32-bbfe-9f96a950c1ae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d40be6d5-4b17-469b-87b3-baed8d184808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f167ff12-9cd7-4279-af3e-9985def0aacd",
        "cursor": {
          "ref": "702f3fdd-4658-4789-a216-7686ae6e45fd",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01dbfbfa-92a6-4c38-94a5-fb1b8a4e077a"
        },
        "item": {
          "id": "f167ff12-9cd7-4279-af3e-9985def0aacd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "31dc52cc-dff8-466f-869d-3233e7253651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef78eed4-6f3f-4231-8738-857d9a0fc94e",
        "cursor": {
          "ref": "81248152-71fe-4f4b-b582-ed54a83098c8",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b27c830c-83c9-4c11-af82-49c832fca706"
        },
        "item": {
          "id": "ef78eed4-6f3f-4231-8738-857d9a0fc94e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8190e52f-b9c4-4208-bcb6-86a20214bfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be4aa3d-ed17-4b10-a4c1-25049bfc6719",
        "cursor": {
          "ref": "21dc4c0e-15ca-4b14-9550-2c843341196a",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd775e48-86be-46a4-a4b5-50cc9c2d8ae1"
        },
        "item": {
          "id": "3be4aa3d-ed17-4b10-a4c1-25049bfc6719",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4174a908-0b6a-438a-ae24-851c52309ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6982e243-4b1e-4c1d-af10-25eefd883bf8",
        "cursor": {
          "ref": "0fc725bd-c606-4066-896e-a9eaf0f79f1e",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c2287ec5-bd43-4647-8d67-c6a5a9d0b4ce"
        },
        "item": {
          "id": "6982e243-4b1e-4c1d-af10-25eefd883bf8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bd8aabb4-89f5-4aa1-893e-db75e083f6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeff83c2-5032-4ead-a027-67f168884e77",
        "cursor": {
          "ref": "23ae90a0-eb15-48ae-a416-78a5ac1ed5e8",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b49a66a6-d8d1-4afd-89fa-1a985ce692f3"
        },
        "item": {
          "id": "aeff83c2-5032-4ead-a027-67f168884e77",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c996426a-c024-4eec-986b-bada96a0a6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183da9d8-d92b-4ee5-94e1-b4ddb0a9d689",
        "cursor": {
          "ref": "880ef7fb-b458-4101-bdbf-b2549dd2021a",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c22b805d-a134-49e0-a9b5-1edf125ec1bb"
        },
        "item": {
          "id": "183da9d8-d92b-4ee5-94e1-b4ddb0a9d689",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cb6ee25a-3b0c-4a2c-aec1-5620c1bcb83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85950b66-d2e9-4523-8865-d790f2ee74e9",
        "cursor": {
          "ref": "9167a604-0e84-45ba-92ac-71cd0b768f13",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fa25603b-b1cb-4925-8e3d-0299971b5879"
        },
        "item": {
          "id": "85950b66-d2e9-4523-8865-d790f2ee74e9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c4f18ccc-70a2-456e-bce4-194c71910744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534fa37-c3c9-4199-bd29-e7d7b6a9428f",
        "cursor": {
          "ref": "38e0e536-948d-4db6-a902-597ad4798df6",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2752db55-5a52-408a-8fca-b9555b60f784"
        },
        "item": {
          "id": "0534fa37-c3c9-4199-bd29-e7d7b6a9428f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "85bbad35-883b-451f-ad8f-268de09ab635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cda9af9-fd8e-4455-bdef-3a81bb72d2c0",
        "cursor": {
          "ref": "4830ce82-3e0e-443a-8ea6-0c5c6121a0bc",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "09d3652d-41a6-44c4-b187-c193766b5d98"
        },
        "item": {
          "id": "5cda9af9-fd8e-4455-bdef-3a81bb72d2c0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6d7ba4a7-06b9-4865-899a-dbf6021d113a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec88db34-e895-47df-aa65-ca19e6a1347b",
        "cursor": {
          "ref": "64317ffa-976f-4c7f-89f7-3d816b70517e",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0ddff721-4a13-4ca9-9dbe-051411048f18"
        },
        "item": {
          "id": "ec88db34-e895-47df-aa65-ca19e6a1347b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d62786d6-e5ec-47ed-9aec-d7501e65dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba75533-a28c-44c9-aa79-86c7708e2414",
        "cursor": {
          "ref": "ea3597f5-5c64-4558-8ce1-80a6c42fbfc8",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a060cfad-c706-40fe-aed9-fb413c6a075e"
        },
        "item": {
          "id": "0ba75533-a28c-44c9-aa79-86c7708e2414",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0200703e-a342-4175-b0e3-ec12651ce1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e82b8d3-1fab-42cc-92c4-fdd949cc2319",
        "cursor": {
          "ref": "1e5f0ec7-96a8-4d01-9adf-332b0685c18f",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab5963b3-2f6f-42f4-a5f2-1be5eb18954a"
        },
        "item": {
          "id": "0e82b8d3-1fab-42cc-92c4-fdd949cc2319",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "da2336aa-dbe7-41a6-b514-c9bfb60dbfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dec086f-01ac-47c1-9853-7a33ba287256",
        "cursor": {
          "ref": "2e1b3b85-da9f-40ba-8c5a-42a0f0c8c110",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc0a547b-0eca-4590-b441-ec48271598d7"
        },
        "item": {
          "id": "5dec086f-01ac-47c1-9853-7a33ba287256",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b91fbf69-d971-48d3-8ddc-ec7072eadb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e1331-ab4b-44dc-87d7-b6b0c5942418",
        "cursor": {
          "ref": "b7fa8916-6e01-4cf4-8ceb-2e3cc95f6456",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5afaefc3-1d3d-4e75-9e88-42caf6869c91"
        },
        "item": {
          "id": "0c7e1331-ab4b-44dc-87d7-b6b0c5942418",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1ab0c3be-7e3b-46f3-aeb1-a781fc725f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0013b1-32da-4409-90c8-f8cc49304f8b",
        "cursor": {
          "ref": "85ccf342-842f-43f2-9e78-b2aa743388ea",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "50116cff-36c6-4486-b7e2-8e858929fca7"
        },
        "item": {
          "id": "4a0013b1-32da-4409-90c8-f8cc49304f8b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9cea9acf-b143-4b5d-ad25-b6da56a9e668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5341c2-bd37-4e72-aa3d-fe9a4a3161ec",
        "cursor": {
          "ref": "5a2546ce-ab33-4958-ba6b-21a5fe24fbb3",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "33a0ab51-cf8d-4e64-8fa7-80c5eac38d7d"
        },
        "item": {
          "id": "cc5341c2-bd37-4e72-aa3d-fe9a4a3161ec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aad5517c-61f7-4e68-aca0-483d2f703238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19319b82-492a-4311-94b1-3c74a395c274",
        "cursor": {
          "ref": "6e0d81e7-f866-428f-ad17-a4d3599c6d1a",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d3c284ee-51c4-4dcf-bd52-6efb7c910c72"
        },
        "item": {
          "id": "19319b82-492a-4311-94b1-3c74a395c274",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "61d11419-c4e5-409f-b034-150534bef58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b98cf54-d865-4d68-a700-28004741d011",
        "cursor": {
          "ref": "c1accecc-069e-4a3d-8540-fdf3ed1fe2ff",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "004e6ad0-59fd-4c87-9271-78da888a44ae"
        },
        "item": {
          "id": "7b98cf54-d865-4d68-a700-28004741d011",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4b3e87a3-3e7c-47df-85fd-94e5b6bdadde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6e8032-c72f-4d33-8fcc-077d00e21157",
        "cursor": {
          "ref": "16e396ee-f7d6-4f08-82ec-56699f077e1d",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1fb7a0b4-cc1f-4315-8f94-3fe7a38fb8bb"
        },
        "item": {
          "id": "0a6e8032-c72f-4d33-8fcc-077d00e21157",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7f37e5f7-fea8-4c58-be82-f8dbe901016f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 337,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffae2bb-ff96-4550-aff9-7391dd6c2ff3",
        "cursor": {
          "ref": "0be04940-b5e7-4b77-90a7-eb95a0c2fb39",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "82d0ef1b-c964-4b74-a2aa-54785cf784e2"
        },
        "item": {
          "id": "3ffae2bb-ff96-4550-aff9-7391dd6c2ff3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d846a565-4719-487b-8fca-bdc37ea478c6",
          "status": "OK",
          "code": 200,
          "responseTime": 448,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "329c1882-d245-4ce6-b604-15384aebe2ca",
        "cursor": {
          "ref": "318154de-10e1-43a6-985e-f6a862b9e66a",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "753ea164-aad1-4ab2-88be-0d055168271e"
        },
        "item": {
          "id": "329c1882-d245-4ce6-b604-15384aebe2ca",
          "name": "credentials_verify"
        },
        "response": {
          "id": "563cb713-d182-4b8c-aaa9-ca3211c91481",
          "status": "OK",
          "code": 200,
          "responseTime": 1841,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5184cad-2e9a-45f2-99ca-e318229f365c",
        "cursor": {
          "ref": "d581a834-9688-4214-8b14-e72da5edbf3b",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b48a1596-7579-4942-ae5d-b34d699d8fec"
        },
        "item": {
          "id": "c5184cad-2e9a-45f2-99ca-e318229f365c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "66e18dd3-8907-4069-b60f-d7eff4d80dfd",
          "status": "OK",
          "code": 200,
          "responseTime": 2031,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
        "cursor": {
          "ref": "60849d15-c4c1-41af-8dc3-b118178c4a64",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6052f55d-0189-4b2f-9a69-95559ac0e40a"
        },
        "item": {
          "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2500abf9-84a9-4a59-ba81-7a738d7567ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
        "cursor": {
          "ref": "60849d15-c4c1-41af-8dc3-b118178c4a64",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6052f55d-0189-4b2f-9a69-95559ac0e40a"
        },
        "item": {
          "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2500abf9-84a9-4a59-ba81-7a738d7567ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
        "cursor": {
          "ref": "60849d15-c4c1-41af-8dc3-b118178c4a64",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6052f55d-0189-4b2f-9a69-95559ac0e40a"
        },
        "item": {
          "id": "500caacc-df98-4b8e-8c4b-82e63c94dbf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2500abf9-84a9-4a59-ba81-7a738d7567ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983e9a7c-0805-4359-90c8-5794bfd99088",
        "cursor": {
          "ref": "c289debe-3c12-4d48-9659-af0eaabed734",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d81b7212-d418-4895-917d-98f56b537930"
        },
        "item": {
          "id": "983e9a7c-0805-4359-90c8-5794bfd99088",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "60adb140-e0ee-40af-aee5-5ac295e5d478",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 335,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba15473-9305-4581-ab95-b1f2366a9f4e",
        "cursor": {
          "ref": "ffd89dbc-5bf7-464f-a09a-f8931cced4d4",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c36ea34c-289f-486b-98ea-7613cf6111ce"
        },
        "item": {
          "id": "6ba15473-9305-4581-ab95-b1f2366a9f4e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "59d0b0db-f03a-470d-a570-a8a904c7de86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba15473-9305-4581-ab95-b1f2366a9f4e",
        "cursor": {
          "ref": "ffd89dbc-5bf7-464f-a09a-f8931cced4d4",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c36ea34c-289f-486b-98ea-7613cf6111ce"
        },
        "item": {
          "id": "6ba15473-9305-4581-ab95-b1f2366a9f4e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "59d0b0db-f03a-470d-a570-a8a904c7de86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5217105a-9706-4dba-82b2-c2aa604c4000",
        "cursor": {
          "ref": "aa83d25f-2979-472c-bf2a-8cd92b41c77c",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "81c22626-69b4-410c-85f4-e97cb65a04e1"
        },
        "item": {
          "id": "5217105a-9706-4dba-82b2-c2aa604c4000",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "df03ae61-9057-43ad-839b-f754c1b20283",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3583483-ec5d-4ca6-8219-0b6a922a2592",
        "cursor": {
          "ref": "a0a0da0d-0301-40f2-80ef-5e38d89a5c4e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "19885cb1-1d96-4c0f-923a-cbb44eaa3e95"
        },
        "item": {
          "id": "f3583483-ec5d-4ca6-8219-0b6a922a2592",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b904b163-5ecf-4f03-868b-ed2cdc55b6a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3583483-ec5d-4ca6-8219-0b6a922a2592",
        "cursor": {
          "ref": "a0a0da0d-0301-40f2-80ef-5e38d89a5c4e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "19885cb1-1d96-4c0f-923a-cbb44eaa3e95"
        },
        "item": {
          "id": "f3583483-ec5d-4ca6-8219-0b6a922a2592",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b904b163-5ecf-4f03-868b-ed2cdc55b6a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ce5426-b5ec-4d7f-92a1-ba64dc2b2e0a",
        "cursor": {
          "ref": "e394eb06-65f4-4338-8eef-0a34020ee17e",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6d373c02-78d8-4992-9f48-b495bff6484e"
        },
        "item": {
          "id": "b0ce5426-b5ec-4d7f-92a1-ba64dc2b2e0a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9f1cfec8-53e5-4d00-bc28-1f6c9abf5599",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}