{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b2c8ec1-aab8-41d4-bbc6-2f20bd390493",
        "name": "Clear Cache",
        "item": [
          {
            "id": "da54bc95-3f33-4c70-8d93-0366e3622f3b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79d7bedc-f685-4e49-86d8-131f50706081",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cd35fdd-17b0-4c9c-96ab-d3025e53ee28"
                }
              }
            ]
          },
          {
            "id": "52264c52-ea73-45a2-bb4c-ed86051ff294",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbc64639-35f7-4e5c-b491-3b4b5955fd03",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d70e3d47-9815-411d-94b5-a6b7d818fb42"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "548b8c48-a494-4782-8257-9b5bec4fede1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b5b9f378-06b5-46d0-a2fc-8b39f015ad23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f5b429c-6a54-4aab-89e9-dcaaee0b1a76",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "163f559f-3ad1-47ec-8dc0-cfea68b808b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1ee6f66-fdce-4f97-a18d-949bdc0578d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85418de9-f3fc-4d3b-98fb-020a30cdb00b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62acc177-88cf-4ade-b021-e3af4b1bf244"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4dd40ded-9aa9-4ca0-935b-1a703a25ec6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f0ff71b-a25e-4e1a-b3da-bddd0eeb2549"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b81a17c2-b913-419c-b459-f2b7615d4e62",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "87ba2477-03ab-41bf-bae3-ec340e0940d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "915b4113-2930-4b29-a6d9-65fce2462099",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e220489-bad2-4b79-abb0-588613f47879"
            }
          }
        ]
      },
      {
        "id": "64929799-b4c9-4320-9129-50ace24fa2fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "51dc9a14-0218-4512-9532-9772c9301c52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a255eec6-1425-4787-8d90-82fa6091e521",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "747cb55e-5dc2-4880-9c4a-53bf095ef81c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9f34cd-0f63-4cb9-972f-2918c4900a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edc54a11-0dfa-4b2b-b3d7-f63723c2ee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe946ac-c8f9-4653-b1b0-e9057c180278",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fefde2e-4032-415d-9852-399d78b33e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e1c507b-0f3a-404d-bb57-50c95f597715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f007bc-9fd4-4678-a8cc-2ae7bd23b1de",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2927db12-82ef-4c39-b057-3a6e81d5aab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc9a0490-40d0-4887-86cc-0f955159e4fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf4746a5-7a94-4a51-84b7-bcff906ac65c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a30c9d1-2800-4407-a7b3-44956741dc4d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c95a8fa-7b81-4802-a925-4648587fa885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc1f0f14-9afe-4e15-af54-f83f6389a2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e053f1-977b-49ea-9bf5-df450aa22b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d581f015-3a84-4bf3-a3e0-41cde34079f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e7031-b849-44bb-912a-027997bd6bd8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a50afce-c831-4423-bb05-5cfa8c218518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e410dcb5-8d49-463d-8f7f-b8c0ed9a0d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d8dedc-7ad0-4ffd-8849-13481948bd12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "77ba9f47-1450-4891-b20b-9ffa54d1e899"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fe96b4c9-f72e-4e62-8cca-cf23f2edd39b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41fe61ff-5d00-4694-9fc6-abeda8917010",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "802bc0de-e38a-4eb0-8267-adf67e2eb144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0bc94cab-c967-48a4-885e-d9aad2b93f6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62ad60e-2594-4a8e-8624-ea2e7366ce63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6c68cba9-1bcb-4eae-9ca2-85beab0119a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddca7505-92e0-47e7-9ca8-5d456ad3b1dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7158dc8d-1321-435e-a8ff-4871d6f32f61"
            }
          }
        ]
      },
      {
        "id": "fd589996-1acb-459f-abea-a8f8d47ae7f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a4213a65-1710-4dfe-baf6-394474bca4aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14c287ed-7df4-47ac-a5fd-e58f63e5c1ae",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "443e3bb9-bcbb-4870-a558-efafe373da28",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cd0f7a-3da9-4a1a-8a10-c9dca97c5bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9476ec-e7e9-4c99-96cf-22a94a5235f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb3b29-8482-43e7-bbcc-e752525a7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af080f8-a49f-441e-ab99-4bebd6511a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfb0907-e740-4634-bb3d-92ac831a4210",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36785622-b7c3-47fc-b89f-944d665b2ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d659346-0157-456e-8555-183128db7c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47441b05-82f0-42e6-b86d-2d2a0311f14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eede6e5-4fe2-4f69-9fac-476951160488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4f1d0d-0942-4ced-8455-a39f085e7c34",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e3b143-0d25-40db-84bc-c7d1cfa5a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77fb8e5-9a95-4253-af23-a89294c239fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76404396-a7e1-40e1-91bd-43678d3d6b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b4b2a09-7c67-4981-9f71-db000519f08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e245e-fb44-4e37-bf6d-ffe620e7eff2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de1e159-2ebb-451c-aae3-c7e27301daee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324290e8-8119-4b05-b710-96756700b3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9d84e2-0671-4379-b85e-991fbfccaabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1748157-65c4-4f37-bbfa-dffb8702515e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44198ba-51c2-4c11-9716-8fa448e5c342",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d5ef30-5acb-481e-9daf-5e69f06ff21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90aa68f-4363-4a38-b943-d9bc07f40b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec975530-6a00-4836-8ac1-5ab2a2c7318b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a0c8187-7b4b-4ff2-9dfb-c89e838bd481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ae2a6d-34e2-4c43-af46-8f4860ff6569",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a782e675-e28b-42c2-a60a-d3703941b091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d31f1e0-0f17-4b44-9b41-aec937172399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa99bd0-2328-48b5-8e00-1fa2899ab825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e438fd48-3429-4a9c-8f9d-4cd49710c41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee298f24-2bc8-44f9-88cd-3e685aafeb0e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbde84c-84dc-4af4-98d6-96ce2e3a6ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9788fdf0-dd81-425c-b8f3-f660419c0de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f41b26-023d-43cf-9360-81af2df6c41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6afc5fe4-8641-4523-ab56-a3f926960d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf8482f-6869-4118-9376-dd11e85402cf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce54fd3-b4fc-4977-b4d0-43e24e1ff349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fed7a3-fc7b-41a1-bb76-a1f8a4af7eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b4341b-4440-4f35-830b-dd4bd668812a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "763c3277-e8d3-4922-97f2-cc142152e90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9d57e-6d5c-4782-91f1-98daf5e2288c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c4c364-21f2-4edc-ac89-b175eae0a887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95c7145-593d-4502-bc32-bed015f0c95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017076f0-09ed-4ede-9912-274f279ede3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55d2acdf-50c6-4403-889e-39ccf4e6d52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c18e64b-0494-428d-9fe5-b51fd1d14292",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ea8b63-2c5b-4f01-ad81-981eb1772971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e942140f-a8ac-4b9c-8eb9-9646faf76626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842ddbfc-2e25-47f9-ad33-9f91011a7f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09056ca8-2501-41c8-8d92-7e60b800ccc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d2712c-e8cc-4ccf-991b-1703dc57f6f7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26b1856-ee3b-4adb-9386-a1fb0d79e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d285731-450f-414a-8577-c04c509ca6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d277a71d-5891-43ab-994c-b2ee10b36099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b7b9157-3494-42a4-9f6e-7f132e96b53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cf593d-be9a-49b7-ac91-4539241b6963",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde4e04c-f4bc-417c-8ad2-0d6c8e7abda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a851afb-4c90-4f03-bede-df3d1521d4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04c2eb4-b199-4389-8cd8-e93a43f68d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa8c0b06-0973-4286-ac15-a659671da5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae92d41-1aa0-49a2-b4bc-c404c8a6432b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308197a1-7e1c-46b9-89d0-9b73d9eaba3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce646cb-beff-451a-abe9-14f6a28a9681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674b6ced-89ac-41d4-ac5a-f144be1ad9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f779d72d-b1bd-4e90-9d8c-eb98dab80012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459e4de6-1432-43a5-afb6-e586a642e9ce",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5817364f-3630-4543-b02c-26761e021bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276f0c1d-2fd5-47b4-80fa-69b85b16d657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dcb722-6ec4-465e-9d61-8d4890bb53cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d6bee4-b52c-458d-b5ce-163831544a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542a81e5-2ee8-4f07-ab02-69233db40958",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08089806-185b-433f-a5cb-6c57ed1d6e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058e580a-3a6e-4b1e-8455-9364cff822a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98d93ab-d53d-4a17-95f4-9b55b2d50278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c76f7ef-82b2-411e-9d2e-0f9d8e7cd961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95477bc-aa53-4188-8a71-1a7d2970b008",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56716fce-0cd4-4bec-b4a1-758f1728b01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698be18f-4847-4f55-ba6d-b4fc7e575f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3443bd0-e241-40a3-b090-f89e68725a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adf0a0be-dc23-4586-be27-d0f2d5b9238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b534f6f-00b4-4d00-ad32-2c27a2c5c0a3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfbf054-cb9d-43cb-bed8-158bb3493c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d99143e-747e-4ae6-9da2-2d9b1c6d8e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36045092-c09d-4258-940b-068d683e7413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd98507d-b4a5-4a65-9097-b5d8164e7b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e557c7-5244-483f-80fe-4fc5ca235824",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ece74-d59b-40e7-abfa-6398d4a3f276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e3968f-602c-473e-9bd4-dfad0d1c544a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c63db6-085a-43cf-9090-c04d0dd07378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1651e02-c417-4b2a-bbc8-73be141a4d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0b1fd7-d619-4784-8061-9b2169913164",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ab81be-e936-444c-99a3-4f8fd8c0b848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0d1025-f489-4fcc-99ad-1dad3c8ce296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50a4edf-6863-4f2f-9276-47b28ee0acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36d2b338-1340-4a50-bb7b-c3c42142e11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e3c760-c9dc-4fff-bd2f-895162ce6bcf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bee6742-f289-4645-b545-86015a5fe9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f1ffc5-fabc-4591-b1d0-47c8ddfa3488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f538d84a-a72b-4bde-8562-c65e653ae935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9304dea6-9231-49fd-9a4d-12530207525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42574ce-82ae-488c-8143-29a2e35f6787",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be76c29-00de-48ea-bc0e-e971c0fd6e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09df34e-52e9-474a-b278-c2ffdeb54954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ebdad-4abe-4c73-8439-6025ec61db8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9b89cf-02c4-4c66-9a8c-69d875a514c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304bf901-9151-4401-89c2-ab5e058f669a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aafe4e-daf7-4a73-9a94-9fe99035fc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5615522a-0954-441a-b214-ae64ea334d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cd663b-36f9-4080-bf64-66191aa41234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3473820-1a68-4eef-9bff-d6ace7477138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c24ec8b-69f8-4fe1-9ee9-c8176d12d3ca",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e030b8a-8536-4dcc-b753-7006748358f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55a14a0-0692-47ba-8dde-70a56abd44b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2318fa1c-9f74-47af-9e00-2e1c5b77baca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ee6043-90f5-48c1-a74d-2aa96a09b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690b654-718a-4f38-9bbd-7053f387f249",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967b86f0-e926-4437-a4f1-eddd646903d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e05880-25a2-4848-9fe5-c3538b2c9c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ed87db-067e-4500-9070-9ee524a47aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "274426b3-c7d7-468e-926c-c76470eefcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b823818-32b1-413d-8183-41d1e2f10bb4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d2e041-4076-453d-a426-0703e4a01e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053b44cc-7477-4f33-b393-cb0d667a992e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536488fb-9e62-486e-915b-28b45ea27790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc770713-9447-4d4d-96d7-cd58d41f08f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf5d4a-bf8a-4ef4-9c1b-04d53720cb94",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b63b3a-6b44-4e62-bf45-0c9f78940d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc68c87c-57d3-4292-840a-1aad1738033b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cbc47e-2131-476c-a2d6-dfc8afe6e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b6e77e-bee5-4c65-acca-86f2f540cfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85edd13-db02-4d7f-bf0f-b08dc53e2f48",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b99b3c-ab48-4a90-ad6e-51a7964f4d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2222bc7f-8737-4dd8-a9d6-55a8b8bb3d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39186af-f092-4c01-b55d-2656b77751d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ec4cd4-229b-4462-94f9-6eefb05df64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceb6f5d-753f-4aa9-bad7-1c8658a160cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d53039-f817-4e6e-8faf-1d5b3bbef3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22657e3c-0d04-4629-ae06-5112b7b9da96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d8b509-c4ac-48ee-8b88-bceeb7e1e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2885c09c-e03b-4858-81e1-14ef5698b1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1e30d0-bee4-4d45-b64c-f49407bd1538",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9b32cc-a72c-4099-ac4a-6f33a51d065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14ce191-25bd-4711-adb6-cc1dc189c194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e0c0ba-269e-4484-a7fa-3cc6a97053d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10dce42d-3da5-492d-901a-14f45399f912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2094a3a-3a24-4e35-8a4a-76de4acf526a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89724693-21b5-4eb3-b63b-3518ded4bf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d03389-4feb-4772-b435-c44772d54072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f59a25-b885-435b-b7fe-a93748baa47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d391d31-f795-469e-a3a9-36899e29f374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6b0ed0-0683-4000-a9c3-4dd775a1cfee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab3295b-29a9-4777-99d0-55a723c9883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58d6042-efd1-4046-87cc-a400ed1072c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30030546-c7fa-480c-8c74-eff1853fe890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d041deb-7744-4fbd-b1cf-ebe12b1d8115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a853d929-0d38-4740-88e0-9800e176d888",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c36d46-7dd1-4383-bcc4-d404f52aedcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43feb795-7df8-4ec1-b824-4bde256ce033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955448d7-8d9a-45f1-aa8f-8c6819c8cdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "17425150-1685-4440-973a-f2ca5846eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb53085e-4bc7-42d4-a9b7-889afbffb990",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d342268-4e66-44ac-88fd-2947d57792b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd778602-d92b-4778-be7c-8d556acef906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d23b97c-7544-405e-8aee-44cb5abec81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1309967a-d99b-401f-84f6-2df400457865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c3512f-9749-4e5b-8daf-d810f346cf6a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5db641-c2f8-4a32-8a9a-2eb35b36efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9911c3b-6c8c-4644-8ae4-b41104296516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31959bc-a465-48e9-b040-89a2e72a7156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d06f10d-6c91-4f6f-b160-823dd85e146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c92ebc-b623-4d62-b6ec-4aa5b83758ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c20d0c-47d7-43e9-9051-8b948ae9513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eaa299-f410-4a56-8681-ad6c76221c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e233630-25c5-4706-8dcd-78f83247d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23197291-9b98-48a4-9e3a-f11277ddc4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86240e82-3f6e-4540-ab91-39c5bad2b5fa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb31209-95e3-47d6-92f3-96cdb1d9b381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7322823-5b1d-4c55-b668-0a5f46b38af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f092619-0c10-4b24-8207-23569eea264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d932a0b-40c0-4070-98a8-bab35e74880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315b82ca-11b8-491f-bc4f-5919d91cb518",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a2e6b1-292a-43d2-91bf-d3eeb1799aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eead3d-1cf3-4a36-8bb1-22bf92acbc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe255631-493f-4232-8231-9326ba9d1123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d6c98-83c7-4321-a1fd-9211506ce775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cace6b4-b549-4f2e-99fc-05abbdbf1fdc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38874683-510d-4559-941c-6be33ce12275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d18e20a-15a6-4cb3-a516-380e2eff4c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e03571d-cc7a-4843-b5ac-8a8e5b05fdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d497973-316d-41f7-ac24-6acc9c13b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a699051b-bcd9-40f1-b6c9-65524d02fb2b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdad4803-62bb-4386-89aa-07aabe888d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c65dd00-7ffe-43a1-bb07-b77aa7235073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99301e55-deba-4f4c-a657-c53f967d8f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be0cbc26-3025-46d2-a283-ac3acc495b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78fcbd2-c79b-4637-9d4c-bf0e38c41bbe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78222546-35ce-45ed-8dfa-4b361b89c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b3ab06-28c2-4878-9daa-edfa840cc45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdf2bb9-3cdd-4d01-bc14-b241d19ee1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08c66281-e572-4ad2-ad51-c92387eb2a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b58a45c-eecb-48ec-9870-92dd50ec97e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adeb33d-9019-49c7-8a2b-2fc76d8a1902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf185f7-0ccf-4250-a6d0-6b76052ddcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad55d1-c097-4422-8c38-126703becfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bcd01b-7925-486f-a6e1-12268ceb6a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37da0eaf-f87e-4844-b9b9-3fddc033c351",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef93664-02bd-4f73-9fdf-db9c172f9358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffae3467-a26b-4ceb-865f-c157f9315e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1836aacd-2149-49cf-a4a7-61f75c39e4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da7a5f7-f043-4edc-abeb-b7d4c2b4a3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa48bee-2de5-46f5-b72c-2f7b298187e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d312e2-a2a7-4750-b9a3-1b818db25880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fc3013-fe95-4e11-b751-76f261fa0238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d858156e-44ea-46b8-b404-6ec4a41c1bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01dda531-c921-4c33-91c4-ed688f9237b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93eabff-b01a-46e9-ab9e-ef5d1b6f172e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff1a7c5-58e1-48eb-8a2a-4325aa4eba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c151d562-5415-4e5a-a368-2ee69ada94c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe87beff-2fc1-4493-acb2-741cef9a23c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e116e83c-4704-409b-a673-bb07fcfe2016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7e87f7-ce55-41cd-a2e3-a63d6ffe737d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60508de-0903-4436-ba83-1d2114b45884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9f208b-82b9-412a-93ab-c27acaca0ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4109f2fa-fe68-4a50-a0e2-700bc8e2d60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a79a73f-cbb0-4aa9-bb29-bb0263f75365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bd7402-ca06-463b-a943-56bb18fc6275",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df3afa8-e63c-46a8-b85b-62e18714314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64639b89-24d0-4bc4-8a86-02a00c7558f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54329fdb-8d5b-431e-82cb-03b55880949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb140e2-1c0c-4a7e-8466-752fcc4ad1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fd3d24-307e-42fd-9e94-74ad76c33284",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee233fa9-4dee-4a8c-9892-b2e5dd6fed1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebffc43d-dcf8-4bfb-a1eb-fc1ad03f5210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67778ba1-3596-4549-8b4c-fba065f90876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc9e0c3-70a6-4b8c-92cb-8cb0340fa2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c0d183-cfd6-43e4-a45a-b31072de0b73",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478972d2-064b-4810-8d5c-492911098f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721622ea-6c01-4569-aca4-d5cfb636eb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1dac1d-7346-447f-8cec-2316a16c5862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c00c988-8440-4296-9aa4-211fec1c907b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e542a83a-00ac-45ff-a65b-a6d689245286",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a3f3ae-db63-448f-b467-8de0f6866125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f3968a-166d-4420-bff9-c1e5c9a0b719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d558d727-cf14-41bd-843c-2ce4215d2d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1aa441f-afd2-43f1-818c-83a4cde066e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e9e817-2590-4fe0-96cb-59a0e6757082",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf69977-f61a-42a7-906b-0d6bcf61d5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07971350-3425-48ff-aed0-ae1c8946f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5f867c-5594-4983-b725-0793293343c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "882741ff-551e-4b1a-a7a7-80dd0a516a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120be7ae-05bc-436d-abb1-bf922fd0ba4c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe76ef7-71b5-4ad7-ba7c-c1667e92db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377a67bf-b0f8-41b6-ab32-fdc4f5195172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b8077b-22e5-4778-aa33-a4ac740534fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c902c2-7bfc-4954-adf8-104c5166b1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72e94e9-002e-4445-80a3-dfcd24e1d5ae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6a62e5-8275-4af3-9096-9fb4cf0e139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29fb0b5-a344-4615-ac88-ede176ac2f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107898ec-5ab2-49f7-a452-2b644c1679ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84c38a51-298b-4cf0-8c87-b588ce6d35f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5e1eb0-e7d1-46f8-aae5-ceef0d09e916",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3329e1cc-34e3-47ab-b7c3-8242b566c609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d90b28-c4cc-49a2-9604-b675172d3e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826e6235-3465-4c84-9203-e9a830ba460f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8828e628-7c50-472f-ab42-e32a8744101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2d8de6-5c93-44a5-8ec2-7f7b1905a6c9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e653bfb7-01dc-4d94-9bf4-d5510f93386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621f31e4-ca29-45df-9522-97f60b3c50b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d25ead-cedf-4efa-b640-e6b80210023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd0cc0a-4adb-422c-a0f3-61c9bc06bd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ed3e23-47a7-4d04-a980-cd9893e53408",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c660ba8-44e4-402f-bc32-022f24860367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eb9db3-9979-42c7-89df-3609b2794695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d41806-9be0-4ebc-80fa-c0232f3c36e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "582b7605-6f65-49e9-8963-76f8d7dc39ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4381bf1a-b86e-4935-a3e2-978073b19745",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57fae11-3b92-4585-b0b0-fecb53038b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff84f57-6d7f-4dd3-a52c-71f27f86dd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bba18d-7bc2-48d2-a3b8-951e594e5a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89516cb6-9afa-4ae4-9e0b-4abf23367bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251dd16e-65f2-48fd-82a3-b143fbef82b6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0ed26c-7d0a-4180-9b64-ef7e63e4de35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9cc01c-9595-4ad0-a8e8-c47d5c0554d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8a533b-b1e4-4ff9-ae75-bb4fb4468b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a01d33-6a98-48ea-b10d-295a21039db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476a4312-771a-4dc9-9b34-aff6c4f227f1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e103e7-8925-49ac-895c-031de635e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea640591-174e-47e7-bad1-36d39bbcb880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e9f578-b333-4923-b930-31ebd7a5e3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "134ea8dd-f2a4-43fb-ae0c-c34ae483bcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1138fea2-190a-4405-9257-52a4fdd2df4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb22ad04-7ab3-4a2e-a6ee-51635cef110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2e39db-b3d1-4615-b068-1f80fdce8aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa483947-6dd4-41e9-b18c-352d76a64765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "039a60f7-6896-4eec-a4ec-58a40a5d227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af0840a-95bf-48e4-9541-71ed0710a2e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d0362b-f126-41cf-949e-165c86579890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5f76a7-cc78-4897-9aac-f4c8ac8b4376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c034a3d-1a9b-415f-aa5d-c99299c80370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9ab9e4-3747-4b2b-bb85-9e5c6a1f4992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e78b11-911a-433f-a355-e9d68a55684b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dc3f8f-2547-4340-97a2-5cfc58628582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e139f18-09e1-4f6e-9dea-c1ad18bda0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2730a9c-c105-4028-9232-a4ccc45475af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f6676-2870-454e-8778-d5e9aa546a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dd8aac-2d57-4b3a-90ea-4893fb860625",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49562491-2f6d-4ceb-af00-7d173f405f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9392ce9-1b13-4c29-89e2-293e06efc053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de9c754-6cb5-42af-8326-f31d0342093a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d95d1384-fd65-4b72-a09e-b4a672b0b0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef2dfb3-6ecb-4369-86b0-f967827e2acf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff33990-dcde-4f92-beee-d5dd7814a706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f981fe16-27c3-4966-b735-deeb7fb81dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0997e7-ce6f-4feb-a199-fb24e1d71d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef1b230-12f6-4e5d-9e59-d6f389412555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ed545f-ec18-4261-bac9-124a6024ffb7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a7287b-88b6-42b2-9006-3162f746180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7adbb0-78a3-4c96-8d7a-4b15b03ffe03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd302297-8a0c-40c6-afe3-c952ec8bc7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fb99d6-f271-418a-a54d-5f90fec69ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feada5e5-6555-49ce-ac64-15b493003332",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe734c8a-b1ad-4e72-8f6a-4c46a2218ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc17909d-ae71-4803-bfa0-4a0d0e527033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526cbfca-8e93-454f-b98a-3dc2cf247f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df713651-043f-4a89-ae58-376c89828a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23014647-deb3-4199-81db-64f1d0f6ee6a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d5978-5a2f-4e6e-a7f1-8c76c628b829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94738491-bd54-43ca-861f-1102de38baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5246f23-a054-4cb7-9390-6c18cb167d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8873938-52fc-44fc-a716-9ae88a4b41e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487e5f2b-1f5e-4cd4-916c-a503462249a4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe6c72-590c-45af-b1a0-d0ffa2dd991d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9d580a-2a4e-4776-8114-9d861d573549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9472ec5b-8ef2-44bb-a5f4-1e251632b820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6018f714-088d-4349-a8ea-ed6c997ea309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed34d3-11f8-411d-94fd-6589e6b29a88",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7d3755-a123-4ca6-9909-1015d60f327e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ecfdda-9b15-4081-90e1-08c7d4641e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c7ef22-7cf8-4541-8dc1-ccced346a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "936b840d-9ac4-4430-a6fe-a0ac2973a975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc61f8c-fa87-41fa-8553-d30a5da3db34",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a535732-ee33-47d0-873d-73bcea6ca9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff005b5-5443-48a7-8940-1e144495a9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d72e071-c244-437c-956d-4fa95c8c484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "667de360-fbc8-481c-89ce-7de438cbdc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8621d3a9-b2b0-4d49-9e40-1fed78878398",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ead2679-6310-4611-ad09-6e5d2d7ddff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1131d1-2674-4fe4-9c52-aef962d82ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c736fb16-0dc5-4e50-9a4a-13d15e56554b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9064262f-b0ee-4b50-90c2-8ec57f90e41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb4e722-05d2-4d65-a168-2b8ee7b41a4e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b42b49-2339-4f4e-bc06-a92bdd31fd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37943069-69d9-4fac-8b57-6f4187f50b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b52a022-808a-4a69-8b83-75deb7b2e909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af83aa0-4438-4187-84b1-4ca1b1111484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee510ed-6cb3-4b24-89d3-91c2d8527653",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9614d75-999c-4ad3-9c3d-325ae76a972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be01044-e51e-4282-8a32-ce2028b61d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df91dcea-0ae3-4984-88c6-c3afd9e1f118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6bec1f-a0c2-4ca1-b440-3d4aaee11eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd80471-c806-4517-ad86-86fbf56feebc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa4b5c0-3c4d-4f38-967a-7875c7a679ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c072182b-3941-4813-bc86-5ec14db05305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3c68b1-20a4-4070-bdd0-286d7cc04c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "956f1c96-4105-4a34-9830-d4561c15d043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c435895-8605-4f35-94f5-2f7c8dfe814c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9966e9-2b7b-4eee-9487-c1dd38189d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a140230f-a3ab-49e2-bb2e-e51855bf3e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25c3b8f-bb4a-4aae-841c-c1d7b8245e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae135d59-d4a9-403f-995d-592b8c3d9bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284d7396-b4a8-4b40-ac24-be5dd127c5bc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f197c0f3-0382-4c29-92bc-ca1501059880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b9bff3-036b-4f8b-adfe-daa18fd82efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524064ba-71bb-460f-8ccb-6906fd5f129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4523ec5-bb18-41a5-a178-9a3098806990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4257e5b6-d900-4c8e-bc40-5f3bf2f601c2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48350aa0-7fe8-4114-abd2-4325ff3282c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ffe1e1-6e01-4379-a770-eaf1177e406b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f160404c-9fa1-4574-a322-4459b4283835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87ff6255-c24b-4088-aa5d-c06947e5f917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f21ceb-61f4-459f-b9be-b83d583acfc7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ff300f-03ed-4dc4-82d3-5376610d9c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6d3374-4b23-4a16-846c-9ddd7cfbfad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a657c-5e3d-4659-8e21-516349938837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c39763-dad3-45a9-8b21-ffa67bc95f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e3c490-0e79-4343-934c-fb7d14f6c944",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667a44fd-8ad8-4e8c-b8d4-9bdfc83bfe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656e5a21-4a80-434c-9451-4153cd35dafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9c3699-033d-4a17-a22a-c5f4971fbb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5672ab6-b0b4-4322-b310-5720a8bae4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73a80cb-9956-4fa4-b807-e6982ec12a3e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f744637d-9a8f-42a4-8319-bd79d4390e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671d7a86-b89d-4db8-bfe8-f0dce79f6905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc21fb5-57c0-4781-a3a0-5d64e081c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d112e34e-d885-4535-8a60-b1ff836cdb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac696a1-4358-46c5-a334-de40fdc77ed1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191a0ec3-7554-42dd-9e45-0cf3b3d9b906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cafcd8a-1a65-4af8-ba78-831332067e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10799b15-ec86-4415-8631-3f8e5a81e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64d8352-15c0-45ef-b5ce-a9e458f44edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2eb99f-5dbc-44dc-a917-9800086930e0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a71b03-ce82-4018-9d51-aad526aa6f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b4e9b5-1465-4eb6-b2eb-6e7a963b583a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fdf249-81c7-4c98-847b-43a6b27b5a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "520f0429-5f40-4254-a55f-5a5a27c074a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17230f0-c4fe-4c8f-bd8c-5d01e66d8363",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deed0535-8569-49e1-bc27-0fc03763af8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798f5c9e-b525-4de8-8e68-d43076997e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e1d044-2778-4cb6-809b-1ed711a0f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d101dd0-d199-47e8-89ce-62addab32f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f119bd-de7b-4893-9406-55e35f229535",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea9eaf-9802-4609-9056-7883e17a8eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7d7f9a-e2d3-493e-bdf1-ad1286c935e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4555cc-33e2-447b-ab09-6426cbc1ada5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9841c5b9-9826-42d7-a671-e746acdc1897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293c1de7-861a-492c-bcb2-3cc20386a2d6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e12e467-42b4-42da-ad80-ddb2ddde39db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c093b7-a408-4a0d-9882-8743b385970a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f8626c-feda-4daa-ba21-c34b8e2039e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b9f7b4-ac79-42c4-8391-4c5486844ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853aecfe-0ef2-4c77-85af-f37cb35f9215",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6601777d-085c-4c14-b97c-8817e4d2dd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbd4029-e589-499a-9bce-9cb1a2b59d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b077052b-18c1-4dae-8e50-baaa6fee684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0125199e-f794-4172-83aa-b8314f3eda9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06820fd-8065-4c32-ad6f-3b1f5749440f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4a96c5-5319-4df3-a8cd-eb55e7e27eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2482e19-0cdc-472d-9f36-1d393379f49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7343b077-e18d-497a-b0e6-a487fa0df889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d040d3b-c0ac-43cf-853c-3dd9983eaa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffee0e6-9b71-40b7-8fef-76a247efd08d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0816b6e-9493-4f8e-a9cb-3eb375347e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d60e498-a984-4eec-9c6c-3a393bd92fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdee330-20bd-45e5-a86f-3a784d6284a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a114c4-610b-40c8-8efd-11b6b1bf2c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac737d92-84c4-4784-ac98-91dc1342e809",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da0eee3-0f4d-4961-b082-781f90551c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcab06e-ad49-4701-9a40-2f491e277aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b59f0d5-aa87-4cd3-a691-658bd40ad24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c48a1387-2ce3-47da-8ef5-c84596f52cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0c95a-ef67-4dd7-9d44-13933146c2c2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8535ef59-4f95-4988-9d19-0a49f0ead1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abebffa2-3e13-4021-95b4-da82ddc49c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150b6a01-23e5-49f7-9b7a-374172b1626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e21293-820b-468a-ba61-612859b83b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33ba116-7a64-4252-bfb0-024d578a1a0a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b30c368-75b6-4bba-bd77-8221142da90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb0d9c3-5a91-4f70-86c2-184a2c9fb20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f05ebb6-6781-4911-967f-9bfb5cf9b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6569b5-c290-4b12-9a72-13fecec169df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c7c7ca-2286-4294-91d1-7032051cba23",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38a1224-787c-40a5-b987-901fcab03931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dd9bf2-267d-4feb-8a9b-aea189fd5f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31db52d-cb37-48a7-8554-67f12ee2495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1512f811-8d32-4a1f-96cb-d98a0fd6fbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f9bb15-0369-4cb4-9345-a29ec529072f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eacb44-8e31-429d-9064-b774bde6ea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f015f91-0e36-4cac-b596-41a5fa99fc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca392ad-7b1f-4a01-9f87-3c0c4da708af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d353eb66-dcfc-4728-80b8-686e611aba34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212f89c2-6300-4d91-a2a9-2d8bb72a93c7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7c1950-4a9f-4067-b920-8f8f2a083965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b279b24a-7236-4f96-971a-edfb9aa8d9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3eb075-a206-4225-8634-b9538b2236fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f34ff95-6a86-43c3-a646-d9f1632dbf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d81a0d-92d8-4473-9f30-e4d521d5b2cb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbe5373-df91-42a4-a671-41301ebaf9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75ad50a5-90f2-4c55-badf-f9f241b11b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa15e21-6313-41e0-b309-eaf5fbd6f01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c50a2fd6-cdc5-4c1c-a09c-92645c6882cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44e6b93b-c3b2-4065-8a9c-51054fc50659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39dac944-1c95-46c8-986c-e1d9ea2be0f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce02556d-9416-462f-a9c3-22828c58d64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72d567e0-3672-443e-a5c4-38a2c97ab54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae62771f-7674-4d92-8897-2026939d53a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2ce3f2fb-b8ec-408c-b4d6-64c2c7a63006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead3517d-4ed4-4799-acb4-55df9d0be32a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54873081-6a82-479c-bd8a-1f994e12343f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a64d3a4-2d6a-4d5a-9cef-8d20b8cac49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31dc580-3504-4cae-b2ed-bb05634972f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "cb54cbf2-eb19-4d15-b22e-13bc5988d14e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb1d1549-1eb9-4f12-90c2-6a63186e92d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "365865fe-6b1e-4d1b-8052-d203250d5b43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c551c483-9feb-48f5-a721-98c5e54265dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8935ef7b-e70f-4cd3-a439-1c803fd4b395"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9ac57ae-d8c1-484a-aede-b633be65c29a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d08dd9a-60e6-440b-8dee-76b9d327e4be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43855dd8-29a2-446d-bbf6-f55daaa8c467",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20369e91-c765-4566-9690-d79a87f5bae1"
                }
              }
            ]
          },
          {
            "id": "8aeddd79-1646-492b-bd18-8fd75a62ca49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d44616d-48c1-447f-9495-9bcb0d4d5701",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "162b1e94-6f4b-4697-908d-6d3c0a49ce0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "367a029c-23ac-4cb5-a9eb-7081a514d17b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87d8f6ad-5379-4b7b-bf87-71901d3bb0e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03bdd71a-afba-4bec-8088-ce6faab0a7a5"
                    }
                  }
                ]
              },
              {
                "id": "4a76813e-a3f2-4d85-870c-b3c12df3e1cb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "311f0fe6-e670-4d92-969e-e1a06969c935",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "095823bb-50d0-422b-8895-96d547baa4a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "592b2535-1f9b-4ed4-9830-6a40a872b4cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c257f175-9aa8-46b5-a0f4-92b72b98a01d"
                    }
                  }
                ]
              },
              {
                "id": "1d73c8df-7d93-497c-9578-76d2c3067338",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "badd03c6-3cfc-4fb1-b073-e20adb40dbac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb962564-0d26-4c72-acfd-39cb24b21955"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55b8f367-22e5-44e7-be21-7f2109257cc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c235aa72-3522-4f9f-bc37-05985f8ff928"
                    }
                  }
                ]
              },
              {
                "id": "8fd9ae4c-3970-4f72-9d91-da85d17079ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e621c480-ab4b-40e8-8326-c281daa54f0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f8c560f-f827-4f4f-9efb-bb2fca935a32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77744159-8e6e-4f91-9c8b-fccb7ad43e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ffb27fd4-e1fb-49ac-83ee-b7e8d360b661"
                    }
                  }
                ]
              },
              {
                "id": "98097de1-ecf5-4bf2-88e1-3c212385e43c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16c799fd-711e-4eea-9b71-e03da7aaa520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99457290-e0a7-41f0-9ff0-54e110bab62b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfb908ba-23d9-4ab3-ada1-41243d4ed5c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a74130a6-53e8-481a-a2e4-d0e29bd93231"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b2c9a10-aa5e-4d94-8f99-ded29dcef6d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b63a5d3-f9c2-4609-94c0-69b07c930987"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "57c8c13e-30ae-4088-909f-900aee7e4730",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c6538e3-8abb-40c5-b4bf-ae3396ae2b61"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88634711-89bc-413a-a199-8de01eeade69",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a216fa88-7a33-407b-ae4d-56cfe7ee0f4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "836067c8-ec5b-46d6-bfbe-c99f1494728d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73fa65be-d6ca-43f9-96eb-1138664fa347"
            }
          }
        ]
      },
      {
        "id": "0d46b6cb-1cc2-4c78-aa85-69c641f12c75",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d9a6ef99-e943-4d4d-875a-aebb7d6745f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c819e05b-3bdd-48e3-b7f8-d5ecbbef5150",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02ab75f9-42f9-4eac-90df-1326479edbc9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3712587e-7c0b-45bb-a759-5c4f85462de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cc62ee-112f-4b91-9891-1125cb7095e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b0c30a-ca20-4927-855d-f4408f325fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d9da5c-8e98-4a2d-bcb8-234cdcfb43ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2709d4-bc8b-4e19-8639-68fc32c98f1f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee38fa1d-5c10-47b9-8e93-36075615142a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b28ec7-93fd-4d41-b4a5-05e494be73c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ffcf42-c8fe-4a0f-b9ac-35d027a36d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9362fd21-3171-40ab-a24d-537b3711c327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9eb61b-4d9d-4df8-9be7-50a5def4a1cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608c26ee-4cab-4757-8d8a-ed034d97fa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39792e3f-021f-4a89-8800-1df5caecc19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0454546c-fe3d-4d7b-811a-1adc9bc3ad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cb80b7-2fec-4e80-a8fa-0dd1f1b98e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9033f72-7560-43ae-96f6-81f3e7569891",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3015400a-ed62-47ad-8944-a032c00ed246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc0e6be-449f-4426-a222-c91d0732c38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad394927-c89d-4cef-a9b6-a530fdfa0f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16921680-d403-49ce-b514-a0a7b1c5b578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee276b-b05c-43c0-8098-4a05e48cdb4a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029786ed-b3e6-4939-9a6d-72b2d7d0c68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2006dcc5-bdec-426b-a33c-9e7a0c428811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cffbf3-7466-4874-b479-dc39bc6eb6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6058f8e-353f-4c5d-aeb0-19df9b191f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9979e200-7312-4125-8b34-9914370f56ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a07812-833b-4ea8-b415-7df02ea4f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa16dbce-a569-4403-a6e5-1f81700c4658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d0d5cf-5a04-48a3-bd6b-f1e949d0f069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "087ac996-d3d5-40b5-9537-81a1725b5c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc43f3e-1cd2-4fa8-9f18-2855cf62cd03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faeb548-1156-4ae6-a88c-133a3fad168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214a1d23-bbfd-413c-8194-d198aabc80ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08306ee-524f-49ce-9bcc-353a2b71da7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73bb954b-74d8-4eb3-bc76-1e767bf78397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b988ff-d95b-4248-8eff-bece846917a4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a03ce0-0589-4873-8535-cd55019b71e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8496010d-5184-4b0d-8bfe-4e7e34ac4b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabedbf4-b3ba-45bc-a342-c555579de253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "430750b5-67bf-4663-bbb3-d1fcf791b9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcb883a-38a5-4c9f-bbbe-89f65243319f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94170405-a0ab-4828-b171-52e76aae5588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5e7732-5dee-4757-96a9-5ce7e3b53d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec2a950-7670-4a31-a831-aa923daf7ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb3e586-08e6-4e72-8027-a5c5fda396c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98008a70-0204-4367-b928-cde6cecbb89b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d967b1-a7ed-494b-ae6d-b96086d87b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1006b1d8-1509-4550-8c3d-cb4dae38e4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce9fc25-3b91-4557-abcd-f6f259d25916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f229a5-bb52-4336-9bd0-a340bad1eb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93a75f2-4998-4a58-8dbc-f8d795b485f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43469b35-d8db-492a-b70d-b3cf0e942ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe412e5b-da67-4ef1-a34d-7cbee9653d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ebbed1-8444-4a4e-8138-9e93edd6971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6c5cf1-2975-4929-a993-13eabd7b2b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f154ed-a736-448e-9241-bc91f37de6b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8784d0a2-e45d-4449-91d8-5f0c0f78bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413dc61e-8215-410a-9539-8203e3a806fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d920f0-2639-4eff-9b73-654742d9faac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa127de6-bb72-48d0-aa80-51d4dbfe5892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec101d9-deb3-4abc-9c65-cfc08ff231d8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf64184-2752-4ca3-93a7-2d7f097bc181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ade8886-d449-4ab0-bf71-1b7ae1db5070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f68bfcb-b35d-4136-95db-81c9d6d62247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c155825-0e88-40a9-9138-0156adaf9d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec15323-d923-4732-a136-7310b39ee87b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b78b9ce-7531-4a93-ad53-d2a43435d8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627781be-86fe-42fe-9be5-3ced789fc8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2083893-d97f-40fa-a2fd-37ec99af32ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "83209e0e-f33d-4913-980d-f4e813cc9299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fabd5a-deda-4a8f-8e29-fb03d41f2a01",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9342e77a-481a-441c-b931-5cc04039f993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfc1c74-2b08-455f-a2f2-56342ab3d6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0025287f-74a2-45b1-b12f-bc72a6b51406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a870b11-a26e-4b27-97d6-2831a3653199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955d7deb-f6f3-469a-ad66-6100c9b6dcfe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4acd77-4e04-4fb2-accc-8e7bed1ab9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6249f4cb-4a74-45cd-bea0-788222507ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2db5f2-24fb-46f1-9e95-75c9538c2adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1e5dc9-00fb-4e9c-a510-d7358cf23ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c4a07d-2cf7-4f8a-81c8-037ba2ba2f83",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa729c0d-ea61-4d9a-8d0b-afcb33473689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03bd68a-75bd-4921-8461-225e3027344e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c14239-9338-4fe9-bcd8-b3793231d30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2725c83e-2ac3-4b40-bb78-9081776f2933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5284aba7-997f-4bf2-b97f-4b28ad166f08",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398b730e-df54-4af8-a532-5a5a361ce91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19685a4-e17d-4558-b9f9-b15517648bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf70e34-58d1-4c87-993d-5caf30671972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "255207cb-001f-4944-9945-996806cb40c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103e4109-8939-42bc-b9e8-36bf3d4852d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4a9c1e-ecb7-4612-8d78-3dd0bf9aabb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2082c7-e398-4f04-a7b7-a8d9e8c24ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292d4cb7-f80d-4019-b1f6-16bbbf2f1435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75dfbf56-2d9e-44f0-b6f6-72849f921f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daf40a8-fa2c-4b2e-902b-e4161f9725bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4688ce38-5dc6-4597-bfdb-e05ee2d6f726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f458078-d6ae-4f08-af2b-96b28deaab83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385e841b-f569-4f64-8a5f-d214ae1ae4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ceedad-be11-4509-84d4-b2f679017ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2d7dbb-8293-4e42-89db-69d7818ed69c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91659817-2b23-477f-ac25-007ddcb14e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fd766b-1df0-408e-b0ec-54235886fe26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e88d05-5b5e-4243-957c-76314b789775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34be821-5502-4c7b-aea5-f1947f72092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051434ac-897f-4813-a593-98ea4a1374c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e76306-0398-4eef-99cd-6c6581d7e699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57c7229-ab22-48b2-ae0d-58954acaed4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac7cbb3-49b0-481b-a44b-e8828d07a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8fd960-ec35-4e91-88fa-cd73e0069806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc00a1-ad28-4af1-83b6-17870bd6b510",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44804941-2b7a-4846-b3c4-3c7aa8092bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91b8aae-b749-4ff5-98cc-b76d8e5a5bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85595578-5c68-4887-b56c-4bf3a7b2ef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5e77d7-677d-4316-89e4-1c3d473b5307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5add4f4b-8a08-45a8-9e64-27c3baeb347f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5388138f-9d00-4fa9-b7e6-5df2f18b1e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8c21f7-be94-4fe7-8856-1cb61648fefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6134fcd1-c55a-47e8-aa59-482de943ce55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2085bc-d5b2-44c7-be5b-ccc4c0760d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e8e9b7-b70b-473e-a73b-eb7c782e301d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e67fe2-d3be-42c6-986a-5123ab432fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c3ce31-de67-4756-84c4-4d16d65bec97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c67252-a787-435b-be12-dbc36ed53a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4071433-892c-4c21-b4c5-6dc300d11656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3b3ebd-c8ef-4c31-ba80-02492d9667d4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5521013-f22a-40d5-bcca-56a2ec5dd2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4f2a63-6104-44ad-930b-7fe554dd44c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f177c3d4-35d4-4b9c-8b17-a635c96e4e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcdd321-e07f-4d98-9783-7eaad36f95b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3b3e93-36cf-47e6-a13e-3f56faac238e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb12da9f-2114-4c91-88c0-b62e1d465cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8631dab-0463-4a9c-a0e7-fd8aefcb1b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d635a8-caed-4a03-9550-efae15ec9d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52adb1d-0fcc-4348-b281-1ae5a17249d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e69eda-f0c2-4c59-a479-1308a7923230",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e15c46-293d-4439-9810-51c5061cf029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c37e554-248e-458d-90ba-d73f05a7d742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c62013d-eca7-479e-9cf6-53234fea8eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e987b87-cff6-42bb-bf2e-0ca24622fd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c880127a-93d2-492a-8693-e64773219830",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ad4ce-3c92-4fc4-9a2f-e5cf55cb3b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5674843-83fa-429f-ac64-27cdbcc0d008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc6e677-f926-4ca4-bf5b-5573dfcddb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c642e46-d232-4612-b5b2-a1da89f1bc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47bb370-9923-442a-b03d-c9274fc22c5a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cbd167-c810-48a0-b9b1-35992df25386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa17955c-52be-4d4c-91d3-4f06a73e6241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0ddf6c-baf5-4c52-8cd4-e1fa92e4b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38851864-cc1f-4265-b88f-0c3e915a7bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39982c8-4a15-4452-a1d5-4d2d91365999",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed41b015-f09e-4885-a56f-c24258f53be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92917cd-9daf-46d3-9216-450af9e4a7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9029fd72-3a85-4b2a-876f-dcd27b43b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c749b9-0c85-4238-9cc5-7184df8f2db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fd4391-9733-4ec0-bfb2-9e7a19792135",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e7a961-4833-4c19-9ce3-ecce6bef39f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6044bc07-1b39-4159-8934-75800754ecf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5159fa5-7eda-4ad4-a0fb-0fbbea13b5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc8e006-e8a0-498b-b0d3-31e0456c3fca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "508c89c8-9acc-41f9-a2b8-3b71d8f1beb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6c0445f-13be-4a8b-b513-614bfe4d0490",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6f5c98-2c1c-46b2-bc59-84adc6f0ca7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386297c5-fbdd-4164-8578-33eadfdbd3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4d2a1a-1b7c-4e2b-abda-19ccf737fd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54d27ec8-071e-4d57-828a-668b9b5370be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b35a17-bac0-466f-80aa-78cdff6e1f28",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a0d798-cdde-4650-9fa5-882da9b824cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ba1a3a86-deda-4047-b261-8dd9b7fb8624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51109a64-bf02-4459-b7d6-c6dcf6b80955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a0bd9b0-0dc5-4b0e-9f79-7e54dcc36b94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1a6a4d0-8bcf-495f-a6f9-5e36a6583b1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa77e854-e4ff-445d-99ba-7e166164b848"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e38a947b-74c0-44a8-952a-c9590f74357b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98532984-b9d6-4604-bd55-e8756d3435bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96a055e3-2c31-4bac-8ec2-199703ade8cd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21bfd9b1-b20a-4fc9-9f90-558621ba5186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6411cedd-a94d-4000-af3c-e40915931769",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0154cf14-c8fa-4b7e-b782-4d6d264c7d74"
            }
          }
        ]
      },
      {
        "id": "350835f7-6d29-4526-86ab-37882443556b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be48b5c8-8a7d-421a-aa74-3de69d3a1cd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab45a8a6-33f3-4706-9642-77b1aa60d830",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "786bef54-21b3-4da8-9ebe-4be9a886d0b7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85131a8-ac13-4d6f-9414-2c080ff5e0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae9d8cc-f879-4c43-a4ba-c2d7db2fe62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48901a5a-0406-4e23-afc1-515214b1ba6f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a9d5eb-cc14-4285-af8e-01bd3f9cb323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04556f32-9247-41cb-a8fc-fa27b5b73059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade1943-df60-4837-ae02-b7f2ad15ea4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c069e6-b940-41c8-b18f-ea3484d5ec21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fa4535-72af-4e66-8b4a-06154a679e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0141da-67a6-4b0b-b515-3e5efcb3bad5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb12fe2-083c-4522-abea-74d806c23d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78df851-11ca-4e0e-9ec9-94a0337fd002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5223d3a7-91b3-46fc-933f-a2435ad40f92",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceadb1c-5ffd-4a29-b14a-eb35b21ca85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d52475-ffcb-4c2a-87e9-4f924e01e6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddb5eb5-21e0-4e97-9b09-dda7dbce4954",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bfc1d9-0566-4c8e-bcba-370162ebfc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b28bd82-6f98-469f-bb63-17cf865d17de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3432a-5172-4038-98bb-0c49306f465a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c27cb3f-1ef4-470c-a819-96ef43712139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50516f2-4096-4cfc-b08c-5c457abfe858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f38fd7-8e7f-4b0a-8c34-28f72defc2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba9e0d4-2f80-4083-b91e-820cbbbf3bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8213b4-a808-4763-911c-dd864f4c27c3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107d6a78-a0b6-4602-a4e5-727b44a4f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f08ea8a-b436-4ce2-8bd8-ba4fe684d511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fa155c-00cd-4ba9-b0bf-629089245b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871d3380-5870-40c9-9f7a-71012755e46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc22482-b874-48e6-bc2d-e7e61163f65c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7680a9b0-286e-42c9-9368-deaf23fa3f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48eeb76f-49cc-4dbf-8343-5b7974b7b3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70d29eb-b776-445a-a4f4-08d7fc9e7267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84714264-86b8-426f-a72d-f50425a45d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ad6466-5afd-4cf2-ba55-2b3abe39bcb5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ca7aed-10cb-49a9-8d22-8825430c070b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eced2bdf-5ff2-43e8-9a07-bacba719db43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3bcc68-86c4-4888-a34a-497a372ca09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ff540e-0a6d-437b-8ed9-ae9204cdcc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd816ba-c2d7-4082-b293-06c32bfb2fd0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69a9838-8504-4068-afb6-38e9d3c95699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0c9f8e-ed34-4d85-bcee-e278bcf16471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fae3224-9e44-40a1-9219-770bae3e0ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7ef956-6362-4263-8f29-9b1ce8cfd9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c28540e-60fa-4d21-913e-0a0d1b868675",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f37add-24c7-49b6-8ed8-1f1d73773427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4145f80-5e08-4147-a5c0-ff9c3ec179f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c20ccd-9cb7-4ec8-bb33-ccd8cbcbac29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a60fde-727f-435e-9c33-111f97f43380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e0e5c9-d6c9-41fa-b2ae-c4f595f7d4fc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d2306f-5c38-4f1e-a392-66366a78afb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb65e3a-a723-42b2-aa7f-919512b5e3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944db157-34c4-4210-bd33-89bfe9f1ef85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baa9e11-16e9-4d7a-a0c0-b4bcd4ded98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516c7603-fd8c-4543-b237-dff705e61f6c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663a0e87-d79f-4340-811c-f3789b572f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e5ebc0-ed6a-4a34-a8f0-1741a35aaa6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3776dad7-773f-45df-9cfe-6a063aa85792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27316289-2513-4c5a-bfc0-403372ae0e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3ba266-d414-4306-a06c-ffb3f5551241",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6781d958-eb1c-4c7b-888b-de76f11f4d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ff4e8a-e070-46d2-bb4c-7ea7dd57bdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a76d428-8df9-40f9-aacb-3eca535ca308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d813b494-0535-4344-a2ef-a649f5a20401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9053fc28-2fc6-4ccf-bc9a-a13ca9da2d8a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bb8158-06c2-4985-aac7-3e43f81d466f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232fda6e-532f-46a4-8425-029be4d71092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d0df11-96df-41aa-b9d8-60c1709fe0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a6fe38-3291-4fec-9d92-94916aeff9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f6b962-05f9-454e-8d63-8366c364d41f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe5e9a5-8631-48cf-902c-b4efbc1939d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a21f23-b0ac-419f-acd0-bc8737917776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb83b1d-b139-4618-8c90-816183b56b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7946b9-c019-4e87-b398-569b8b0ee444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ea8b7b-40d0-4d2c-b518-d56e60b2905e",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf21f576-9775-471d-b1e5-301b44d5eff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e313ec-21a5-4275-995e-0c431e22b48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de84db5c-3d39-4c74-b29f-f767b51c0a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b204bb79-4527-4479-af57-2f2b00537e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8f0106-b53e-41d8-af56-13bf5c65228f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984b9278-d5a5-4b3f-99ff-a6710cbf61ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df1bfeb-55c3-4eb2-ba97-a5d5a660aea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d4fd8c-8060-477f-a807-86b1844853c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56d06ad-c7bf-45c2-b9f9-35a39fa9c0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e89e89-ddf1-4a95-9aed-1452172e6ded",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b7957d-7e3a-4ee0-b9c0-0f4848edc194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1a3fb7-6688-4a63-95cb-6082b3c17848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7163d9-1a02-48d0-aeb4-57c566f7248e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8c12f7-4327-4383-9efe-1b18d9d63bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49862040-248b-4d2b-bd1a-279c557c3e9d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee11aba-0e84-4697-be52-8edd7e48660a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3c3bbc-cc05-487f-aaf6-e7538f557e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a813f596-ed3b-4ffa-a203-29b2db0a27c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411a3c82-43d2-4e81-a383-a38163a0c1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c38d6-f4f4-41cd-a211-19c600341346",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0195ce-eb0d-406d-be12-1e6469b29b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679b3aef-c23e-4ab3-98cc-6bc9975fecce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8b99e9-1055-4a84-9680-271fc6d020c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b06c8a-a093-4ab7-98c8-5fc40291be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613ebcf4-1179-46fb-a00f-4b851f78b421",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82f3fa5-7677-4ebc-bba6-21a85c256572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6aa7f41-a9e3-4586-89ba-adbec88bb6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de182139-ef08-4374-8c5e-bc2998bc9b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5e5f9c-3640-43cb-8954-dc4034bc1f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b1fec2-28e4-4c84-9f1a-318de4893918",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5bf2a3-261c-4a87-8ad0-e2c7117d7c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32c1797-eb35-4062-8722-d4e00d3bfd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d689be-aea7-4bc2-a406-74afa4006bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b06b5ad-8523-4843-9e15-4d495cf1c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b137a94f-98cb-40ed-8baf-3243615a5536",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480df49-1dcd-44a0-9278-8a0bb2ee1484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19f6680c-4e5a-4caa-988b-20df8a8f55f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a4c22-afc3-4234-8648-9f9b550d3c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623ee210-8f33-4be4-890e-b3b74494b36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca96177c-539c-4b2a-aba7-aaa93a94090d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fca409-3857-48b3-b32a-9f2c45c4326b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb44e09-e9d3-499f-87dd-6d8a17587069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8c9f13-d4fc-46a1-82e3-84e9e5a510c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399cabc6-36ab-4c47-addc-413eb7f03c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ddfa42-7932-46ff-affd-db24dbefb8db",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227ac633-4464-4ee4-96bb-ad86acc6fabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16ff7c8-9ef5-431d-bf21-82812b4fb451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600e6cf5-e755-41e0-ad06-8941bb2e02dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e91a93-955f-4f1e-88ad-758bc513f5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e1885-ffc8-4869-b0ab-f22f6f42d205",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b443d3-3f42-45a4-9f1d-ecfbdc0c5076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801aeae9-b64e-4715-863b-a57c4fac6a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcb88de-a069-4fb6-b22f-60e991d1843e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19f1431-915f-4a9f-bda5-5eeb346924b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1138e894-cb9c-467c-869d-e0e6fb43ffdd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050e2684-94ac-4924-838f-7240cbc034e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a85875-969f-4d6f-8b95-884091a42f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c26553-50fc-4d97-acb3-69627168694b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b985c9e-19ba-44d1-b503-b2570d6601e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8506bce0-8caf-4a33-826d-5a11ef81148d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6ab376-ea0b-4ac4-b0df-96588199c2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d976b8c7-7359-43d4-a327-b37d605c9b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51cd51d-4fab-45d3-ab01-6aab14679f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdccfe70-eb1a-46ce-822c-0371d9642ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98a140-70c6-4ed3-91f4-2e25d885f4ec",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186b9d3c-cdcc-4bd4-83c6-a549f77d1cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489d196a-9d8a-4642-9684-275f2248d522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38561c6-5bbf-476c-a501-0b1b54183704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25eedc1e-220e-471d-b6f0-ba8b2c1a856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d049c47c-f2e8-4748-9c28-a854d65d09cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd3d9a9-3dea-40e7-88bf-f780e5ea65a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a183e8-cb87-4f81-acfd-43303e6f5404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c17e75-093b-4a8f-8e6d-9f6fbd6d14d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19584512-aebb-4feb-a0dc-556ee55d843a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d11c7a-fb67-4366-87eb-18ccb3a572c4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c2baad-1dea-4df6-a109-e53afe8f619c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c93b7f-91fa-452b-8583-b7bb9cd8c31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f883c0e6-38bd-4c25-bde0-0cec05b704df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39556492-5159-4a06-969b-8bb59fb2fc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75ce0cc-90c3-4bb3-bb85-1cae64f5db81",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d90a14-2504-45aa-920a-66d5285fb995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d26043c-d8f6-47c1-9cfe-41468664010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f8e0ad-5443-4d6a-bbee-b35b294addba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb469e1-01d1-41ec-a312-3300415b4a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273e5941-3461-4b66-b89c-ed323f040b55",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6205cbc-a39e-4294-a86f-1ba357c66c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa0fd4e-cb90-4c4e-a299-288404302674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3141aa-2df9-45f2-83c1-52ab213d015b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffbdc41-90ad-436e-ac98-0135cc90bb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3221d0c-90fb-4472-9e0e-79a6c1b5543c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb03e809-b21f-48fe-bd8a-a0df360b932f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeb4517-5f53-4802-aff7-af68df6e275f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c777ba-c69b-485c-bfca-d30776d86b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f430be57-5f00-40d0-8419-64b3395974d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df90aaf6-c50e-4225-9627-d2a1e1d874d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8562c7b9-bbf3-46e2-b3ae-5efa65d56366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d190a4f6-ce5d-4b20-8d21-0304195ea2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc8a42c-1c0b-4749-9e1c-3d86d50cd310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6211c53-86e2-4bff-9ac9-7ba40e4183c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87561e17-b874-4beb-a56c-42b92e875e53",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59645df4-a7ed-4d8e-977a-9f1cd2b5421d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6794d481-67d8-448c-a2fa-6e177db0cc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da80ddb4-1212-4f15-9c93-8e7972b61511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d894bf92-2413-4b87-be7e-c9e455625fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cad3a5-359f-49c8-a1d0-8ca317973e0c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa513928-6eed-40bb-b8b4-9ff337d443d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d469bf78-a94f-4dc3-af74-39f2a8d926c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec22e56-f8ab-4d16-a178-11ca58243aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff72646-e1fd-4267-9977-5e61684f05d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873598df-039e-4793-bac9-c6c8193eb0b4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70cd979-8659-4a74-8081-ae65fa650142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1c71d5-6511-4d72-8285-1de7586251e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1635eb24-dc86-4508-9498-dd8479a3056b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe5ef02-d124-4d97-a130-aa049a111363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636380db-1520-4188-b1be-86caf93639bb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae7d4de-ce0d-4232-8131-6abed4d38028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bce834-53dc-47ef-9b80-08d9adc9c419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637c1fb3-0dc5-4329-b630-5457db98d4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93b1733-92e8-43d3-9c54-df02eb9447ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e10ef6-7f5f-47e6-8541-8fe529e49ddb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8741fb8-899e-40fb-b7aa-4cc64aea666a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcabd25-34fc-437a-8a25-96a3985b0e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5126035-3aa6-4e3f-9b4e-38376a916584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a072b94-4c79-4902-9bd8-08a5e7e75447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1905c33-ea30-4832-bf9c-29954318953c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2879fc23-ebd2-425f-ad46-2a432a5e7e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3575b544-d7cb-4290-bc8e-f201a1b4ba5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324515a5-910b-460d-9758-0f799a1ebf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd4cb88-153b-4dcd-9fd6-1bb62841dbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5154eb48-5435-4a74-a6d9-edfa8d255c9b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b10281-2550-4c89-ba3b-5693c8b256e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898ae31b-9bb0-475d-8ee9-f222c92aacd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed455a9-0f60-4c85-b39a-2f271f4ba283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1fdbd1-b098-4cee-8565-44cdeecceb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd8d5bd-2339-4f4e-ba01-5ae61fb8682f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b54230-9653-42b7-b40b-ff053039868d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12962c0a-0175-4106-9394-231cc9936aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72165808-34fc-4cb1-8228-38b172537fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2329eb19-7c3a-454e-bd16-b5e9a33ce867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39141045-ffe2-47b6-a3df-16cbd1308a6f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc45eb1-3713-4f5f-ab99-0307950c57c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f18ddb4-7c25-4cdd-957f-a6d6aeb07193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b01fa23-0dc8-4b81-989d-3614c73d75f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ef2019-627f-4652-93ea-285205614e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f909aba6-b5fd-459f-9fe6-b42c91c7b43a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69284582-dd5c-4619-85a3-09dbb53a5261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216aa2b2-64e6-4a14-810f-78ce4ce7d153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a8b728-5434-416d-8784-f488d00f1aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fb643d-6e3f-40a9-b7d8-cb933f3c8fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b71099-9084-4786-a896-a9f838f5f5d9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf2275f-85e4-48ae-b49a-f20487c3b1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f82e94-4644-4e3b-b87d-18bc3cc99159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08039049-98e7-48a8-807e-4500aa9752a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237ba0d9-e3c3-435e-8374-6e50c3c873e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90954a5-e22b-41bf-afd0-c97cb0a5a4d8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cff9605-b536-46ed-a480-1d4044f8c208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23748480-3fce-4275-aa49-8f14f0a36efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01beb1e0-0715-4436-bcd2-2e837e4df40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d4de5d-0173-4b1e-9675-c5efc18faaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ab1d84-0fe5-4b95-9e5e-871958d0b067",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32540d35-34d3-4fc3-9129-c0b9bcdd7934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2138323a-66b4-4ca9-9e44-283091ea8fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1151657-8ca0-46f8-bcde-c352cbb81869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c44da23-c02d-44ee-a022-683eef8704d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d90d7-514c-4b82-a7cc-24f6fb5ddd2d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25106fa4-c49a-42ff-9a4b-261d097b03c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb459f6e-9f6a-4b44-8731-b32b5648068a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ad7f46-16ac-40b7-8402-0f1006053c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5022b071-a028-4b1f-b16f-9f37308caeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e2b6f1-3aae-4fde-884d-9a72426f4256",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925aecf7-effd-4911-a570-4607ed9c449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51470232-42fa-4d9d-b0d2-4072ec58c39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2881b0-6735-4b3d-b45b-5e0af8adc0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c17b2bc-4c37-45f4-946d-f26953521ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b467a694-8c51-40c5-8673-9f135ef1dc38",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195cdd65-a7b3-42c6-b6a0-30ac757885c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f292f53-974d-4702-b682-64f652ffcb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f474cf99-81bb-4cde-b4aa-64a84e0e9535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d4cee5-41dc-46d4-b49f-912087a242ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c45544f-8e61-4735-83f9-2326ab81baed",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce558513-f70d-4326-87f4-902673ba0d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab37b77-3b6a-4528-9ef7-95783c251233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665e64d6-cb3a-4f72-b75a-d6d639a64fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4586bd-4be1-4ee1-b504-fb8c69155bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ccd03e-ab58-4ccc-b732-2794cf0f5e8a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15306dc-8eb6-4ca6-a814-e0b4c870c544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8267d9-73f7-462b-bd6c-844f395a4c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e1abac-f62e-44ac-9131-6900d7882e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd3cb9d-bbe4-4dfe-a05d-10b16bdb2331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f695ae7-0b3c-4efb-b6b4-99dd1abeeb6c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40ce4c4-bf13-4f2f-a31d-088c09c1d307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15ad58c-0cb1-43a0-9ec3-b298596958f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158c0032-bfdc-4603-835b-184c7f39dff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf979bef-5200-4b39-9df1-4a4e7b2fdd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa677916-0fd6-40b5-a288-1d620e8a6f3d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39e0a74-3782-4759-99d8-be791f89ffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caa0c14-fa5e-414b-bee3-1b39733d5f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c3fedd-a0a8-402e-ae2b-ee0bf3765e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f292a7cc-ae0a-4314-bd80-af670f43b6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2063695d-a824-43c2-ab26-f7ca06e1a9e5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a627abf-266e-4959-a136-fbbe1687915c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee598c75-7235-46c3-bf3f-f611d50e9382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99c6697-73d6-4431-b4cf-724ed05e7dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8480bfa3-c9f7-4632-b4a9-14c1d96bef88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a3dc48-6c8b-4ad3-a939-53b60af6bc4b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f705f4f-ba58-46d3-81b4-71e3a90ee862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa768878-83aa-4913-8cdb-91695de9b4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79342f2-ad05-4b45-ac59-4f49ddd49d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea6856e-05e8-4ca7-a38e-f26401317c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d6e6e4-3cb4-4be0-bcfa-0ca6b95cb8c5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205faef1-710c-4703-94e0-30183201600f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2de7db-89f0-45fc-8a36-c5f31c0eae29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3e7be2-32d6-47dd-80ad-788199f7cf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240ba090-1e71-4235-bf6f-69762560d2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5238d8-491e-4f85-9c8c-db9d4829c23a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c91fa-044c-4a79-9018-ed962123c73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e6b02e-74f0-4d39-9395-2dd675cd3fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070374f-dc3c-4bfd-9269-0d785de5e0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c61c80-8400-43a9-9f5d-1698b10356c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cb2024-efee-408f-9bc0-e386e1299c9a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d3e265-ac49-4fa0-bddd-55c2710bc255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9357e8f2-d3d8-4049-a2fa-afb83e152da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f10c2d-1dd6-4aa0-99e5-5003e16e6b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f980b3-8a8d-48fb-b0e8-7d3882ed144a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908128a4-ee10-4e97-8838-860df9fa9fce",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b079c3d7-f51f-48ff-b34f-da054fbba66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2934b6-b450-4591-936b-a30d6875cab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad33a0a-8207-462a-b278-5050292d6b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b859ed5f-6d71-4e71-b179-001b56028bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf996d80-a561-4018-a0bb-2e94f2392237",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a01863-da3f-4ca7-b7b3-32c2b3fc6026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d383a473-04df-40ed-83f1-87595628ed3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b9999e-208f-4e22-bad2-3f7be948ab34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9c7bec-98ef-46f5-8da9-c3c99fe92d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb027088-d95f-4f09-ac46-c8ff47514013",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1068e7ab-3033-4145-b0a5-7ef57bd3d523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11987180-a4d3-46f3-b2fa-f75b576cae5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3c7f3e-1f8d-4123-840f-537a4634f32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4844e32a-00b5-4f3f-a3a9-12debab9adb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c03bbfa-c018-4951-8285-13fc3e68ea5e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f41108b-d7c4-45d1-ace1-7b24f5245ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5198626b-9eeb-4ba6-a0ea-6ca5cb5e6d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14440ec-3d31-4a82-821d-8312af867eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5036d1d-d054-43f0-9214-bc043c7bb8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13b7345-927f-4aec-86b0-8e62db55b295",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5813d0dc-9dc9-460f-878d-a5bac347d759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba9b6ab-71f5-4181-b90c-68a2a30407a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be5a6dd-8786-4cce-b8ce-c2f67357f53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfa2d03-bc96-43c2-9874-4ed6febbe719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58695bb7-5ada-4ae0-b5ab-2d51cc0a393c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb5aa08-43a4-4990-9184-e46a1e5109be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635568fc-1420-4dd0-aa1a-6fb874b0134f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288c20e8-cc61-4840-b470-3999782a5ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf98fbb-2e27-432b-b552-cbf8cd7277f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2275574-479a-41f0-a14a-e13b8727d0ab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fc5678-2ce2-4452-93a7-b202a3e9df4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e9e419-d71d-49a0-a818-17e1a76aa952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f613241-f7c3-43ca-a2de-786b5a19fca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135e5e14-6692-4a4f-aaff-56c3c6abfa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde26221-0a89-48d3-8e1a-19b0d922cc37",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a261e2f1-c0f4-4fbf-8854-91e9b64544fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583c0f4e-7298-40d8-ade4-a4dfe6df729e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e614f8c5-4b72-45d6-bcc6-988ed621c764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e231103-e992-44cd-84b3-328617cad9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5decb4c7-a439-4725-abad-61e908cd0d35",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e7138-6bce-41c0-a911-eb563b661d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7526ae-49d4-45ef-a742-25c659cb01e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdc6644-dbe4-482d-acb1-d12519fd89b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532b771a-ffbd-47db-b7c0-31050d7b1f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c658b6c7-d375-4630-b193-43140782990f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd4ebb-fb58-41a8-a88e-2a903eb62919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc5fb33-1679-46c7-b152-1ddbf9912f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f1f476-1ebc-4bdb-9cf5-2eaf6a67a629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f18e6b5-b2be-4e85-9b17-60aab6955b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f23f81-e01a-4596-b292-4e2deb167900",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976f8243-e39d-491d-b14f-2f0c99451d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297f80ca-4400-4078-b0e1-a982f16b1a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e8f2e7-46cb-4a60-9f9f-fb10274b8377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e569e9b1-e06d-4cbd-b649-e670dd62ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ae80bb-3a5f-493c-a803-efd74ddc34a9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6622f1c-d988-4eac-ad62-84d39f8d4c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49530328-fe57-4b77-8e55-a8c1d1a70169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c8f7ba-7d27-49ee-afae-6495c117a6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37a6e72-fcf8-4d99-91c7-2bcf4a7ab682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918452fa-0b00-4339-9f8c-ac45816f1978",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9254ac-91ed-4c96-a9c7-1aceac6c6435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506da164-8bc1-4e1b-82eb-15a035476337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd722642-03ff-42e7-9959-1190898e6572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa73f176-258d-4c1d-890f-b63fc25f4579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c9aaf-89a7-45d2-8869-4f3d10c2a04d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd54a6d6-3188-4605-bce5-c427b3e62266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb50e48-0f47-49d9-b5da-5820147ea870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3307f79-9ffc-44bd-8a91-8b95ed6095b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc605c2-bbdf-4c95-af66-773ee440e496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617483ce-7509-4108-b06d-251eee185570",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e915fa5-4eb2-4bb8-87a8-30aaed96948e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4768766a-e2f3-4a58-accf-e52cd8ea6a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d513963f-2867-42e6-b8f8-5937d9391c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ee41ca-ff9c-4db1-afbd-cf80e9694729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6e3a72-1a9c-4e87-b692-d2f7331e64f6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40900b14-7a63-49f4-a5a0-1e40637489cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67f22c6-b375-4124-92aa-0c0ac953734a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b610a6-e065-4b33-b539-77663cb28ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403a20b7-77a5-47bd-9159-416c5d7659c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccf01b9-7eba-4f4a-8c99-b2554c87db7f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d01807f-6a58-4033-b569-dd3369fa4b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7333107-d73a-4d23-a1e1-fe3dcc6bbea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5649ba5c-2e8d-430f-baf4-17bcd035dc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6600e918-ca22-4106-8e79-dcb75ffa91dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca170997-f309-46fa-92b8-dcb2401e26d2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b021e3b9-f7a7-49a6-a79b-7547d7e01570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb7417ed-bd5b-444b-85d0-f692b4e42bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b525f4-0255-43ae-b27c-b34dc8067a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b30507e-e09b-4b07-afa8-6768935f5e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfce55e-423e-402f-ba90-be34bb48e0a2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7a97bb-c397-4f84-8893-451bb44f5287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97e812e-ad18-4901-b8dc-e02491cc912e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d53b5a-7563-4b04-a53d-9481d9fee621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea472fab-4b57-4b6f-b25c-7ce0c6040c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed22b3a-62de-461d-9b86-7953bc9a85a8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea2db82-95ac-49ab-916a-b3da9b8dd2f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a759612-8868-41e5-80a4-201ca30df494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b22fd-3e8b-4e66-b763-b8fe16eeff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e41eda5-a1a6-44d9-af39-cd21426f1188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16564b9b-a681-4e02-a169-7274756516cf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b820f5-ff87-4640-bb34-da6bebfbdb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6eba84-56da-47e0-ab91-99fdad2fc75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef24e57-81f4-4801-ba78-0a8460e7fdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db108e3f-663b-4870-a0bf-26ed9c727032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53d0158-590d-435d-95a8-377da3288543",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d27adf8-ef85-4af6-a4f9-f0e9ab25c902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89e2c3e-37d4-4e33-b3f5-346ea447db82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dabebc3-a70e-420a-a59a-bc4f3eaa40b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79bd998-b5ba-4b80-ae07-c46654edf5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3461b3-10f2-484b-835f-fbaa9e772ea0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad5c466-bed4-48de-8942-bca8c66f5083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "465cac2f-af74-4625-b387-3d26632bc344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6866db23-ce30-4e5a-aed5-f5a2c3793d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d14f2ef-1a11-472c-9344-e652c917051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff88e50-745b-48c6-8534-a18164a569be",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67290185-9ca2-4897-a8d5-bff87129ab2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27412974-9e80-4ff4-ab39-5f1706af913c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b016188b-00b3-4b28-b110-518e5328a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8ed29e-51c6-4923-8e37-1e44ecb91a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5223779e-9d35-4ca6-8918-6a2dceb2f2a1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679b0b83-bbf0-4298-b508-77686aeb4cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4774876-0a56-4890-838a-c3a1988075ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0de3b2-b52a-4efd-b80e-f13ba916e6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d6c15c-ed9a-43d4-ae85-74b01133048d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0538e5f-0c33-442c-a324-1b8ab1772f60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfcaa4d-8aca-4a26-8c81-dfbd21515ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85039461-446c-4b90-a152-d5ce4ef5db1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9576251-6252-4117-8d30-22e30a1a3595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596dc4ce-307f-49aa-a21d-4e2db4a90301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfdedef-4d6c-4ff6-8f2c-ab756a7a1bcd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a97c47d-b92a-40ec-9198-0ea2cb242441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ce05ab-4a08-43a1-8fae-b032131ff31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c396f0c4-b0b2-44a6-b295-e68a77d968eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec12ba11-11db-46e0-bbf0-9423ce8f8b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fef9e2-5de6-4301-952d-18f26eeedc52",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a1deda-9924-44e2-89ce-ab396ade89d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274e1774-7faa-49db-ae2a-ae19e44dff6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7a135c-fadf-4ec2-8962-7718c11fc2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ac5ad4-c62c-4fed-9190-fc0dc8a0cc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc3691d-9333-49cc-bad5-5d413541aa52",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16970de-a9a8-4e4d-93d1-82b262dd639c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21830a2d-435e-45b0-aff3-ff42d120bfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a062d8b-2cd2-4b87-8b6f-bee466e3b763",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82468a0-61db-423b-bf83-08ff3094336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe67d910-b571-45b2-a3ed-ab26eed52982",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30258b8-6ed7-4c94-a38c-f2994179e943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b18e4a1-2e82-4a8a-874a-bc3d2a8e2bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba3a6e6-73b2-4b71-8986-92175f1f0ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46b4bf0-53dc-48c9-81fd-b58cf26503c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ac8626-2890-414f-a413-9e2f571d3b9c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d439d4d9-c10e-44b6-8693-e1d3c39739e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5304f6-19ea-477a-8927-80afb5da0e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ebc385-0df6-49b2-96a0-bcaf4f387edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be191e68-190b-4ada-bfa8-bebb1a05ca0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c952d83e-15d2-44f8-b9ae-ecf6dabd0ea2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d4e261-6c71-4f24-90c2-32dab61df4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be46e22-bffb-47f9-82a1-c5e82ce64ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a7a7e-d2a5-4677-b7c2-1c33d4a9c133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acad77c1-4b8c-4d2e-94b6-9b1a5adfee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1826a0-1e29-4a64-9678-511ee391565a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e84aa14-c4e2-40dd-b35a-baf4d318bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ea2304-ec90-4253-a64a-ab46884dfdc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1563ebbe-f748-4b5b-9b59-c7799d64d68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c159e767-bbf7-488d-8c5b-f6c7c22fe530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa498d8e-0ed8-472d-808e-47200f315a02",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24185f06-520c-47d5-a24b-3ba7179d5ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8551e9cb-9512-440c-b6ee-51f68433a781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc001ae0-f455-496a-8a86-ccb8ff9a6b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bf6ac2-a0f4-4a2e-a068-eeab704c499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0bceaa-e5b7-4829-9b91-f38dfdc84b34",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22c9199-588c-414a-8307-109f5a438ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d13877-0724-4916-bc84-56a2e69b52cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1257d8c4-784a-4df2-bb13-013e45dce8c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0bad59-735d-4564-baef-b81507f5e553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d4ef5c-5372-432b-82c8-78a88f97c355",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedb42a1-c466-4ea6-abf9-c4556ceeaf4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb66c05-ac14-4839-9f55-5009fcf90a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fcba03-daf0-4643-b514-a7ec8564bd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fe442c-7dde-4968-87b0-cade4d8c4255"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81fb0021-05ab-4c68-a5b5-70933a97239f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93e0c64e-a344-4559-8882-6edfb1cc7bb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1d8dfa8-4f0a-4de8-a163-f2ec72b002c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e58fcb23-2698-4180-be49-56b17563d17b"
                    }
                  }
                ]
              },
              {
                "id": "7abdb126-b803-4cd5-9cde-2994a26cf53f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07f25251-4b3e-44a4-8557-c53d5bf8c3db",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33724592-c018-4c62-89da-2543ad702e28",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8aeb418d-6ba0-4191-bebe-abff2db4d1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b6098e-9eb6-4dc2-aa2b-208dba970008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d031c6df-b0ff-4efd-902f-2ab2197e803b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1f12f2-b979-445b-9f56-df312979e2d5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ec2d4-f744-4554-adab-9899c2a519a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2800fbcc-201f-417e-af36-cef2804b5690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd0baae-daae-4137-8f1f-577ffd0e721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c900593-4e7c-4b80-97e5-bd89beb9a95f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d118013-9368-4830-a4e1-06636bd6d8c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6f28048-1dfb-4465-a7bd-8b5fc9dc9b67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cedd2a0-0a14-4cf8-abfe-aacdd7b3f1ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4cf66e5-e4a3-4361-bf7d-9692df849050"
                    }
                  }
                ]
              },
              {
                "id": "7bc93400-3d37-41d1-9043-32072e92310a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "579cabf9-4bbc-4d11-b2ca-8d56f499caa7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe8bc64-1cfc-4c83-bced-ee6381365327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "66c3084f-8866-4aae-8a05-39a0c8be0e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54383ff9-2269-4836-958b-86885c3fb3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c449e434-4c86-41c7-b2b4-f4347a2604dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b9a6197-549f-46ad-87ca-ed62bad01b87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d35ea59-e66f-4277-8b34-a841b02efc07",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a44bbe-426a-4739-8b5e-64442eb79e00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae4ee414-6aa0-4578-90b3-df95fe0df9dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abdf1ae9-fad2-4dca-8034-0642440723df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bc4305e-cebd-4dbf-9a1a-8d062468d14c"
                    }
                  }
                ]
              },
              {
                "id": "5194de6c-864e-472d-97bd-26aae41f104a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35451299-d711-4c4b-ba18-e6c085f5ac4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c63ec5e-6b35-4742-a381-9d4356b823da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a5589ff-3427-44e6-b964-d70b882f0506",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "767c119e-a225-496a-a78d-3ec906f766e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c140d144-c576-4f24-a865-f70994d9fc11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1809d9a6-141b-414a-86de-f79b8a16c83c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d40f3e53-7a55-46aa-b7c3-9bbedc46b462",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cb1fb19-4e23-4ac6-a442-d0652b2901fd"
            }
          }
        ]
      },
      {
        "id": "3ae11557-89cd-4412-92a6-cdba8357ef7c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eadb7637-0e6d-4289-ae3a-434f91dc72f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1611c342-2f3b-4787-bc96-4d6e37c8962f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950f99a-a844-42dd-8376-69abfd76fe61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "132222a2-6195-4bbc-8e39-342f5cbdbf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a52f06-6c38-49c8-8fa7-b557a4695c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a98b85fc-0311-4f15-8959-8b2b1b8f2329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d452e87-c524-4e50-aabe-84f6fe96b8e3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b097fe1e-3d24-4a06-8916-4339f9827ca0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6205e79-eb6d-4ab5-9ae1-39207e4a27f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7561e02e-c5c0-4ede-9249-3f99ee9e510e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e3b6e3d-3271-407d-88a2-e4ae0fa64035"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2dad50f-6c04-4ab1-98e4-ff83631f31ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99b1b1d6-21cb-4423-abb0-50453b540d0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2803839-56e7-43fa-8398-f6daa86960ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c226010-ea98-493b-87a4-df7e32ea9e01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70b83b16-6855-48cc-9e69-0d5d45a664af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d2a55bc4-9a61-46a3-aeef-c7b4048ac997"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4405ca6d-7e52-4b83-9bb6-0f6417907f69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d081df94-9e39-4d66-9d03-82c024cf0e13"
            }
          }
        ]
      },
      {
        "id": "33bc0e3e-fd11-4a51-bff0-05a9adceb13c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6cf86f60-8e50-4b8a-93bb-0a50235de193",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57b2dabb-77f4-48fc-9737-2aa1a2c1d6e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57eeacad-4c26-48a2-818e-c2e85baddd97",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f66a183-86d5-4f43-8a32-5d8b8d5dfa4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b5570f02-b05b-47b2-972b-e0368febcc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add34c29-34aa-41f2-856b-e48dc1c1f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bb404fa-f3c1-4f96-9131-b2e01aa21e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc18e9ac-9042-430a-97d3-a8aeb246f256",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c75b275-bc6a-4230-8181-d491a2e313f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa113d7b-1c5b-462a-a0c6-1b4c92f31d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1534a981-f069-4dc7-919d-cea49c077473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54a9ee72-bf20-45cf-9f2e-d17c5bf3ecb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2ad0e61-067d-4006-a923-4d0f962906fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93074456-50f5-4890-a038-49ee18a3510d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ab058f7-6426-4bdf-9a6e-5ca726a4cb60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d26de516-c2bf-4bf2-bd56-b335b1d7f219"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "427425f5-3d37-47d4-ab91-e535f0da822e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "86fefc7f-301e-4ef7-85f3-12d563929036"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dac3360-95be-4fb6-b4f1-ff1ebc448720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2698537-8287-48af-b9e6-d9aa947f505c"
            }
          }
        ]
      },
      {
        "id": "058446ff-2248-4f2f-9b7d-3bbdc9488091",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "28ad0270-de98-4c52-a4e8-b205727f1cf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c92c0d9e-0a1d-4763-a7b2-d0d663c1ea30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6832cd5-22c7-489a-b0d0-8096c268f171",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c9f9e4-15d4-493e-bdad-3dcbb548baf8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c779aeb-c308-4836-8eda-40be0e7e207a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655369b9-b82f-4e99-85ba-24e3c911d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbbaebe6-b1e8-4721-98fe-f9c05188eabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8939c327-2080-4b6c-8a9c-7f252618b2d2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed2b382-3bb7-4c89-ad96-ed9b792b26bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "33c3dbdb-999a-4784-ade6-f6023f5ca843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed8f9a9-17a8-4321-a803-30285b254eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc332f44-266f-4aa0-8efa-71acca455eb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3eea39-e8aa-4c0b-a90d-837718d710ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d08e3647-0aaa-409d-85d7-ee5740d5a705"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7994540-e2e5-4f22-9b6f-9172f54fd460",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a510d23-4513-4898-926d-a8a506195474"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "464a590e-8be9-4a42-a998-40ce5bf78db6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1388fedc-5c55-4aab-b6c8-18ce63d72cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f4f3c35-3fc0-434e-9813-52ff0bd12ad0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b53e86ac-cbd7-48e1-ab61-7d2c90445c88"
            }
          }
        ]
      },
      {
        "id": "50d3aa78-77f6-4817-b645-95eb1a6f4fdb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f353d6a-4fcd-4443-9851-d0125d6a51e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "484aa818-bdcd-4a4c-be46-d85e6ebeec4c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "86e9c4f2-72b8-4449-ab1b-c2c8e643b9c8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3755859d-61df-48fa-afac-b3e808484175",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c056369e-189c-4dd9-a2cc-4d15b074351c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 683.763358778626,
      "responseMin": 14,
      "responseMax": 7209,
      "responseSd": 926.7225251699784,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675643874181,
      "completed": 1675644064590
    },
    "executions": [
      {
        "id": "da54bc95-3f33-4c70-8d93-0366e3622f3b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8d8bd309-e3a8-433a-9e82-ea1a19ac7f5b",
          "httpRequestId": "61055de2-e30a-4259-806d-d1373639a064"
        },
        "item": {
          "id": "da54bc95-3f33-4c70-8d93-0366e3622f3b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a832e4c0-c413-4dce-bfc4-d4b7de04e1e7",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "52264c52-ea73-45a2-bb4c-ed86051ff294",
        "cursor": {
          "ref": "9ca0c17f-c43f-416d-b3dd-6ac34f3e3568",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4dce8630-a412-4458-8395-5def9f963b8e"
        },
        "item": {
          "id": "52264c52-ea73-45a2-bb4c-ed86051ff294",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e222dfcc-ca05-42f8-ab2e-b614c20ace48",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "8f5b429c-6a54-4aab-89e9-dcaaee0b1a76",
        "cursor": {
          "ref": "cadca0ab-df5a-4612-a352-b3df5b1e0cc8",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f46af39d-dc46-49b1-b2c2-709af574fbd0"
        },
        "item": {
          "id": "8f5b429c-6a54-4aab-89e9-dcaaee0b1a76",
          "name": "did_json"
        },
        "response": {
          "id": "4fcab4e1-5f64-4443-8b15-80737c705481",
          "status": "OK",
          "code": 200,
          "responseTime": 864,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747cb55e-5dc2-4880-9c4a-53bf095ef81c",
        "cursor": {
          "ref": "ca2b0743-2fdd-4527-9639-e593b9b131b2",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ec535780-2c3c-4aba-8cb0-a9172a905756"
        },
        "item": {
          "id": "747cb55e-5dc2-4880-9c4a-53bf095ef81c",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b6cc1b4-06e5-46fc-ab20-07909d5ef8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747cb55e-5dc2-4880-9c4a-53bf095ef81c",
        "cursor": {
          "ref": "ca2b0743-2fdd-4527-9639-e593b9b131b2",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ec535780-2c3c-4aba-8cb0-a9172a905756"
        },
        "item": {
          "id": "747cb55e-5dc2-4880-9c4a-53bf095ef81c",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b6cc1b4-06e5-46fc-ab20-07909d5ef8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe946ac-c8f9-4653-b1b0-e9057c180278",
        "cursor": {
          "ref": "367b124d-ce0e-4b19-8ee2-6e1d834a94ba",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfbf12e1-727e-4ba4-b5ec-72e7f9c42855"
        },
        "item": {
          "id": "bbe946ac-c8f9-4653-b1b0-e9057c180278",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "90411342-43f5-4524-80ab-7e81fe090e86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 760,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f007bc-9fd4-4678-a8cc-2ae7bd23b1de",
        "cursor": {
          "ref": "b6ef9fb1-15f0-46a0-9f5f-a8ed5eb8fa11",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dba97e32-8409-4925-b6b2-f63ec0546959"
        },
        "item": {
          "id": "23f007bc-9fd4-4678-a8cc-2ae7bd23b1de",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9fe077cd-02b9-4892-8c87-238009158f5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 567,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a30c9d1-2800-4407-a7b3-44956741dc4d",
        "cursor": {
          "ref": "c5f38cdf-2fcd-4b6c-b90a-ca34b01733f3",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "797b0665-ad9e-43af-b5ad-fb02d69eb29a"
        },
        "item": {
          "id": "2a30c9d1-2800-4407-a7b3-44956741dc4d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "759f69b8-cfb3-4d95-b562-90e9aa78ac3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e7031-b849-44bb-912a-027997bd6bd8",
        "cursor": {
          "ref": "28095bcf-87cd-4f01-8208-0f6113dd77ce",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aec27bf8-ab48-4823-abc0-c30f6655c73d"
        },
        "item": {
          "id": "d66e7031-b849-44bb-912a-027997bd6bd8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f21b2223-0daa-400c-adc6-7b9287bf759d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e7031-b849-44bb-912a-027997bd6bd8",
        "cursor": {
          "ref": "28095bcf-87cd-4f01-8208-0f6113dd77ce",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aec27bf8-ab48-4823-abc0-c30f6655c73d"
        },
        "item": {
          "id": "d66e7031-b849-44bb-912a-027997bd6bd8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f21b2223-0daa-400c-adc6-7b9287bf759d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fe61ff-5d00-4694-9fc6-abeda8917010",
        "cursor": {
          "ref": "3407bf50-0886-4415-b020-01f1d6f5adaf",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8319c15d-2bf3-437a-bfac-692417c16e51"
        },
        "item": {
          "id": "41fe61ff-5d00-4694-9fc6-abeda8917010",
          "name": "identifiers"
        },
        "response": {
          "id": "8c4491b4-9ed2-488e-8c4a-77761650a8ef",
          "status": "OK",
          "code": 200,
          "responseTime": 905,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443e3bb9-bcbb-4870-a558-efafe373da28",
        "cursor": {
          "ref": "bae45d9d-2264-42d9-acfc-9888c7560b67",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef5b2f80-843b-45dc-b980-82efd742182a"
        },
        "item": {
          "id": "443e3bb9-bcbb-4870-a558-efafe373da28",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dd58e9e9-7393-4d55-8235-e40ac7d177cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443e3bb9-bcbb-4870-a558-efafe373da28",
        "cursor": {
          "ref": "bae45d9d-2264-42d9-acfc-9888c7560b67",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef5b2f80-843b-45dc-b980-82efd742182a"
        },
        "item": {
          "id": "443e3bb9-bcbb-4870-a558-efafe373da28",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dd58e9e9-7393-4d55-8235-e40ac7d177cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfb0907-e740-4634-bb3d-92ac831a4210",
        "cursor": {
          "ref": "18c25ab6-831c-4389-aa90-c11a1e8747a6",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "25b3579f-ba21-4e33-9fe2-e51b796b0af9"
        },
        "item": {
          "id": "7cfb0907-e740-4634-bb3d-92ac831a4210",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7c34b51a-ad27-4bcd-ab30-7e59f009fe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4f1d0d-0942-4ced-8455-a39f085e7c34",
        "cursor": {
          "ref": "b1b4820c-3c18-40d9-bfef-efaba3d179d3",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fd656e1d-f75b-449c-bfd2-c7cdde0c7c55"
        },
        "item": {
          "id": "be4f1d0d-0942-4ced-8455-a39f085e7c34",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "22d6e057-2641-445d-955d-ad9156d2da4f",
          "status": "Created",
          "code": 201,
          "responseTime": 2547,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "653e245e-fb44-4e37-bf6d-ffe620e7eff2",
        "cursor": {
          "ref": "3ea14aef-cf41-433e-b436-db8e7c8db49a",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "02742cb2-d736-4bb7-8bf0-5524556ef02f"
        },
        "item": {
          "id": "653e245e-fb44-4e37-bf6d-ffe620e7eff2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a3c922ab-a1e8-4f3b-b74d-4fefb2e8bbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44198ba-51c2-4c11-9716-8fa448e5c342",
        "cursor": {
          "ref": "8c4419e9-7082-4279-a203-ffcb253fc48b",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6b9efff9-e6a9-4ea2-bbf2-490a14b5593e"
        },
        "item": {
          "id": "d44198ba-51c2-4c11-9716-8fa448e5c342",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "12a8789f-5e30-473e-998a-596cf1c0b617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae2a6d-34e2-4c43-af46-8f4860ff6569",
        "cursor": {
          "ref": "2dddd4f1-1c6f-49ec-99bc-f2633210fd0d",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a4a3ec67-9524-4b3a-ab1a-7797fff4aca8"
        },
        "item": {
          "id": "c6ae2a6d-34e2-4c43-af46-8f4860ff6569",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "844e7ccd-4871-43e5-9cfe-fc7ea1878b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee298f24-2bc8-44f9-88cd-3e685aafeb0e",
        "cursor": {
          "ref": "7f77c50f-8eba-43e1-9724-8e3a2cc74ccf",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0bc3c6e0-d305-4656-8923-56281be8c264"
        },
        "item": {
          "id": "ee298f24-2bc8-44f9-88cd-3e685aafeb0e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ca66514c-e4c6-4266-803d-cda4f55f570f",
          "status": "Created",
          "code": 201,
          "responseTime": 4281,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "6cf8482f-6869-4118-9376-dd11e85402cf",
        "cursor": {
          "ref": "e5ac807d-4d6d-4958-bf60-0ce5c15e10df",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a0808477-5a02-4336-848f-d2359a3dbd9a"
        },
        "item": {
          "id": "6cf8482f-6869-4118-9376-dd11e85402cf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0eed578c-81a0-4da5-9242-135e9ea621ed",
          "status": "Created",
          "code": 201,
          "responseTime": 4848,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "b9c9d57e-6d5c-4782-91f1-98daf5e2288c",
        "cursor": {
          "ref": "0b659957-f803-4e07-a1b2-d8fcd5a832d8",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1515ab09-044e-42d3-b28d-997cfdbcf1df"
        },
        "item": {
          "id": "b9c9d57e-6d5c-4782-91f1-98daf5e2288c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eece9099-c695-4e48-8b34-deba6cad488d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c18e64b-0494-428d-9fe5-b51fd1d14292",
        "cursor": {
          "ref": "188f3f9f-f00f-4134-b640-363de82f0b03",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d898c8a0-5863-4afe-a1e7-f728c630e08e"
        },
        "item": {
          "id": "8c18e64b-0494-428d-9fe5-b51fd1d14292",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e1b66821-1888-4702-b70e-7634b59061b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d2712c-e8cc-4ccf-991b-1703dc57f6f7",
        "cursor": {
          "ref": "3d9db703-9111-4e7b-a777-19a1ac30c606",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "86bd736d-1faa-4b23-9ac8-c6299075f7a2"
        },
        "item": {
          "id": "96d2712c-e8cc-4ccf-991b-1703dc57f6f7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "69abaee7-a2f1-4dc8-86a1-6f8fdd7b226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cf593d-be9a-49b7-ac91-4539241b6963",
        "cursor": {
          "ref": "0d6a5bf8-7b51-40d3-acc6-ca3fb01446c0",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4c089f92-1764-4cdf-b1fc-cdfe92b8b167"
        },
        "item": {
          "id": "e1cf593d-be9a-49b7-ac91-4539241b6963",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f8cd8097-b145-42ea-89aa-889cf69f2dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae92d41-1aa0-49a2-b4bc-c404c8a6432b",
        "cursor": {
          "ref": "8951ecb0-ccd4-442a-bb19-04f022043878",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e8d0cb7c-11aa-4dfb-83b1-c8ca2b22b95b"
        },
        "item": {
          "id": "0ae92d41-1aa0-49a2-b4bc-c404c8a6432b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "22702394-32de-4ddc-9c14-4b22041a0126",
          "status": "Created",
          "code": 201,
          "responseTime": 4332,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "459e4de6-1432-43a5-afb6-e586a642e9ce",
        "cursor": {
          "ref": "9fc42be8-54fc-4e9e-b79e-f0948ddf7615",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "008a2a3b-d8c6-40a3-b80e-cefaa78b4b06"
        },
        "item": {
          "id": "459e4de6-1432-43a5-afb6-e586a642e9ce",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "913071b4-05be-4408-abc2-7ab527ed7117",
          "status": "Created",
          "code": 201,
          "responseTime": 5011,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "542a81e5-2ee8-4f07-ab02-69233db40958",
        "cursor": {
          "ref": "f12178f5-2224-40cd-abcc-1a403b5605e5",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7e32af57-5a8e-451e-adcf-10a532deba4d"
        },
        "item": {
          "id": "542a81e5-2ee8-4f07-ab02-69233db40958",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dba601d2-8b1a-4e7f-8398-ca8d466d4bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95477bc-aa53-4188-8a71-1a7d2970b008",
        "cursor": {
          "ref": "360bb31c-81a6-44f4-a5c0-1714c4fb2dcc",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18a7b289-cd72-48bb-bf3e-f454c8dab7bb"
        },
        "item": {
          "id": "e95477bc-aa53-4188-8a71-1a7d2970b008",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6893420a-a5bd-4db8-9fa8-9481740b153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b534f6f-00b4-4d00-ad32-2c27a2c5c0a3",
        "cursor": {
          "ref": "2673ee52-ac82-4a4a-bdef-4ff7877ba6ed",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8f94fbd2-ff96-4de9-9e2e-3f3d6bde42a0"
        },
        "item": {
          "id": "3b534f6f-00b4-4d00-ad32-2c27a2c5c0a3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "924e0942-d3ac-4e7f-8ecf-ca8596174fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e557c7-5244-483f-80fe-4fc5ca235824",
        "cursor": {
          "ref": "059a9ca0-9124-4ed9-8edc-9d7660e33c4d",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "affe4fb3-cb06-4e94-9d05-207bb948a37e"
        },
        "item": {
          "id": "c4e557c7-5244-483f-80fe-4fc5ca235824",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b683c9eb-c85b-4a31-af2a-89e0f1ed16a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0b1fd7-d619-4784-8061-9b2169913164",
        "cursor": {
          "ref": "e1d08b4b-f9b8-4585-b223-6e20d741a0e2",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e69fb840-236a-4a35-9ebe-1afcecc6535c"
        },
        "item": {
          "id": "8c0b1fd7-d619-4784-8061-9b2169913164",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9ddb8f2c-5507-4f6b-910c-5b3cc5fa1e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e3c760-c9dc-4fff-bd2f-895162ce6bcf",
        "cursor": {
          "ref": "2634120c-369a-47b7-9e41-6877876cb2d7",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "63306b96-fcb6-441c-9c21-13cc1921d250"
        },
        "item": {
          "id": "f3e3c760-c9dc-4fff-bd2f-895162ce6bcf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "93e4a131-4d80-4be8-8e7e-c3a8c8fa4d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42574ce-82ae-488c-8143-29a2e35f6787",
        "cursor": {
          "ref": "238811e1-ca18-4737-80b6-b1a0df4e919d",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "79ad00ff-870a-4e63-9f37-d4248796dfa5"
        },
        "item": {
          "id": "b42574ce-82ae-488c-8143-29a2e35f6787",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d1863c8c-a0ef-48d9-924e-b84a3c9d9987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304bf901-9151-4401-89c2-ab5e058f669a",
        "cursor": {
          "ref": "3d6d5650-f76a-4df7-9e02-3c91653fd640",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "788eb299-dc7f-4ec2-a16a-c1dc471ad259"
        },
        "item": {
          "id": "304bf901-9151-4401-89c2-ab5e058f669a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "526f9e7b-4cf1-4267-87a3-312c2d81e716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c24ec8b-69f8-4fe1-9ee9-c8176d12d3ca",
        "cursor": {
          "ref": "c95fe52e-c478-44fa-bed7-7a2f852fd5d2",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d03b98c0-7688-4021-b69a-5771d022673e"
        },
        "item": {
          "id": "6c24ec8b-69f8-4fe1-9ee9-c8176d12d3ca",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dba43ca1-a26b-41ec-8af9-3caaf291b60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690b654-718a-4f38-9bbd-7053f387f249",
        "cursor": {
          "ref": "cf80f880-5dab-4605-9757-160db685e39a",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f00890a4-1ca9-4e54-aa15-daaac02467c1"
        },
        "item": {
          "id": "0690b654-718a-4f38-9bbd-7053f387f249",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d3f41913-17b6-4176-882a-6426464547d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b823818-32b1-413d-8183-41d1e2f10bb4",
        "cursor": {
          "ref": "7ecc7d81-1fcc-42af-8679-89d1e9aea839",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "292d6375-1bfe-413a-a3d8-9fd03bf2b3e2"
        },
        "item": {
          "id": "7b823818-32b1-413d-8183-41d1e2f10bb4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "101a4532-6227-4ded-8c6c-a99ab01017e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf5d4a-bf8a-4ef4-9c1b-04d53720cb94",
        "cursor": {
          "ref": "6269b3b6-b237-4592-8979-26b505b1bef3",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "999d1e69-c79f-4b3d-83c9-b5eb076db146"
        },
        "item": {
          "id": "edbf5d4a-bf8a-4ef4-9c1b-04d53720cb94",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "49d43484-a135-4ef5-be93-df7e13d02306",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1814,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "e85edd13-db02-4d7f-bf0f-b08dc53e2f48",
        "cursor": {
          "ref": "92ff5dc4-45a9-4fe4-9069-3933a3540653",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca8ac457-e609-455a-b923-a4efbfdc56fc"
        },
        "item": {
          "id": "e85edd13-db02-4d7f-bf0f-b08dc53e2f48",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f51a8d29-9413-4f7a-a210-5bfed834783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceb6f5d-753f-4aa9-bad7-1c8658a160cb",
        "cursor": {
          "ref": "6c1637e2-36c7-44a1-937e-0353af62c53c",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "989e3f82-835d-4ab2-baa8-c37309474fde"
        },
        "item": {
          "id": "8ceb6f5d-753f-4aa9-bad7-1c8658a160cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd8ac34d-c99f-4398-a45b-1f6282189573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1e30d0-bee4-4d45-b64c-f49407bd1538",
        "cursor": {
          "ref": "7220f972-130f-4168-870c-8b21f5a5cabb",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "53ad36c3-e92a-4119-aeca-13897a5805cb"
        },
        "item": {
          "id": "0a1e30d0-bee4-4d45-b64c-f49407bd1538",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fccf06cf-4731-4432-900c-c77585da2514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2094a3a-3a24-4e35-8a4a-76de4acf526a",
        "cursor": {
          "ref": "996a18a4-87ac-41b4-b5b7-7fb60cd05a82",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ad51afa2-7599-443e-b1b1-efa82b616db4"
        },
        "item": {
          "id": "f2094a3a-3a24-4e35-8a4a-76de4acf526a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7763d969-c1db-4d00-8ada-703792bd4e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6b0ed0-0683-4000-a9c3-4dd775a1cfee",
        "cursor": {
          "ref": "ec31822f-d047-41dc-9c15-f476bbb040a9",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bcc75c26-2e21-4415-8d24-910b94e8ecc3"
        },
        "item": {
          "id": "ee6b0ed0-0683-4000-a9c3-4dd775a1cfee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10373f45-05f6-4369-b214-531ed841f7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a853d929-0d38-4740-88e0-9800e176d888",
        "cursor": {
          "ref": "a41bb03d-a16d-4744-968c-69c8361e71a7",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1750aec9-cfab-4e53-b69f-be0dfdf9d74e"
        },
        "item": {
          "id": "a853d929-0d38-4740-88e0-9800e176d888",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "33107f33-38c5-4ba0-a77d-c41ceed004fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb53085e-4bc7-42d4-a9b7-889afbffb990",
        "cursor": {
          "ref": "82e7ca5f-8ae8-4f71-8aaf-a3c40edc4769",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "00d978d1-222a-4fea-992c-86a96c7cf7f7"
        },
        "item": {
          "id": "cb53085e-4bc7-42d4-a9b7-889afbffb990",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "33a55044-a5e1-4d0c-8f9d-486fd3d64562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c3512f-9749-4e5b-8daf-d810f346cf6a",
        "cursor": {
          "ref": "d4d3067b-2f45-4550-b99e-9340b534a63c",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "00b6d5a9-2386-4233-8865-721ad6775421"
        },
        "item": {
          "id": "07c3512f-9749-4e5b-8daf-d810f346cf6a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "567293cf-c83a-4ebb-913d-bdf289b67fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c92ebc-b623-4d62-b6ec-4aa5b83758ae",
        "cursor": {
          "ref": "004dda67-aba9-4f74-abf7-d72afadd0d20",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9ace31fb-c052-4582-8ec6-b4ba204aedc7"
        },
        "item": {
          "id": "36c92ebc-b623-4d62-b6ec-4aa5b83758ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d94ee8e4-e73d-495f-a8ef-300dac3b843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86240e82-3f6e-4540-ab91-39c5bad2b5fa",
        "cursor": {
          "ref": "5b585358-ac3e-434d-ba73-dc92dda0804f",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "20552f89-a133-49b3-8a3c-d26e244e8bc7"
        },
        "item": {
          "id": "86240e82-3f6e-4540-ab91-39c5bad2b5fa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bff3b13a-8739-4b44-acd6-8f2d4f118299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315b82ca-11b8-491f-bc4f-5919d91cb518",
        "cursor": {
          "ref": "8ee51140-d155-4c33-93a8-b07976ea6e14",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce39ae2f-f6d3-4f70-8492-8b06d47a3cb2"
        },
        "item": {
          "id": "315b82ca-11b8-491f-bc4f-5919d91cb518",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8ca9cef9-e505-40d4-9be0-536d9b72dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cace6b4-b549-4f2e-99fc-05abbdbf1fdc",
        "cursor": {
          "ref": "eb0a0739-4aef-4689-873f-4e3ba7301c6c",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "463a0fb4-3b7a-498c-9e8d-9007ffbd9cf7"
        },
        "item": {
          "id": "2cace6b4-b549-4f2e-99fc-05abbdbf1fdc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "48d5917b-945e-431d-aaea-cee82510f96a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 653,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a699051b-bcd9-40f1-b6c9-65524d02fb2b",
        "cursor": {
          "ref": "9566b99a-f924-4f3c-a921-04c39a707cd9",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "01de7e07-0677-4149-9a92-d1f8f1e11659"
        },
        "item": {
          "id": "a699051b-bcd9-40f1-b6c9-65524d02fb2b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "72e62f59-adbc-4ced-8429-1b1c990dc10d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 559,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "c78fcbd2-c79b-4637-9d4c-bf0e38c41bbe",
        "cursor": {
          "ref": "d74a483d-085e-47f7-923f-5aa48a5be7a4",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "22ca18b2-0b91-49df-9929-7e3858c11f51"
        },
        "item": {
          "id": "c78fcbd2-c79b-4637-9d4c-bf0e38c41bbe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ac5ff3ca-6def-440c-a53c-09830d9f7ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b58a45c-eecb-48ec-9870-92dd50ec97e0",
        "cursor": {
          "ref": "db14428d-1e51-40ad-85f8-663164fa86e6",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "df62ed7c-32d4-45e1-bb2d-3216847a111c"
        },
        "item": {
          "id": "9b58a45c-eecb-48ec-9870-92dd50ec97e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "80ba5870-b423-4239-9d7c-c49a69fc5e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37da0eaf-f87e-4844-b9b9-3fddc033c351",
        "cursor": {
          "ref": "626610b7-e42e-4078-be89-d02f3e935331",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d4714f9e-5673-4bec-a458-581a55411043"
        },
        "item": {
          "id": "37da0eaf-f87e-4844-b9b9-3fddc033c351",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0e2a3f13-70cf-4a44-a61b-6b692a78eef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa48bee-2de5-46f5-b72c-2f7b298187e9",
        "cursor": {
          "ref": "c4c824ec-6c5a-4a41-9796-45bd57f6ddfe",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6ad587f5-bf3f-4d99-96f0-ab46f7100c86"
        },
        "item": {
          "id": "7aa48bee-2de5-46f5-b72c-2f7b298187e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "df31adaa-9a43-4b02-b469-52798e041e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93eabff-b01a-46e9-ab9e-ef5d1b6f172e",
        "cursor": {
          "ref": "819dd9f5-33cb-49bb-ac94-df33a2631b58",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fe3352f8-dd1a-47b7-9833-5f602d9f6068"
        },
        "item": {
          "id": "c93eabff-b01a-46e9-ab9e-ef5d1b6f172e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a2ff0503-b4df-4e4f-a4cd-052c8d716754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7e87f7-ce55-41cd-a2e3-a63d6ffe737d",
        "cursor": {
          "ref": "95da6096-c3fc-4bd4-8ceb-a20a7fdaaa25",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9bf4f42-62cc-4dd5-b601-1f0ff75640a8"
        },
        "item": {
          "id": "ea7e87f7-ce55-41cd-a2e3-a63d6ffe737d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ae6eef0a-dd18-4cfe-ac92-ec75d446c34e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 641,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bd7402-ca06-463b-a943-56bb18fc6275",
        "cursor": {
          "ref": "e31d2313-6eb1-4893-9e42-32ba95595143",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0a1ce5ea-b5c1-4768-8a28-c814f059f97a"
        },
        "item": {
          "id": "b6bd7402-ca06-463b-a943-56bb18fc6275",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "95f33200-d365-4c96-b34f-d6803a493f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fd3d24-307e-42fd-9e94-74ad76c33284",
        "cursor": {
          "ref": "b46fce5e-0261-4219-9395-f9b2bbb595a3",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36824c9a-3939-4c61-9be4-1bea2692edd3"
        },
        "item": {
          "id": "b9fd3d24-307e-42fd-9e94-74ad76c33284",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d0861f57-c6f9-4811-8079-cc3d740018f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c0d183-cfd6-43e4-a45a-b31072de0b73",
        "cursor": {
          "ref": "2ac04b3c-e1d2-4bb1-8b16-2cfc2379474d",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "80db0f20-c468-445e-bb18-1f779c75d853"
        },
        "item": {
          "id": "35c0d183-cfd6-43e4-a45a-b31072de0b73",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b5bd6ca9-5051-417f-9841-c8c7a9b890e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e542a83a-00ac-45ff-a65b-a6d689245286",
        "cursor": {
          "ref": "05d1d817-8f9e-4a7f-856c-aab4e531fb1b",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8e032521-41d5-4357-9214-f0eb395f3fa7"
        },
        "item": {
          "id": "e542a83a-00ac-45ff-a65b-a6d689245286",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cff79d06-b71a-47f1-a112-41f6e46ec6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e9e817-2590-4fe0-96cb-59a0e6757082",
        "cursor": {
          "ref": "5323befd-ec47-4738-9f42-26e6e1afe00d",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2a80a709-cc3a-4811-9fd4-f2de015329b7"
        },
        "item": {
          "id": "b6e9e817-2590-4fe0-96cb-59a0e6757082",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "343d0882-713a-4dad-88d3-d30f4a474206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120be7ae-05bc-436d-abb1-bf922fd0ba4c",
        "cursor": {
          "ref": "926748b9-76ba-4541-9500-45a111367315",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fcdca9ef-594b-41de-8fcd-5da0dfab38ff"
        },
        "item": {
          "id": "120be7ae-05bc-436d-abb1-bf922fd0ba4c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4ca2044a-d1b4-4eeb-9f56-3f2a7eb93d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72e94e9-002e-4445-80a3-dfcd24e1d5ae",
        "cursor": {
          "ref": "ec0fd68a-9e94-4a82-9323-589eff5b57d2",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "168403f8-8321-4916-816a-0c5b56ebc283"
        },
        "item": {
          "id": "f72e94e9-002e-4445-80a3-dfcd24e1d5ae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "68556268-26a9-48e8-a892-ac2d8f4812c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5e1eb0-e7d1-46f8-aae5-ceef0d09e916",
        "cursor": {
          "ref": "b5b7fe19-4e05-44a6-ad99-f607f74ab87e",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "090e1ee6-cad6-4278-980f-aab6d0b626f3"
        },
        "item": {
          "id": "6a5e1eb0-e7d1-46f8-aae5-ceef0d09e916",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "30d78efa-9b7e-497c-a92c-58a710d1273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2d8de6-5c93-44a5-8ec2-7f7b1905a6c9",
        "cursor": {
          "ref": "63f2cd7c-6007-403d-a98b-eb78ba1193ac",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a17fc81d-ca5c-4fef-9af9-06f043105f8e"
        },
        "item": {
          "id": "ea2d8de6-5c93-44a5-8ec2-7f7b1905a6c9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a0361ad6-baa9-4523-932a-ecb8fbc77bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ed3e23-47a7-4d04-a980-cd9893e53408",
        "cursor": {
          "ref": "f4c34135-250d-4993-9b42-9f2cca7f52ac",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "02454545-1563-44be-b08c-e282ec9d2576"
        },
        "item": {
          "id": "80ed3e23-47a7-4d04-a980-cd9893e53408",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dd91257e-1034-4712-85b7-bf8b1509cd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4381bf1a-b86e-4935-a3e2-978073b19745",
        "cursor": {
          "ref": "7144e8a4-5945-4d2a-80c9-e4e64acfe7d6",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f290e17a-6dc4-4339-9762-8150c6325506"
        },
        "item": {
          "id": "4381bf1a-b86e-4935-a3e2-978073b19745",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3cea7894-2a6a-40dc-ac34-5c4945dfc8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251dd16e-65f2-48fd-82a3-b143fbef82b6",
        "cursor": {
          "ref": "e8e0272d-0c9b-4e21-aaad-f159dc7744a8",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "19267c57-9c1c-48b0-9272-5e15a3d16b5c"
        },
        "item": {
          "id": "251dd16e-65f2-48fd-82a3-b143fbef82b6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "01266ccc-9dd3-4b9a-b25a-ac8ee6cd4c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476a4312-771a-4dc9-9b34-aff6c4f227f1",
        "cursor": {
          "ref": "4c004b1b-529d-43e6-99a8-42a9e6389bdc",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b16ba0bf-aa98-4a51-b87c-f56532f21612"
        },
        "item": {
          "id": "476a4312-771a-4dc9-9b34-aff6c4f227f1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f0712e8-5582-48be-a147-bef53ff67874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1138fea2-190a-4405-9257-52a4fdd2df4d",
        "cursor": {
          "ref": "957e4d52-de76-4e62-820c-98ea97a0351e",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2cc59052-ec84-4e03-a89a-929d8440059e"
        },
        "item": {
          "id": "1138fea2-190a-4405-9257-52a4fdd2df4d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5b968bdb-a21b-4f5e-ba6a-5d52bed53878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af0840a-95bf-48e4-9541-71ed0710a2e1",
        "cursor": {
          "ref": "9fe72221-064c-4fef-af18-3a085b4b744a",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81bb88d6-7c70-4ed3-854a-4dbc2d1d23ce"
        },
        "item": {
          "id": "4af0840a-95bf-48e4-9541-71ed0710a2e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b98cf325-56c1-4825-9849-4a47fb4f9aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e78b11-911a-433f-a355-e9d68a55684b",
        "cursor": {
          "ref": "11313072-7758-4e11-8426-790bcd74d797",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c7a7fb00-1292-435b-bed2-24d53f0db622"
        },
        "item": {
          "id": "85e78b11-911a-433f-a355-e9d68a55684b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7a7ec61d-cc56-4630-ae49-1748ee6f6adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dd8aac-2d57-4b3a-90ea-4893fb860625",
        "cursor": {
          "ref": "ab8550c7-35ef-4e35-a8f4-13f252fdde74",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "756e33bc-3a9e-4feb-a009-81c8c1e083fa"
        },
        "item": {
          "id": "87dd8aac-2d57-4b3a-90ea-4893fb860625",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "300b783d-dbc0-4764-b968-13ad8bd39069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef2dfb3-6ecb-4369-86b0-f967827e2acf",
        "cursor": {
          "ref": "eb94b1b0-27ea-4314-b47b-8448bfefcd6d",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e0a8f697-920d-4ba1-b501-00a2f8717739"
        },
        "item": {
          "id": "aef2dfb3-6ecb-4369-86b0-f967827e2acf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a0b1b544-ccb2-401e-9cca-cf8672755d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ed545f-ec18-4261-bac9-124a6024ffb7",
        "cursor": {
          "ref": "76323408-7983-435b-aa78-ede3ee1bb837",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e3bfc93e-ff23-4e65-af03-a5de2d213814"
        },
        "item": {
          "id": "14ed545f-ec18-4261-bac9-124a6024ffb7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3ea9c532-f823-4d1b-9c65-7a8dcc8bf8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feada5e5-6555-49ce-ac64-15b493003332",
        "cursor": {
          "ref": "d93f8861-a83e-43dd-96f3-636413fd5362",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "82cbe674-72bb-4d8b-8a55-0c5570d6d634"
        },
        "item": {
          "id": "feada5e5-6555-49ce-ac64-15b493003332",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8d54b7b1-05c4-4576-8bab-92067b41e49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23014647-deb3-4199-81db-64f1d0f6ee6a",
        "cursor": {
          "ref": "e1e654ed-b4f7-4285-bd82-16f518af7b17",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7088ee8d-cd98-4bf3-adcf-bf4acdf187e4"
        },
        "item": {
          "id": "23014647-deb3-4199-81db-64f1d0f6ee6a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "12e8149b-40d4-452e-9d93-005dfdd2e06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487e5f2b-1f5e-4cd4-916c-a503462249a4",
        "cursor": {
          "ref": "657198a6-de3a-427c-9caf-91284cfa7633",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7c540312-5bb9-4c22-a456-dd5ddba8ba52"
        },
        "item": {
          "id": "487e5f2b-1f5e-4cd4-916c-a503462249a4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8102ca1f-b5f9-417d-8c9e-840e0b972709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed34d3-11f8-411d-94fd-6589e6b29a88",
        "cursor": {
          "ref": "36695416-51d9-4cf3-8b25-9957f2d11e93",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5d390031-52b9-4b00-beab-8d740eafbbe6"
        },
        "item": {
          "id": "fbed34d3-11f8-411d-94fd-6589e6b29a88",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a79167ea-8831-4a45-8fd2-f9d2fcb4cbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc61f8c-fa87-41fa-8553-d30a5da3db34",
        "cursor": {
          "ref": "fc053485-b763-4be8-8bd7-1bfca6769ed3",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5a8d41d5-5f21-4f85-b0a8-7f457e51572b"
        },
        "item": {
          "id": "4dc61f8c-fa87-41fa-8553-d30a5da3db34",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dfa73e6c-89a3-4484-b7e3-ded195a65470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8621d3a9-b2b0-4d49-9e40-1fed78878398",
        "cursor": {
          "ref": "42d89025-aaee-4e56-976c-2bf5bb998674",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "332a1469-130b-4bd0-ab48-05ee2ceb1b70"
        },
        "item": {
          "id": "8621d3a9-b2b0-4d49-9e40-1fed78878398",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "42f70e57-f88a-4362-94da-40a5255eb05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb4e722-05d2-4d65-a168-2b8ee7b41a4e",
        "cursor": {
          "ref": "8105f11c-793e-4129-982d-f3aa7c91bdb8",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4273283e-8c41-4012-8248-b5475a98761e"
        },
        "item": {
          "id": "7eb4e722-05d2-4d65-a168-2b8ee7b41a4e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d4a78711-99a9-4eca-ad42-c50fc912d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee510ed-6cb3-4b24-89d3-91c2d8527653",
        "cursor": {
          "ref": "0325014f-d033-4efc-883d-ae97dda53704",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5a4772bd-d4c7-47d3-af53-db53ad13eb54"
        },
        "item": {
          "id": "fee510ed-6cb3-4b24-89d3-91c2d8527653",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f2aa12ee-807a-413a-97b4-6b4812f463d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd80471-c806-4517-ad86-86fbf56feebc",
        "cursor": {
          "ref": "f952b878-7278-4e41-8967-ff8f62ffbfd1",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e3276d13-c5d1-48c8-b833-c87d286da1b1"
        },
        "item": {
          "id": "fbd80471-c806-4517-ad86-86fbf56feebc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4940a9b2-d63e-4861-ad54-bb6357d6135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c435895-8605-4f35-94f5-2f7c8dfe814c",
        "cursor": {
          "ref": "cd5b0bcf-25e9-4820-86b4-1c00794ba468",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2f7b44ec-723f-4f8e-9a61-0df39b0a09b0"
        },
        "item": {
          "id": "6c435895-8605-4f35-94f5-2f7c8dfe814c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "32c0db60-97a0-43c2-97c1-a45e08f8d638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284d7396-b4a8-4b40-ac24-be5dd127c5bc",
        "cursor": {
          "ref": "5456f4ec-69aa-436a-805c-1a94b157aac3",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3f961f69-ede5-4aa6-8976-bafc0a8e7f60"
        },
        "item": {
          "id": "284d7396-b4a8-4b40-ac24-be5dd127c5bc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "96c7f1cc-f804-430a-90d8-e0e72fda353c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4257e5b6-d900-4c8e-bc40-5f3bf2f601c2",
        "cursor": {
          "ref": "6ae01aa8-c1d1-451e-8183-6578f271ce1c",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a0b12308-60b4-4517-b0dc-cf42fde9eba8"
        },
        "item": {
          "id": "4257e5b6-d900-4c8e-bc40-5f3bf2f601c2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5fd2a3e5-070c-433a-bdea-d0a17d4dc092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f21ceb-61f4-459f-b9be-b83d583acfc7",
        "cursor": {
          "ref": "3fd8bdce-01d9-4a24-a27d-0c9f27593c61",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "be7a9c85-d563-410a-98b9-d87d8128bf6e"
        },
        "item": {
          "id": "08f21ceb-61f4-459f-b9be-b83d583acfc7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "abc20cab-1c51-4f5d-9bc9-d23fd255a655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e3c490-0e79-4343-934c-fb7d14f6c944",
        "cursor": {
          "ref": "a65a65b3-ca6f-48ca-a106-453c0bbc74bc",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56d00e58-0423-4e92-bd95-346856289074"
        },
        "item": {
          "id": "f8e3c490-0e79-4343-934c-fb7d14f6c944",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "db46ca12-2123-43d0-8e62-d73fa13acc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73a80cb-9956-4fa4-b807-e6982ec12a3e",
        "cursor": {
          "ref": "8325df96-3176-48f3-8901-5139d4db849b",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4ec73bd5-702f-4559-8fd2-3abd2e3c602a"
        },
        "item": {
          "id": "d73a80cb-9956-4fa4-b807-e6982ec12a3e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7c605121-064a-4424-8b3d-93d755fb3e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac696a1-4358-46c5-a334-de40fdc77ed1",
        "cursor": {
          "ref": "3359eede-fb0e-4c3d-b243-ab0991865347",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "18b1d40b-fafa-4959-a5e8-2c3bb2c1ece9"
        },
        "item": {
          "id": "bac696a1-4358-46c5-a334-de40fdc77ed1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "88587f64-31c7-4152-bab4-cf265fd47619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2eb99f-5dbc-44dc-a917-9800086930e0",
        "cursor": {
          "ref": "bfa9639e-ddb6-483f-bb70-0fc52eb143da",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "75e684e0-fed4-4ef3-9ac3-949e4402623e"
        },
        "item": {
          "id": "9c2eb99f-5dbc-44dc-a917-9800086930e0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7187c99a-aa6f-4917-a84b-171a3b7ce501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17230f0-c4fe-4c8f-bd8c-5d01e66d8363",
        "cursor": {
          "ref": "8da4da67-3c81-401c-9c0d-659ab07e5501",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0a92bccb-2fe9-4b6b-8af3-caedaf27c524"
        },
        "item": {
          "id": "e17230f0-c4fe-4c8f-bd8c-5d01e66d8363",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6bc4a1c8-ef60-4632-815a-e99f1cf3fc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f119bd-de7b-4893-9406-55e35f229535",
        "cursor": {
          "ref": "11a22ef7-7397-4b58-bcca-9aa7d1833d33",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43f4ff94-c7a4-45a2-854b-49686dd76aad"
        },
        "item": {
          "id": "e8f119bd-de7b-4893-9406-55e35f229535",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ef1fd4f0-bb19-4c9c-9a68-08bc629f078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293c1de7-861a-492c-bcb2-3cc20386a2d6",
        "cursor": {
          "ref": "f3ee8e60-2985-4654-9e74-b9a3e5737846",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ce5f2ee-b483-4a90-bba0-1ec76fe2f800"
        },
        "item": {
          "id": "293c1de7-861a-492c-bcb2-3cc20386a2d6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fe6ee2ca-66d2-4384-a66f-d73c3ee64f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853aecfe-0ef2-4c77-85af-f37cb35f9215",
        "cursor": {
          "ref": "9436c6c2-b6e4-4437-8f77-850d4a2c159d",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "296fa46e-844a-416e-a6d9-0c42828ad31b"
        },
        "item": {
          "id": "853aecfe-0ef2-4c77-85af-f37cb35f9215",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5d4c6545-757d-42c7-867d-652dfafe4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06820fd-8065-4c32-ad6f-3b1f5749440f",
        "cursor": {
          "ref": "f14cd3a5-4baa-498c-a3d9-536d3361c221",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7c1beba2-981f-49e1-be23-2a999f9cf77a"
        },
        "item": {
          "id": "c06820fd-8065-4c32-ad6f-3b1f5749440f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a288e780-4cf6-4642-b9ef-10afbc844d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffee0e6-9b71-40b7-8fef-76a247efd08d",
        "cursor": {
          "ref": "03442e6c-aaa9-415d-ac55-039e3b8af812",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0b8310c8-850c-49b3-b01c-d4a9a8639614"
        },
        "item": {
          "id": "3ffee0e6-9b71-40b7-8fef-76a247efd08d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e38621fb-9c5e-41d0-a887-2ecc392c2afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac737d92-84c4-4784-ac98-91dc1342e809",
        "cursor": {
          "ref": "54c1bd3e-de4a-4813-910f-ac73bcc251a3",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0c667f63-8c77-4346-95db-2116f983a49d"
        },
        "item": {
          "id": "ac737d92-84c4-4784-ac98-91dc1342e809",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f8753c12-0439-4816-99fe-f73bf1d38e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0c95a-ef67-4dd7-9d44-13933146c2c2",
        "cursor": {
          "ref": "233d29d2-7e8a-45a8-b46e-943f528e1cea",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ff923601-3099-4257-a9a2-02a8f5df7bc6"
        },
        "item": {
          "id": "39a0c95a-ef67-4dd7-9d44-13933146c2c2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "502ff3c9-726e-4693-9e98-c31f9a57f154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33ba116-7a64-4252-bfb0-024d578a1a0a",
        "cursor": {
          "ref": "bd9913a5-ad9b-4616-b346-28acd8af6f90",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9c9b1978-76fe-4762-be4a-30a74fb40c31"
        },
        "item": {
          "id": "c33ba116-7a64-4252-bfb0-024d578a1a0a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9d8bdd46-d5b1-49eb-81c2-01dc4a6b1625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c7c7ca-2286-4294-91d1-7032051cba23",
        "cursor": {
          "ref": "4f309571-6ca5-4014-9498-d14e070a53f7",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "820df929-4e1b-430c-9ad3-283f4d5fe03f"
        },
        "item": {
          "id": "f8c7c7ca-2286-4294-91d1-7032051cba23",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "23248845-3745-4682-9494-7e2c1a5def28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f9bb15-0369-4cb4-9345-a29ec529072f",
        "cursor": {
          "ref": "41e14ffd-a3ea-4bbb-bc41-7955ea4ca6e0",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "86b00eb7-3b04-47c1-b94e-7426567661b3"
        },
        "item": {
          "id": "96f9bb15-0369-4cb4-9345-a29ec529072f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ca540fc-3245-481e-8707-a64eec57c874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212f89c2-6300-4d91-a2a9-2d8bb72a93c7",
        "cursor": {
          "ref": "45686fe9-bf99-4453-8571-129e85d50de4",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "93fa3a97-bce5-4a53-9c99-f7243ddb385e"
        },
        "item": {
          "id": "212f89c2-6300-4d91-a2a9-2d8bb72a93c7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b8e05158-7e44-4582-add3-c51a7f5282b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d81a0d-92d8-4473-9f30-e4d521d5b2cb",
        "cursor": {
          "ref": "7367b38d-7788-4d28-91ec-73552e02abe6",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4f9758bf-1781-41a7-88bf-ef04e8cc6472"
        },
        "item": {
          "id": "40d81a0d-92d8-4473-9f30-e4d521d5b2cb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b617ebbe-3c19-4de3-b14a-c5e6bb32e69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dac944-1c95-46c8-986c-e1d9ea2be0f5",
        "cursor": {
          "ref": "11720ceb-9862-4087-8e4e-8c087f7d6202",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "331ac528-cb86-4beb-9993-1953e2804614"
        },
        "item": {
          "id": "39dac944-1c95-46c8-986c-e1d9ea2be0f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4bff64aa-1d1b-4fed-baf5-ca8163feb96c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead3517d-4ed4-4799-acb4-55df9d0be32a",
        "cursor": {
          "ref": "86afd987-1600-475e-bf32-87651d19308e",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "39a988a6-4aca-4b80-b606-e24308207817"
        },
        "item": {
          "id": "ead3517d-4ed4-4799-acb4-55df9d0be32a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "56354187-d764-4ccf-b86f-7b44c9ea3dd9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 555,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d44616d-48c1-447f-9495-9bcb0d4d5701",
        "cursor": {
          "ref": "f26d17f0-c4f5-44ab-8b97-4ddcbd052999",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "92918fd7-c1ef-4896-9486-b1c140a35dbe"
        },
        "item": {
          "id": "3d44616d-48c1-447f-9495-9bcb0d4d5701",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2dd9b674-e633-40f0-ae76-11d44247f20d",
          "status": "Created",
          "code": 201,
          "responseTime": 5342,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a76813e-a3f2-4d85-870c-b3c12df3e1cb",
        "cursor": {
          "ref": "46088e73-ab07-4c17-a49a-104b39190d38",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a11bee58-c164-4179-b41d-1bf29c05890b"
        },
        "item": {
          "id": "4a76813e-a3f2-4d85-870c-b3c12df3e1cb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e398773d-d283-4384-b7cb-cd5a4f1fad71",
          "status": "Created",
          "code": 201,
          "responseTime": 6382,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d73c8df-7d93-497c-9578-76d2c3067338",
        "cursor": {
          "ref": "0d80f121-8cb9-46fe-9864-9bce16962d55",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "68b90445-4680-4f9d-8313-adb86d789c7a"
        },
        "item": {
          "id": "1d73c8df-7d93-497c-9578-76d2c3067338",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "630cd298-1449-448e-a50f-fee7e0d1354f",
          "status": "Created",
          "code": 201,
          "responseTime": 7209,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd9ae4c-3970-4f72-9d91-da85d17079ad",
        "cursor": {
          "ref": "0e92b66d-bde5-4081-87b8-600deb2de396",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "10e6b53a-78b9-4847-a81a-cb030acc0624"
        },
        "item": {
          "id": "8fd9ae4c-3970-4f72-9d91-da85d17079ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3f64fb48-2cdc-4325-a9f6-3d4e106bb689",
          "status": "Created",
          "code": 201,
          "responseTime": 4796,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "98097de1-ecf5-4bf2-88e1-3c212385e43c",
        "cursor": {
          "ref": "10e9b3f0-f3b3-4c6e-8a59-2a2c7356e134",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "209ccb3c-b93a-4fc9-959d-d38efe25957a"
        },
        "item": {
          "id": "98097de1-ecf5-4bf2-88e1-3c212385e43c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0ca7f003-9b98-4c3c-ba60-9adb5ae2a58b",
          "status": "Created",
          "code": 201,
          "responseTime": 5509,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ab75f9-42f9-4eac-90df-1326479edbc9",
        "cursor": {
          "ref": "681a1c0a-9647-4d7a-b634-0c758edbb19e",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "13223460-1108-4d53-bdee-971a77843378"
        },
        "item": {
          "id": "02ab75f9-42f9-4eac-90df-1326479edbc9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ce42e7a-3698-4ef4-b915-4eadf3b720c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ab75f9-42f9-4eac-90df-1326479edbc9",
        "cursor": {
          "ref": "681a1c0a-9647-4d7a-b634-0c758edbb19e",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "13223460-1108-4d53-bdee-971a77843378"
        },
        "item": {
          "id": "02ab75f9-42f9-4eac-90df-1326479edbc9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ce42e7a-3698-4ef4-b915-4eadf3b720c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2709d4-bc8b-4e19-8639-68fc32c98f1f",
        "cursor": {
          "ref": "94415189-c5df-45ad-ae7d-931908834f18",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d6fa7463-5c86-4988-a512-517e11c326ec"
        },
        "item": {
          "id": "6a2709d4-bc8b-4e19-8639-68fc32c98f1f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf278100-4b7f-4f8d-a416-40e4219ba4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9eb61b-4d9d-4df8-9be7-50a5def4a1cf",
        "cursor": {
          "ref": "2b0abd46-6b3d-49dc-8b26-deb6b7624869",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2eb41a02-f75c-4b8d-ad34-0b3c6c530270"
        },
        "item": {
          "id": "3a9eb61b-4d9d-4df8-9be7-50a5def4a1cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4162cde1-50e9-4ffc-939a-43ea91356a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9033f72-7560-43ae-96f6-81f3e7569891",
        "cursor": {
          "ref": "792d374d-5b96-4577-8521-d68f44676623",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e0b05d6-02d1-4bf2-b74b-34068e9caadc"
        },
        "item": {
          "id": "c9033f72-7560-43ae-96f6-81f3e7569891",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d2d137cd-c38e-4d78-98dc-44bf6f2db666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee276b-b05c-43c0-8098-4a05e48cdb4a",
        "cursor": {
          "ref": "0941463f-2a24-449d-8b04-fd2b8406dbc4",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63ea4205-2892-46e7-99d0-c482ef724502"
        },
        "item": {
          "id": "47ee276b-b05c-43c0-8098-4a05e48cdb4a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "072adba7-7987-422e-b03c-41d5cce969a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9979e200-7312-4125-8b34-9914370f56ea",
        "cursor": {
          "ref": "1be65ec7-c7b0-45c1-8718-70abdb3e3d91",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "97cbdc37-df56-4f74-a1bd-5d1c0858dcc2"
        },
        "item": {
          "id": "9979e200-7312-4125-8b34-9914370f56ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cbc8365c-ffcb-4a1e-ac73-146c346aa00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc43f3e-1cd2-4fa8-9f18-2855cf62cd03",
        "cursor": {
          "ref": "df472da8-448a-46e5-91d3-1fc88762fbd7",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "630fa975-48e4-4051-8556-0746faa41003"
        },
        "item": {
          "id": "6bc43f3e-1cd2-4fa8-9f18-2855cf62cd03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42387a7c-ea87-44da-8622-d64a4d10a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b988ff-d95b-4248-8eff-bece846917a4",
        "cursor": {
          "ref": "82b2c771-a946-4c63-b430-d643ca50cdcb",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "16a259c8-2b79-4d2c-ac18-d98de3488a6f"
        },
        "item": {
          "id": "99b988ff-d95b-4248-8eff-bece846917a4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8960e086-e8f8-40b6-8089-09c7db6d0a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcb883a-38a5-4c9f-bbbe-89f65243319f",
        "cursor": {
          "ref": "d0ba0e20-3b88-4a54-ae41-5188d9996497",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2e479950-4f5a-4ff9-af80-95b7007f346a"
        },
        "item": {
          "id": "6fcb883a-38a5-4c9f-bbbe-89f65243319f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "367e1701-b441-463b-a1b5-47c2b0335f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98008a70-0204-4367-b928-cde6cecbb89b",
        "cursor": {
          "ref": "ad73d45d-a6d5-4074-935f-9e11d495525c",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4b3b4e0c-eef8-4a47-917b-7693f2983eef"
        },
        "item": {
          "id": "98008a70-0204-4367-b928-cde6cecbb89b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "16644feb-25cf-4dc5-9558-204162b2f304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93a75f2-4998-4a58-8dbc-f8d795b485f1",
        "cursor": {
          "ref": "43cfea9a-8bb5-4e07-b929-562fa20b8696",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9bdb61c6-1807-4877-90a5-663464cf693e"
        },
        "item": {
          "id": "c93a75f2-4998-4a58-8dbc-f8d795b485f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0aca730-7da9-4bbe-ae08-0e451649cc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f154ed-a736-448e-9241-bc91f37de6b4",
        "cursor": {
          "ref": "4a55331a-ae5b-4ce7-b1f4-deb41cb769b1",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d3983c38-c87d-4c17-a3eb-5c5774894a56"
        },
        "item": {
          "id": "20f154ed-a736-448e-9241-bc91f37de6b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a628ab9-8a5a-4c6a-886f-2d182a476c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec101d9-deb3-4abc-9c65-cfc08ff231d8",
        "cursor": {
          "ref": "f7dcdff2-404f-415b-9195-b21614930e3d",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d19a29ca-b27c-4f49-b43e-d8950bbfe8b2"
        },
        "item": {
          "id": "3ec101d9-deb3-4abc-9c65-cfc08ff231d8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9442ccb-0579-4e37-a812-2a5929f8a936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec15323-d923-4732-a136-7310b39ee87b",
        "cursor": {
          "ref": "c91a09c4-b211-4439-ac03-5e65d17df34c",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "98841be8-56b4-4903-b507-7194286270c1"
        },
        "item": {
          "id": "3ec15323-d923-4732-a136-7310b39ee87b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "706f7b96-e659-401d-87e6-c7405d8799ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fabd5a-deda-4a8f-8e29-fb03d41f2a01",
        "cursor": {
          "ref": "99a9ad29-2412-45fb-ae42-c69373fb9408",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3c040aab-6276-4c87-a0e9-305377d4a880"
        },
        "item": {
          "id": "79fabd5a-deda-4a8f-8e29-fb03d41f2a01",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27e68be4-2ae3-4955-a31e-c83b666d2402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955d7deb-f6f3-469a-ad66-6100c9b6dcfe",
        "cursor": {
          "ref": "ef4ce607-69f9-4a0f-8c16-a7347ebf5c21",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9006bba4-8830-4b8f-8d3e-18e680e8106e"
        },
        "item": {
          "id": "955d7deb-f6f3-469a-ad66-6100c9b6dcfe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e18ac1d3-1091-4a2d-a1af-41d1e3909efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c4a07d-2cf7-4f8a-81c8-037ba2ba2f83",
        "cursor": {
          "ref": "ef364028-8fe3-4660-993d-d10272ac8152",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f5b5c72-41be-43dc-8e0d-445a1c5e1d22"
        },
        "item": {
          "id": "39c4a07d-2cf7-4f8a-81c8-037ba2ba2f83",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bf6f96c8-6948-47ad-b212-53d382eadb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5284aba7-997f-4bf2-b97f-4b28ad166f08",
        "cursor": {
          "ref": "420556e8-1c38-43b9-87bb-3d32ff6ad708",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "38724261-ec41-4d8a-bae7-612a2b6e40d8"
        },
        "item": {
          "id": "5284aba7-997f-4bf2-b97f-4b28ad166f08",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2172aff-0552-4c7f-8d33-979b51d1fae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103e4109-8939-42bc-b9e8-36bf3d4852d9",
        "cursor": {
          "ref": "d63808c8-fb24-458d-b2f4-86980f4e8c48",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c47b0718-1fe5-4afd-bc67-b98e4202332d"
        },
        "item": {
          "id": "103e4109-8939-42bc-b9e8-36bf3d4852d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "508176cc-9d34-454e-b3b9-d7e8bf8a73b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daf40a8-fa2c-4b2e-902b-e4161f9725bd",
        "cursor": {
          "ref": "664718db-dcba-414d-a194-d8eaaf707283",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dc5aa94a-de8c-4642-84ba-de51522b2888"
        },
        "item": {
          "id": "2daf40a8-fa2c-4b2e-902b-e4161f9725bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d75ffdfa-671c-42e0-ae1c-f683488245bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2d7dbb-8293-4e42-89db-69d7818ed69c",
        "cursor": {
          "ref": "4adb0cd7-2082-4e12-892f-cd53e184d654",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ad274ae-4ab0-4f06-b442-4d396ccbb225"
        },
        "item": {
          "id": "0f2d7dbb-8293-4e42-89db-69d7818ed69c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "73a64002-d3a0-4090-9786-bbc4cdae6954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051434ac-897f-4813-a593-98ea4a1374c3",
        "cursor": {
          "ref": "656d8134-d0cb-4760-8c5a-213598936e0d",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cd51b584-ed34-4a78-a602-f7e9492e27bb"
        },
        "item": {
          "id": "051434ac-897f-4813-a593-98ea4a1374c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6faa906d-bac3-4eab-9d73-1a7fac9c4f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc00a1-ad28-4af1-83b6-17870bd6b510",
        "cursor": {
          "ref": "944fe0b9-b831-4d57-8814-a2bc68ca3273",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0f199953-aa63-43af-844d-0893fc9a4bea"
        },
        "item": {
          "id": "d9cc00a1-ad28-4af1-83b6-17870bd6b510",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cf7981c8-cddb-44e7-99d0-f113c38b2b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5add4f4b-8a08-45a8-9e64-27c3baeb347f",
        "cursor": {
          "ref": "a1c3e906-ad68-4cd3-980c-848a8bac89a7",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7eeab4da-0279-4005-8eea-cabe82c97bec"
        },
        "item": {
          "id": "5add4f4b-8a08-45a8-9e64-27c3baeb347f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "12c474b5-2c00-48dc-aaaf-a667bb94030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e8e9b7-b70b-473e-a73b-eb7c782e301d",
        "cursor": {
          "ref": "7ea34c42-5ba3-4f45-a799-1d105edb7624",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f79113c-e0d9-4e0c-b23d-7f0372ea5b8a"
        },
        "item": {
          "id": "15e8e9b7-b70b-473e-a73b-eb7c782e301d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "63309d7f-408a-4fa6-ac2a-47a75f0d9365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3b3ebd-c8ef-4c31-ba80-02492d9667d4",
        "cursor": {
          "ref": "f5c33641-354a-4000-bc01-d85582fd3121",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d2ca0f1b-7f05-4813-8c89-343f12c93e23"
        },
        "item": {
          "id": "6c3b3ebd-c8ef-4c31-ba80-02492d9667d4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce8934ad-f114-425c-8085-5ec3000084f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3b3e93-36cf-47e6-a13e-3f56faac238e",
        "cursor": {
          "ref": "82b3756d-4431-4545-8887-bad3557e84e9",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8bf9cf2e-f791-4819-8eb0-eea1803426a2"
        },
        "item": {
          "id": "6c3b3e93-36cf-47e6-a13e-3f56faac238e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0435930e-4ae0-4f61-a9fc-617442eca70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e69eda-f0c2-4c59-a479-1308a7923230",
        "cursor": {
          "ref": "b1a40c31-619c-4e01-a246-c4baa14e772b",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "956355fb-5c8c-43c8-92d2-2299f2407204"
        },
        "item": {
          "id": "51e69eda-f0c2-4c59-a479-1308a7923230",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc5af359-cf61-4435-9615-e527eefb3841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c880127a-93d2-492a-8693-e64773219830",
        "cursor": {
          "ref": "640a1a93-40c5-4274-83e5-84abd480485a",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e0137856-0dd2-4ce2-a356-6a677887fddb"
        },
        "item": {
          "id": "c880127a-93d2-492a-8693-e64773219830",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f8213f0-2b4a-4cae-a3a5-6ab7821fe092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47bb370-9923-442a-b03d-c9274fc22c5a",
        "cursor": {
          "ref": "fd127877-ab2d-4fff-acf8-08d30d19fb66",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "17f6fa06-1ea8-4070-80b9-f16a197c49a4"
        },
        "item": {
          "id": "e47bb370-9923-442a-b03d-c9274fc22c5a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "69cef07c-5c82-4eee-9c98-2c155f294ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39982c8-4a15-4452-a1d5-4d2d91365999",
        "cursor": {
          "ref": "a09761e0-dd73-43b0-b75e-086bb176cd54",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b7756991-9330-43f7-926f-4d0eece70871"
        },
        "item": {
          "id": "a39982c8-4a15-4452-a1d5-4d2d91365999",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7440b0b3-08f8-4c3d-99f4-ec509e9cab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fd4391-9733-4ec0-bfb2-9e7a19792135",
        "cursor": {
          "ref": "e022dc42-2be3-4fdd-93da-3e2aca2bb557",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9296b04a-4bbe-47ee-9da0-d09707885a39"
        },
        "item": {
          "id": "98fd4391-9733-4ec0-bfb2-9e7a19792135",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f92b0c12-8ec4-4846-b0fa-6be09cc4262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c0445f-13be-4a8b-b513-614bfe4d0490",
        "cursor": {
          "ref": "aafb169d-c13d-426f-a692-0d93db532998",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cab03a3b-0bcb-48db-b2d5-2fdc716fd1e0"
        },
        "item": {
          "id": "e6c0445f-13be-4a8b-b513-614bfe4d0490",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "75e83ddd-abea-449a-971f-928ef793833f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b35a17-bac0-466f-80aa-78cdff6e1f28",
        "cursor": {
          "ref": "b147c76c-ca7b-4ea9-a7e6-36cba6384752",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aa2a0d78-fe51-40ad-8757-cc4ad18409a5"
        },
        "item": {
          "id": "f7b35a17-bac0-466f-80aa-78cdff6e1f28",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "70aa3ec6-92d3-42f4-ba4b-e453dd25a886",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 888,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786bef54-21b3-4da8-9ebe-4be9a886d0b7",
        "cursor": {
          "ref": "45fc5137-5f66-45dc-bfb1-487a8a60bd76",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cf0555de-e85e-4b57-bd37-6cf0aeb87149"
        },
        "item": {
          "id": "786bef54-21b3-4da8-9ebe-4be9a886d0b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a6aef28a-d57b-41ac-b026-f6bc3f8befd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786bef54-21b3-4da8-9ebe-4be9a886d0b7",
        "cursor": {
          "ref": "45fc5137-5f66-45dc-bfb1-487a8a60bd76",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cf0555de-e85e-4b57-bd37-6cf0aeb87149"
        },
        "item": {
          "id": "786bef54-21b3-4da8-9ebe-4be9a886d0b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a6aef28a-d57b-41ac-b026-f6bc3f8befd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48901a5a-0406-4e23-afc1-515214b1ba6f",
        "cursor": {
          "ref": "dd1752c0-5036-40ee-87ee-37e91204fe51",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bab48cd9-2a33-4ff7-b9c0-473325431dc1"
        },
        "item": {
          "id": "48901a5a-0406-4e23-afc1-515214b1ba6f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2b9d86e-a389-46c8-b506-a0c7f15ee490",
          "status": "OK",
          "code": 200,
          "responseTime": 580,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "4ade1943-df60-4837-ae02-b7f2ad15ea4b",
        "cursor": {
          "ref": "e7d01269-b37b-4d22-88ce-3037da1a3cf1",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "86d0e363-49df-424a-9868-490fa2b30efa"
        },
        "item": {
          "id": "4ade1943-df60-4837-ae02-b7f2ad15ea4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "840434a4-043e-4641-a675-8e0618b77c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0141da-67a6-4b0b-b515-3e5efcb3bad5",
        "cursor": {
          "ref": "4ee2bb3a-c2ac-41e2-b893-8ad0b2e8c28b",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ff4f92a4-201a-4095-a6fd-755b66b0bad2"
        },
        "item": {
          "id": "9b0141da-67a6-4b0b-b515-3e5efcb3bad5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "deaf1167-99ec-4fd4-9811-1316261c9788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5223d3a7-91b3-46fc-933f-a2435ad40f92",
        "cursor": {
          "ref": "bab61840-54ba-4601-a7cf-18848c8193ad",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4eda909f-52db-4428-a249-f9e55959a99c"
        },
        "item": {
          "id": "5223d3a7-91b3-46fc-933f-a2435ad40f92",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6406775a-a918-4a57-b555-90912385d10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddb5eb5-21e0-4e97-9b09-dda7dbce4954",
        "cursor": {
          "ref": "8e90af33-3b86-4a44-91c9-63900daa6ae2",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "36e3282e-73d2-41e9-b27d-d0b4869b7c11"
        },
        "item": {
          "id": "3ddb5eb5-21e0-4e97-9b09-dda7dbce4954",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3b1b11a3-6520-46f1-a36b-81804cbee828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3432a-5172-4038-98bb-0c49306f465a",
        "cursor": {
          "ref": "a4644bba-4868-4357-8146-a95387144798",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f7ad2ea-b1b1-4cfd-8e13-b24a7ce318eb"
        },
        "item": {
          "id": "44c3432a-5172-4038-98bb-0c49306f465a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6f8ee484-766d-47d9-b7db-c20bf33e2eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8213b4-a808-4763-911c-dd864f4c27c3",
        "cursor": {
          "ref": "c1282836-4e5e-4271-948d-aa58847571ea",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5c171855-6723-4ea1-8627-ef6821063648"
        },
        "item": {
          "id": "0d8213b4-a808-4763-911c-dd864f4c27c3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a760e79-5736-4749-afa2-fccb21e7b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc22482-b874-48e6-bc2d-e7e61163f65c",
        "cursor": {
          "ref": "56bd5b83-f063-4ba8-bace-11ab96175c5b",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0854ca75-a138-460e-8a7a-7eb208b8e5ee"
        },
        "item": {
          "id": "fdc22482-b874-48e6-bc2d-e7e61163f65c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6bb29900-dc51-438f-a92f-ab78b3aa783e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ad6466-5afd-4cf2-ba55-2b3abe39bcb5",
        "cursor": {
          "ref": "0863f144-a6f4-4be5-9dad-61251929a0ca",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f4d8792-32c6-44e8-afbb-2f179c08b005"
        },
        "item": {
          "id": "08ad6466-5afd-4cf2-ba55-2b3abe39bcb5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "77dfa5f6-fc09-41cd-a350-b6e052855ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd816ba-c2d7-4082-b293-06c32bfb2fd0",
        "cursor": {
          "ref": "1f0dfed5-2901-4a25-83b9-650b4ccd343d",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f611868b-001d-4099-bcb8-061046934469"
        },
        "item": {
          "id": "efd816ba-c2d7-4082-b293-06c32bfb2fd0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4ebbe80c-9647-4c62-a30e-31173da35a9f",
          "status": "OK",
          "code": 200,
          "responseTime": 382,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "4c28540e-60fa-4d21-913e-0a0d1b868675",
        "cursor": {
          "ref": "c3b3384d-c21b-4946-91c4-14f36b339c5b",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "30394a93-812a-4878-a0f5-64a397f0c690"
        },
        "item": {
          "id": "4c28540e-60fa-4d21-913e-0a0d1b868675",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4ae4a58c-67c0-4914-9aed-d8b2740e7cdc",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "24e0e5c9-d6c9-41fa-b2ae-c4f595f7d4fc",
        "cursor": {
          "ref": "8db97415-3a28-40af-aa49-0cd1fecd60be",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "948d48ed-4af1-4308-a809-5d038bf200e7"
        },
        "item": {
          "id": "24e0e5c9-d6c9-41fa-b2ae-c4f595f7d4fc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30559534-30dc-4c49-9059-dc8662c7adf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516c7603-fd8c-4543-b237-dff705e61f6c",
        "cursor": {
          "ref": "032b1928-b4c1-4872-877b-ec70af1e93ff",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "50876381-d27b-4ebf-b7da-0a98bf59a979"
        },
        "item": {
          "id": "516c7603-fd8c-4543-b237-dff705e61f6c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "27335d87-805f-4f2b-b3b6-7c1fa6826fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3ba266-d414-4306-a06c-ffb3f5551241",
        "cursor": {
          "ref": "b620ecae-bbad-4639-a699-44f014bb3131",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7e6c30ba-98c0-4ab7-9922-d3f5bca5b01e"
        },
        "item": {
          "id": "4c3ba266-d414-4306-a06c-ffb3f5551241",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0b26d5f2-6993-4b05-a30d-3ead55dfefa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9053fc28-2fc6-4ccf-bc9a-a13ca9da2d8a",
        "cursor": {
          "ref": "05914aac-cec3-4076-8b63-e5757fa5250f",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e6561a1-2b0a-4d71-8a31-14cd53fec0ce"
        },
        "item": {
          "id": "9053fc28-2fc6-4ccf-bc9a-a13ca9da2d8a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dbf2ae32-28ae-4493-bf7f-32aaa5054a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f6b962-05f9-454e-8d63-8366c364d41f",
        "cursor": {
          "ref": "3b2aa811-3284-498a-89dc-c88f084bb046",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "80f3455e-2391-4465-ac31-8da4574a4e5d"
        },
        "item": {
          "id": "a9f6b962-05f9-454e-8d63-8366c364d41f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ceb5440f-b9ac-4864-8601-9a016f9cb2cc",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "43ea8b7b-40d0-4d2c-b518-d56e60b2905e",
        "cursor": {
          "ref": "d720e9e0-8c5c-41cc-95e1-0a78c15f80a4",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "84f08e50-f1ab-4529-ae05-7c33df9ad3cb"
        },
        "item": {
          "id": "43ea8b7b-40d0-4d2c-b518-d56e60b2905e",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "ece04dea-6a66-494d-9a2b-deb574426d0d",
          "status": "OK",
          "code": 200,
          "responseTime": 1490,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "5f8f0106-b53e-41d8-af56-13bf5c65228f",
        "cursor": {
          "ref": "e91f7b3b-acf7-4bcd-a5d4-5730a4eda39f",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e0a99b65-3e35-40dd-94d1-5bd7b1b47476"
        },
        "item": {
          "id": "5f8f0106-b53e-41d8-af56-13bf5c65228f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bf915676-96d1-4959-ab04-dd97f96ae759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e89e89-ddf1-4a95-9aed-1452172e6ded",
        "cursor": {
          "ref": "d1b00fdf-d4e0-497b-abeb-fb265ebd9405",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "89af8ba4-7cdf-42e9-8a31-363af763c2a7"
        },
        "item": {
          "id": "70e89e89-ddf1-4a95-9aed-1452172e6ded",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a833f798-2b61-475d-b4e9-e66be8f893b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49862040-248b-4d2b-bd1a-279c557c3e9d",
        "cursor": {
          "ref": "270f0e5c-68c0-4516-bd1d-85ea7bd32bc8",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7dc2c684-c1aa-4379-8769-4a31cc2643b6"
        },
        "item": {
          "id": "49862040-248b-4d2b-bd1a-279c557c3e9d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "750942da-a7de-467e-972f-be6146502bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1c38d6-f4f4-41cd-a211-19c600341346",
        "cursor": {
          "ref": "b29387da-8ee4-48d3-be30-606b6e3dcd50",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "27704e62-5500-43dc-9a60-fb56f5d71318"
        },
        "item": {
          "id": "2c1c38d6-f4f4-41cd-a211-19c600341346",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9abc3ef3-e14b-4c63-aff9-617502a9ac60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613ebcf4-1179-46fb-a00f-4b851f78b421",
        "cursor": {
          "ref": "84d447ca-7857-45e5-93dd-4551e4aaefef",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d76076f7-72cb-47ff-af7d-d3adca1a5ba2"
        },
        "item": {
          "id": "613ebcf4-1179-46fb-a00f-4b851f78b421",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2e850361-f932-433b-bf47-cd3200401957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b1fec2-28e4-4c84-9f1a-318de4893918",
        "cursor": {
          "ref": "25da8663-1766-474c-8a78-341dbff57bb7",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5d8dc830-a954-4e4f-9ce3-59f2c8aed46a"
        },
        "item": {
          "id": "34b1fec2-28e4-4c84-9f1a-318de4893918",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bb009fb8-43a3-4205-8cb2-b7ba36df6efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b137a94f-98cb-40ed-8baf-3243615a5536",
        "cursor": {
          "ref": "2cc0a4e6-3a61-4fe1-a3a5-e93c3ecee79e",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "665e7101-4e09-4a5e-8102-a41a77256baa"
        },
        "item": {
          "id": "b137a94f-98cb-40ed-8baf-3243615a5536",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c38c371f-29d6-4bb7-afad-0a332fd52721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca96177c-539c-4b2a-aba7-aaa93a94090d",
        "cursor": {
          "ref": "2d376686-da32-44d2-af81-6c8dcaa488d5",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "63c8cbc0-068b-4d3f-81ab-e38e3d8ade09"
        },
        "item": {
          "id": "ca96177c-539c-4b2a-aba7-aaa93a94090d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8b943d51-e2a7-4674-bcf8-0977c6c1e7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ddfa42-7932-46ff-affd-db24dbefb8db",
        "cursor": {
          "ref": "3efed3fb-057e-4b55-a53d-fbc30f949c2f",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e3138d11-de7a-4d82-816c-ffe3d850dce0"
        },
        "item": {
          "id": "b6ddfa42-7932-46ff-affd-db24dbefb8db",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8a8a51a2-b243-44cc-b7fd-654a01685069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e1885-ffc8-4869-b0ab-f22f6f42d205",
        "cursor": {
          "ref": "8571ea06-6e4e-4127-a432-c739535af0ff",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d2870b5a-9409-4e34-8bc4-376795472025"
        },
        "item": {
          "id": "190e1885-ffc8-4869-b0ab-f22f6f42d205",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "98aece1b-6eab-4f25-bdf3-df069ab1607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1138e894-cb9c-467c-869d-e0e6fb43ffdd",
        "cursor": {
          "ref": "49a2fb4b-8fd6-4512-a9e4-e66b9b8e1ddd",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82f4daf1-f3fc-4f70-9f4d-f75437b60c84"
        },
        "item": {
          "id": "1138e894-cb9c-467c-869d-e0e6fb43ffdd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ac7b1ecb-c545-405b-b6ac-2bb4bf3fbbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8506bce0-8caf-4a33-826d-5a11ef81148d",
        "cursor": {
          "ref": "4607dbbe-2257-4c5a-a6ef-3b99cdb7bc44",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d391e8d7-695f-4d69-8d83-8a2267a177f3"
        },
        "item": {
          "id": "8506bce0-8caf-4a33-826d-5a11ef81148d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49211970-40e5-4ea4-b3a8-b875e10401dc",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "cb98a140-70c6-4ed3-91f4-2e25d885f4ec",
        "cursor": {
          "ref": "79f953f6-b854-4a64-adc3-2fb68ea2e16d",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0989b4bb-2ea7-478b-a435-5cdc75aea597"
        },
        "item": {
          "id": "cb98a140-70c6-4ed3-91f4-2e25d885f4ec",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ca7272c6-8e07-47ab-8b61-a897db56c498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d049c47c-f2e8-4748-9c28-a854d65d09cf",
        "cursor": {
          "ref": "19ff6c54-46fb-4b1d-b182-d379bb30bf81",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "65a902f7-da98-4930-90bd-bfa12bd063dd"
        },
        "item": {
          "id": "d049c47c-f2e8-4748-9c28-a854d65d09cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5140bacf-63e2-41d9-9627-11770f0696ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d11c7a-fb67-4366-87eb-18ccb3a572c4",
        "cursor": {
          "ref": "f609ca32-66cf-4a08-ae09-131038430354",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "69caeae5-677a-49e0-b723-53f2cca7aa33"
        },
        "item": {
          "id": "56d11c7a-fb67-4366-87eb-18ccb3a572c4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "10988e6f-e92c-453f-b983-39721523f89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75ce0cc-90c3-4bb3-bb85-1cae64f5db81",
        "cursor": {
          "ref": "305f7bef-8037-44a9-bc8c-4bb6417d9027",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "68281609-4c02-4536-be01-a26a9ac64a4c"
        },
        "item": {
          "id": "e75ce0cc-90c3-4bb3-bb85-1cae64f5db81",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f0159240-3507-460b-b4f2-a55d8d7402b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273e5941-3461-4b66-b89c-ed323f040b55",
        "cursor": {
          "ref": "78900674-e90d-4f46-9f7c-a066e2801e23",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a18d9e86-6747-487f-a077-eb44da3bcdac"
        },
        "item": {
          "id": "273e5941-3461-4b66-b89c-ed323f040b55",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "764e8013-9407-40b6-8ad8-f2b443ad045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3221d0c-90fb-4472-9e0e-79a6c1b5543c",
        "cursor": {
          "ref": "efebabf8-f72d-4f85-9fcf-b5d758dd585c",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "edc7fbb5-c72e-467d-b721-715bc67b6888"
        },
        "item": {
          "id": "b3221d0c-90fb-4472-9e0e-79a6c1b5543c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e69f6444-fb8d-41c5-a81e-534bcd8568a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df90aaf6-c50e-4225-9627-d2a1e1d874d4",
        "cursor": {
          "ref": "3c4f958b-c4d5-4667-94a3-f373454e16f0",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e49bfe55-25a1-47b7-a350-1ee5d3e33bc4"
        },
        "item": {
          "id": "df90aaf6-c50e-4225-9627-d2a1e1d874d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3a7d0ffa-1762-4380-b04c-f4a530c0b247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87561e17-b874-4beb-a56c-42b92e875e53",
        "cursor": {
          "ref": "6ede055e-c452-4755-b1dd-e058a7118613",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "18732bc3-7123-4add-b76f-b15625ae17f4"
        },
        "item": {
          "id": "87561e17-b874-4beb-a56c-42b92e875e53",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ef185f59-d6ca-4fdf-bd80-7ace01320dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cad3a5-359f-49c8-a1d0-8ca317973e0c",
        "cursor": {
          "ref": "22d24259-f829-43fe-901e-f3d82fe3188b",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d4b3c91f-242b-408a-8aea-4672693a0dec"
        },
        "item": {
          "id": "63cad3a5-359f-49c8-a1d0-8ca317973e0c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0968ae32-9795-43a6-8049-dfae4397a997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873598df-039e-4793-bac9-c6c8193eb0b4",
        "cursor": {
          "ref": "6525bce8-7b94-4a2f-9372-708e44bbb0d0",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3d57b28c-65f0-4635-a831-5a812e6c5369"
        },
        "item": {
          "id": "873598df-039e-4793-bac9-c6c8193eb0b4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4003c582-0d76-421b-ae7d-358c9e94fbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636380db-1520-4188-b1be-86caf93639bb",
        "cursor": {
          "ref": "d9069f9a-2b67-4a01-a4b5-ed30a18caf9f",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b9af2535-eed9-4878-9a5c-5358b9a2ab22"
        },
        "item": {
          "id": "636380db-1520-4188-b1be-86caf93639bb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "db0f6c95-04ad-4c4c-a099-54e08b639c4f",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "60e10ef6-7f5f-47e6-8541-8fe529e49ddb",
        "cursor": {
          "ref": "66126723-0e97-4747-bc12-c3967b654e81",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b63ee532-a3ea-4526-bf1c-ef18aef8cbf1"
        },
        "item": {
          "id": "60e10ef6-7f5f-47e6-8541-8fe529e49ddb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "577fd0ee-e366-4d73-b1b2-19eda282ca73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1905c33-ea30-4832-bf9c-29954318953c",
        "cursor": {
          "ref": "52fd05f5-9570-4ed5-9e3f-6d009b6bd9bb",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "92bebe82-1fb1-4bdb-a3e3-43e097452a2b"
        },
        "item": {
          "id": "f1905c33-ea30-4832-bf9c-29954318953c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f561f7ca-6702-43e1-a13a-7695f4936729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5154eb48-5435-4a74-a6d9-edfa8d255c9b",
        "cursor": {
          "ref": "9caba820-6f8b-4dbf-b523-c9a10e476ac5",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "98284cef-6850-4cee-af72-ded1d783e072"
        },
        "item": {
          "id": "5154eb48-5435-4a74-a6d9-edfa8d255c9b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ad7c17f-4733-4a36-904b-5d851620b8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd8d5bd-2339-4f4e-ba01-5ae61fb8682f",
        "cursor": {
          "ref": "44a1e1dc-c78f-4660-b31a-247d1bed44c0",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "824c6ed9-7f0a-46b3-8dfd-fb2194f3cf54"
        },
        "item": {
          "id": "5dd8d5bd-2339-4f4e-ba01-5ae61fb8682f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "00c86d28-fa21-477c-b64b-c2d757cd0651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39141045-ffe2-47b6-a3df-16cbd1308a6f",
        "cursor": {
          "ref": "941a6711-e21e-4496-8d49-e9196cdee027",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce630876-5d51-40a8-bd46-6856491acbc7"
        },
        "item": {
          "id": "39141045-ffe2-47b6-a3df-16cbd1308a6f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "120c09ad-68ba-4e3a-8750-452c4c17d357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f909aba6-b5fd-459f-9fe6-b42c91c7b43a",
        "cursor": {
          "ref": "e2376444-9133-44eb-8836-1a2666c4dff4",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eda855d7-9aa5-4da4-9fe5-4426139e6d77"
        },
        "item": {
          "id": "f909aba6-b5fd-459f-9fe6-b42c91c7b43a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "09334698-82aa-43a8-b709-5b93a1e0e66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b71099-9084-4786-a896-a9f838f5f5d9",
        "cursor": {
          "ref": "3348392a-32d2-487a-ba80-73d5e5af2c5a",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "69b90866-7092-48fc-a499-d679b24bf857"
        },
        "item": {
          "id": "69b71099-9084-4786-a896-a9f838f5f5d9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c6321962-dda5-4eca-ac1a-09fa8273ba59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90954a5-e22b-41bf-afd0-c97cb0a5a4d8",
        "cursor": {
          "ref": "180cb997-f628-4056-a530-77f1ebe4c8e7",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "039151f6-b114-48b8-8e05-e20da07a344d"
        },
        "item": {
          "id": "d90954a5-e22b-41bf-afd0-c97cb0a5a4d8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6266bdbc-ab94-4d42-8c2a-d476c84a72e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ab1d84-0fe5-4b95-9e5e-871958d0b067",
        "cursor": {
          "ref": "320d8927-3813-4b09-9215-c603ebe26cf5",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8162000-caad-4694-bfcf-8b26612b67e1"
        },
        "item": {
          "id": "b8ab1d84-0fe5-4b95-9e5e-871958d0b067",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a0da357b-3c5e-4936-a4a6-1c1ab14dcf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d90d7-514c-4b82-a7cc-24f6fb5ddd2d",
        "cursor": {
          "ref": "88290eda-3836-435f-8ace-b73c6e6d1bfb",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "07a13993-932a-44bf-ac20-739ee4f07421"
        },
        "item": {
          "id": "504d90d7-514c-4b82-a7cc-24f6fb5ddd2d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cdeb09da-171c-4685-b283-913059265ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e2b6f1-3aae-4fde-884d-9a72426f4256",
        "cursor": {
          "ref": "70608663-6c00-41ec-a5dd-63e7d61c0394",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bcb65a9c-d1b4-4136-8cd7-354ee1fd8769"
        },
        "item": {
          "id": "98e2b6f1-3aae-4fde-884d-9a72426f4256",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c75c229c-1256-4760-b7ca-85b51ace2d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b467a694-8c51-40c5-8673-9f135ef1dc38",
        "cursor": {
          "ref": "fbd36d50-06e7-46aa-82a8-e75b9893d9d6",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ea5dcb6e-11bc-429b-9247-1a529871aa24"
        },
        "item": {
          "id": "b467a694-8c51-40c5-8673-9f135ef1dc38",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "20b6f3fa-0522-42a3-9b28-f50bc8cb68b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c45544f-8e61-4735-83f9-2326ab81baed",
        "cursor": {
          "ref": "74e266b1-f327-427a-8d98-27ca262a0026",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "33b394d4-c522-4be6-94ad-786437321626"
        },
        "item": {
          "id": "3c45544f-8e61-4735-83f9-2326ab81baed",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "226f38c3-e86e-429c-9261-c0d812a4db16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ccd03e-ab58-4ccc-b732-2794cf0f5e8a",
        "cursor": {
          "ref": "de77dbda-a820-4bce-9c09-a0c501cbc818",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "09c45434-8245-4192-bc82-9c03c567662b"
        },
        "item": {
          "id": "50ccd03e-ab58-4ccc-b732-2794cf0f5e8a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a2c28d7-6fd4-45af-98d9-5b1d97842f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f695ae7-0b3c-4efb-b6b4-99dd1abeeb6c",
        "cursor": {
          "ref": "25de3747-9b08-41d2-99dc-7a6b76133d31",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bd2549b7-68c5-4893-afa9-85dc18d286a0"
        },
        "item": {
          "id": "5f695ae7-0b3c-4efb-b6b4-99dd1abeeb6c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "21fdc1dc-f5ad-4628-b224-9aaf81487ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa677916-0fd6-40b5-a288-1d620e8a6f3d",
        "cursor": {
          "ref": "4de28ee4-35b8-4c62-9847-06dfc0e4dde4",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ec388a4a-ac3e-411d-8693-38e8009493c1"
        },
        "item": {
          "id": "fa677916-0fd6-40b5-a288-1d620e8a6f3d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "583da41d-c9df-417e-94b7-f1e30c29b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2063695d-a824-43c2-ab26-f7ca06e1a9e5",
        "cursor": {
          "ref": "7e3bfeba-636e-4035-ac59-82442edc123f",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "db10b146-2f11-40fb-bc01-5124b5d119f4"
        },
        "item": {
          "id": "2063695d-a824-43c2-ab26-f7ca06e1a9e5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c3c82c42-d96b-454a-9f8c-c82e927d3af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a3dc48-6c8b-4ad3-a939-53b60af6bc4b",
        "cursor": {
          "ref": "25146aea-d911-400d-9cb3-3e2097cfd91b",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "83dd3f10-ea36-4f13-bc7d-ee99ee69759f"
        },
        "item": {
          "id": "f1a3dc48-6c8b-4ad3-a939-53b60af6bc4b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "92907751-1506-4ee9-a011-76d37d8df990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d6e6e4-3cb4-4be0-bcfa-0ca6b95cb8c5",
        "cursor": {
          "ref": "2ea1cdad-07d3-49ce-86d7-1be4d4502f3d",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f9d43d96-ae9d-4b31-89ec-14e09c7b8078"
        },
        "item": {
          "id": "b1d6e6e4-3cb4-4be0-bcfa-0ca6b95cb8c5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "61f8a8ea-c772-4f3b-8f31-9265421302b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5238d8-491e-4f85-9c8c-db9d4829c23a",
        "cursor": {
          "ref": "c1f57c6a-a1a9-473c-9343-f1d1fd4e89a7",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1d958755-145d-4365-9d74-cc492e221927"
        },
        "item": {
          "id": "3b5238d8-491e-4f85-9c8c-db9d4829c23a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f4f37453-eb28-474d-b842-415c435668b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cb2024-efee-408f-9bc0-e386e1299c9a",
        "cursor": {
          "ref": "59fb71ec-a239-4d45-beea-82a834a57e96",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "547822c1-ce93-417b-9f7a-97a361fe182d"
        },
        "item": {
          "id": "f3cb2024-efee-408f-9bc0-e386e1299c9a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a86db2d5-09de-4df9-863f-82481d2dbf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908128a4-ee10-4e97-8838-860df9fa9fce",
        "cursor": {
          "ref": "3c161845-7a33-4f32-8b98-0ce18860f8a7",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a3cc14ac-4111-4d65-a75b-3ab1da577094"
        },
        "item": {
          "id": "908128a4-ee10-4e97-8838-860df9fa9fce",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "906b436c-7e91-48ee-8370-da966457602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf996d80-a561-4018-a0bb-2e94f2392237",
        "cursor": {
          "ref": "b2745eb1-868f-4736-b801-b079adedce4c",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "634a1c25-4d1c-4748-a85f-d80831d91791"
        },
        "item": {
          "id": "bf996d80-a561-4018-a0bb-2e94f2392237",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "37d09e99-b14c-451f-bd27-a527b26195b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb027088-d95f-4f09-ac46-c8ff47514013",
        "cursor": {
          "ref": "e253d714-2cc9-4adf-b29c-9bcfeb1f21d2",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9cfa2a7b-bcf9-4843-8101-d8f9ab8d075f"
        },
        "item": {
          "id": "fb027088-d95f-4f09-ac46-c8ff47514013",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "166db184-d344-418d-97e5-91216621c33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03bbfa-c018-4951-8285-13fc3e68ea5e",
        "cursor": {
          "ref": "34862daf-1006-4cb6-9965-b7e7f12346e8",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8d9edda3-0a17-4a2d-ab95-fc2903fa47b8"
        },
        "item": {
          "id": "1c03bbfa-c018-4951-8285-13fc3e68ea5e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ed6f18f1-c05c-4d36-bbc7-9d5fe587d720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13b7345-927f-4aec-86b0-8e62db55b295",
        "cursor": {
          "ref": "31c4bacb-df2f-4f53-801e-e9b4bbeb84f7",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a579caed-f7c3-4ed9-af2a-54cac813e193"
        },
        "item": {
          "id": "e13b7345-927f-4aec-86b0-8e62db55b295",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fe9ee9c-6358-437b-9e64-a582fca55d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58695bb7-5ada-4ae0-b5ab-2d51cc0a393c",
        "cursor": {
          "ref": "0eae2f16-e05f-458b-9e12-05b1cd75d0ce",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "edfae8d2-dbc3-41bc-b30b-62be417b9bbe"
        },
        "item": {
          "id": "58695bb7-5ada-4ae0-b5ab-2d51cc0a393c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1f507c01-27ab-4ffb-9317-ea5e381b43b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2275574-479a-41f0-a14a-e13b8727d0ab",
        "cursor": {
          "ref": "991624d9-c371-4f44-9afb-5c93c528371f",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8ad7eb04-b1c6-4564-8064-a79bf5ffecbf"
        },
        "item": {
          "id": "b2275574-479a-41f0-a14a-e13b8727d0ab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7b67e22b-6853-4777-8432-874859cf02cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde26221-0a89-48d3-8e1a-19b0d922cc37",
        "cursor": {
          "ref": "6f504d45-12f9-4a70-823e-3f4a7f4a572a",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "01e556ea-0900-4fcc-9044-6351631d62e5"
        },
        "item": {
          "id": "cde26221-0a89-48d3-8e1a-19b0d922cc37",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c1d5ea95-f7e9-4ff2-8250-6bbdc28a7e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5decb4c7-a439-4725-abad-61e908cd0d35",
        "cursor": {
          "ref": "67c45b8b-3e4b-4b01-8939-02bb0b317ef2",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "498087d7-7f9e-4d8c-add4-7ef3638bbc6f"
        },
        "item": {
          "id": "5decb4c7-a439-4725-abad-61e908cd0d35",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "17c76340-1e73-4a65-a80e-ad29a8254ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c658b6c7-d375-4630-b193-43140782990f",
        "cursor": {
          "ref": "75dc1cd1-4221-4cbd-ad83-b314c1f27761",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c4b35156-63ba-480a-8de8-42f00ab60bc2"
        },
        "item": {
          "id": "c658b6c7-d375-4630-b193-43140782990f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "36fd121e-6bea-4372-84f2-3deccb6e68bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f23f81-e01a-4596-b292-4e2deb167900",
        "cursor": {
          "ref": "98b3879f-dc30-4f05-bf9f-e64ac19b2992",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2a2a4950-f335-47c1-8d32-598847a4e48e"
        },
        "item": {
          "id": "04f23f81-e01a-4596-b292-4e2deb167900",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e8e3addb-470a-4298-a1b5-8f458e73bb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ae80bb-3a5f-493c-a803-efd74ddc34a9",
        "cursor": {
          "ref": "5f7d70bf-90d8-4e08-a863-40ba61d30a93",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f61b26b1-b85d-424b-b0da-2fb5a9db57c1"
        },
        "item": {
          "id": "c2ae80bb-3a5f-493c-a803-efd74ddc34a9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f1439c82-b495-4b81-b58d-90be914372b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918452fa-0b00-4339-9f8c-ac45816f1978",
        "cursor": {
          "ref": "b7d659e0-bb5e-40de-9209-a9a48683833c",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e4b179d6-4698-4448-bab1-8421cf26acc1"
        },
        "item": {
          "id": "918452fa-0b00-4339-9f8c-ac45816f1978",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9cfbfcb3-8cc3-4a4b-b5a4-e5bb42a77271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c9aaf-89a7-45d2-8869-4f3d10c2a04d",
        "cursor": {
          "ref": "881105c1-772f-4ecf-94ba-b135dd026c46",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e61d5536-e777-4e53-af72-5b1053d211c5"
        },
        "item": {
          "id": "fe5c9aaf-89a7-45d2-8869-4f3d10c2a04d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "745439f7-3b68-4d21-be85-73318dab1349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617483ce-7509-4108-b06d-251eee185570",
        "cursor": {
          "ref": "6ea6c035-940b-4bd2-9c94-1a4e60340dec",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0c0ef841-a16f-422f-8d5e-a61751ca33c4"
        },
        "item": {
          "id": "617483ce-7509-4108-b06d-251eee185570",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2006dc3d-7419-4712-9588-0eebec081062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6e3a72-1a9c-4e87-b692-d2f7331e64f6",
        "cursor": {
          "ref": "1528afd9-3ef7-44af-b53e-8e3b7c18b574",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5d8d48f8-e4c8-4c35-bcb9-763ef915eb20"
        },
        "item": {
          "id": "8f6e3a72-1a9c-4e87-b692-d2f7331e64f6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "749d7928-5f78-4bfd-9e53-2d688a1d4612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccf01b9-7eba-4f4a-8c99-b2554c87db7f",
        "cursor": {
          "ref": "27482a2e-0d08-4399-9021-fc83e736e2e3",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dd3c8187-96eb-436b-84dd-7258caa013ba"
        },
        "item": {
          "id": "7ccf01b9-7eba-4f4a-8c99-b2554c87db7f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0b9e328b-f41c-4843-8a65-b9d80ae3dcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca170997-f309-46fa-92b8-dcb2401e26d2",
        "cursor": {
          "ref": "1c180e02-cbb5-4195-a541-8054d7bdc8ee",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f501a396-44f6-4d2a-8f51-5886b9906187"
        },
        "item": {
          "id": "ca170997-f309-46fa-92b8-dcb2401e26d2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9b8dd783-677a-48cc-b673-645a498a6480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfce55e-423e-402f-ba90-be34bb48e0a2",
        "cursor": {
          "ref": "074b7d08-3a84-4e46-91a3-5eef15196849",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e4a08a34-f0b5-4d4a-ae99-49e2e024a6e0"
        },
        "item": {
          "id": "3bfce55e-423e-402f-ba90-be34bb48e0a2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3d2ea3d8-8ce5-4cfa-a091-608572cf6b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed22b3a-62de-461d-9b86-7953bc9a85a8",
        "cursor": {
          "ref": "b3b7a19f-6ac6-4efb-8f8e-cc78a061a478",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d7898976-7140-42ba-ade8-32d151e1b73d"
        },
        "item": {
          "id": "1ed22b3a-62de-461d-9b86-7953bc9a85a8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2781372e-7ec9-45e5-8024-9e89fb048173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16564b9b-a681-4e02-a169-7274756516cf",
        "cursor": {
          "ref": "b6ec0f67-b74f-48b1-8510-17c075c89890",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b0b6c2a6-7c96-4d10-88e6-642a86eff22f"
        },
        "item": {
          "id": "16564b9b-a681-4e02-a169-7274756516cf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4b20e6fb-16bd-465c-8bfc-9a0b83785adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53d0158-590d-435d-95a8-377da3288543",
        "cursor": {
          "ref": "39ad255b-c560-407f-8a72-c445bce0ce08",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c14a80b8-aced-4524-8e8b-6a55d89190d4"
        },
        "item": {
          "id": "e53d0158-590d-435d-95a8-377da3288543",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d7e30bcf-9c07-4358-82e4-a3008c147d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3461b3-10f2-484b-835f-fbaa9e772ea0",
        "cursor": {
          "ref": "ae98a78f-e23b-4348-8a85-e3bcd4b0b1e6",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fc78e3c9-c714-4d26-9916-5f5b57330202"
        },
        "item": {
          "id": "1a3461b3-10f2-484b-835f-fbaa9e772ea0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f59d024-8987-4b6d-b044-7780bb2ba9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff88e50-745b-48c6-8534-a18164a569be",
        "cursor": {
          "ref": "44b76373-d6d6-466c-b423-2e99d1e959b2",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "df285957-deff-42c0-a946-78c14196d0aa"
        },
        "item": {
          "id": "aff88e50-745b-48c6-8534-a18164a569be",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c57824db-f486-4ecc-8be9-8b8a1f8f4e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5223779e-9d35-4ca6-8918-6a2dceb2f2a1",
        "cursor": {
          "ref": "6a1cfd3a-29c0-48ec-aa61-2dae87e9802a",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf58cca1-9ea5-483d-a93f-1ad4416d0c8d"
        },
        "item": {
          "id": "5223779e-9d35-4ca6-8918-6a2dceb2f2a1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0c7c3ce5-56bb-486d-965b-0057fc6fc513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0538e5f-0c33-442c-a324-1b8ab1772f60",
        "cursor": {
          "ref": "3796a3b8-a494-45c1-8526-d736124a6439",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "af681947-4aef-485c-8f62-a2496fdbef8a"
        },
        "item": {
          "id": "c0538e5f-0c33-442c-a324-1b8ab1772f60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "49f6e456-9e1e-4520-bd3e-dbdfd996955f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfdedef-4d6c-4ff6-8f2c-ab756a7a1bcd",
        "cursor": {
          "ref": "299e9130-df4b-4570-a37f-7f476ddf67ac",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f6e9720d-a699-4963-acfd-ae02668f5aea"
        },
        "item": {
          "id": "7dfdedef-4d6c-4ff6-8f2c-ab756a7a1bcd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "afa9702f-6f3b-4c16-8d0e-4176ebb6ccef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fef9e2-5de6-4301-952d-18f26eeedc52",
        "cursor": {
          "ref": "f5eb4923-bf50-45de-a88c-e9a964cbb6fe",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d699d3da-10c4-47fc-b196-5fa8c4386bfe"
        },
        "item": {
          "id": "d7fef9e2-5de6-4301-952d-18f26eeedc52",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e6e7f051-6893-4c95-99ed-b48978b26474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc3691d-9333-49cc-bad5-5d413541aa52",
        "cursor": {
          "ref": "23ecc76d-1426-4e76-be34-0bedfc7d1547",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7d57f95c-cb61-4f9f-90ca-882d74bdd014"
        },
        "item": {
          "id": "cdc3691d-9333-49cc-bad5-5d413541aa52",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fd689de5-9f09-4a4d-82f5-a6cddee69d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe67d910-b571-45b2-a3ed-ab26eed52982",
        "cursor": {
          "ref": "1cddbe33-6f11-48d0-bac0-8e296fc6893f",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b68bbca1-6e34-44fe-aac3-5b29f8c993b1"
        },
        "item": {
          "id": "fe67d910-b571-45b2-a3ed-ab26eed52982",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1b8b476e-5dc5-4854-81c6-a4fc0d0c7b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ac8626-2890-414f-a413-9e2f571d3b9c",
        "cursor": {
          "ref": "cf934033-04dd-4558-8106-d52f4ca2d776",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f36b21c2-332e-4442-a1d6-a58a8eb699f9"
        },
        "item": {
          "id": "c8ac8626-2890-414f-a413-9e2f571d3b9c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "35292946-45b9-4f49-a5f1-fb426ab2738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c952d83e-15d2-44f8-b9ae-ecf6dabd0ea2",
        "cursor": {
          "ref": "1dced9cc-0838-469f-afb6-2017ea10c864",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3b4e060e-08c1-4711-af75-e5b5d340ae5f"
        },
        "item": {
          "id": "c952d83e-15d2-44f8-b9ae-ecf6dabd0ea2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7d66f644-e0a8-49fd-86f9-a2f9802c94e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1826a0-1e29-4a64-9678-511ee391565a",
        "cursor": {
          "ref": "57536fdd-bd90-47e7-b2e9-fd15f35e8962",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7280d2fb-9eb9-4061-8b03-4ae9d5d68ce7"
        },
        "item": {
          "id": "5e1826a0-1e29-4a64-9678-511ee391565a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "16feda81-42be-4820-8ac2-dc7f92eb4c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa498d8e-0ed8-472d-808e-47200f315a02",
        "cursor": {
          "ref": "a82348bb-e07d-474b-ba52-5034a8ef299d",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3366dcee-556d-4da5-82bf-b847d31d8a3d"
        },
        "item": {
          "id": "aa498d8e-0ed8-472d-808e-47200f315a02",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d133b1b-330e-472d-9d4c-75638e83da95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0bceaa-e5b7-4829-9b91-f38dfdc84b34",
        "cursor": {
          "ref": "90afea7f-9696-4c8b-a14f-223f5dfb4e36",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "16c70830-5330-4fb6-9a8d-0ea2b2952f31"
        },
        "item": {
          "id": "8f0bceaa-e5b7-4829-9b91-f38dfdc84b34",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "70ac3455-b661-4f4d-bb48-86fa718221f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d4ef5c-5372-432b-82c8-78a88f97c355",
        "cursor": {
          "ref": "3ff8a8eb-35fd-4f41-8221-87e10103c346",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "db2f19e2-b0cb-496e-8226-9f0146fa4838"
        },
        "item": {
          "id": "b1d4ef5c-5372-432b-82c8-78a88f97c355",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5a4e7c3-1621-4d19-a659-0c8cfc981458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f25251-4b3e-44a4-8557-c53d5bf8c3db",
        "cursor": {
          "ref": "4f2cb2b6-7214-40c3-9be3-11fcd590a633",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "143102df-d68f-4ab1-8540-3b1ea5535d59"
        },
        "item": {
          "id": "07f25251-4b3e-44a4-8557-c53d5bf8c3db",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7f80bfee-d569-4124-85ea-53a3e745c94f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1f12f2-b979-445b-9f56-df312979e2d5",
        "cursor": {
          "ref": "26097162-d8f4-4df7-992c-9319d1deddf4",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "de2a85df-3022-460c-bfb2-67fb61875786"
        },
        "item": {
          "id": "db1f12f2-b979-445b-9f56-df312979e2d5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "39c44194-2ed7-4c8f-9b07-ed21399c4720",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 333,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579cabf9-4bbc-4d11-b2ca-8d56f499caa7",
        "cursor": {
          "ref": "5c28d56a-90e0-4702-ad2a-e9226aa27bc4",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "94f7a51f-7d77-44e0-90cd-ddbf4d83306a"
        },
        "item": {
          "id": "579cabf9-4bbc-4d11-b2ca-8d56f499caa7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "19e45ca5-aacc-41ff-b7da-679659ec48ff",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d35ea59-e66f-4277-8b34-a841b02efc07",
        "cursor": {
          "ref": "e6c8d575-bced-4a89-8067-53402323466b",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e8ba16ee-89f2-4455-a185-35f1bb680769"
        },
        "item": {
          "id": "3d35ea59-e66f-4277-8b34-a841b02efc07",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7d4c6738-5101-4e0f-855b-cce54c17c8d7",
          "status": "OK",
          "code": 200,
          "responseTime": 1805,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5194de6c-864e-472d-97bd-26aae41f104a",
        "cursor": {
          "ref": "adb16aac-68f6-4b36-9b56-3022397a2e40",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "823887bd-9ecc-4a3a-9385-9718c49ca02d"
        },
        "item": {
          "id": "5194de6c-864e-472d-97bd-26aae41f104a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4fd61112-57a2-41ef-ba78-c52621b7fc35",
          "status": "OK",
          "code": 200,
          "responseTime": 1818,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
        "cursor": {
          "ref": "b5b56b43-9594-40bd-baf1-2437b56db3b3",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "11faed6c-d0a6-4d2a-bc37-fa378b7390ea"
        },
        "item": {
          "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e225c55b-0aed-4186-b6d0-a92fdbf2e7e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
        "cursor": {
          "ref": "b5b56b43-9594-40bd-baf1-2437b56db3b3",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "11faed6c-d0a6-4d2a-bc37-fa378b7390ea"
        },
        "item": {
          "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e225c55b-0aed-4186-b6d0-a92fdbf2e7e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
        "cursor": {
          "ref": "b5b56b43-9594-40bd-baf1-2437b56db3b3",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "11faed6c-d0a6-4d2a-bc37-fa378b7390ea"
        },
        "item": {
          "id": "9896d00a-24a9-4bb6-8c33-4c7d79d0cf76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e225c55b-0aed-4186-b6d0-a92fdbf2e7e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d452e87-c524-4e50-aabe-84f6fe96b8e3",
        "cursor": {
          "ref": "b7f4d343-812c-42cd-a0e7-4eebdfc44f69",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a0df0795-dfc5-4ede-a974-06d2994ad3b0"
        },
        "item": {
          "id": "5d452e87-c524-4e50-aabe-84f6fe96b8e3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c99e03a8-1e3b-4ed9-9936-1680ef42bcc3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 310,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eeacad-4c26-48a2-818e-c2e85baddd97",
        "cursor": {
          "ref": "725ecec5-01da-43c3-b1ff-95069ef4779c",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e6f28da4-2bd9-4246-8fe7-bbbf4d24e493"
        },
        "item": {
          "id": "57eeacad-4c26-48a2-818e-c2e85baddd97",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "626c4e49-eb2e-4ef4-8ca5-7e403f1a4aa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eeacad-4c26-48a2-818e-c2e85baddd97",
        "cursor": {
          "ref": "725ecec5-01da-43c3-b1ff-95069ef4779c",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e6f28da4-2bd9-4246-8fe7-bbbf4d24e493"
        },
        "item": {
          "id": "57eeacad-4c26-48a2-818e-c2e85baddd97",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "626c4e49-eb2e-4ef4-8ca5-7e403f1a4aa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc18e9ac-9042-430a-97d3-a8aeb246f256",
        "cursor": {
          "ref": "0a0492ca-e712-47ad-9770-66ab5d957a0d",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "84007b55-5837-4262-9c09-c82cc9609846"
        },
        "item": {
          "id": "fc18e9ac-9042-430a-97d3-a8aeb246f256",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6c2fb185-e16e-4830-882d-b0cb937adf80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6832cd5-22c7-489a-b0d0-8096c268f171",
        "cursor": {
          "ref": "eca01b18-0367-45a8-8346-243ea2c88772",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "65318e4f-a6a9-4100-afce-fbe5a4bf08fb"
        },
        "item": {
          "id": "a6832cd5-22c7-489a-b0d0-8096c268f171",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea36eb4a-d0db-41f7-ba02-da9f8c6a977a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6832cd5-22c7-489a-b0d0-8096c268f171",
        "cursor": {
          "ref": "eca01b18-0367-45a8-8346-243ea2c88772",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "65318e4f-a6a9-4100-afce-fbe5a4bf08fb"
        },
        "item": {
          "id": "a6832cd5-22c7-489a-b0d0-8096c268f171",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea36eb4a-d0db-41f7-ba02-da9f8c6a977a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8939c327-2080-4b6c-8a9c-7f252618b2d2",
        "cursor": {
          "ref": "e9b23a5e-42c5-49d7-bdbb-9e24618b9346",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "111c7f52-9778-4599-8e3b-77865eeda43a"
        },
        "item": {
          "id": "8939c327-2080-4b6c-8a9c-7f252618b2d2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0a6eb793-9aec-4319-8ee9-2ef7cde23177",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}