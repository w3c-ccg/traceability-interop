{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1125f29a-bb5d-4a0e-8f45-84d3311dfbf8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a2051fd6-be8e-4694-aa67-c61a7e0ea033",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a0892c3-f552-48f3-aaf7-2c0cb79a67e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "99d52ece-d13f-425b-bc2b-83916abeb157"
                }
              }
            ]
          },
          {
            "id": "1c91f6ea-3083-48d6-a783-5255320608f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77a92852-b4ca-48d2-93b9-cacca761adc4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1600d424-99fb-4204-bb1f-42d5d681fa4d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a597de4b-f6c4-45bf-a666-ca98f584a6f8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c5cbc6b0-20fa-4b9c-ada4-404bdde87fb8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1600f5e-f8f2-4cc1-b2ed-7a4ad85ba344",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34804229-e32e-41ef-a8ca-b71bb45ff9cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "272f397f-b57d-402d-b722-cb2e60d32f3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7711029-a5aa-4844-b1de-53b9207dd9e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4027dd0-e5cd-4efb-832e-91001c06b894"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0e69a13-219e-4603-8541-62852d5a1d6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d84dbc7a-9083-49ac-b36e-dfef97f737bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f91f6b4d-8b6d-475e-a7c9-a944d9782fbe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e54d50f1-1a52-4895-a0b3-2f70cf06dedb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d00637a-0d61-46fb-8482-f5496b581b61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87e6e5b4-9b90-49aa-8d09-6578bc8745da"
            }
          }
        ]
      },
      {
        "id": "f9ff4fef-ce52-4477-b98c-939d878c1e37",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c647b2fb-32c9-4a8d-b4ed-d03201a2868c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7bf7465-8381-43cc-a698-18389842bd65",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e0217f8-8cce-4ebb-888a-348a722b677d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa9b4d9-097e-4bb9-aa03-cd0ef117fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fc8d0ba-7588-473d-bec9-3c42fc1e4ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf26f03-6587-4e1b-9d26-90d98fd64d52",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d303a0f1-397d-403a-a33a-5a365b9d874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66e1b60e-f44f-44c8-b478-8a96eb656e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dd9726-224d-4377-aa0c-11a715ba4d9e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369b680e-234c-4719-b497-ac607f0fcae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06131c96-1a87-4888-ba07-9c0241ef10fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4282f3b9-5745-4cbe-b876-b30810e79694",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "229dbdd6-f40d-4173-9e85-c757ec8ed6e4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b980a48-bfc7-4bca-bfec-e5f43c24a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ec96101-0f50-4315-bece-aa922135c418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0ceef9-bf3d-4584-afb9-a16c0d58b48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e6bc14-af97-4240-acee-f571d4b39d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181959b2-cec1-40d4-be84-a7712b4cf5d6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98acf8a6-bb9a-47f6-8cfd-353e0059e564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca822373-b6f7-4bf4-b6f7-8fe8302a616a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8716f79-5a6b-4de1-88a7-0865cded0c52",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "703465cc-1803-4b7d-9cc6-2a00bdc49cf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac5b4b75-882d-41a6-a3db-27d9409058df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d678613-6c2e-4294-83ad-04a91bfe998b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b88e503-c865-4948-ac4b-0dbf6743daaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "68743d9b-78a7-47d5-9048-c51aae9951d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fdd63ba-ace3-442d-9a60-1e584bcf10cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "88dff3b1-90ab-4dd4-b9b0-9fb5bdb4b8ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12dd7fe8-6afd-4369-bcc4-caacbdb8c4c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe91af91-8a8b-4c49-9a11-cf9c5f62ed25"
            }
          }
        ]
      },
      {
        "id": "7f17a966-a89a-4a33-96cc-7ca3255386d9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9512dd60-d996-4330-b1a3-dce29c7c8cca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89b97041-2198-40f3-9b12-e3466ddc0c05",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f64bb8c8-5a7d-4257-8eb3-050f07fb5292",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e15c98d-7b08-4b0e-9a14-0efafaf01915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b3a12f-0644-429d-9fd8-967998968623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56c1b76-4b25-4662-80f7-f473a6973e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da52f5fd-57b5-4dcb-be8b-c6263c33f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf17ae14-a0a4-4a13-8d92-2e85a67b1515",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83561926-4f6c-42b2-91b6-a33478fb8156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13987174-f451-462c-b0fd-f122554aef1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6756599-6439-4d0a-b26b-6fc15813c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23211f9a-ba7a-4e96-b2bf-905d57fde35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecd6c8a-8113-4929-a681-5b23a8767f29",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00024c1-6496-4445-9b44-43b77246b2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54be88aa-9082-4d75-ac1d-1f8cac5fd5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f7a50f-c644-4a14-ba0f-aae1eaa42ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d12169f-b76b-453b-b268-a1006fb0246b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b055a-18ce-47cd-ac9c-9b49d1ade6ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caa4363-a630-4d25-bbe7-8004505b212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6bfecf-1567-477c-bdd2-64c6361b3f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2793ef97-11fe-4be0-afc4-d6c2691d7141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d475e5d7-e84a-4e87-a8a6-25374d45ec7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbd92d5-08a6-49f5-a461-8b1e7fe26f6c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf500b8-87a0-4e9c-a020-e49399333451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240ca2cf-b6ad-47d7-a7d6-53dfb4f63e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25ad719-f6ee-47ca-a6fc-069a3d3f7105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93e6d22b-bffd-413c-b976-1e6cb46b1ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b541c5d-34e7-4448-b5ef-a2b91ed6e5c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a19a6d2-8d07-4b48-8870-4e4415fe5000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c0b0aa-92fe-40c2-ab3f-5a1e2c989e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b303031c-15ac-400a-9b3c-28bc0182726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6e6f55b-095c-4316-82e7-52122e725c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce523a1-d41c-4839-9481-2dc77e9790ee",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4a4ba0-4297-4f6a-ad0a-4bf71f424b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e693381-0980-4faa-951f-85fc229701d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0ad48c-1637-47d8-b5a2-5e683264d3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48e2de84-4ab1-4e54-8851-12b770de46b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a5de7a-afb5-417c-9b13-78eb2abe4726",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9950511-f457-466d-ac9d-7bac4e956e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd31187b-6033-47aa-aefa-672b50bc884c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fd8e76-918b-4b53-b229-e7589ae066b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef68ff35-a083-448b-86b8-cd071c73740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d4e587-177a-4533-a931-952104b93920",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ddbfe5-baff-47aa-ad7f-d112de700c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6552f901-d8c1-4aa8-8d32-1f3534844467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc407f1d-86c4-46c0-ab0a-e828ef10712e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44e94c66-8d7b-4ea2-9439-75cf9e2c2228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd29733f-5f80-459a-b0b8-fcf657d8fb9c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44dba84-5bc7-4cf7-8849-80c519e37bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe55668-7b8c-4050-a6b4-e9f734e19190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca881a-8147-4c7e-8571-364c387c24ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b63c4527-2e61-465f-ab94-d4b8f68cc6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383f9d6d-d893-4fff-a34f-256941afdcd1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ee2bf-5210-490d-a6fd-944240ec3610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d504c0-9d57-4a1b-92c1-f1868788e607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a558cf-6bf7-4727-b6ea-7799cc2f531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b43123ed-bf44-4eb1-9306-32ec9fc9273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd303cf9-1880-45bd-9625-7583929e6ced",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eed6457-e14d-41db-b187-1d5d0915746c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10145b6-282f-414e-a055-aa3a0cb72f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d886fe-eadd-43f3-8c32-a19ce4efd9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b40cb13-0197-4518-8b71-93011998b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e326fbf-1cb4-4c26-ba1a-25058159a418",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2668ae4-8312-4b5f-8f0c-87b5de035862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73607353-4db3-411b-b779-98325a885aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92be4501-da31-4315-971a-641cc8f20da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1852434d-002a-48c1-b6fa-01062265a877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721226ac-c6c2-484b-b8df-5560113db067",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25758b05-dca5-4da7-a883-27d540200251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d57782c-48ed-42c1-ba1a-3612d5d6e43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0ec1fd-e8b1-4aa9-829a-91c0a38f4c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "028841ee-0db4-47be-918f-78aa747c1381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f2c0ae-b2cc-4279-94c7-9a14dac393c6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2919bee6-4355-4517-92f7-5c84a0207977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db4f008-d8ae-43d3-b370-306b744bc896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491a8919-c50f-4e4a-b070-1ff4f3dc5144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61be838a-6aec-4870-aab1-78dc5bff669c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e1e490-dfee-47b4-95d4-df2b5df4005c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25951c-92e9-4fc8-a92d-06609ac8672b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17905bbc-5334-4a35-b408-2e914f4c0779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd329868-da30-4d07-9e6c-e1a25498f16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdb922f9-bd92-4ef9-986b-1454be8fdab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00663b2b-4c14-4cad-9401-40949a178378",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4cfdb6-9e43-4cd6-8149-1e0795c5fcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc3a25b-f294-4e02-a564-bb0e5cd7e5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb0abc5-286b-4fa1-bf0a-c113228a2165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ad7bedd-aa8e-453a-8156-423012c8e58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fed49e-d589-473a-9861-49296751a3fd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cd7869-8d9e-4b70-ba7e-a9d1a5febe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af87aefe-3422-4fc5-a281-df729d0a9d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c059580-cf23-4458-8059-da39650ba6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa0481a-4d96-4faa-9029-c24cf60e307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb71b699-3d05-4460-a7c8-991a25dc51cd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cde537-57ca-4308-8916-93705d9f7e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89708391-94f0-4895-ab6b-ab30474b9d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb629274-9d29-46dd-ae0a-cf337e1fdd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "763ecea4-41b0-4409-87b5-50fbdd7a9795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0463e3b2-4b38-415d-b4a2-1c45f16eca3a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34b07d7-a547-4e47-83ca-2669234af189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd5a329-990a-49e7-92ce-c2c7df6c3515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79cc3df-42da-4f69-b194-c3207154ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39d4834f-3307-46c8-ab9f-846d7ecea1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34579f92-96b6-4077-8091-7104230def40",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a1ad7c-abcd-4790-9f74-b8e437f70d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacafa8f-d539-429a-afe8-90a2c6490935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0f85ba-220a-4951-944e-974699afdda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f0975e-2356-4277-ad27-061b68b85f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec9056-2943-4d75-8fb0-2ff17e089bda",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1673b0-7d5b-4cb2-a68c-3f50b04a193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be7e815-3c3a-41a7-a4c0-917965f8673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f8c7cf-0d23-441b-ade3-10c001b033aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb5ee92-6a43-4724-9a95-962b3e7b60e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38030cef-7202-43e9-87c8-c028b18bbdeb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2032690a-a2ec-4e8a-8af0-9a7acbefb86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad873e2-3b19-4240-91a3-8fcd3654217a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e63b4de-d3a0-4c05-a1fc-8ed64b5ba71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02e26e83-ebbe-40a9-8f7e-ca3790d24f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9623b0b6-8b30-4998-94b1-92ed672ef276",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff49d0bc-025a-43da-a953-08c2db33fa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033d1772-9cab-4beb-98d8-51010e8f066a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10946138-6d63-448d-adbe-a9c1513a6154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14452a8-2480-49b0-9db7-2054dfb9227c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9a0f9c-d3a9-4c98-8366-d3136142b535",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caf3d13-2736-49c8-8faf-4227a5f2f950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb7efca-0c56-4e62-8216-e90f4b96301b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc81723c-3b43-4854-8c39-7f2a39bf6fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a262130b-ed31-4240-b6c5-7f9d3d2925ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd0be50-c7fa-476a-bde2-6652d8711389",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823b6a7c-d08e-451d-94ec-3eb572aa8d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868ee7d9-8b4a-4812-94a0-02a45dadd162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2955e4-a7be-4490-8816-dbf029c90676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfb1140-ea87-42b4-889e-7105b731c3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da56cbb-c20c-4a1d-8155-8a57cd46a4c4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ebe67c-a94d-4171-9f8f-2d2ac510ea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66670fb0-6a41-4440-a5dd-b590371c3262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e817dbc-efee-4d45-b79d-5e0e0a73e15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f1cc82-e99b-4dcb-8ecb-03431d2edf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aaeab8-f13d-4c21-bedf-aa582c8515bf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536225f0-a457-4027-8eca-b15ef28b0c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0663560a-ff36-462d-bb50-4c050f1a72cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc54f2c-50af-4fd8-bd38-829764c7b5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd30194-22d6-4e39-a078-5574af98fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe96531d-0eae-4f33-8b2a-dd6c41f1ed1a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26326fbb-e314-4c1d-8446-7d0d841f85b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd10b813-06bb-4b9f-b9ac-c1471bb687fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbf50a4-7ff0-4945-94e1-0ca652f6a182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c9e55d-3069-4a24-9ef7-6d41d9e0a3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cac4666-2a2c-4fae-a4c2-2e760bef699b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9377e5-17b8-428d-86ac-1d3e4b049b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c7cb23-2e45-4a19-a463-b8311e9a59b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc6a4e3-1375-44d6-88cf-d226afc52684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1be7b1e-abd4-49a9-9973-f1bde3885d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4514ca2-f770-4c66-b5ea-5c3819b793ed",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c69c272-7b74-41d9-a73d-120d32006fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfed412-98ce-4e88-ac91-418dcebf4351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae1a07f-9e38-48f0-a9dc-e08e35528921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c6a268-f25b-4334-90c5-68a58ac84411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58e1c38-e77e-44d9-9f48-46116e74cbe6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31862ba-e4e0-4b73-9325-cf48e308829f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930792fc-60cc-42dc-b260-0faff5e317eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a2b15e-ce00-4561-b15f-1c5386039cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85defd8e-705d-4736-be5c-f5a59ac3196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc42ac8-bfa0-48d6-96b3-8931c6e6a8e7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ecd97f-c82d-4b05-92ba-f8c1b0497d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f4f5d0-a0f6-4caf-b06d-7fcb52dc7565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f24d7f-948a-40ac-8766-1351316bd85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed57e68-81cd-42e8-a11b-7a5adf24b80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f012422d-c68c-487e-a971-5cf1b5008761",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2fb70a-8aa2-4895-932e-42e69d69eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150aa03d-4f18-4b20-9fcd-dc30790febe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caef3a5-7048-4a3c-b788-76d6a29550a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af50596-acec-4163-bf59-35bf91d44dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c10fe-8d1f-4aa7-a3f4-63d4a323a0ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4788ce66-1e2f-4d58-9abb-841ebf35916d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f2f9c3-8aea-4807-bb52-297cdf9c3ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de28aaca-b6b3-48a9-a46b-54cf5f2ef1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d3143d39-a775-4f19-bbad-872e2e30d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54fe16f-7898-4b65-853b-5ab8ecd5f9fe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c944f01-599e-4048-9b12-79414def989d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "868370eb-bdff-4493-87ce-ee3e2f073f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a828d36-b1a5-45d9-a48f-5d1d1bae119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e19b62f9-9f42-417d-b160-79ad4afbab6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b83acc-88ea-4629-9475-fc76ef46ae5c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259bcc42-997e-45e1-8b4b-c2c80c332195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df2aa63-2653-4ba1-bd86-9eebe2b91da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3bd8c9-6d85-4127-b884-12969c1a5307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7850093-b590-40e1-a3b2-0ed282604053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b41089a-95d7-42fb-917e-5825e0cfe60a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc543c80-4f11-4276-b0d7-b419fa96cc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97a8e28-951d-4c14-8151-9760981efe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e36a43e-f493-4d7e-b2bc-eb45ced6acf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cef26c-cf6d-4e4b-82ee-6155daa83ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2747cf-f0c4-4f58-93eb-f8061fe3c3f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2e23a2-4d8f-49dd-8de1-06f209a04f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e8e6ce-0957-44b9-9b0b-541f37ab6f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fefe362-559f-4dd7-9cb5-d1c4e7583283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "705d009c-35d9-40ed-a863-771e8bd1df1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d618b8b-9383-4822-9098-b1cd198398c2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf9e83-a572-41b1-8a29-943d6b1b3c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f94c173-a612-47da-9ef5-4089bc1d1f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b06fa8e-501a-4a55-8628-461e9fb3bb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62887609-1780-4daa-9a54-01a9d9c21616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a45f7c2-a7e0-4224-bb74-8fc7fc4b066e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c30920e-4233-4378-8508-81026dd50f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901725d4-c95b-4035-92a9-11165965d921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb61daf-5b01-4832-a269-eda20dbf8226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d27c65b-c855-4248-8a3a-ad1d2f87f594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b313c0-25c7-4df5-8f4e-85846ed4d083",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4b51cf-de9b-4c03-a9ea-490797b96883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde3fe34-07a2-414b-aa28-3e83fcbb3fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3e5b4c-0e81-4914-aca5-999aab1e3e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "709e0654-c02d-4edc-a521-297cdbbf808d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f27b6f-ab7e-4714-8946-26d5daa185c3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60be0fe1-f0ce-469a-924d-52420765d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122975db-c554-456b-a617-5e391698ddf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3e1738-f496-4203-8f9f-9ec7c83dae81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8414740-6ac6-4e7b-9442-3b3b5ec5ee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86766c4-9e7f-4bce-97fd-d0f7f907d4e5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79278e3e-85a2-4a28-8ad7-49d07130c576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c50b36c-79f9-4242-b052-78e723be4401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92079aee-a790-45ea-88f3-e955a281ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "515493aa-e8b1-4ef9-b71f-c3adddd7ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac49c1-36e6-44e6-a7b3-54f6ebe92d03",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3e11cd-332a-4045-ba7e-9d06a460c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a4dca5-6817-46f3-9998-e2a06739598f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea0d8bf-6651-4615-b991-d7c100d781d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1c024a-e40a-40e1-a517-40ba1e1d9f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa483e4-d366-48cc-8bc8-4fe736313f5a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469dfb02-f9c2-4573-82f8-a06a33c8dfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7373db85-5c8e-4d41-940e-18ca8deb9c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ccf8cc-ac73-4fbc-850d-e9a6312cd1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d6e276-5cb6-4edb-9467-0d55d8ff1813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407f07a8-3e7d-406c-a50d-933873c32dd3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220b3ef7-8659-43a8-a1ed-71913220ade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9310571-fbb9-4775-870c-f4b16a59ab95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519245ca-91b4-46ca-840e-c2f97ee91eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d82fed5-f061-4e89-b041-328e5c67dc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd09305-4432-485f-b83b-78d43c6c8594",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085819e7-5b11-40be-8433-67bf61a29156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb56af9-3131-43e5-8067-a6cbd5bbd2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0cb6ce-29b0-45d7-b81f-d23f26ca94a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbf1220-120f-4c68-b9a0-1120d6799e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ae8ea8-99fc-4c7f-86b0-fdfbec286a21",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b544c253-da18-4ac4-a9b0-6f4dc85820c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d529a8-0d25-486b-8d92-0b6e34b00ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ae644-aca2-4a3d-85bb-51f994c5804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "356e70ce-ef47-41fa-aae0-749b9f6cc910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6678e616-891b-4dc0-9db9-e0dbef0d2667",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb3885c-ac6e-4e84-b730-c03d9df5f226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af45ba7-631f-4ff9-8ab4-9c7db25b9a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917f3b3d-1b16-499d-9b23-5968e7622186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45a3044d-1540-4906-84e9-039d3f306036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9822020-abc8-42e8-bea0-08ed58edd324",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d17bc5a-c1eb-4171-ae9b-9165a25a7c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d67f51e-e2b4-44dd-9783-fb45296f0d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffd8187-5523-4e66-be87-c6e4d1705862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a7ac1d-aaab-4665-9c63-6287ce13824b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a400e7e-394d-4307-a12f-1778029d4626",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34f9467-e1ea-40f3-8689-1ded591027b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e71489-4e37-498e-a8cb-1c79ada7c3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b65546-3e05-4c32-95b5-93b2908f03f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1c01fa-b7f4-46e5-b5d0-cdce2afaf71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac56d8-c827-4abb-93c6-e2ee0e7343c7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288a83fb-ad52-4982-9383-5c676355cf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41a4a6e-cff7-4646-85ac-be9c6f09a573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894922fb-d663-48c5-b4d4-81706c447409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a725f8c-0a7c-4108-869f-2481eace710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32444b75-29ab-4de4-9333-505269e51035",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3692db-9f7b-46eb-ac8f-9c38f6ac58ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4495b6cf-91bf-4ec7-8440-8934b5aa28f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04016d5d-860f-4e6e-a3ce-321669d857ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "733bceb7-0ce7-4330-a8eb-f10c25435ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d24511-f727-478c-96bf-fa7552d0b118",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb033f02-a1c3-43a8-9259-ffb30ea95303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02b7278-e38f-4b6e-9bd3-964888a91216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28690b06-1492-409f-8849-fe3adcfefc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03aec2dc-c350-44b4-9127-d67bec7add6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa3a48d-17ad-4bf0-ad2c-cb67d46d521d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3617615f-9b67-4f7a-8000-ab3442236521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929913a0-b75d-4185-9be0-66cb1c130d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87918f78-7b08-40ab-b324-90aab097bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "40699ea6-a965-414d-b99b-a59e232b0c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695d4a2a-c9a3-41e6-bd47-cf8eaed5bd90",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94f3963-fdd0-45d1-ab1b-d6aa59767885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbd715d-3adc-48ab-9e9a-63bcec6e7fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c454c10f-3ccf-4880-b6fa-2bf4eefab63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed37f9e7-eeda-45d2-a330-f540cd9292d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3d55b7-a5df-4a21-bcf6-60f68d3c12d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925a1b0d-c75d-4675-b3c6-e2fd87d86653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f822edcf-83e9-44d9-94d9-a28332bd4076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c17aae-63d3-4837-a195-ad2fe5621bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00303e87-8ac3-4eec-969a-cde70a6fb721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2301e2-4a21-4a31-a970-de34064995f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c5b638-ddfa-45de-b9c0-7ae75f30ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4aae67-77c8-4d3c-a7d7-31475fe9dc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98e4da4-df91-4c28-b6ad-c71833f98269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f82f0f-e1b8-4271-b620-1405954507d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6089197d-0e85-40f7-b602-89d7bc56c703",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f6f4d3-6f68-4edd-85a1-bc9f540ff07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102aceb7-593d-4b07-a15e-2f4f5b236aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250197b6-b756-4b15-b0b2-043e3651d5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21d0db03-57e5-4f10-bf03-a75966a61174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10880b87-2c27-4907-95cc-5e2e880855db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595134b2-1347-49e3-a394-3d391d9cb651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0d78e9-ea75-492d-b68c-d1a905e0bfc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a99defc-3591-46a3-95c9-e891575ad51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0f98bf-066f-4a81-b24c-136442620ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e573e8-1593-4c32-9839-ca2090f81dd7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbd8544-3911-4517-a936-27742acf00f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf29f3d6-acf0-4254-bf6e-ab359b0f3426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d0567d-1b44-405a-9331-1a063a852328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a1bfe1-4482-4945-856f-d623dcaf898a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e7f63f-823e-4f49-8dbc-a75eb0d49ff4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa2734f-04bb-4c93-96f9-f03e988d36b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8e0fb8-eb4e-400f-9e6f-4c0dd95ce75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d7b391-a28b-427c-9ac0-37a1b6497afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b0b3b2-3030-44bf-8787-95d68f0bd9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf9e9c2-f700-45eb-921a-12049c3667d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1525b9-5f86-46bf-a86d-fa6109005ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b8f2f8-d155-4d0d-91cb-6fd009a0c15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b956916c-9af5-4a67-ac2c-8a46ff4482f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7833979-ef93-45e2-86fb-4012e904197d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66df5692-cf93-433f-bddc-a76a40c92b31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7659dd-cfbb-4f35-9306-a4c6724a85b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc56c53-dc08-41bf-9b95-35b73f83aedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1815775-57bd-4538-b90c-4d614c669766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f693fc5-dda1-4e93-9776-ef9eabf20463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71760d21-f923-4fc5-b827-5c1079565746",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98942b2e-64db-45a6-b806-4bbdc465bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f8fc9b-64be-464b-8b6d-476f31e83e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1034003-ed1b-4653-9af6-a7b40d4255f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a57fa716-bdf4-42fa-80ce-3243ec8fc48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c34c50-1da9-4743-a4a4-ae15d0148c42",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0782ebf0-48ff-4ec2-ab1b-8a3243653e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edde60ae-abfc-44c7-aa26-22549abd710e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51a1615-6468-4953-8005-6208bbe0a420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e63ed75-88aa-448d-b60a-9e7e9035a5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8b9f5b-c53c-49ae-8c65-6a7df96cb6a6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b96cc26-806d-4478-af57-3ecfd872681e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee407281-7e9e-4ac3-941c-fa2493a54b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7246472-f620-40ef-9e18-6aad1ca124bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd122477-e181-4bf0-9863-9d7e1fc10710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ea0709-bf36-439f-a47a-592d5f8b6550",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3831bfdc-5d6e-4b17-9784-048f16b78a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3915c0b4-fb02-448d-b469-420b1c478953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912485b3-c26b-4caf-8dfd-a295dfa2968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "356e6882-ba6c-430a-9fdb-f219d7c0ccb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a041b6-29b8-4f23-9d18-518c936b2c46",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ae639-5a76-404d-80f6-3bf59a0e7570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21807bc-64a7-4a94-935a-40859d2c3af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2191aa0b-88cc-4b3b-af56-a4d784752b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8307e3-a951-47b3-9748-beaa3b5e6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f539caed-4112-4c1e-be7d-7f61c2552264",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c50de8a-8f56-4d0f-a39f-f2c505d2a73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc5b8ff-76d9-4f3b-a055-349b09ac1cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3a0663-0f22-42b5-8542-64e6a3ed65ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fab90c4-24f3-4fee-8a58-59215c6fe254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74a122b-c4d4-44a9-a8c1-f3f0563b0352",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e49804e-d05d-456d-9fc0-6ca4268b6af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1cb3a6-b52f-4e1b-8bc6-577604319758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8351926-5e47-4aef-96b5-f980414867ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf68ca8-f173-4d5f-b564-48dd8b5ca7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be3e5a7-0bc4-4169-8b4c-95f0a404331f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad54a9f7-7fe7-468e-ba0a-e42feba64496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affbf01a-5f58-46bf-922e-d16f827f6c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b93f834-8d75-46e0-bb2e-5649ea13c96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da9f2224-201c-41cd-a31b-adf6112b63d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cd8e8f-5198-4d7f-9f57-4de20e575f95",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37fb755-3da4-4f21-8c46-edca7ccae65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c43f649-92f2-4b9f-8424-cd8e2851ad0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30e44e9-4f55-45fb-8271-613ccfe14b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b320d3b1-a334-479a-b5f5-a28ee383358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e30786-6d46-4452-b0ef-d9804dc4076f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883e8b1f-ef23-4e5e-879c-2b021f9ffd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3e7d69-9672-4d2d-b729-78db7506ee7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc71344a-b083-408d-9456-0dc47a5699de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9de984-536e-4f48-a974-4636aaaad984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb43797-5468-4670-b1a7-51a38c8ff031",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eb353e-417b-4c6a-8ff3-92c22c10d740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314be583-37ae-44b1-a777-e67aaa87553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce67dfd-4344-4386-b302-5f729e174933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f15ce20-fe6a-42b3-bb98-3a92c7f8ef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e4b9f-e6ec-4c3f-b1da-fa81dfb168fd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493cf7be-6b50-4648-b279-5b0c944fc78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb9f97a-0806-4b2c-9302-4d1617aae355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2efb32-8336-4161-8489-e48504b1f548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ba6587-a0fc-4aa4-954a-0dacfc951af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e635f714-2f6b-49c3-8391-cb8f49fd7446",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d2140-5a15-42e1-bb80-a70127145d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc12d28b-d384-4c39-9d8c-86974e1fe270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eb5ba8-f1f8-438d-ad2e-466824607586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e3d02c-56e2-4fba-8c52-9b530561451b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dd5670-bab0-4111-bf25-b4d72265df75",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15ed786-3317-46c2-96ff-dc66d2f754ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c66a8f-1c42-41a8-9804-8730b13d8614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a0d76-1ef1-4b06-9978-864aea5908f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06bdf0cd-ea3b-4ec9-8041-215b4517d96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c96530-76d9-40be-b0fa-07429e53c938",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31885ed-7a3a-443f-81e4-47b52d1c8472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8fb2e3-81d8-45c5-969e-d864708bdf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3855fbc8-6ca6-4729-8858-febec8679f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e75fce76-8d65-4be9-9b8b-e7a02da7463a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaa03fb-ec9a-4b65-b828-2de63cbd56bc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c86db9c-486a-4ef7-a0a6-e58f4d6d89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4e4878-16f7-4ccc-8ff1-f40624a1b1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2966ecc3-9fd8-4e39-9cea-b30f3d52da0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9468b018-277f-48ae-be32-f5b0c1e1fd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8923500e-dc59-465a-a1bb-fdffc029e411",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e71741-ff8a-474e-b262-e5dd1add879c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49b65fe-fc6d-44a9-bf50-88918d2951ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4420184-0795-4be4-86ab-a822bf1c404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c181d8-5177-4f2d-b938-55d44ed3d797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3582aa4-8815-4353-a060-b6b6e04eee63",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae5fc59-f966-43a5-b06c-7fea8b20ffce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624647c7-56f4-4750-b16e-67b364adfb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e348b-8b99-4e6c-8a1e-976c5126501c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "860740cc-8201-45d6-b88e-9509beeab2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2009b138-eeeb-40a6-a3f6-19653f3adac1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ac4f03-ba67-4f28-a656-cb0001d274ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79669d2-d63a-4fbb-a82f-185afdc15648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feb57ef-d79c-433f-96f2-f626977f44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb146cec-dc70-477b-ba1e-ef56d85157e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07894b0d-9649-4c89-9f78-b45ce0a8856e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7721e1f-8866-403b-93f6-5f368d843a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb086ba4-3381-4c0b-a64f-088a63213c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08397d07-dee0-4d1b-bcad-68c4735288d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31887882-c1ef-4709-855b-09f976547b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b7d91-e98c-41d5-89b3-4480908043a3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a08d290-1e30-4b9d-ac97-93fa06c81331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6904ac7d-84d1-4cf6-ae3b-bb7635a29dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55c5189-6906-4bfd-9bfd-f50a9446b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d7cf1c-b706-4915-9777-34916b64febd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fb4515-ddf7-4358-b115-ea92af1be5f4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddc6fa2-9d8a-4173-a8a3-d7f6710feb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661ab2bb-cb52-4f2f-86f6-6cd4ff28ccc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd618f43-b0c2-41e7-a940-802b6aa76fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fde621ad-0951-4866-a65d-3a755f95fab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdbb739-1b32-486a-b3e7-2d77bd49aea2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405576ce-30d0-4b5b-b0e3-d55e62ccbed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed8fdec-dd55-4ab6-aebe-51d24458c138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdf37dc-c37c-4da9-8c52-55fba85c8574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "258dbf7c-8559-419b-bb25-6c2741cf1c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f42d09-d239-490f-9d31-cad9f11d537b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f4cbdd-329b-48f7-976c-a41aee376381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6338e50-149b-43e5-9e09-ee4741355cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f0cde-5282-4408-8208-cf24f9c0df28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7be54b6-2832-4d25-abe2-f37842e1818f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e1b81d-8192-456b-8f68-d53b003defe1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c7d72b-4888-4612-8d93-6aee8b047e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59f0802-312a-4788-bfd8-472094fbc695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08340edd-c0d6-4354-84f5-3f1161064d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d702957-18b8-4595-bfcf-aece5fcd3ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69bb4e0-9c55-4a15-ba77-15b7e841d01b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a46cc1-3ade-4ee6-9e68-cebf7305fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e045b3-3ed1-42de-a698-78cafa6606df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4e8bd-8507-4028-90cc-64f914b9dfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "49276c95-1208-4ba3-9dfd-6dd95489450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8978604a-74d4-488f-a5b1-6c7a51567af4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34d5bcb-b3aa-4c9c-903c-1eb12fb96ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e3ab6ac-06ea-40fa-873d-b62fd6b73a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70c93c7-a68f-4987-9415-2707502cef32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49c21167-9134-4177-949e-712bef748027"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21029442-db8d-47c6-8e2d-cb045d6fa143",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d080f8fd-11f8-434c-b6aa-0dbfdb1f825d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5f85a7-1a51-4302-9675-b778d279124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f1ace58-91dc-4331-b5ec-013c582d3037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb41d06-97f7-4e8c-bcca-a8b1dfa9b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56cacd70-43fe-4993-a4d3-b4e090af72c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14ebf4-8ac0-4544-a72a-1bb64a68729d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a3f305-059e-4054-abda-733b9fb2832c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb400dd-7f5f-46e8-8de6-b66255c8de0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437eb344-dbd1-45c0-a7cd-fd794cbcd73d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0750e330-8489-4809-bdd3-a491571566b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2acfdd6c-8e95-428a-8da6-cde48719d11e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01107c1c-f275-4db1-a8ec-6119abdbdbea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f0196ce-2e8a-41ab-acc0-fc91f2945214",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c303504-d7ce-4099-b33b-257106d45eb4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c284698-2ac2-4543-ae63-a519a2941a9c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80a236df-39f5-4a1f-9246-b7384bcb2a4b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2e9d14b-72d0-4475-b305-61d7c4b5e0eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd92b5b6-4a13-4a77-b8c7-9b9c8de91cfa"
                }
              }
            ]
          },
          {
            "id": "098ddbf4-448b-4126-a82b-f7a88f419517",
            "name": "Positive Testing",
            "item": [
              {
                "id": "effba3ce-10e3-41b8-99a9-13175811c175",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c46c50a9-4735-4324-8d41-16c9be3f06dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "674f74d4-3eaa-41da-9160-c9d64217676b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12080d91-59c5-4729-8a27-ae55cc6ca04c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60e22940-bc93-48fc-92f0-01281d0aa148"
                    }
                  }
                ]
              },
              {
                "id": "6c45794e-2dca-47f2-b63b-6f4db0e93d06",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e94b73f6-c1c6-410d-823d-0c59904619a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b9b364a-60bd-4a91-b17d-dce825225d72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f68fab1a-b35c-4bda-a11d-ecb471178601",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9364bc7-defc-497a-811d-309f45c3a6ce"
                    }
                  }
                ]
              },
              {
                "id": "13349c6e-cf68-4da4-8c4d-830ea63fa455",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a864a53-45b9-40ed-8904-51e33c62dc9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fa4e5e1-b6dd-44ed-b231-f5e71ec688a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6a9a050-9089-4dcf-b561-ce04a1efe30b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68c765f9-d0a8-40df-a26a-18a79015080a"
                    }
                  }
                ]
              },
              {
                "id": "3e1c5c09-c205-44d1-b088-45d63ba2b1f9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc47e5ce-653f-43b5-8612-e9560f6a7566",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ca1f284-bcfa-4c0b-9927-74b5d1c5be29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5529df1-4765-4992-ad0b-e7521d6a4f39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e0d7a64c-fcca-466c-ba39-379d1d4343d5"
                    }
                  }
                ]
              },
              {
                "id": "e3f2fbd4-a75d-4132-b596-71119c5b8282",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c58d965d-9770-49d2-b7ce-85d413ebb0f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b55ed2b-ae46-47a5-90f5-bb01b0c92873"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "819ba0a4-0964-464d-aee7-3a74caac4a03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c3575e0e-62d2-4674-81ac-751ec03a90bf"
                    }
                  }
                ]
              },
              {
                "id": "15e83d34-e933-4194-a880-811c2536cfd3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df5b0089-466e-446a-8794-f6ef5cc42db8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e8220b0-1284-4ce9-b3cf-f14233599d92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2442483-eb9a-43ab-beba-e38d12ccc381",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d0754ae-4eef-414a-be57-788591636c6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f966ad21-1914-4c5f-8abe-525fc7673bda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6db2c2f-196e-4e73-b1dd-0dcdb29a04af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9fd86ed2-760c-4a29-9a3c-bd34a2397faa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7deb1ee0-0be5-4872-8d5a-65ac784ae6cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6db27a9a-d260-49cb-b7af-f12802800de5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30cc2afa-4ac1-419f-8127-997752cbf084"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cd5b9aa-2283-401b-ad23-a3c8868b9df5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "035e3c80-de65-4b93-97f2-01de02744839"
            }
          }
        ]
      },
      {
        "id": "f5cf316c-6c69-49cc-bd33-8d094327b9d5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d10a2215-43a0-4e0f-820e-13f01ce70533",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21bafa00-388d-4712-9856-7c2044f0ecbf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ba53853-6ce2-40a8-bef9-dfe29d8e68d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c00589-192a-4b0b-8a94-88b0985f2541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd751a6-b2d9-4f74-a6c4-d351bc91dc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b872ee-2274-4e20-9847-5ec5ba0a7a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a7e32a-8b0d-492b-ac0d-6cec9c3cd075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae026bb-8865-474c-a129-ea71bb3660b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc90cc5-a710-43f3-9c1b-b435b4543b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a23f18-cf05-49a6-921e-09aa1a2d76fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0c4bfa-e9fa-4645-bfe8-17fe6d3b8863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0efd42f6-aee0-4719-a0ea-5067e0875f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5bef92-c347-4998-8613-e6d70385ac07",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056ecea9-bde3-4edc-bcbe-1367d00d56e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9467257c-29f8-4493-8582-39379b6ee7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32002125-47d1-4b3d-8baf-460819eb74a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4389edb4-249f-45bd-a74e-4047f628f999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46e7529-d243-41c6-a7e0-d3d5f4ee7e6e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfed6f88-0116-4289-a2bf-6cddb6a50a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f945ffc-e0ee-48d8-8d15-f4bfb43b280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958ca037-ba57-440c-8c24-5274c758d686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0929eea3-cd33-4790-97b5-651befee5194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0edc7bc-6d27-4406-bc61-3f84e827dddc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4992f83a-6c26-422f-a214-6b5d88948230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87431380-68a4-4a3d-8507-42044caf338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211b5d9d-7796-4e37-a360-5911293966ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b29953dd-cc59-4514-8823-f9ee2e5a4213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8b9604-6f66-44b4-9511-be5509c1326f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e72a5e-abe3-4b99-b004-acae4760b389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16bf42f-77ae-48a1-9cdc-e115380ccfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c288dd-64c4-465c-a187-4639d72db9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbf7d04-6913-401a-b751-8ef77bf3371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7bf513-f3d5-444b-9720-5bf6c549a13d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c4033-6e7f-4a4e-97a1-f0d80e4e363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcdc2c7-3fc1-433c-b04a-3faee55597b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cfc3a3-11eb-418f-9d8b-4289154c2ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef92fbf-9293-4571-a4a0-23d3b9cf0537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac3900d-621c-41df-ba24-67308aa212e3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc5145f-30c1-48b4-a46f-73466aab3d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f91f955-f251-4026-8488-02369d169234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412111f4-c1ec-4af3-8444-e458a66e14d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "396d6866-71de-470e-90ff-b47d0b3d7c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef6b2e4-aaed-4241-a345-a5a2c3dfbb95",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa16f718-5e03-431a-be6d-58bd5142c5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96bddc8-d756-4b23-b8be-72387be902ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc9f2f0-b7e2-4f06-ad24-09dbac4cbd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e48d1fc-0af7-4786-99ff-ff7cc6e8541b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002fd93a-b5ba-4dc2-a855-d345b964d3a8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924ff06b-6568-4525-b169-36f025af2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08716cc8-21f9-4023-98ca-01fc534c92cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f0ecf4-354c-4c55-b509-06cc179811ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5138ee-7eb0-4d07-bffa-688863589e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1df8a2-9d4d-4f27-9a4c-2d92e2b671a1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e688a92-6e46-48fd-93c0-dbeb504f30ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa255b5-cfd8-471f-aa5e-1f36cc3f724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc6ef4-c911-4b21-ac4f-e8d91ce11696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cbab2bc1-e3da-4768-8b82-4c1cb1d47a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4c4cd7-a2df-4cc2-ad04-ecc4a61c7520",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a919878-6297-4a8f-a367-962f43d56b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951f64fb-5fda-47e8-9b16-34093dfdc96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0115f7-a6c7-4ecd-994d-688416c76f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b93bdcf-26f8-46bc-b09c-36ebc6190b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a17980-8f8e-4b0e-a4e0-80b4dbcebd6a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc21191-827b-4498-81f6-99bb143a53e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d322eece-1878-4037-bf16-3e6388dcf6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705712a-ec51-43ea-8551-8fb172ffaa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ef5e97-0aae-49b2-af61-a9870dbea1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9f1e89-578e-4d07-b0a8-85590f28ad21",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5eb6a8-dce8-494e-b6ea-cec97073cc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29530d02-212a-4cbe-ae4c-56f62e0e01ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644f292c-eb7a-4d3d-b320-837c6b14bb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5242b85c-407b-4f1f-bb2f-97ba3872bc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425c0e50-66f1-41fa-a100-58110dffbf1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47621921-a666-4d3c-aeaa-340b83ed6a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa57583-031f-41a4-a584-c064ab635eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5988b3d-0749-4c21-9e68-56e6e7e6ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b29e36d-7d98-443b-af97-a70fce4855d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdd448f-7572-4f02-867d-c74e125b192e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92e79d6-ef7b-4f0a-9bb0-4f4183b0191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52de072-336d-4476-924d-b3fe54cb13e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40121ac0-393e-4a5d-a33b-b3e57824fcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "192571b6-f8b4-45ef-8af3-6dc55a20cd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9daa427d-64f6-4e60-9200-901fafd7bd74",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ba6196-b1f9-4f9e-ac80-1e31e57cc856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1df3ed2-75c6-4c77-9963-ffa1f2157f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60a15e8-1418-42d2-9071-56d92a5ff711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f683435b-5dd6-43a8-b6e2-1c52983a38de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b623205-23df-4a8b-bdd3-9033b78438d6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b24859f-4f0e-4700-ae57-ce56e3e7e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7df8ad-66ec-4d47-8888-3f27f9385cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401011e8-f4a9-468c-9878-632dd42157dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2bb498-6416-4df0-aa1f-dd203b7fec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9915a8-4aeb-48f2-a97f-3e208e464852",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baf09b7-8102-4553-a6c3-87ed2eac011c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725f866e-790e-4bb9-8bf9-b17aced79c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38f10f-9b39-451f-a50c-8b855292ed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7dc19b-d978-4b1e-8b3c-65936449506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a50191-6891-45aa-a147-08f279533129",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e142918-7578-46ac-acc2-60f946fb5ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e471535d-9a45-4857-9b8a-a48fd2824e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eb7f8b-bd6f-4469-92ca-c8b3c6cd56ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5fb741-c1b1-4507-b8b7-3581f5e9c329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b525bc4-6eed-45e2-9d65-f2316e2500d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a69ca9-2f74-4a95-83f1-f0392aca9769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c32e886-bacb-4c61-a3f1-14a302ce637c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a130fc0-2f04-4066-9216-a232ca2daff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03edfb90-f7bf-47ed-a8cf-ca565d296b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c80038-911c-4ad4-b0d1-775023a81f05",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333aafb5-1386-4747-82f5-fb55dda3c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b54d83-9e0d-48eb-925c-742a9cf09389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3549b251-39da-4770-a969-6cf8aaee574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a86c0d8-5599-481c-8523-a46722c29ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c161029e-5b31-4ac9-8d1b-019f6b50745e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7875e7-e714-4633-b4bf-2dbea634f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272773c0-e5e5-477a-98b5-1455a39d3585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85836aa5-9773-4b3a-92d2-4cc6c1722125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e353a51-fef6-4c75-814f-371ec938cf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030989dc-cace-41a6-b226-97737b9f7ce3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f4a553-2a38-4fa8-bd4e-ef9ed2eef491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c19f43-a5ae-4571-aba9-6f3ba4040e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fa8978-5300-4564-b88d-a21b1c1d667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab66537e-7185-4cd4-86fd-02b157232ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45c19f-64e5-49e8-843c-f0d506e9a79c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b541a9e0-d5da-4547-90d8-8c62b191d546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67215ab-20b8-4d85-82c3-82efa90161bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4ecb6e-1de9-45ae-8601-4f1f3688ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df97758-ac67-45d3-b040-1ac4de8ec49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c257e4a-a176-451a-83d2-aa399ded9f59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca4ae69-f8f2-4e7f-846f-38560f2cc761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7870ecc7-c9d1-4411-8bc3-2c35749466a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2bb0a3-49bc-4e2e-8f72-208ba1f1bde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c396d27-eb35-45f3-a733-52a9b5824845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1457d59b-28f3-424d-8109-42412929097e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d606a67e-4b1d-4087-ab97-16b64ae731cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6084c9-a039-4f9d-b122-f32a1e7fa709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581a3f97-2661-4695-a954-b0ee8da68630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e553276-0adb-416a-ad84-561818cbcdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f481c86-4d66-4eba-8e79-2d3ab8586e11",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ff362b-5442-4d82-b580-46d8074ca4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62cc8d6-e1e5-412b-a630-7fe075393447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55778a26-cb78-4f36-8972-27eadd47cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f585db-ce07-4da6-8de1-42025d6801f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7325d5b-7d11-45b6-a5d3-b660c01056d3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8c8a85-aa42-464f-8c10-dd8bf0120fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca337b1-9442-4eab-af5d-89bb6ded9f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3ca31e-e592-497c-a40d-dc84504162d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c5827f-b947-41f1-bfdc-9d4b210e9ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1725860-67aa-4bdc-b64f-4e0b3e743846",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b834af-e3ce-4675-b308-0e9a23d395c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a33bed-fee5-4d9f-85b7-bd76a6fae713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266067ca-afbd-4db0-8cd7-fface73f899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "444526f9-94e9-44d0-bcc7-1ee7dc243cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad23275-c77e-4ffc-8a9e-a121763d79e1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1c87a5-cdf4-4103-9339-7ff50cd09622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596bb258-9cdd-45d0-862f-d89cee0deb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e0708b-6c13-4238-b1ed-7b7b753b14a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7486b225-86e4-4ef6-a00b-3d8da5ad4dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bad733-3df1-47d8-b08f-24d1e93e5b20",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f939fb-823f-4fb7-b4be-340250bd0529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3795fe-8dde-44c0-87cb-a4162649d5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc758876-2abf-4c98-a36d-4e4b7d4897f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb27c72-7711-4c3f-b2bc-ce911e7ee695"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "103347ee-e179-4b0c-b028-a4dd1a228f3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b74b7e5-e93d-4ea6-9668-459f37773827",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfd469f-fc65-46a5-b53f-af3e4affa216",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5359d1-3d1c-44a6-8726-d6eea55d0966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca5ee24-fb17-4a93-9e06-d6fb01686e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "435c78d7-a712-4359-a941-8d2a4e146b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cef90f-1f10-45b7-b0d2-2bd279bec3d1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6773544e-8971-41c3-8dc1-e23c2771b21a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1137c0c-bef0-47bc-b258-6bda4d01e135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b8ce75-855a-45fd-913b-b9dd6a8a7665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d68d811-db57-452c-b185-9c4ba051d590"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baeac9b9-fdea-49e7-80b5-53c2b117ce20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "802a397b-3bc8-469c-900f-52c877d4997a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2714a265-e8f1-4d56-ab4f-83fd2c6ae397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50722a22-bb95-471c-807f-d8c128c87980"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc7a3eb0-1ab4-44e8-b6d6-35174bd08fab",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f9386f9-6b8a-45e4-9dd6-b68e0b5c2835"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfc1cb7d-a335-46ce-bbdc-6859dc0dd6aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a0d776e-62c8-4840-85b3-5aedb031d6a5"
            }
          }
        ]
      },
      {
        "id": "15144f0f-ecef-478b-996b-86dde1f81489",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d379b42d-3bc3-4070-9920-777b15de26c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08118477-a126-425a-a051-3e827c828fef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4281e0b-14ae-4092-96c4-603f7dbaa7bc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662abfb4-bfad-4b4a-a9a1-20d3bac7a79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774aa311-021b-49b0-b988-34a5dd90105f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c610e89c-315e-41f3-b82a-c21f34464938",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1654b20-76ee-4795-ab49-8fe663870622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bee80b-6198-4dc7-9a74-7f235aaab007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6b9f1e-a7cd-4d1f-99af-6380e92f977e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47d8b5a-9997-410a-9714-e5ec7c3f10d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fb9cd5-f47d-46d2-97b4-40c7a07bb324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564b99b9-1529-4f7c-b6a6-474594635f1e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1f03b6-17b4-4c2a-bb7c-7331f1e56f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e447834c-3c0b-4341-a9f0-1c76badd11f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196d8ad2-8d3f-44c8-8747-2f6102f42d3f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de7fda6-fd4c-4b62-8b97-4993dc7d5f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1afb68-34d9-4b30-9ff4-fa79bd94425d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319a1c56-23f1-4824-ae56-e91ab80bcf44",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb26d5e-b036-4410-ac19-11d943d1636c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb9654c-e609-430b-a0e7-4706baa28562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79b4d19-8dee-49db-8088-1f2a74faa563",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d66a07-d4b3-40d9-bffc-5dd5506c824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df8ab44-7459-4362-a291-60e5ca852c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf7c72c-5b10-421a-a680-7ecd95eb60a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2a6c1a-675f-4a28-9bff-88dadbe79d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fdfb91-6b7c-4001-9365-9c9117d4d6ea",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9075fef6-6855-4f3f-9de2-ebdf6e410330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fea64de-5404-4817-8698-f760a942e529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10708a61-3497-4dfd-ba8b-3c477a8ba3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed35459b-6250-4e6a-9d1f-ab2e21b8b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d48bbf9-c7b0-4fd7-a377-3b1a59f8dbbc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b87e8ff-8a87-40c6-a20c-a13870fe6035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12e17fc-79f5-45ea-9f86-67401880ecf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2895ae1-0043-4862-b592-f9ed40062811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570b27cf-b4fb-4b12-858e-3272f4c23ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cda4bae-4597-4031-9d81-845e5910696b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31687761-d9ba-4ef8-805f-30a85c13d2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a034b31-5c6c-44fd-9c3d-b5b2854fd763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1c5dd3-19e9-433a-9077-9682c4252e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992a9678-5890-40eb-939a-868d5ccbea0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cd2329-cad9-4db5-87f3-639de39a1d2e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ed9b24-b00b-4a37-bee0-d26593852c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633643de-4d53-45ab-ba18-6904694788c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c0aa9e-82ac-4316-b458-9fa270ec5664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74347e6d-7560-4343-8515-43b0960772c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ce8631-3e30-4f01-bd45-9e988983157c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e25137-6da4-4c02-845d-bd59f4ea396d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412d088f-7497-4195-a290-04772bb7c4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27f485c-0fa5-4e6b-ab17-2664f878fff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ed3ad4-bce5-4406-8cf1-b380b953bd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc888a-1842-42e0-b4d3-7ab8aaf4c20f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b811cc95-7ecb-404d-990f-f3807029378d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a83793f-cc4a-4e65-8fcb-8e0645e557aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c2b99-27f1-4540-b674-27976055adc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcd9ee4-24cb-4da2-bbd0-013ec7ea9a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eea511-1b31-4533-8fea-a625ebd7b2a5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60ebc1b-9b01-4c4d-b8f2-4d37dc40d70d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41980aaa-0f56-457c-97f9-f41842a7ae83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4626147-26f9-44d9-9e7b-f53cd92a2cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30d1e78-9dca-4fc7-ba92-46a8c6203cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c1978d-b07c-4fc7-903b-919062b21b0e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40716483-6bb5-4344-8c08-db61c2249871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "949f4f87-0124-4eb4-bf68-3691cb249e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11754d38-0c9d-478a-9bdf-f55197bbc986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82c7433-c9d5-4a60-8d60-4fba853b7849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9337ae07-a7e9-4286-97c2-0c1838f2115c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc20981-7732-41a4-9095-9bd09bb145cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55785e0d-957f-433d-bb94-61b280ea3f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26363121-3094-4e5d-b7b1-68e1fd7b2f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484e6643-a432-4258-95b5-cca9a33c7df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f984119f-d6be-44c5-9f8f-9edd3cb15ebe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e07510-ff87-4f79-85ea-678574805ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d310f4-2b98-46c3-a217-d5a6b2462eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d17759d-1763-4f51-89e5-cdacf1ed0c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ae62c8-9a9f-4d07-a421-9f1ae0d4bd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bf110a-194b-438a-9a90-42f59bc20b0f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da40406-3b1b-4278-85a4-f36567e95daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061d9afd-5d94-469e-b13f-f74c51adebd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd8aff5-532b-4a10-bdd0-a0ad82a0b2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4010de-6ff2-442d-91c1-a7d85c81761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6967b306-c03d-4d52-8f39-10d68e6519b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eca02c-c3ca-459f-93bd-167af565b64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3532094-4a04-45af-9214-487a6b43604d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ef1b0a-5d49-4985-9e88-e5bf5b2417b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a26d5a3-605d-48e6-b8a8-e6fb5b8df6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d580ca0-13a7-4f34-8bda-26807f45a349",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98390579-9598-4e0c-bb4c-29d0812de83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7b16f6-4e9c-450f-85ac-52ea82266076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c45709-9ad0-40f8-a246-06db174072fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b996da88-798f-4692-a066-d3f11dde1fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cd7616-2abd-47db-8b33-45efcdb12567",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d395f8-9ff9-4801-b930-a392d344461d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2d1b48-a33b-460b-affc-48df14e5803e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d47895-b262-4d86-84fc-dc60a5e3c3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f5d1c2-6a0f-4655-a301-34275d24062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc3bd05-3b7a-4b85-848a-fd210bf7e412",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c07f487-c5e2-43e8-bd6e-88739e80dbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6243019e-ced6-43d7-9218-e7c22198ac10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd5a0b-760d-43c2-a58a-180f46521572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6c83ec-53bf-45ca-bd47-22627cc8d81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85916153-cd31-430f-9e5e-a244d89e69cf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3814b69d-66e3-4eee-bf43-c2bb29056f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e702b33a-7ab3-42d6-a28d-130c85e5e4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddade2d9-15f5-4b20-a25c-895690df1219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd4e6d4-fe2b-4b4b-85e2-bfd41ae896ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d9615f-c964-46bb-a4bf-a43ab527658b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7566f-eafd-479d-80db-841be36e736d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d99083bb-631c-4116-9f76-64facd0cb000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86d0a06-cdae-43f6-b344-ade108e8d92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7facdf04-9f1d-405e-a2d6-d0d78ff0882a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca3760b-ce29-4a2d-bdbe-e07717cdd9d8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33380518-d0b7-4678-8b8f-39d91bc08deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c7b5c41-76c8-4a45-9376-5f1b3f904df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634eaa3a-022c-4bac-963b-7ebedffee8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6265afb-b4ee-4f2c-b8e1-ac7606675a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809bf1a9-af46-4fca-b2d6-a1c3f3651a91",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae76f74-3a0e-4872-9c5c-455b52cdb980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815dac36-d7a6-4c39-8a7f-0e9b7593f892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b23d44-e21e-445f-98aa-058372117a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404ec1eb-d3a1-4978-a018-3f6961f79459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8724a9c-0096-45f1-9dd5-b430b1eecc47",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458bf495-43c0-4a66-95c0-dffe6587fc82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec32502-01d9-4148-8d42-cf174eb5b410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06078c45-0436-498e-ad3a-596f0d4a3c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c462541c-8f1a-4824-9cc4-4ab71a226528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eeacf2-0a15-494e-946d-5a7ea366c8bb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16adee42-ddf8-4a80-9e80-5db60f4deee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7298df9e-a085-4883-bfea-2633c5709602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72de9d10-8b8b-41e3-994d-075684fdd6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e007b39b-445e-4d85-87ac-bc4a61b4ffda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ad276d-1114-43a0-bf47-38b8f1e5487b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a604c7-56bc-4542-8e74-0f65489f0ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9074d83b-f1e1-4c76-bca0-9292a346a853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c498b4-f857-4d5d-9f5c-5e3f46d31e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c3eec9-a41e-42a4-9161-a102625b5454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa9e7a1-4124-4f08-bafa-eba22bd0a7e5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864c4dfe-79e3-47ce-8a31-ce3315b12ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b83940-042a-4747-8e68-a3e64d6964ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca9e6a1-5d45-439f-aaf0-001434303ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569e6aad-19f3-4a02-981c-d7f11dc55b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58179535-5e2c-4488-99b3-2014ddacd54f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3917be8d-63c3-4ccd-85fb-e7f8720ff38d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7941dcec-60be-4f65-a752-14eaf18d6675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1797ac-579f-456f-adb0-2aec035253d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee179fd-cfd7-42ee-b91d-427a6f0b80f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf280ce7-7cda-436c-966d-3970f665d142",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fb822a-3b0f-4acf-ac11-40b3e59a3454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45660c39-890b-4872-b795-80d8a4d47713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677508cc-9369-46de-930f-bbe865a599ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f448b052-fa86-4969-a2c4-2090498c8e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081ccd22-974b-4155-84a7-f5b81b6974c5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a45301-ebaf-4188-9b82-f5a7d0fa8e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa823cb6-cf46-49b1-970e-7dd37cbe63c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f599a0-5ab9-467b-bd97-7c74c6ccfae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b492ef6e-c39a-44c7-9236-4433aeb9aab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2441c6-4852-47a0-b06b-8aecc9bfb3d8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7adffb-e730-44fe-8be4-237ab8f5cc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd0bc72-819f-4a2e-ad07-611bb3ea3dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b888337e-e2b0-47c6-986c-81b8b2e935f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f039d6-3b38-46d6-a851-b5f28e3330e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71721555-8a57-4a2a-8d22-bddfb88b7dad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b13180-c4b0-48b2-903e-18e9b1c7f5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b849f081-1047-421b-99d1-093bbdfcded0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a33b1-e658-4c88-b8ba-2fb1ceedb1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c52e2ce-bd9f-44bb-9e35-1f2916148aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b597be5-9ba3-4b3b-955b-ae76c029bef3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2814e5b-e92f-4a62-8be0-ae8bac3e6971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50119f7-2753-43b0-9113-e356c04f78d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5204bc-f7b3-46c0-840a-e08baf92ac5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f58ca4c-c595-4d03-9e1f-3ed453c5e029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6b271f-54cf-445e-847b-77c4bb87ecc4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ea4f98-110e-480b-bdb0-e75be90420de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6953bedf-5704-472b-a68d-489fa537dc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587aaad2-b399-44bf-b8cb-24c63bb99bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b300c471-3a82-4d08-b4c9-a7a0f2fc723d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf93dd52-6eff-4016-8b14-3581d9f1911c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1a4f3-f085-4946-b789-7d283f140217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65e548b-ba95-4352-a53b-474ce8aafb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04a0107-b8e4-462e-9ed5-57ef933676c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154b551f-309d-4f58-92e4-ec2f3e7efa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c6705e-1f79-4126-91a2-1c6f499ac0e4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ffb393-f8ef-4af7-a1db-0648cba3fb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b21d4e-0946-48ae-9651-232bf9f0a3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cc56cd-c9f3-44ad-ae32-243379263175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78a34db-85c0-4567-8407-80fb15287a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2941ff6-fcec-4363-b621-4c549a877da7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a23c3f-1c53-47a7-aef8-fbed2e9c99af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663e5077-a60d-49d4-9bf4-7318665760d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c0bf5e-075a-4950-8b43-d332b57d1ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b86d2f4-c440-4680-8dfd-99da160723aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64709f34-823a-4737-bd6d-727e0588e985",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccaf1ae-6c91-4200-b686-832028057a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71e3c19-6dee-4c3b-99be-f979f0b39658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a574dc-a7dc-4d12-bb96-3b1e6d089fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c4ed68-e3e0-42b2-b2b0-ab045506bd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d6f817-3192-4b0d-a27c-560b5c095c5a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5898f662-dac9-45ac-a79b-5abc821b1e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd95a34-26da-4e0f-89e6-f4192f450364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a051fd-a9f0-4486-b0bf-b2927fd8101f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a021c4be-73d6-4188-8d0b-4fe32a60c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bfc077-2d28-4b9d-b50a-daa2531a76ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f702efb-6c25-4f95-95f8-86e34fc52504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f613ff0-9dcc-4368-810d-4e5ad6b14f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b904f6dc-c4ec-4e8c-8e00-c66ec7e2d4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d363e9f-a676-474e-aa54-c2e7a4da642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed87768b-a3b4-40fc-9316-84a620a1628f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccef7f4-d8d4-4964-ae9e-f89ddd798869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5a72a0-155a-4fb2-9a26-234c931ed418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4913cb7a-a9b3-4d9c-b3fd-23474a185fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047b1095-353b-4bf8-bdc0-e0fa409dcea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e47c520-5673-4390-b4a2-918e15b0a789",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbedd48-8f3d-46d6-a968-7a1baa96bba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec242b2-f453-4208-a7f9-67b61d3db5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c291d26f-0b74-46bb-b93b-46de5e3ecba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afda2b44-c33e-4b39-a959-86a058afabfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe787fa3-f276-42df-8db1-37b2fd52828a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40f4c03-dd08-4453-9e9e-4d3b38da6f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b3df59-ebae-4ef5-af09-b7304710c1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7345183-cab0-4414-a69c-2ee110f5aeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e612a40a-74c7-4355-a795-c0d8dbc313e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732992ef-60bb-4c1f-9627-ed9b338b86d1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74eaf78-48b3-4866-a0be-5ed03914a288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f12b2d-4713-4130-8d17-37035eab5584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92943f0d-73f7-4aa7-8582-cb71117ebe14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e82cd99-f9c5-4612-bf60-040ec64b160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eed29f-d316-495d-883a-8f562dc3637d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5c13b-a40f-4219-8e61-2014ea6fbca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81432341-a854-4699-b8e1-165b188d57ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dcc7a1-fad2-489e-bcf2-35ca1f0bbc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50a8ddd-c27e-4154-8bd9-e87d70a0db88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b25d14b-ab3d-4aa3-ac2a-8fbc7d40be5d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fecf826-2e5d-4e55-98d2-9e6901c2a9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f4b507-d9af-4497-a4b0-ca0e7702f078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4115be9e-92de-4878-834b-14225f652e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ee0152-0bbe-4851-a1bd-d3a22307246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adebff2b-f2e8-45f7-9099-5fbf93500633",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64960422-d7ab-4790-b663-011a21267381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f1f9f7-71ac-42b1-976d-83dca1fab394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee4857c-fa63-4cbb-ab9d-39ee832783ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b39ace-607e-4ece-9fd2-4206b05afd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8767db79-ef8f-428a-9c87-919cb54c03da",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb57353-8f70-4a56-bd43-10273582bed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b7821c-9112-45fa-82a4-d16c8d98f197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44e640d-5d7e-4014-8c9f-0909b981d8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05690d23-a729-403d-b8e2-143fadbbb689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c7bb0-7692-4069-b3cf-c914a1574c6e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e88298-ea6a-4b44-aa2a-28488cef1ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1480251-eb53-4e68-a074-5eeb69fc106d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ef729-02e1-4ff8-b524-e17b9e45f805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708fac96-6e70-4232-bd98-1c46f4b7c2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d112b2-ae1e-46e6-ad44-ae66da9a6181",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d692a337-1582-4cd4-84e1-06334829ece4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95399533-9a59-4b4a-b61e-312bb519bbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1f7636-f0f1-4d0d-aa55-d15eef4a9591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e83093-2694-488f-bac8-bba8494d449f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5651f8-bf62-414b-820b-d1671b6d9330",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18559a55-d144-46a2-b8ac-908c61c6f0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0955ffd7-d84a-4a83-9a98-3d5d7f964a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b8bede-8008-4501-9c3c-e9964a0ffe29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e22a54-b4f1-415e-9502-6a9c57a298ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db4a97c-180d-4464-a307-f49e250ccdcb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7286185-44b7-43ff-af3a-9a0b6202f2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09c30eb-530f-48d0-88da-6952a87bc87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2c0a2b-9d54-4209-89c7-d17f717e5945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d48e66e-5cb5-403c-9728-ba1c0228082a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa0cb35-2eb0-406f-8aaf-cc90ffe16796",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0166dfbe-1f16-42f9-98f0-605c0ddabc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b5ffa6-1dda-4a5b-91b9-2f3508951c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19499ab-4889-4723-811f-74a45e69738e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b540d219-4d7f-419a-b406-b3a370695fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11faf6a6-c8f0-4502-b12e-dc2bc77b2e9a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f7a90-b3c6-42b1-aadf-559de617c2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8df576-caf0-4195-b659-b1efa6161637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d6b942-71ce-4847-b859-b308c52f1b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8641321a-338b-4e2d-ad76-64ee134df12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013a9d8f-ce3d-4646-a25c-3d448f9ca19b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7770298b-516a-49a9-9aef-5c4a2d4f45df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64db520b-d2db-4461-8621-c7665865e797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554d2663-fa34-4938-86ec-25ccd146920e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be569a5-31f1-46a9-8b2a-c042437ddae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c5f96b-3d85-4182-a3a0-be95f88d2d0f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d09cf9-295b-4186-b62a-68924176c373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f7f939-4f39-455b-911e-f397314126fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5061019a-30ae-48c3-8ca5-258524c14f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66125d0f-2969-4d98-9a46-0da71a4ec278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7121f75-1b8d-4d39-89f7-9a21376b0c51",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac9bc8a-72a0-410b-b2d4-f1c7790001d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1714aa05-1f93-4650-8ace-b7542d48b6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9617267-c96e-49d1-83e7-1a5f12d5021b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36541e4-e1ff-4dc8-80b0-7e11e92bb9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8553b048-f401-4265-bb38-44359278e09c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218f9bee-be73-4c9c-99a3-a88a31561944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3130751-ad61-49d8-a448-8076a2409fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21668128-26fa-4963-8c41-0bf67c941feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996ea691-f1a6-433d-bb85-ec09a4ca04aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787d25c8-c4ef-4bea-91e9-ed2b916e034e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6258309-a5cd-4150-ac0d-af732dbe0f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a75597-e61d-4849-ac8c-973d7b617409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fcc414-40ff-4aad-82b1-f6f5dcdca6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b39b37-94f7-42c1-917c-772e43b4cab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3efcbd3-aa1d-4f4e-ace0-7e205d22b425",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434f6897-f4ad-4179-b9b2-cec88cdc4a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fa18fd-00d2-4aa1-b92e-197e29a62c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc297c1-fe9e-47d3-9d16-9789feeb42d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946ae1b3-c92d-4ff7-961c-3c80144e898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4889cd-c48c-4edd-a9ac-2571580b3f1c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e8520f-1205-4def-806c-89bab54d7bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10814e5-5e7a-4126-acf8-e6ea90bb6281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccd5cf3-f440-4741-b230-4554e7b150f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d802d7a-0586-42ac-85e0-1b1957057c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331c434b-3431-4ac7-8bf2-9a51ccae1ed3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092e4e61-cb9e-4216-840f-889aaab8b25d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed0be17-9c7a-4c32-8a43-25da5fb0fe2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e071851c-852c-414d-b522-1e5681057f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00849782-f354-4bb0-82e2-06becc95c4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d094eb5-0d71-4a56-9d29-4c637343d95e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709bafab-805f-47d5-a2bc-65686fe8b403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942f3cc0-1ec0-45c4-aacf-f66f700e90a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec72e5a-27c6-431e-85a8-3238f61eb302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe52526-4023-487b-84e0-5da0fe626fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1f21a0-98ae-43e2-9727-c0ef4c95a15f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0997d2ff-c3e2-4d60-8680-5f2d62b3e90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e36953-ca11-4fc1-9705-d9bd0af30949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d794ae53-adc2-4a8f-aa27-b27dbc630162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9df895d-571a-453f-9053-f3413a49e1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff4bc1c-c055-410f-bbae-7f2d7394bd09",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056a01f1-dba5-4444-ba71-12ad2a66e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf811ee-e5a2-4c8c-9b67-267468d42100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34101be1-56b5-4612-9c47-844abe7bbd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd4edcb-fc07-4005-b051-8853019ac1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3a11ec-2de3-454c-9c31-5c518cf1ced1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f875b9de-841e-4609-a02b-adff5a9a7d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2452910-45fd-4dd8-8e03-2966ebf0d061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08b8a34-2cc8-4fdc-bc03-03da7b92bcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb89619-5472-4c4f-8b77-5a93f33f5a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eee4310-698a-414b-9c27-3fd302b86d3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086edbf0-04c4-472b-9517-73eadac015bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210ecffd-c988-4305-9a18-d11a1a9a6d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd436304-e882-4ae5-bfb7-e14b4be65c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42733a24-3a09-41fb-ae59-d8807ef58e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3aa98a-d337-42dd-98ff-d4614db89a94",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b317aa-99c4-4e14-8a5f-bac3c77ee73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e13ddb-b7fd-4042-9ea8-b8df5149d2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2832e731-96ec-44d0-8e81-d8b8f59d4eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f0ce05-73c5-4e33-85cf-ee209af4580c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b556d-233a-4bd1-a2bf-96d1b9734d3b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830ec76c-ea0c-4d39-8476-ef0e36887e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495d10c7-4b94-46fc-94a7-c1172fe4292a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fee0ab-267a-452c-8fba-e766addcc845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe18644-3968-4071-89d0-26bad4b4aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88de1c63-e738-4ee5-ada2-5495fcf2855f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e084d24e-8aa9-404b-bc3d-8d01a7025ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ac832c-197b-4046-bc6a-63d27ca07c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a368ce2-5dfe-47f4-99b3-1c1d9bc6a586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17485857-cdad-4bcf-89ea-04e3deee127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e694ae-93c7-4a6c-8a7f-42f6abb3ebfc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446b2d9c-81e2-4ed1-9699-94fdac1f8cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68cb4d5d-d806-4b3c-909c-55a68758b5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b361d6b0-4ab3-46c7-a8e2-4508ebc7afcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0709522c-e4c4-414b-90d4-647667b111c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e23e77-1126-4a37-b3fe-95e405f8efd0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5600600c-9779-44b7-acff-ff2055f129e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7566466-267e-45eb-925d-8510cdcc67b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c51c53-5f0f-436a-9c85-701459ec582b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba067a45-0290-4a89-af86-c7cbedcc9b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c0846b-8e3f-4d45-a14f-535bbe2a14e5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33c0366-6844-4f63-8297-f35f4bedd473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e61eb08-fea0-4b6b-9e54-51a042c22788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055717f3-e407-46dc-bb9e-cf206b182767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c733d261-000b-4ce8-9195-529a88384e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15216516-f5d5-4e2e-b5bf-e14cf39130fb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc550ae-6d5c-4811-9197-95e8a6262801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d46e06-fec4-45d9-aea4-eeb55322a7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0a16bf-cc4f-419c-9985-256c3a91c66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c913942-999f-4431-8e92-c3d84e8dffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f4b4e-521d-4a47-bcc9-947eadaa9c96",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1489dc4b-329f-48ea-aba4-b63f4faf9e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83866d2-f693-4fd3-be29-60a5deb18a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af6b50d-8cdf-48cb-af6e-b9b7cfc843d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fd7cfe-9df0-4a0a-99da-646851749c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1897d6c5-4f2a-42b9-aadc-4b88dc337cae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a1edbd-c772-4d52-9e11-5d88bc8708f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "556b09cc-1a59-4f28-88c6-c05c4bf34ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f7d91-627b-485e-8c6d-37e7a653536f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4644c66-23c6-477b-a194-c6118c108d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4180c12-1008-4148-99f0-162971f6ff3e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e513f58a-51d7-4816-83de-f260146423e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7213d080-96d6-4463-98de-1142eebffeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c577e2-f570-4deb-a3da-38c2d087463a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5ff9c1-08d4-4c6c-80d5-cedb75606332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0392f2dc-ab10-4d7a-a5ff-fb3a378d720a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de855acf-b381-4edd-b8ae-7fca1d1a0b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee73e33-80d3-4233-9be1-c364cca75f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beecc075-d15e-4951-9381-17843a599afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef98142a-36ec-453c-b22d-be206374e10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc027c5e-62ca-478b-96fe-e367341ede8f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f34099-70b9-4715-b658-cb89fb27dc79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051e4101-20a8-44b2-bb63-cadb1946e50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87810d7-f936-46d1-b154-77c40552efac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e535896-8d4c-4623-b2db-fec30113d9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a6c644-7f70-4b03-8f05-2e60a76b73c8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8fa2d3-a439-4059-b4f1-0cd13eaad8c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ba1ec2-aecc-4076-b242-fd0d9002bd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b537ec-1a62-4f3c-83d4-d4778ead279e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d541cc4-a3cb-48fb-89fb-adacf967f1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3110dc0-6f51-45f9-956c-a3dbc5025083",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23669fa-0392-4cbe-8e65-79aff59cd89e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c914e2-94fb-4a7a-b14c-b7d50ed2822d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49a9ba-d34d-4357-a3c4-db36cfe2725b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8b3fbf-a2da-4f11-9afd-d2871fcb2157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c7da4d-a197-47e6-b68d-5b08bed8625e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b2126c-f2f5-4ad8-8765-f14d2a7a316f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67de7141-57a5-4dd1-a6ad-2da8e65b17da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c18c4f0-57ad-4b0f-847c-91f14d07bdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1a610d-c124-4e9b-ac8c-91d9ed688459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a642e0-784b-4822-8894-aba348526fc6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b46b79-52a4-4155-8937-e4be9a0e9243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35cf4e2b-d30d-41c6-9b4b-50388e9cb136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64ec70a-3c19-43ae-b900-2fed94dfffb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41fef08-5511-4078-a037-41f98c54ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e1b6cc-d7ea-488b-a63f-53cc227f5c4b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfe3054-5870-4f39-b634-24835928c072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24457df-5ac0-45ea-897c-a55f2e5a8c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cec2785-f882-43c2-8b44-150ce6b6a057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed7e4e4-b449-4522-bec1-cd2414ed97ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e382194b-20dc-49d2-b118-f9a26dc21404",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e450e9bc-0a44-4093-84b4-50ed3b67adfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a10fd3ca-339c-4cab-b348-9896cecc8fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb5df4f-5f6b-409f-a4ca-ade3f82ff542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951c0eff-4f42-4836-9c6b-7ad160e46a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb17eab3-2986-49fe-b6e9-362077972148",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaf40e0-e9b1-431d-84bc-ed7c525e22ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18579bca-3d81-4a44-ab39-39b89f0093af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f316611-1e20-41c7-bf9a-a8ec8188388a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14d990b-93cb-42fd-8992-9a81caec7276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca22d502-df90-42ff-9188-ae031b4bd782",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9b4e94-8552-4d12-aae5-9becbe75bcef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9b3e3a-d616-4d82-ab11-96818590c020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bbd958-8c5d-47da-94c2-7e77880cb11f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dd1ad2-1cd4-449e-84a2-2eb387664536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a699c2-2c77-4da9-a5e9-aa607fb2e837",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6836a292-6dac-4b60-88f2-2f84eed2a80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f68656a-51fa-44c9-8740-cb1401c1d91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5d2bda-0e23-4e33-957c-7ab4ff229f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481197cd-2793-475a-b8df-0ed07bdd4b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33eebbd-e33c-4920-a5e3-0e7dd76b9b01",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cac7c7-fe69-4fcb-8619-c0180225cf47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51724201-094c-4305-8fe6-c693d00fea7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1390be-1887-4cf0-b733-75e07dd193bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de97644-24e3-427a-aaa8-94608e2ac5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07c0ab8-ce83-422d-94ff-df10a3f291e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc35d42-3cdd-4d73-ba4b-c10835d1a636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938d06b5-9fcc-4a17-beb2-e3935f1712ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a45257-949e-4ec4-bbe8-48f28261e35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3827c2df-c84f-4615-a574-47a3220ad14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06920405-fa2e-48f9-970d-495c9bab34dc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321d6079-b0f0-461c-adbf-fef61c3380b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1b26d1-c4a2-41f5-a014-b667c3b59fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7b6391-2105-48f5-ac18-027a1c48087c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f34b7ff-2083-4a31-bb0d-d288398fd4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c806d00-3a5b-4f2d-91ec-c5a425e26274",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59282ada-1e1b-4c7c-93d5-47888dec1b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0efc52a9-a981-4482-a6d7-a5d6b3b776a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5443bc78-e24b-4770-be73-f3f46771d8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9465cd22-94e1-48a7-a8bf-a7bba3cef7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b4c793-6572-491b-8ef9-6a1aaf463574",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068fef55-a344-493f-8bf1-7ac45a8e50d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f756d296-4402-4dae-bbab-c24e1fca56c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3947b58-5e27-44fc-a4c7-0986d6ce0696",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48698b17-2c45-4e63-85f6-6c56734269cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f46438-2ca0-430f-a677-960faac596d7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27931cf6-ba44-4204-9236-c164e3348960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a267c6d5-9e3f-4b1e-bcdf-ba9447d93c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02da0f77-8ed2-4a59-818e-54dfcbaff775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2861b478-7393-4a5a-8b5d-b42c52c013f6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5de167f3-a249-4136-9b38-c2d7290f712e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6107dcb3-9f54-4b45-8e58-2e2d1033791a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e783bc98-b52c-4a69-8548-ce5d7e802a88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db73085-3205-4218-8fcf-7fc80fd757f2"
                    }
                  }
                ]
              },
              {
                "id": "97a7f3d9-c9b6-476a-9c14-98d10096a3d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14ea591e-7750-4445-bdd0-a32585f095fc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bc8d1c-f112-4672-8466-e99de6ea9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d4398204-832c-428c-8690-ad0295cacd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24757fa1-d6a3-484b-8036-a6d1f09271f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "537be759-dda7-43e4-9258-7b7f8df4c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc784e8-49f7-464e-829d-96f210d3394c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777df29c-30ad-479b-b0d5-068d338aa285",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "621a1f10-36c4-41b2-8833-86a7843f8815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c22db-dd16-4efd-b5ec-2d34f0c05e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3067aa9-4011-4445-88a1-7edd49d43ba0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "163e55c4-f671-4af6-acc3-312f57c2937d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3623be44-f9ec-4c51-98e4-962af1acec03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45eb726-74e3-48bb-8a78-8cafffa00267",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b7d3dbf-8f22-458d-8ca7-ef4801f33f48"
                    }
                  }
                ]
              },
              {
                "id": "722bb06f-832b-4e2c-981c-7ee546dceae1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "594c99fe-2545-46ee-bd5d-2bf94c3230e8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e06525-9b78-43a6-b064-3c99245d55cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b47ae07e-8411-40db-892b-84e4f9be2230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20abd0c4-e3e2-4f3f-9959-526c9ec19930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5dccaf6-08db-4108-9185-d5cff13a3845"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "62b86830-98a3-4f36-9078-c528268418c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94a545f0-abe9-47cf-b285-b128764c0ab8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e52e409f-caa6-441f-b8b9-83760a3df9aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "40b48c50-f2cf-409b-ad4d-9fa19a4e1e9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8d0ecbc-3f3d-4264-9702-a92b3e147917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5371978-45b8-46c9-a8ab-c6d5b8b4c854"
                    }
                  }
                ]
              },
              {
                "id": "813006a8-f8b3-4be7-af4c-0c78c46cc957",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e7ac2f7-fd84-48bf-8b85-b6e5803a568f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd56ed04-e895-4e16-a325-eabb95b3c447"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3082593-efe9-4abb-9c11-81271e2d92c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9596df0d-d761-492d-9dfa-c301cf97d144"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41422607-d985-4fcf-b7f7-981f44df8d1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4c9540b2-c826-40c9-add3-a668ff9799a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9361d47-a921-4e52-ae47-cb2fcab4eeeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb38dab7-10a2-4992-b4f0-83c64fb9be30"
            }
          }
        ]
      },
      {
        "id": "c3722171-a92a-4e4b-8abe-74ce9d49f0b9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1872f240-cc96-41c8-afbe-b500067d7a71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f936f1b8-080d-4b6c-acce-a27971f64bda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d37e27-a106-4895-b2d0-627aa4c1de13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6e98ea50-dee0-453f-a033-bcaf5f90eb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1880d8e-0add-4bf4-af01-f6318de99642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edebe2b4-81a6-478e-9fb0-46e38b38b169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471dba16-45de-42fe-a47c-0b0b8e7caaf3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477628c9-1a3d-4dc6-a525-905bd7ecd2d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6a34bc69-b62f-4089-a18e-23d0bd698d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8138258b-24b0-4912-9067-74560fefb89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dd09cf9-a2eb-4471-8c9f-20e3818987b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "097e0d75-b6c7-4c1e-a602-8700ab48bf78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9235c13-a652-4969-8bbf-3a7d418bc839"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb9e3b58-91c0-43b2-b791-e6d23f0fb6da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16197425-efc0-4bb7-a517-7a7e3cd4156e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b53799e-78ff-46d4-95a2-2bda6654357c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e6251c07-de8e-472d-835d-8f2979f159f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4a5f0e0-b1cf-4898-9665-e1cabfbdb762",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30e6744c-a8f6-4740-8dc2-44b4614703c7"
            }
          }
        ]
      },
      {
        "id": "205dd469-164e-47b8-a437-93211c9c7314",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "52dde626-161f-48a9-b174-62fa6a5fd957",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df4ac6e3-ed61-4d73-a139-cb88cbdac68e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f81410ff-0816-4968-8455-232b3a23dfa7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797fd77b-af36-42fc-8c27-62b58a926a2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf35a1a-5806-4bec-add7-9424eae43844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c42e2d1-5b5b-421d-9b22-1b3238e32173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d406910-42f9-4034-ba30-e594ba5a77fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed750a1-0329-4f1b-9988-8d5db82eebc2",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0b30cc-575a-4323-85cc-0fa5448d3d21",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1eae15c4-2c80-4769-84ae-e7913091db5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91d1a91-a3b2-4ee1-977a-d691fdd8a10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "368406e9-d9af-428e-bb8a-d191509326e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22e99fd4-53ba-41ee-aa1d-dae871c267ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed494bd0-20c9-4a13-b64f-30bc69fe4cf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29769dcd-7345-4585-9b79-3f78efcb2419",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e409c9-5720-4bbd-8e85-7d35d9fc80d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13db9dbe-e96e-46bf-a8db-0cd4432912f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "085021ed-df2d-4b39-aea4-b391ae9c784d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f74c24a-0ba6-44a4-9c3d-375ebc0e61d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86cb9ca7-e099-4429-ae0c-1ae669a7a1ef"
            }
          }
        ]
      },
      {
        "id": "0f019e15-c6bd-440c-a230-910c6cc12f55",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2bfbcb8b-d251-4b5f-9757-0c4264401c5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b572271a-aeee-44e3-b380-9f5770be6ef7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cb9e3c3-d520-463e-b5e2-695efd79aa10",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63588208-e1d3-4df9-8c46-3f5725d85add",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd914a2-cd6c-4564-aa57-7d6323d41de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0152ef-bae1-487e-9e93-25e171117c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ca3700b-e8c1-4b3f-a3c3-b91a7107f780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f12a863-6d4f-47cc-b02b-1ae899a869ca",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe37c7b-0a32-44d2-a133-efa1df3a263d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8933994a-d258-4089-bfe4-ed2540ed9f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d2cd1d-995a-4570-bd35-40fea90bcb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff04c41b-0974-413b-a5aa-9173c7776d1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee2ff040-fb17-4922-8d41-6f43ce03c2bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d9ac94d-abae-4b01-b83f-4d198db602e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a941e625-419e-44ad-a55e-3fad66a929f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ad2b3ab-9e78-47a3-929c-155dfb31b3f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48bd73fa-4024-4f53-9bcb-f592ccdc6754",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c50fc893-c803-4b51-8593-3b7691e238a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d31bc5fa-e70b-4dd2-b032-c874ee51b4bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "286d33ab-c5f2-4c13-ba9f-c23df13b44d8"
            }
          }
        ]
      },
      {
        "id": "5907fa8f-2ced-473b-ba6d-a47dcf3a6230",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70589a57-e219-4818-a539-797abf9b49bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e73922b5-82ef-40ba-bb3a-f69ae579be82",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f7e2ecc3-e09b-4a99-89f8-aa684b2f2626",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6469eec4-f896-422b-98eb-ef81436fcf8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "479aeb4d-5b6b-4955-858a-1b7234982d95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 645.5423076923076,
      "responseMin": 20,
      "responseMax": 11742,
      "responseSd": 1063.009220118157,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682728553861,
      "completed": 1682728732352
    },
    "executions": [
      {
        "id": "a2051fd6-be8e-4694-aa67-c61a7e0ea033",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "42f0f0c6-9802-488f-8531-3a36e4e0e160",
          "httpRequestId": "6cc242d4-98be-4d2d-8656-62a593cc5125"
        },
        "item": {
          "id": "a2051fd6-be8e-4694-aa67-c61a7e0ea033",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bbf92dcc-d039-480e-9436-9560fa2b2dce",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "1c91f6ea-3083-48d6-a783-5255320608f7",
        "cursor": {
          "ref": "ef9ab0cd-0ffa-48b6-ad61-dd8c3ea75869",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "48feb2bb-0c83-4c4e-a907-1c190bf0b7a0"
        },
        "item": {
          "id": "1c91f6ea-3083-48d6-a783-5255320608f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "31337251-a928-4b4c-b144-5eb5e92d930e",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "a1600f5e-f8f2-4cc1-b2ed-7a4ad85ba344",
        "cursor": {
          "ref": "1cfc2e85-8f7a-4310-b6db-0a2c3ce3b500",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e9fc639d-f371-4c62-bde8-09195308fe24"
        },
        "item": {
          "id": "a1600f5e-f8f2-4cc1-b2ed-7a4ad85ba344",
          "name": "did_json"
        },
        "response": {
          "id": "e6ea36b3-e840-4cd1-8bb8-d8943b6ab467",
          "status": "OK",
          "code": 200,
          "responseTime": 956,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0217f8-8cce-4ebb-888a-348a722b677d",
        "cursor": {
          "ref": "0e7ce0c8-2f43-4f79-8c84-ffe04af9b4a2",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae6b0c40-15ef-4ce1-a245-676620e06725"
        },
        "item": {
          "id": "7e0217f8-8cce-4ebb-888a-348a722b677d",
          "name": "did:invalid"
        },
        "response": {
          "id": "49bbf75f-cb8f-472c-bd91-52ddee6983ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0217f8-8cce-4ebb-888a-348a722b677d",
        "cursor": {
          "ref": "0e7ce0c8-2f43-4f79-8c84-ffe04af9b4a2",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae6b0c40-15ef-4ce1-a245-676620e06725"
        },
        "item": {
          "id": "7e0217f8-8cce-4ebb-888a-348a722b677d",
          "name": "did:invalid"
        },
        "response": {
          "id": "49bbf75f-cb8f-472c-bd91-52ddee6983ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf26f03-6587-4e1b-9d26-90d98fd64d52",
        "cursor": {
          "ref": "1216ded0-65f2-4863-bef6-74005158e7de",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9126e18e-6e06-42cc-a891-273e503ae934"
        },
        "item": {
          "id": "faf26f03-6587-4e1b-9d26-90d98fd64d52",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fad819f9-1c00-49c2-9018-766ceefe4df7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 640,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dd9726-224d-4377-aa0c-11a715ba4d9e",
        "cursor": {
          "ref": "35804e1e-1b87-4915-bf06-65fbe2889984",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fda8568e-3c1b-4386-bb5b-278117587915"
        },
        "item": {
          "id": "c5dd9726-224d-4377-aa0c-11a715ba4d9e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "040aa149-afd2-4c5c-b2a5-5f7aba59d5d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 522,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229dbdd6-f40d-4173-9e85-c757ec8ed6e4",
        "cursor": {
          "ref": "fbe38f50-5e40-4dcb-a8f2-6457bc0895a6",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "82bce28f-ce3b-4c71-b180-431281eec83a"
        },
        "item": {
          "id": "229dbdd6-f40d-4173-9e85-c757ec8ed6e4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fdf1b3c9-5cf0-4a94-b09d-f4a93833ce84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 101,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181959b2-cec1-40d4-be84-a7712b4cf5d6",
        "cursor": {
          "ref": "323a371a-b6a6-45e3-9fd7-bc85880666cd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d01527f0-1a55-4d9b-a3ea-d6ff1a164739"
        },
        "item": {
          "id": "181959b2-cec1-40d4-be84-a7712b4cf5d6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5fb10e6b-ec4b-481a-bc0c-e4f430cead5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181959b2-cec1-40d4-be84-a7712b4cf5d6",
        "cursor": {
          "ref": "323a371a-b6a6-45e3-9fd7-bc85880666cd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d01527f0-1a55-4d9b-a3ea-d6ff1a164739"
        },
        "item": {
          "id": "181959b2-cec1-40d4-be84-a7712b4cf5d6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5fb10e6b-ec4b-481a-bc0c-e4f430cead5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d678613-6c2e-4294-83ad-04a91bfe998b",
        "cursor": {
          "ref": "8edb2df0-9d39-40e8-80a3-d1f1d5937117",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7cb0bd30-6247-427a-8e3a-fa9371585ee4"
        },
        "item": {
          "id": "5d678613-6c2e-4294-83ad-04a91bfe998b",
          "name": "identifiers"
        },
        "response": {
          "id": "1a09f073-6f94-44fd-af32-41db082228d0",
          "status": "OK",
          "code": 200,
          "responseTime": 1021,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64bb8c8-5a7d-4257-8eb3-050f07fb5292",
        "cursor": {
          "ref": "62c6fe61-582a-4449-84e3-c8fb1321de46",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86f54fef-0d77-48d9-a595-b99779918e1f"
        },
        "item": {
          "id": "f64bb8c8-5a7d-4257-8eb3-050f07fb5292",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5a9e3d9d-fc0e-438e-b326-83180a934695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64bb8c8-5a7d-4257-8eb3-050f07fb5292",
        "cursor": {
          "ref": "62c6fe61-582a-4449-84e3-c8fb1321de46",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86f54fef-0d77-48d9-a595-b99779918e1f"
        },
        "item": {
          "id": "f64bb8c8-5a7d-4257-8eb3-050f07fb5292",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5a9e3d9d-fc0e-438e-b326-83180a934695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf17ae14-a0a4-4a13-8d92-2e85a67b1515",
        "cursor": {
          "ref": "9911b010-2bd6-48c1-a964-6fefba66cde6",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b594eb95-9c40-49b9-b9bd-2509fe85827a"
        },
        "item": {
          "id": "bf17ae14-a0a4-4a13-8d92-2e85a67b1515",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "218fe536-d313-4e59-bc18-1d0b95e3426d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecd6c8a-8113-4929-a681-5b23a8767f29",
        "cursor": {
          "ref": "b65fa460-2a49-4e6e-9753-36ec72e5d885",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9218d86a-8858-4e89-b00d-4fa0ad1f837e"
        },
        "item": {
          "id": "5ecd6c8a-8113-4929-a681-5b23a8767f29",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "54ee7aa4-9517-41de-94c6-9db4b8da0162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b055a-18ce-47cd-ac9c-9b49d1ade6ec",
        "cursor": {
          "ref": "ae1157a0-185b-40fa-a2b8-1590ecd7b011",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cc4f791e-3ab5-4ab0-8184-6a9b41cb3a4f"
        },
        "item": {
          "id": "223b055a-18ce-47cd-ac9c-9b49d1ade6ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b7a6bf41-70f0-4829-8355-2144f30502cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbd92d5-08a6-49f5-a461-8b1e7fe26f6c",
        "cursor": {
          "ref": "18dd5801-de30-48f0-9dc9-67abecc922cb",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ba46b5f8-4b4c-4796-a09c-fa63c1378389"
        },
        "item": {
          "id": "2bbd92d5-08a6-49f5-a461-8b1e7fe26f6c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c4295f8f-0097-4174-a4a6-49ff149d912d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b541c5d-34e7-4448-b5ef-a2b91ed6e5c6",
        "cursor": {
          "ref": "4901f969-2687-439b-a2c7-c2c3955c44a8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cd0d27f3-4bff-41e3-8a00-6e8708f123aa"
        },
        "item": {
          "id": "8b541c5d-34e7-4448-b5ef-a2b91ed6e5c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "88b65c8b-9fa9-47e4-980a-6eb1995fe16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce523a1-d41c-4839-9481-2dc77e9790ee",
        "cursor": {
          "ref": "cf1dc71e-cc03-49fd-8171-7bf887a2df4a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7858b300-6786-40c0-9db0-f99167a05878"
        },
        "item": {
          "id": "9ce523a1-d41c-4839-9481-2dc77e9790ee",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f975913a-dd38-4d75-bf35-ce678429ac14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a5de7a-afb5-417c-9b13-78eb2abe4726",
        "cursor": {
          "ref": "4b970187-831c-46db-b9b7-ab30f21b9ff2",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1e6341ff-b642-4c37-b169-8e68dddaf22d"
        },
        "item": {
          "id": "52a5de7a-afb5-417c-9b13-78eb2abe4726",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "39f776fb-81df-496c-b16b-dfe82bd4f2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d4e587-177a-4533-a931-952104b93920",
        "cursor": {
          "ref": "29dc859b-dc47-458b-9657-899bb1d715a6",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "74692b06-bbf7-4265-affb-2f6050d46945"
        },
        "item": {
          "id": "c8d4e587-177a-4533-a931-952104b93920",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7b586f1b-31dc-4488-9791-033087f5966f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd29733f-5f80-459a-b0b8-fcf657d8fb9c",
        "cursor": {
          "ref": "d3b1d175-d1b1-463d-b3cf-99b888d24012",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33f57278-7c44-4e03-b7ed-a41a96f39fe9"
        },
        "item": {
          "id": "cd29733f-5f80-459a-b0b8-fcf657d8fb9c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "29a2a587-86b9-40b6-873a-fa2b197d3a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383f9d6d-d893-4fff-a34f-256941afdcd1",
        "cursor": {
          "ref": "37775f23-0df3-46b8-abbe-8a8c62f7c061",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "58e4a133-b955-4677-877a-9fdc4215d780"
        },
        "item": {
          "id": "383f9d6d-d893-4fff-a34f-256941afdcd1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "200446a3-abce-4b1c-b285-51d66df2d552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1137,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd303cf9-1880-45bd-9625-7583929e6ced",
        "cursor": {
          "ref": "6beffae7-f2d1-47d2-af99-7271cb1b80a7",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "219083f0-2936-4001-8efa-ca9fea6b9655"
        },
        "item": {
          "id": "cd303cf9-1880-45bd-9625-7583929e6ced",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a6d05b07-199e-48f4-bbb8-2f62830184e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e326fbf-1cb4-4c26-ba1a-25058159a418",
        "cursor": {
          "ref": "e2b98b6b-2f31-4b4a-86bd-feaa00206eab",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5756c7da-fbf7-428c-8b3c-33be90ceb547"
        },
        "item": {
          "id": "8e326fbf-1cb4-4c26-ba1a-25058159a418",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "31b6f12a-ab89-4399-bf8b-a185ef9b795f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721226ac-c6c2-484b-b8df-5560113db067",
        "cursor": {
          "ref": "06233fec-3c2f-4844-935c-45b4c98adada",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aeb84d1c-df33-4d1d-be18-01edac81c137"
        },
        "item": {
          "id": "721226ac-c6c2-484b-b8df-5560113db067",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4386fdb2-33ee-4490-a187-dbb8fe6ded77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f2c0ae-b2cc-4279-94c7-9a14dac393c6",
        "cursor": {
          "ref": "ac5666ca-8723-489e-8fd7-5e5a7b7ed198",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8f2a794c-2083-4838-8c4d-775863cf9b95"
        },
        "item": {
          "id": "70f2c0ae-b2cc-4279-94c7-9a14dac393c6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d64e2757-dc3d-4ba0-bc94-2268e7d9e1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e1e490-dfee-47b4-95d4-df2b5df4005c",
        "cursor": {
          "ref": "e49e06e4-f807-4966-aaf0-759973bb7e0b",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "30ece4bc-6a82-4170-a3a5-eaa06829997e"
        },
        "item": {
          "id": "d2e1e490-dfee-47b4-95d4-df2b5df4005c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27a25f52-3c08-44df-9e7a-a5c6f84a851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00663b2b-4c14-4cad-9401-40949a178378",
        "cursor": {
          "ref": "369707c9-604f-4e5a-8ea1-861eae4078d0",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "98be5aa2-aa34-4812-b615-c9a5b14c160f"
        },
        "item": {
          "id": "00663b2b-4c14-4cad-9401-40949a178378",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5f7c2409-cbf0-4369-b232-30fa325b8871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fed49e-d589-473a-9861-49296751a3fd",
        "cursor": {
          "ref": "9da4db52-669d-4418-beda-6d9bbe49a70b",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4c021b94-a9bf-44f6-8099-609ec931e029"
        },
        "item": {
          "id": "f3fed49e-d589-473a-9861-49296751a3fd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "60fcf97d-4f88-490e-b021-488362f59bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb71b699-3d05-4460-a7c8-991a25dc51cd",
        "cursor": {
          "ref": "0cfd4caa-8917-44e1-8b76-3f14f12faff8",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0a96f5d2-4125-45a1-a563-6f341bb1db18"
        },
        "item": {
          "id": "bb71b699-3d05-4460-a7c8-991a25dc51cd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "29a3a9f9-da8f-494d-84c5-eb6e6863870f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0463e3b2-4b38-415d-b4a2-1c45f16eca3a",
        "cursor": {
          "ref": "82bce753-7fc1-415a-bb3f-174f5837eddc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fcdb5b59-9b70-415c-9b1a-01e4444e1a09"
        },
        "item": {
          "id": "0463e3b2-4b38-415d-b4a2-1c45f16eca3a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e168d060-32a6-47f6-bc6c-f821f90424bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34579f92-96b6-4077-8091-7104230def40",
        "cursor": {
          "ref": "8b196ce4-2783-47ec-870a-95f3b0684d59",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "424e6bcb-5994-4139-8910-7f6589695e55"
        },
        "item": {
          "id": "34579f92-96b6-4077-8091-7104230def40",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1fa5181-e37b-4b1b-8a1c-9a569a4ed84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec9056-2943-4d75-8fb0-2ff17e089bda",
        "cursor": {
          "ref": "5ce72d64-d712-4768-9f52-460958184e0e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4d04d38b-0745-4e3b-9ace-9f4087eaa04a"
        },
        "item": {
          "id": "e2ec9056-2943-4d75-8fb0-2ff17e089bda",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "06ef381b-7ddf-4019-811f-43c02cc01d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38030cef-7202-43e9-87c8-c028b18bbdeb",
        "cursor": {
          "ref": "53f8dd11-9000-4fee-8f66-8150ccb997e3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3764d2e2-e849-4f80-a005-fb09d578be2e"
        },
        "item": {
          "id": "38030cef-7202-43e9-87c8-c028b18bbdeb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b8a2eda4-4dd0-40ad-b9fd-69bf98de9570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9623b0b6-8b30-4998-94b1-92ed672ef276",
        "cursor": {
          "ref": "bfe852b3-d6f0-483b-9f2e-be8eedb297b0",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "46ca299c-ee37-4464-a2f5-0e6c00384010"
        },
        "item": {
          "id": "9623b0b6-8b30-4998-94b1-92ed672ef276",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "724a04e9-67a6-4406-a6dc-cca5bdc85231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9a0f9c-d3a9-4c98-8366-d3136142b535",
        "cursor": {
          "ref": "9f85391c-6170-4d8e-bee6-332a49bd38e9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a17b7c6d-4fcc-452a-8041-97480ca2ba9b"
        },
        "item": {
          "id": "ce9a0f9c-d3a9-4c98-8366-d3136142b535",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "46071cb6-9501-4256-8d5e-066b53aee9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd0be50-c7fa-476a-bde2-6652d8711389",
        "cursor": {
          "ref": "75548017-eb71-434f-bd6c-805452bc739e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "12f557e1-0862-42af-ba75-a18421429386"
        },
        "item": {
          "id": "8cd0be50-c7fa-476a-bde2-6652d8711389",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d6cacbd-65f6-4ad6-8c8a-5e5ef7a2c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da56cbb-c20c-4a1d-8155-8a57cd46a4c4",
        "cursor": {
          "ref": "5bf55fc3-7311-4324-9b9e-23f8c7ead52c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "93dea177-078b-452b-a4c3-8c2e9d8515ac"
        },
        "item": {
          "id": "9da56cbb-c20c-4a1d-8155-8a57cd46a4c4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bc329b69-618f-4d2d-977e-eb2d2cb35800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aaeab8-f13d-4c21-bedf-aa582c8515bf",
        "cursor": {
          "ref": "eb158776-9873-4dad-bd08-0c0d7442381b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "15cbb2c6-cdfa-45d1-8846-0b10fb499e8a"
        },
        "item": {
          "id": "d9aaeab8-f13d-4c21-bedf-aa582c8515bf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7b9dc2d4-2951-4f55-aeac-2a46086fc675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe96531d-0eae-4f33-8b2a-dd6c41f1ed1a",
        "cursor": {
          "ref": "7a74e306-8868-4f60-8eac-a084eb990799",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad262ae0-eedd-4546-b158-5ea2e048e65f"
        },
        "item": {
          "id": "fe96531d-0eae-4f33-8b2a-dd6c41f1ed1a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dec08a02-d1e0-4aa5-9e6a-ff035b4b80de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cac4666-2a2c-4fae-a4c2-2e760bef699b",
        "cursor": {
          "ref": "f8366fd5-5f85-4116-8a09-9d7866ed89d6",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f8a24d7a-ea6a-40f5-8bb0-01b736462eb3"
        },
        "item": {
          "id": "0cac4666-2a2c-4fae-a4c2-2e760bef699b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fd705a17-cf28-4eef-a85b-d76e04ddd222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4514ca2-f770-4c66-b5ea-5c3819b793ed",
        "cursor": {
          "ref": "df79c21b-b5f1-4b02-b647-26c68c499388",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ee04a593-a9a1-4763-9d63-ff369de5b5ab"
        },
        "item": {
          "id": "f4514ca2-f770-4c66-b5ea-5c3819b793ed",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fcc4df10-143a-4b35-b61b-41986a3cb75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58e1c38-e77e-44d9-9f48-46116e74cbe6",
        "cursor": {
          "ref": "64a8dd37-29a2-4b7b-beac-76cbf67a8878",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d69cf693-b939-4011-b2dc-f9f6927a8cd2"
        },
        "item": {
          "id": "b58e1c38-e77e-44d9-9f48-46116e74cbe6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eb4c7037-9f90-44cc-845f-3a1ac5b3a052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc42ac8-bfa0-48d6-96b3-8931c6e6a8e7",
        "cursor": {
          "ref": "1b3e06b5-bcfc-4c42-b9e2-2c0121472fe1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "20418206-e9ad-440e-b295-77f14887b2ff"
        },
        "item": {
          "id": "5fc42ac8-bfa0-48d6-96b3-8931c6e6a8e7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "37cb9c7b-f1a0-4076-94d6-5bb0484164e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f012422d-c68c-487e-a971-5cf1b5008761",
        "cursor": {
          "ref": "9db3267c-4b79-4e61-b6a5-1cdd4c424f80",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "853f4fbc-ea1a-41e8-9be6-a7bc27790ba0"
        },
        "item": {
          "id": "f012422d-c68c-487e-a971-5cf1b5008761",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4e66b8a4-b8ed-420f-8de1-2a2fe28130d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6c10fe-8d1f-4aa7-a3f4-63d4a323a0ff",
        "cursor": {
          "ref": "9e358c46-4d6d-43ca-bf8c-ae3432e784d5",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "20ac74d5-1927-4c65-92f5-465a78d9cbd8"
        },
        "item": {
          "id": "5e6c10fe-8d1f-4aa7-a3f4-63d4a323a0ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ef1e7532-5e23-4a28-982c-95c062653bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54fe16f-7898-4b65-853b-5ab8ecd5f9fe",
        "cursor": {
          "ref": "151a3359-0cfd-459d-8d65-33d53b9fef82",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7185e28e-7eb3-4ede-ab7c-fc22383293f6"
        },
        "item": {
          "id": "f54fe16f-7898-4b65-853b-5ab8ecd5f9fe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c47260f-3aca-4cf5-93b9-688f60fbf733",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 677,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b83acc-88ea-4629-9475-fc76ef46ae5c",
        "cursor": {
          "ref": "7fff914a-8850-4680-923e-ad32e2177076",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b25f08d0-2efe-4007-8392-c2969743e47f"
        },
        "item": {
          "id": "b3b83acc-88ea-4629-9475-fc76ef46ae5c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "761e43d3-ba61-4013-bf66-669139b431ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b41089a-95d7-42fb-917e-5825e0cfe60a",
        "cursor": {
          "ref": "2a08a0de-444e-4afd-bcbd-cb6251129b86",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a653c6f0-a163-4997-a038-e4ea5171c788"
        },
        "item": {
          "id": "7b41089a-95d7-42fb-917e-5825e0cfe60a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0d86fcf5-c13e-46e2-8b98-1908fc4359c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2747cf-f0c4-4f58-93eb-f8061fe3c3f8",
        "cursor": {
          "ref": "0d023aa9-2dcc-47cf-a543-8f6a7ccf3b6c",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a7f1c19d-76bf-4704-b5a5-e4e319bdea62"
        },
        "item": {
          "id": "8e2747cf-f0c4-4f58-93eb-f8061fe3c3f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b645eb6b-a09f-433f-bc5f-6ebc09a333f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d618b8b-9383-4822-9098-b1cd198398c2",
        "cursor": {
          "ref": "7c5b9f73-e479-49f8-88f8-64e01f672448",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2c084eca-89ba-49b9-b0e5-13128828c2db"
        },
        "item": {
          "id": "4d618b8b-9383-4822-9098-b1cd198398c2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e418ba4b-ef82-45cb-ab9b-1e20530076a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a45f7c2-a7e0-4224-bb74-8fc7fc4b066e",
        "cursor": {
          "ref": "57dca875-105f-4871-b5ec-93740f9a1f53",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b99dbdbc-3b87-41e0-b9d3-b7c7eb4a92f8"
        },
        "item": {
          "id": "6a45f7c2-a7e0-4224-bb74-8fc7fc4b066e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3508c545-ee95-4743-a6dd-940b6a193d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b313c0-25c7-4df5-8f4e-85846ed4d083",
        "cursor": {
          "ref": "7a49866a-b87f-4993-b052-fc29f7dc0fe4",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "50db5d94-7ed8-44ce-a804-472e4734c39c"
        },
        "item": {
          "id": "30b313c0-25c7-4df5-8f4e-85846ed4d083",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a3e89d7e-8008-46da-8030-0ba8e9959ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f27b6f-ab7e-4714-8946-26d5daa185c3",
        "cursor": {
          "ref": "c6624ef1-ef5a-4808-b6f1-afde38203b5a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c504eada-734a-450a-9d39-7192c5023de5"
        },
        "item": {
          "id": "b1f27b6f-ab7e-4714-8946-26d5daa185c3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9a6ea4bc-3856-487c-a11f-0038d3fd30f9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1179,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86766c4-9e7f-4bce-97fd-d0f7f907d4e5",
        "cursor": {
          "ref": "ca11d90c-c67f-49fa-9afd-aadf366c7728",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "53732f46-facc-4c57-8a38-9ad74d9af2c1"
        },
        "item": {
          "id": "d86766c4-9e7f-4bce-97fd-d0f7f907d4e5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "712392ad-5f2d-4cd0-a384-bee6fae8acd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac49c1-36e6-44e6-a7b3-54f6ebe92d03",
        "cursor": {
          "ref": "b2937a4f-8dcb-4220-8e16-0a6e7bee1e3a",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dea0365f-f45c-41bb-a64c-4d9e9b35ba6d"
        },
        "item": {
          "id": "2bac49c1-36e6-44e6-a7b3-54f6ebe92d03",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ac5ca254-e8da-4f28-902c-44d446ce539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa483e4-d366-48cc-8bc8-4fe736313f5a",
        "cursor": {
          "ref": "91ad5afa-505a-46b9-8648-c48dc5742047",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "46d6c385-64d7-4ff6-98eb-c01b958d3c5d"
        },
        "item": {
          "id": "cfa483e4-d366-48cc-8bc8-4fe736313f5a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2f354839-080b-42a5-8669-5b850441ec43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407f07a8-3e7d-406c-a50d-933873c32dd3",
        "cursor": {
          "ref": "d0945ea2-70c4-493c-bee7-a7146959af76",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b27a71b2-24f9-4786-a9d6-b5f39348ed35"
        },
        "item": {
          "id": "407f07a8-3e7d-406c-a50d-933873c32dd3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e48b5af7-c951-4ccd-b5b9-aede17f4a45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd09305-4432-485f-b83b-78d43c6c8594",
        "cursor": {
          "ref": "92039f51-e22a-4610-9b25-01714a49967b",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "715d489f-46d0-4e38-b641-be238a6bda03"
        },
        "item": {
          "id": "9cd09305-4432-485f-b83b-78d43c6c8594",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "57f151d4-6f7e-4d74-b5e2-7a50942c0fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ae8ea8-99fc-4c7f-86b0-fdfbec286a21",
        "cursor": {
          "ref": "dbbbf8b9-917a-4b8a-9118-4c55497eebd9",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c241893b-9316-44b4-a94e-0b7e5dfe0ec4"
        },
        "item": {
          "id": "17ae8ea8-99fc-4c7f-86b0-fdfbec286a21",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4c446dfd-34f8-4984-9c08-310a28559fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6678e616-891b-4dc0-9db9-e0dbef0d2667",
        "cursor": {
          "ref": "b8027c77-d4f0-4878-86d1-1ce17d05b56f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "744e0f93-9fbe-41e9-a34a-936d756c8865"
        },
        "item": {
          "id": "6678e616-891b-4dc0-9db9-e0dbef0d2667",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "177df08f-9ebd-40e2-aaf0-a585ad074366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9822020-abc8-42e8-bea0-08ed58edd324",
        "cursor": {
          "ref": "3cef5208-9cc2-420a-9e1a-cd17a816464c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ba68933e-4669-46c8-a649-d930304d8558"
        },
        "item": {
          "id": "b9822020-abc8-42e8-bea0-08ed58edd324",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a529a1f5-5676-4842-ae20-2ec91a34a364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a400e7e-394d-4307-a12f-1778029d4626",
        "cursor": {
          "ref": "8bdccf06-7a21-4168-b299-4993d61232fb",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "006555be-c400-4c17-bf77-323eb74bf8e4"
        },
        "item": {
          "id": "0a400e7e-394d-4307-a12f-1778029d4626",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9c29fd9e-6538-4992-932d-b121a87a3cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac56d8-c827-4abb-93c6-e2ee0e7343c7",
        "cursor": {
          "ref": "ec1912d6-171a-4770-ab1a-c0b5a0b94a69",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bddf70f4-db7c-4abf-8fc7-16c4d4964467"
        },
        "item": {
          "id": "2bac56d8-c827-4abb-93c6-e2ee0e7343c7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3aee0e1c-77b7-42f8-b94b-3110b0d1f324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32444b75-29ab-4de4-9333-505269e51035",
        "cursor": {
          "ref": "22356544-5d15-4a36-9bb0-8c0fe7e7470d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6099337c-f65c-4c05-93e3-5f3b77d971ef"
        },
        "item": {
          "id": "32444b75-29ab-4de4-9333-505269e51035",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cd0dd070-3dc2-4208-b843-9ef6091c57b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d24511-f727-478c-96bf-fa7552d0b118",
        "cursor": {
          "ref": "a77be052-ad0b-4271-8e98-6afa0624ccb8",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5b66d5b3-ec58-4cee-9fef-5a73243d3fc8"
        },
        "item": {
          "id": "c5d24511-f727-478c-96bf-fa7552d0b118",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "215edcfb-8e5a-48ab-9613-daf14a61b929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa3a48d-17ad-4bf0-ad2c-cb67d46d521d",
        "cursor": {
          "ref": "0b3c1d8b-a026-464d-b43f-895143faaace",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ee9fb196-3404-483f-9e07-eee71e015bb9"
        },
        "item": {
          "id": "1aa3a48d-17ad-4bf0-ad2c-cb67d46d521d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fde794a6-e3bb-46d1-9014-f39d86e3479c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695d4a2a-c9a3-41e6-bd47-cf8eaed5bd90",
        "cursor": {
          "ref": "ddc6a7d5-b02d-417a-8c2a-29fc2964375e",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2e768782-0105-4c70-826d-914c9ee8ff56"
        },
        "item": {
          "id": "695d4a2a-c9a3-41e6-bd47-cf8eaed5bd90",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "527bb37c-039d-4cb6-90d2-ac08c17cb283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3d55b7-a5df-4a21-bcf6-60f68d3c12d1",
        "cursor": {
          "ref": "8eaeb61d-ba9e-4c67-b644-2c00abd6deda",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1915d633-e659-4c7f-97a9-f850d7c5183f"
        },
        "item": {
          "id": "1a3d55b7-a5df-4a21-bcf6-60f68d3c12d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4391c692-e6a1-488c-99c6-94a8a870c474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2301e2-4a21-4a31-a970-de34064995f5",
        "cursor": {
          "ref": "1f509d0f-08d5-42c4-ad12-1a03f70c9a8f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3069a705-949a-48c3-90d2-937771a3f98a"
        },
        "item": {
          "id": "2f2301e2-4a21-4a31-a970-de34064995f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fecd19a0-b4b6-43f2-a792-8f77cf7595fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089197d-0e85-40f7-b602-89d7bc56c703",
        "cursor": {
          "ref": "e14aa566-92e2-4345-82bf-6615d3b05103",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "abe51c12-101c-41ed-b40e-a793401f22f8"
        },
        "item": {
          "id": "6089197d-0e85-40f7-b602-89d7bc56c703",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bded7149-4b06-4594-8a24-1a6bed089015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10880b87-2c27-4907-95cc-5e2e880855db",
        "cursor": {
          "ref": "bf3cb91a-cdb0-4b27-ab5e-8474aee3777f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9d57de75-3574-40b3-89b4-935d4cb2bd08"
        },
        "item": {
          "id": "10880b87-2c27-4907-95cc-5e2e880855db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "991054d3-3742-4540-9bb5-a0af71cd90e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e573e8-1593-4c32-9839-ca2090f81dd7",
        "cursor": {
          "ref": "3ba80416-d6de-45dd-883d-2c303bce9b79",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "80754062-69a8-4748-adca-1349a6bf6b5a"
        },
        "item": {
          "id": "e0e573e8-1593-4c32-9839-ca2090f81dd7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b98820b0-dec7-42e2-a826-9f7a851b5914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e7f63f-823e-4f49-8dbc-a75eb0d49ff4",
        "cursor": {
          "ref": "79099d36-3b5b-4507-a181-6a798a384537",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "47abde46-587e-4e3c-bc5f-4f4e7b9f3662"
        },
        "item": {
          "id": "18e7f63f-823e-4f49-8dbc-a75eb0d49ff4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "94ee93c5-641f-4003-91a9-188acb1b02a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf9e9c2-f700-45eb-921a-12049c3667d3",
        "cursor": {
          "ref": "b9f2d0e3-346c-459a-aa8f-3b487434c1d0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "591f7496-47a8-4241-888c-5672bdf75dc9"
        },
        "item": {
          "id": "aaf9e9c2-f700-45eb-921a-12049c3667d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2e8a461c-c4ee-45a5-9e28-7217ea1e4aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66df5692-cf93-433f-bddc-a76a40c92b31",
        "cursor": {
          "ref": "16b0a553-3355-40ef-a298-6e6dc768d36c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "711db3f2-09c6-4e19-9657-1cc288262e58"
        },
        "item": {
          "id": "66df5692-cf93-433f-bddc-a76a40c92b31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "32bfdb3f-22da-4979-ba1d-4dd96f0993e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71760d21-f923-4fc5-b827-5c1079565746",
        "cursor": {
          "ref": "ff164aac-6cca-4904-9830-5b016fab4b48",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4425482c-33c5-429a-85be-0731e0dddb2b"
        },
        "item": {
          "id": "71760d21-f923-4fc5-b827-5c1079565746",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38e2344d-87a1-46aa-b278-1face76a0e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c34c50-1da9-4743-a4a4-ae15d0148c42",
        "cursor": {
          "ref": "f6986cd1-109f-487a-be72-f321a2dbd4fe",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f18c8d0-dd9d-4c98-b6b4-29c32f124a4a"
        },
        "item": {
          "id": "73c34c50-1da9-4743-a4a4-ae15d0148c42",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "20bfb38f-0fa2-48de-b31d-125ea414c1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8b9f5b-c53c-49ae-8c65-6a7df96cb6a6",
        "cursor": {
          "ref": "d5dae495-abd9-44fe-8372-4833ed0f7b71",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5f74e187-e5b5-414f-a2d1-b86cb9f381eb"
        },
        "item": {
          "id": "9b8b9f5b-c53c-49ae-8c65-6a7df96cb6a6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "823696ce-16cb-45e1-aabb-ac5a4d2127dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ea0709-bf36-439f-a47a-592d5f8b6550",
        "cursor": {
          "ref": "c491ad7d-36cb-4e9e-a3ff-b9c6c3004d11",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eeba737a-1356-4290-aaac-b81a08f02654"
        },
        "item": {
          "id": "48ea0709-bf36-439f-a47a-592d5f8b6550",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "beb3829f-da88-40f9-800c-b9b62a9f610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a041b6-29b8-4f23-9d18-518c936b2c46",
        "cursor": {
          "ref": "910876e1-f503-483c-bac1-08a71a637a35",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2d1406ce-041f-4b61-a7db-c331abfa0a78"
        },
        "item": {
          "id": "e1a041b6-29b8-4f23-9d18-518c936b2c46",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5c0bb17b-aead-4199-aa4f-45585c176d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539caed-4112-4c1e-be7d-7f61c2552264",
        "cursor": {
          "ref": "d3289905-7280-42e1-bad5-064b2ff1f4ff",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4b602c99-0361-4f46-85c6-4bc1865849b2"
        },
        "item": {
          "id": "f539caed-4112-4c1e-be7d-7f61c2552264",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba1d1cb9-a12b-4914-9491-46943f102c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74a122b-c4d4-44a9-a8c1-f3f0563b0352",
        "cursor": {
          "ref": "c0dab78f-6147-40f2-bd10-201dde8f32b6",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4528f150-88f4-4216-a22a-5b527d109a39"
        },
        "item": {
          "id": "f74a122b-c4d4-44a9-a8c1-f3f0563b0352",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "76f4a5fb-72cc-4f99-bf1e-77a97832ab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be3e5a7-0bc4-4169-8b4c-95f0a404331f",
        "cursor": {
          "ref": "1ac8b97c-e843-41db-b881-9193931c04af",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "92a0c51c-b6aa-4291-a669-57f5b017c3a3"
        },
        "item": {
          "id": "1be3e5a7-0bc4-4169-8b4c-95f0a404331f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0ecec514-91da-4911-a410-56517f823b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cd8e8f-5198-4d7f-9f57-4de20e575f95",
        "cursor": {
          "ref": "4e5ac7cc-80b6-46d7-bb35-29bcc330668f",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7c4ee752-4e82-4252-9947-cd15de318450"
        },
        "item": {
          "id": "c9cd8e8f-5198-4d7f-9f57-4de20e575f95",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f5a5bd9-b059-4616-9867-80e0b738b186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e30786-6d46-4452-b0ef-d9804dc4076f",
        "cursor": {
          "ref": "0b6857c4-8a16-4fa4-a31a-6a33a6193652",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b8ba31c3-e781-4cc6-aa46-3ec5778f6422"
        },
        "item": {
          "id": "89e30786-6d46-4452-b0ef-d9804dc4076f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8e76721c-8604-4c1f-9850-1c798697bf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb43797-5468-4670-b1a7-51a38c8ff031",
        "cursor": {
          "ref": "ceee7988-20e3-4c7f-b966-53f3d456bc3a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b25ea4f6-f447-48f1-b5d8-047c34d4e5fa"
        },
        "item": {
          "id": "eeb43797-5468-4670-b1a7-51a38c8ff031",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d808b6b6-0677-4b72-b0c4-d0527084fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e4b9f-e6ec-4c3f-b1da-fa81dfb168fd",
        "cursor": {
          "ref": "5df28309-71f9-4353-a79e-f6e368493f2d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64dec8df-b5c6-4fc8-83a5-98eb9347a520"
        },
        "item": {
          "id": "465e4b9f-e6ec-4c3f-b1da-fa81dfb168fd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "751b1ecf-21c2-432a-b1eb-157adec596b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e635f714-2f6b-49c3-8391-cb8f49fd7446",
        "cursor": {
          "ref": "9c0e32bb-2e94-4941-9fe3-89d94e5b84cb",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9279dfe5-0fab-4ff4-8fd5-d21e79ca37fb"
        },
        "item": {
          "id": "e635f714-2f6b-49c3-8391-cb8f49fd7446",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2a341ab3-890a-43e6-88c3-15331e8633e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dd5670-bab0-4111-bf25-b4d72265df75",
        "cursor": {
          "ref": "c7618448-da66-42a1-9eea-37fed2e31402",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d88d990f-fc99-41dd-bcf0-0c53c7e4df0f"
        },
        "item": {
          "id": "69dd5670-bab0-4111-bf25-b4d72265df75",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "50e126bd-c247-4aea-8010-5507ac805602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c96530-76d9-40be-b0fa-07429e53c938",
        "cursor": {
          "ref": "0eb52e21-27b4-4463-b384-cb2fc52112e9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a925263d-6288-4469-bbf9-896e72c0ae7c"
        },
        "item": {
          "id": "95c96530-76d9-40be-b0fa-07429e53c938",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "38d142a1-21fe-45fb-b787-d16f90e0642a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaa03fb-ec9a-4b65-b828-2de63cbd56bc",
        "cursor": {
          "ref": "28cc60fe-7197-43d4-82ae-dea93240fdfe",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e37d11de-bec7-4a1c-bae3-998d69c62d41"
        },
        "item": {
          "id": "dcaa03fb-ec9a-4b65-b828-2de63cbd56bc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "28a94962-252a-4a43-941a-e292cf4164f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8923500e-dc59-465a-a1bb-fdffc029e411",
        "cursor": {
          "ref": "9ec5691e-a2eb-445c-bfea-fd48c26cbae0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ae0b5caf-a703-4d85-9a03-eecc0f6a4499"
        },
        "item": {
          "id": "8923500e-dc59-465a-a1bb-fdffc029e411",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "84d25077-e8d6-45f9-91d5-3d11d8fcfbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3582aa4-8815-4353-a060-b6b6e04eee63",
        "cursor": {
          "ref": "8cfdb0a3-bc1a-46b6-8cab-1896c9596fb9",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ff736cc3-ad3e-4ee8-a661-3666c293aa5e"
        },
        "item": {
          "id": "f3582aa4-8815-4353-a060-b6b6e04eee63",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7666486e-c26f-404e-99e6-ddc00097359c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 921,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2009b138-eeeb-40a6-a3f6-19653f3adac1",
        "cursor": {
          "ref": "3fab63ef-fb21-4d69-8d5d-37d8c065bbe3",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "16035a71-a3b5-4a79-8155-03cf7f92b302"
        },
        "item": {
          "id": "2009b138-eeeb-40a6-a3f6-19653f3adac1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "364867f9-0731-4b73-9760-5bf533ac3032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07894b0d-9649-4c89-9f78-b45ce0a8856e",
        "cursor": {
          "ref": "36952b8e-82f8-4c15-ac8c-1b0acb0ee258",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ecfa13b3-1c54-4b3d-bd5d-8c32667c670f"
        },
        "item": {
          "id": "07894b0d-9649-4c89-9f78-b45ce0a8856e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "00b6b68d-0d22-44c8-b9a8-3859a1359ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b7d91-e98c-41d5-89b3-4480908043a3",
        "cursor": {
          "ref": "7df088d0-f80c-4422-a568-dc3f447aa6b3",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d1a07d0e-2cac-40a6-8788-a327566bca27"
        },
        "item": {
          "id": "f12b7d91-e98c-41d5-89b3-4480908043a3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c2f43164-13f9-4eb1-a0d1-d6d499bb40d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fb4515-ddf7-4358-b115-ea92af1be5f4",
        "cursor": {
          "ref": "340e6801-2880-4e69-83be-036fc5c0d729",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7c4b7012-fbae-43bb-b383-b1a522f1fc74"
        },
        "item": {
          "id": "c6fb4515-ddf7-4358-b115-ea92af1be5f4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0d457703-a880-4bbe-a8f4-7f4cfed30dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdbb739-1b32-486a-b3e7-2d77bd49aea2",
        "cursor": {
          "ref": "e05ca2cc-e831-4fbf-869c-cfc177a29cf4",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "666a23da-b172-46ce-a199-3d3e3d4934bc"
        },
        "item": {
          "id": "8fdbb739-1b32-486a-b3e7-2d77bd49aea2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a5b1ef22-7337-417b-b140-ebaff363fffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f42d09-d239-490f-9d31-cad9f11d537b",
        "cursor": {
          "ref": "2736a5c4-b974-422e-8447-2f401bb5cc7d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e937ae98-7911-4b7a-956a-c0ae97f4e1d7"
        },
        "item": {
          "id": "70f42d09-d239-490f-9d31-cad9f11d537b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7d5b1ba3-cfe4-4a63-97f7-79cd6e9e4671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e1b81d-8192-456b-8f68-d53b003defe1",
        "cursor": {
          "ref": "2f464d58-9791-48e6-b1bf-2eed912eeed4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4cb29c4b-7229-4918-b618-60870145db4b"
        },
        "item": {
          "id": "c2e1b81d-8192-456b-8f68-d53b003defe1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2bfd61ae-1189-4b91-88c9-9907cba4b8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69bb4e0-9c55-4a15-ba77-15b7e841d01b",
        "cursor": {
          "ref": "4e585435-2c3f-420b-927c-c319077f245b",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5bf09615-6f50-480a-913f-2339575a09a1"
        },
        "item": {
          "id": "c69bb4e0-9c55-4a15-ba77-15b7e841d01b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f2cfba0c-b61c-4734-819d-1e02039da92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8978604a-74d4-488f-a5b1-6c7a51567af4",
        "cursor": {
          "ref": "b5520ff0-fc8c-4141-a4e8-adede9b618f3",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8fc36d89-6a1f-4cd5-a494-75b865bd9df1"
        },
        "item": {
          "id": "8978604a-74d4-488f-a5b1-6c7a51567af4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8d8ad0d9-fdaf-42db-8e0a-b600c14b2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d080f8fd-11f8-434c-b6aa-0dbfdb1f825d",
        "cursor": {
          "ref": "f4998193-34f2-46e7-80e5-6a4a68bca47e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "152ae5fa-45fb-4152-85ba-0602e2a54214"
        },
        "item": {
          "id": "d080f8fd-11f8-434c-b6aa-0dbfdb1f825d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "02e0f3a0-2aab-4902-b87a-4b2959878690",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14ebf4-8ac0-4544-a72a-1bb64a68729d",
        "cursor": {
          "ref": "ad660491-031f-452e-84bd-17b7b4034617",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8f586f0e-7bd2-4d1a-bcd1-3b04e73e8418"
        },
        "item": {
          "id": "ee14ebf4-8ac0-4544-a72a-1bb64a68729d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "11a99832-3b0f-4032-b9ab-34f5c4d0af73",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effba3ce-10e3-41b8-99a9-13175811c175",
        "cursor": {
          "ref": "76d95726-f80f-45df-b043-c6f37c7d4af5",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f63ef4a1-646b-4f1e-a93a-3f0b2c580cab"
        },
        "item": {
          "id": "effba3ce-10e3-41b8-99a9-13175811c175",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7a600673-9751-4e6e-a18e-8034559aa31c",
          "status": "Created",
          "code": 201,
          "responseTime": 11742,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c45794e-2dca-47f2-b63b-6f4db0e93d06",
        "cursor": {
          "ref": "ab5697eb-649d-48c5-8661-417c47143f15",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fe60dd59-e2c5-4772-bed4-00b503869864"
        },
        "item": {
          "id": "6c45794e-2dca-47f2-b63b-6f4db0e93d06",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2b01ea82-85c2-4c1e-a56c-db3bc66e55d4",
          "status": "Created",
          "code": 201,
          "responseTime": 5738,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "13349c6e-cf68-4da4-8c4d-830ea63fa455",
        "cursor": {
          "ref": "9e90585d-9641-4684-be22-4afdf4c78a1d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "428bf6e9-7ef1-45f9-9727-51807a192e79"
        },
        "item": {
          "id": "13349c6e-cf68-4da4-8c4d-830ea63fa455",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c613b543-0f5c-44ac-9808-422a09d06b4b",
          "status": "Created",
          "code": 201,
          "responseTime": 5429,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1c5c09-c205-44d1-b088-45d63ba2b1f9",
        "cursor": {
          "ref": "92118abc-2973-42d1-b095-83c490720eab",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c24b3162-d800-4d19-919f-2d4d7ae6717b"
        },
        "item": {
          "id": "3e1c5c09-c205-44d1-b088-45d63ba2b1f9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3535e97a-3e4f-4fcc-bb43-396913633137",
          "status": "Created",
          "code": 201,
          "responseTime": 5699,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f2fbd4-a75d-4132-b596-71119c5b8282",
        "cursor": {
          "ref": "2cc24c26-1740-43d2-97e2-35561d687cd3",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "15ac5932-1b41-49b3-a87b-8a463172c578"
        },
        "item": {
          "id": "e3f2fbd4-a75d-4132-b596-71119c5b8282",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "932a7fe5-07d8-472b-9f65-68ffe0232eec",
          "status": "Created",
          "code": 201,
          "responseTime": 5257,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e83d34-e933-4194-a880-811c2536cfd3",
        "cursor": {
          "ref": "04132322-832f-4746-b258-607570fb744d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e408da8-1c95-4c4c-b8db-fe9f7d0c22c0"
        },
        "item": {
          "id": "15e83d34-e933-4194-a880-811c2536cfd3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0ca5d26c-ddd5-455b-9503-1cc039fdf5aa",
          "status": "Created",
          "code": 201,
          "responseTime": 8174,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba53853-6ce2-40a8-bef9-dfe29d8e68d2",
        "cursor": {
          "ref": "88025e17-053b-47ba-a060-a64422a40749",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1fe4f745-c4b9-45fc-9715-aab7c02cb465"
        },
        "item": {
          "id": "2ba53853-6ce2-40a8-bef9-dfe29d8e68d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c73944c3-c33b-4bb0-ab7d-de0b09babe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba53853-6ce2-40a8-bef9-dfe29d8e68d2",
        "cursor": {
          "ref": "88025e17-053b-47ba-a060-a64422a40749",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1fe4f745-c4b9-45fc-9715-aab7c02cb465"
        },
        "item": {
          "id": "2ba53853-6ce2-40a8-bef9-dfe29d8e68d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c73944c3-c33b-4bb0-ab7d-de0b09babe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae026bb-8865-474c-a129-ea71bb3660b7",
        "cursor": {
          "ref": "42d131b3-f529-44eb-bbef-25ddf9c4b6ca",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "22f25bc2-70a2-4a41-875c-567a9b8df75c"
        },
        "item": {
          "id": "1ae026bb-8865-474c-a129-ea71bb3660b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "61e23456-d000-460c-9ce5-0712ed6be566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5bef92-c347-4998-8613-e6d70385ac07",
        "cursor": {
          "ref": "4900aca9-7353-4d72-9d06-a7fd0ea78695",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "196ce61b-cc93-41ad-988f-492ed81e65d7"
        },
        "item": {
          "id": "1b5bef92-c347-4998-8613-e6d70385ac07",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "261a4a12-2d81-4fbb-85a8-65bb73150316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46e7529-d243-41c6-a7e0-d3d5f4ee7e6e",
        "cursor": {
          "ref": "2eec625d-0237-4b80-ab00-d7ebab0b5c07",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b3dc0202-940c-4d78-a862-3da8bb33cf13"
        },
        "item": {
          "id": "e46e7529-d243-41c6-a7e0-d3d5f4ee7e6e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d04a0928-022c-40f9-9889-324cd4405443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0edc7bc-6d27-4406-bc61-3f84e827dddc",
        "cursor": {
          "ref": "a7f46d56-5bfd-4ad6-a1ea-5abd227630a1",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f3d8bd06-aa51-4d1d-91d5-d19c3c140cab"
        },
        "item": {
          "id": "e0edc7bc-6d27-4406-bc61-3f84e827dddc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e1bd10d0-0ce3-4983-b5b1-fecac879c1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8b9604-6f66-44b4-9511-be5509c1326f",
        "cursor": {
          "ref": "cd6110af-0c36-4d37-8754-f69e53509a0a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8bd3711c-2d0e-4882-9e61-025ff27f0e55"
        },
        "item": {
          "id": "0e8b9604-6f66-44b4-9511-be5509c1326f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4e201d75-c1d5-4577-8158-66dc3c095b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7bf513-f3d5-444b-9720-5bf6c549a13d",
        "cursor": {
          "ref": "6f08264b-f054-475f-979d-86f06b070656",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "21a952a4-f51a-422f-b66a-60c97f79f684"
        },
        "item": {
          "id": "cb7bf513-f3d5-444b-9720-5bf6c549a13d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b91e1adf-d283-4f29-982c-88df61dcd86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac3900d-621c-41df-ba24-67308aa212e3",
        "cursor": {
          "ref": "e5987c1c-e6eb-420e-b331-15009adcb849",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "348e812f-6c96-4d48-b8ce-64d7fad11fcb"
        },
        "item": {
          "id": "cac3900d-621c-41df-ba24-67308aa212e3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a2a066d0-76cd-43ef-868b-1cb317dd4026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef6b2e4-aaed-4241-a345-a5a2c3dfbb95",
        "cursor": {
          "ref": "83cd617c-fa39-4281-86fe-3e8980986f21",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d1013d8-178d-409a-9305-3a39d75faedb"
        },
        "item": {
          "id": "2ef6b2e4-aaed-4241-a345-a5a2c3dfbb95",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6c124381-c343-42f5-a4c7-61b0d5712caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002fd93a-b5ba-4dc2-a855-d345b964d3a8",
        "cursor": {
          "ref": "800f8d05-a313-477e-ae10-6c801d000811",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7b2dea58-76e8-4f0f-97d2-8f50cae53a36"
        },
        "item": {
          "id": "002fd93a-b5ba-4dc2-a855-d345b964d3a8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8d0876db-0d39-4b4f-8296-0c96ea43e1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1df8a2-9d4d-4f27-9a4c-2d92e2b671a1",
        "cursor": {
          "ref": "db3cac9c-5c5a-4849-895a-f1097e2bc9c8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7d857cb9-323b-4461-a39a-aa9da82c8409"
        },
        "item": {
          "id": "8f1df8a2-9d4d-4f27-9a4c-2d92e2b671a1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "135c7a8a-4d27-4439-919a-46137afdbae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4c4cd7-a2df-4cc2-ad04-ecc4a61c7520",
        "cursor": {
          "ref": "c4782a34-0410-4537-befe-4f64a7046c97",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "373250ab-234f-4c38-b5d5-a78fc617489e"
        },
        "item": {
          "id": "7e4c4cd7-a2df-4cc2-ad04-ecc4a61c7520",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dbcbc0b1-aa1d-44fc-a481-6931bc80434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a17980-8f8e-4b0e-a4e0-80b4dbcebd6a",
        "cursor": {
          "ref": "44d25d58-f3ae-4d7d-bb02-e87348969e93",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fb30ae0d-43dc-4b24-bb31-a40fe0080c6d"
        },
        "item": {
          "id": "b3a17980-8f8e-4b0e-a4e0-80b4dbcebd6a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7da20409-bca2-4bb0-ada4-3e21e50e180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f1e89-578e-4d07-b0a8-85590f28ad21",
        "cursor": {
          "ref": "7a70dc3d-09d6-4557-8198-23cb0b558c33",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f2a786f7-bcd8-4395-b04c-0a932e8c6ba6"
        },
        "item": {
          "id": "0c9f1e89-578e-4d07-b0a8-85590f28ad21",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "db4031e7-71a0-424c-8321-616aae725fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425c0e50-66f1-41fa-a100-58110dffbf1f",
        "cursor": {
          "ref": "21d3a56b-aa4a-4e05-a2bd-1198e7a4c44c",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "944ffe93-e20c-492a-9301-4b9217921fb1"
        },
        "item": {
          "id": "425c0e50-66f1-41fa-a100-58110dffbf1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e7901e6d-85a4-4d53-85e4-6298ca8c3972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdd448f-7572-4f02-867d-c74e125b192e",
        "cursor": {
          "ref": "f5a7ae64-b743-4153-bb77-cb39451e5e99",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d2600343-3939-4ac5-90ce-81318c0a11f3"
        },
        "item": {
          "id": "dfdd448f-7572-4f02-867d-c74e125b192e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8acc530-fb23-4720-b109-ff4d32737116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9daa427d-64f6-4e60-9200-901fafd7bd74",
        "cursor": {
          "ref": "3f94be52-6127-47e1-a901-d3d0fed2f21c",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "69074dde-b508-4530-8324-79f51e97d4fd"
        },
        "item": {
          "id": "9daa427d-64f6-4e60-9200-901fafd7bd74",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8eb4a734-1c13-4a98-a378-aa9077431ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b623205-23df-4a8b-bdd3-9033b78438d6",
        "cursor": {
          "ref": "6ff8f853-9cfb-4600-b588-63793852f45a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5dd1e7d-645e-4724-9380-ff520cb12253"
        },
        "item": {
          "id": "6b623205-23df-4a8b-bdd3-9033b78438d6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e2668eec-f86a-4d0b-9c0d-a55be4baa07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9915a8-4aeb-48f2-a97f-3e208e464852",
        "cursor": {
          "ref": "6425a1c1-35de-468a-8ea0-5c7882c20867",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "072ea1b6-df3d-4ddd-9e74-15b38c422a3f"
        },
        "item": {
          "id": "cc9915a8-4aeb-48f2-a97f-3e208e464852",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c8ac140c-ced8-48a4-909c-cc3cb9baacfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a50191-6891-45aa-a147-08f279533129",
        "cursor": {
          "ref": "1dcd261c-f117-4dcc-8db0-ff8e0824d2ec",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4abce8f3-476f-4299-8ea4-6dae2da8d72a"
        },
        "item": {
          "id": "e9a50191-6891-45aa-a147-08f279533129",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5e6048b7-a4ac-49bc-8cc5-9031b3f7bb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b525bc4-6eed-45e2-9d65-f2316e2500d9",
        "cursor": {
          "ref": "63575b83-01fa-4f3e-a892-c9ac65c94ccf",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d2394667-9c40-47cf-a2e6-76ecdb091aef"
        },
        "item": {
          "id": "0b525bc4-6eed-45e2-9d65-f2316e2500d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f89376a-2242-4190-ac61-4a4386cfeddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c80038-911c-4ad4-b0d1-775023a81f05",
        "cursor": {
          "ref": "4b78c6f4-e31f-4dbb-bc46-19dbb05ac83a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "949408b1-831c-4b81-9a99-973eb45c1a36"
        },
        "item": {
          "id": "02c80038-911c-4ad4-b0d1-775023a81f05",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2580dfbf-09e5-4b71-995f-e8c6a72d0938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c161029e-5b31-4ac9-8d1b-019f6b50745e",
        "cursor": {
          "ref": "e46033ca-4648-46f0-8c78-c85ccc11a721",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3148d232-3993-4ed2-ad73-921165092497"
        },
        "item": {
          "id": "c161029e-5b31-4ac9-8d1b-019f6b50745e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7073134f-a5bb-47f3-8a77-8739e8ddbdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030989dc-cace-41a6-b226-97737b9f7ce3",
        "cursor": {
          "ref": "761a7fbd-377b-4e8c-bd44-3d8e0bf6a6e9",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1dde33ff-5b5e-43d6-a192-84f3a8f83ec6"
        },
        "item": {
          "id": "030989dc-cace-41a6-b226-97737b9f7ce3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ece1334-9cd2-4dc7-8386-a541f0e88402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45c19f-64e5-49e8-843c-f0d506e9a79c",
        "cursor": {
          "ref": "9092c40d-6817-43f8-9532-237e16c63f00",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bb4fc74a-c6fa-4f0a-bd40-e4f0a98a4f0e"
        },
        "item": {
          "id": "be45c19f-64e5-49e8-843c-f0d506e9a79c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7a22c9c2-28ad-431b-85d8-397b40fd3795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c257e4a-a176-451a-83d2-aa399ded9f59",
        "cursor": {
          "ref": "ac1fac25-008e-4d47-89d0-a4ab209cc047",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2c031343-9439-49bc-99f9-8bac2d93f005"
        },
        "item": {
          "id": "6c257e4a-a176-451a-83d2-aa399ded9f59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ef92abeb-0dcc-421a-916e-b9fa9e5e167c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1457d59b-28f3-424d-8109-42412929097e",
        "cursor": {
          "ref": "c4ac2108-82fb-41f7-95b4-9e3eb6a6757f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "44bb44f4-517f-44c1-a617-ddcb9cbe6319"
        },
        "item": {
          "id": "1457d59b-28f3-424d-8109-42412929097e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a48ed2f9-658e-4e36-a28f-9330e8dcae02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f481c86-4d66-4eba-8e79-2d3ab8586e11",
        "cursor": {
          "ref": "49dea552-5ac9-4128-8dc5-fbb53daaa386",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1ee2733a-fb1b-46fb-98aa-f6621a8fa1b8"
        },
        "item": {
          "id": "2f481c86-4d66-4eba-8e79-2d3ab8586e11",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "96328f2c-06ff-4bec-a847-620acb1c8738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7325d5b-7d11-45b6-a5d3-b660c01056d3",
        "cursor": {
          "ref": "464d2016-5a7f-4c60-9724-59d7629167ba",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "280ec8a3-9593-48b8-9e07-6037123e0f2b"
        },
        "item": {
          "id": "c7325d5b-7d11-45b6-a5d3-b660c01056d3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0d75fb97-e9a9-48d4-9a4d-b7ce79176bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1725860-67aa-4bdc-b64f-4e0b3e743846",
        "cursor": {
          "ref": "240b96d6-aff3-4437-8d3e-305df536ffc5",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "80a499ba-b1f2-4389-b99a-cf8cddf74f5d"
        },
        "item": {
          "id": "b1725860-67aa-4bdc-b64f-4e0b3e743846",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "66dba2b8-2f23-48a7-b99a-a05bdf44eb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad23275-c77e-4ffc-8a9e-a121763d79e1",
        "cursor": {
          "ref": "68076f71-0774-4a92-9318-97ab06a67ac8",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "177842bb-ada4-4ca1-8fc8-abd35a7bf19b"
        },
        "item": {
          "id": "cad23275-c77e-4ffc-8a9e-a121763d79e1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fe2cbd77-6495-4575-a842-a4180cd96496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bad733-3df1-47d8-b08f-24d1e93e5b20",
        "cursor": {
          "ref": "ea5a0752-f324-467d-9a1b-17fdfff4a8c2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d6155c8-344c-4541-bab8-60802dfcac17"
        },
        "item": {
          "id": "78bad733-3df1-47d8-b08f-24d1e93e5b20",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a497e3c4-26f6-4c24-a8df-bb541cc778ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b74b7e5-e93d-4ea6-9668-459f37773827",
        "cursor": {
          "ref": "de5c5041-f6b7-48f2-aaa9-d8d4aa3b6b71",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a9bf14a7-82fd-46aa-892f-8481ef249c7c"
        },
        "item": {
          "id": "1b74b7e5-e93d-4ea6-9668-459f37773827",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "70443b6c-e3c1-42a8-b480-3475d19c1aba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cef90f-1f10-45b7-b0d2-2bd279bec3d1",
        "cursor": {
          "ref": "69c7dae8-e752-4333-969f-1a019d3a7372",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a86c96a-6ea6-4696-a01d-4818834953b4"
        },
        "item": {
          "id": "c2cef90f-1f10-45b7-b0d2-2bd279bec3d1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "349e3148-41db-474d-804b-cf0bd702e868",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 511,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4281e0b-14ae-4092-96c4-603f7dbaa7bc",
        "cursor": {
          "ref": "911fd8a2-fafc-4f30-ba39-d465fb747d04",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5aba847e-82ed-46d1-8446-39e4b0ae321a"
        },
        "item": {
          "id": "d4281e0b-14ae-4092-96c4-603f7dbaa7bc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8a231ee3-1581-4af7-b4c7-3f2eee6c1d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4281e0b-14ae-4092-96c4-603f7dbaa7bc",
        "cursor": {
          "ref": "911fd8a2-fafc-4f30-ba39-d465fb747d04",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5aba847e-82ed-46d1-8446-39e4b0ae321a"
        },
        "item": {
          "id": "d4281e0b-14ae-4092-96c4-603f7dbaa7bc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8a231ee3-1581-4af7-b4c7-3f2eee6c1d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c610e89c-315e-41f3-b82a-c21f34464938",
        "cursor": {
          "ref": "f4a86ef4-f8dc-41e2-82d4-82645048db31",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "50f3ad49-e168-4fac-9c63-977109199155"
        },
        "item": {
          "id": "c610e89c-315e-41f3-b82a-c21f34464938",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4269772b-4720-4bd6-80cd-2d6af0e2590a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6b9f1e-a7cd-4d1f-99af-6380e92f977e",
        "cursor": {
          "ref": "339fc4f1-135f-4550-8ecf-5722e0c2559e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ca16d38-6b46-4cb0-9328-c8f59c8fe911"
        },
        "item": {
          "id": "bc6b9f1e-a7cd-4d1f-99af-6380e92f977e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0014b75d-adfd-414f-8ff6-4679bf6d6fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564b99b9-1529-4f7c-b6a6-474594635f1e",
        "cursor": {
          "ref": "92941ef2-8c36-4e51-992e-f6fbd770f712",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "869d5de9-dea4-4aed-a664-146bb36c0aa2"
        },
        "item": {
          "id": "564b99b9-1529-4f7c-b6a6-474594635f1e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4ea61ea9-2ccf-4962-b99b-06b80d916468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196d8ad2-8d3f-44c8-8747-2f6102f42d3f",
        "cursor": {
          "ref": "984ffdae-0b04-452b-8f15-0e11fce11eeb",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6b329b6b-49c6-4213-aa7b-b19296a89606"
        },
        "item": {
          "id": "196d8ad2-8d3f-44c8-8747-2f6102f42d3f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fdd03b2f-758f-44c1-8a12-525b8a5bb33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319a1c56-23f1-4824-ae56-e91ab80bcf44",
        "cursor": {
          "ref": "50b3bd82-2d3d-4ea7-b847-ba9b27297fce",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "22d3fffa-6b9f-49f2-8230-912463919357"
        },
        "item": {
          "id": "319a1c56-23f1-4824-ae56-e91ab80bcf44",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1685b3b9-2865-4648-8f1e-dbd45c7f066b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79b4d19-8dee-49db-8088-1f2a74faa563",
        "cursor": {
          "ref": "826e2bd1-fbea-44ea-8104-4ef7c6d63461",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "474e2260-d1d9-425d-b349-b6c7217ebf40"
        },
        "item": {
          "id": "f79b4d19-8dee-49db-8088-1f2a74faa563",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4f7ee3ef-e131-4505-bb9e-8def5c936a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fdfb91-6b7c-4001-9365-9c9117d4d6ea",
        "cursor": {
          "ref": "d9857a26-0476-4a0a-810a-35384cf5dcda",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e4cf01cc-ce31-432a-9bb6-35381a5ad1bd"
        },
        "item": {
          "id": "f1fdfb91-6b7c-4001-9365-9c9117d4d6ea",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e67fa1d7-38c4-4e6a-99c3-703f03af5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d48bbf9-c7b0-4fd7-a377-3b1a59f8dbbc",
        "cursor": {
          "ref": "f84ffc85-b1da-43fd-86d2-009078f59095",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b5f0691c-a262-44ca-8bc7-8cde7529923c"
        },
        "item": {
          "id": "8d48bbf9-c7b0-4fd7-a377-3b1a59f8dbbc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ce4cc2d0-50e0-4dbd-82f7-630c02431758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cda4bae-4597-4031-9d81-845e5910696b",
        "cursor": {
          "ref": "a03e2336-00a0-4e59-9967-8b1cd8ff42fd",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c2445d71-9b4d-4646-87ef-6d0966617e6e"
        },
        "item": {
          "id": "7cda4bae-4597-4031-9d81-845e5910696b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c6a7ee36-aa37-4008-9416-0fa1de1b7016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cd2329-cad9-4db5-87f3-639de39a1d2e",
        "cursor": {
          "ref": "9b39f377-a071-44f9-8ec5-99847f57482e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c97b2ac3-a455-4ed4-bd28-ddc78ad7884c"
        },
        "item": {
          "id": "40cd2329-cad9-4db5-87f3-639de39a1d2e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7cde011c-84e7-4cf5-8ff2-e840171106ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ce8631-3e30-4f01-bd45-9e988983157c",
        "cursor": {
          "ref": "be01066e-92ac-47f9-9df8-ec06ef150e9d",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8152ca57-1d11-42cf-9d60-9c69be6684b4"
        },
        "item": {
          "id": "97ce8631-3e30-4f01-bd45-9e988983157c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "948b1ea0-93a5-4694-bf49-486486a6540c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc888a-1842-42e0-b4d3-7ab8aaf4c20f",
        "cursor": {
          "ref": "2114bc03-5248-442c-9c99-5629689b77ec",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4c7ec28c-f645-4209-98d8-d0739addc236"
        },
        "item": {
          "id": "abbc888a-1842-42e0-b4d3-7ab8aaf4c20f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5bddccfd-b44f-4aea-b72e-bb33d08a9778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eea511-1b31-4533-8fea-a625ebd7b2a5",
        "cursor": {
          "ref": "ac88aaba-66f6-4019-a626-66b21f93afaf",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7e376097-3e90-4c46-9a7f-770c8bd0c120"
        },
        "item": {
          "id": "71eea511-1b31-4533-8fea-a625ebd7b2a5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eaa3fbc7-6fcf-4bfa-8b1f-38ee9370f76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c1978d-b07c-4fc7-903b-919062b21b0e",
        "cursor": {
          "ref": "bb9deba5-3569-4522-9e35-46a805a0f91a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a22a1b5-2d2d-4f09-b58d-7a2b57b071d5"
        },
        "item": {
          "id": "71c1978d-b07c-4fc7-903b-919062b21b0e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3768c74a-10fc-4bff-b4e9-8c70f69e39d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9337ae07-a7e9-4286-97c2-0c1838f2115c",
        "cursor": {
          "ref": "02a8fb98-d52b-469b-b8da-2e0882a6d7f8",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d0f84af7-518f-4925-a444-80e01f5867a9"
        },
        "item": {
          "id": "9337ae07-a7e9-4286-97c2-0c1838f2115c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2f3d4a8c-35b5-4c34-bf24-131b13ae0fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f984119f-d6be-44c5-9f8f-9edd3cb15ebe",
        "cursor": {
          "ref": "dc448969-d901-47c9-9bff-6ab24fcd2951",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "53877587-10d4-4166-885f-0c0d809bcf1a"
        },
        "item": {
          "id": "f984119f-d6be-44c5-9f8f-9edd3cb15ebe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4a91432b-f909-4e56-b202-fd5e0d7c0015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bf110a-194b-438a-9a90-42f59bc20b0f",
        "cursor": {
          "ref": "d3b2c271-3cda-4553-a15b-af929d32d1de",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2e679492-cae9-45a7-aa04-c5b93aaabc15"
        },
        "item": {
          "id": "89bf110a-194b-438a-9a90-42f59bc20b0f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "73d35391-018f-41ff-8bb0-82da11c1d57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6967b306-c03d-4d52-8f39-10d68e6519b1",
        "cursor": {
          "ref": "05a33d0d-10e9-4162-a943-b791abb4e972",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ec8f8275-6a90-4581-a7f0-9fa21efa4464"
        },
        "item": {
          "id": "6967b306-c03d-4d52-8f39-10d68e6519b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ee22ae3c-6d74-4b4e-b1c3-d3fcf755ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d580ca0-13a7-4f34-8bda-26807f45a349",
        "cursor": {
          "ref": "07f9f8fc-3748-493c-bb06-f24b5142f7ad",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9e061f39-88a0-4442-8e6d-dbb3ba512e00"
        },
        "item": {
          "id": "7d580ca0-13a7-4f34-8bda-26807f45a349",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b82d6a76-6e33-49ee-8d01-5071e250ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cd7616-2abd-47db-8b33-45efcdb12567",
        "cursor": {
          "ref": "e54b7383-a643-4fe4-885f-1b86f4a239f6",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f7a99117-1ee3-4923-96e5-3d0e52194925"
        },
        "item": {
          "id": "f8cd7616-2abd-47db-8b33-45efcdb12567",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f980a507-2b8e-48d9-87ce-2a8719cb1a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc3bd05-3b7a-4b85-848a-fd210bf7e412",
        "cursor": {
          "ref": "1cb81245-e147-4d43-8734-60f32847e359",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c2217f50-a4aa-4776-ae9d-27933067aa13"
        },
        "item": {
          "id": "cbc3bd05-3b7a-4b85-848a-fd210bf7e412",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "054123d6-39a3-4ecc-af01-b59ae7bc2ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85916153-cd31-430f-9e5e-a244d89e69cf",
        "cursor": {
          "ref": "fb8dcc99-f0d0-41e5-905b-c859506d1632",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "71dd7cbf-fabb-4ab5-8906-4a3d35b4780c"
        },
        "item": {
          "id": "85916153-cd31-430f-9e5e-a244d89e69cf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c4cf86c-85cf-4ac1-8f47-ca1f7a037595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d9615f-c964-46bb-a4bf-a43ab527658b",
        "cursor": {
          "ref": "07243920-5c42-4388-95e4-8992260c57cd",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "74b32e0a-3a97-4bed-abdd-7bfe48cda603"
        },
        "item": {
          "id": "01d9615f-c964-46bb-a4bf-a43ab527658b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8cfd346c-1533-4723-8070-8727b0880903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca3760b-ce29-4a2d-bdbe-e07717cdd9d8",
        "cursor": {
          "ref": "5e5abf40-367c-4c91-96e9-faee62040be2",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f8577f2-edd7-4897-8658-331c0a7a3f72"
        },
        "item": {
          "id": "bca3760b-ce29-4a2d-bdbe-e07717cdd9d8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8e5c324e-c43d-4800-94b0-7462d68daf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809bf1a9-af46-4fca-b2d6-a1c3f3651a91",
        "cursor": {
          "ref": "709c08b7-39ae-4a01-b8cb-d0de7331bdde",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "873143dc-b416-4fb0-8c71-087df0adb5d3"
        },
        "item": {
          "id": "809bf1a9-af46-4fca-b2d6-a1c3f3651a91",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0e0bc816-6d29-468f-8fe7-510238eef4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8724a9c-0096-45f1-9dd5-b430b1eecc47",
        "cursor": {
          "ref": "2c01c3b9-346b-4ce1-a6b9-ed928abc9543",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "59f88cf1-46b3-408a-99b1-c7ec6fd71b5a"
        },
        "item": {
          "id": "e8724a9c-0096-45f1-9dd5-b430b1eecc47",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bdc41611-c01a-46fb-aa5b-b286884f3134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eeacf2-0a15-494e-946d-5a7ea366c8bb",
        "cursor": {
          "ref": "baa06501-ca2d-4d4e-86df-af57cf51ce6a",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "253b31ad-4c07-4588-8640-2cb848dc2f4d"
        },
        "item": {
          "id": "d9eeacf2-0a15-494e-946d-5a7ea366c8bb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6da17d3d-fdbb-4425-8d72-8c6ec873a460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ad276d-1114-43a0-bf47-38b8f1e5487b",
        "cursor": {
          "ref": "697fd26c-fba5-43de-9336-a88c98bd5ef8",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9cb1e4c0-2549-4335-9671-0194db140eae"
        },
        "item": {
          "id": "e2ad276d-1114-43a0-bf47-38b8f1e5487b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c3ab7fe3-94cd-4da6-a8b5-e3162cdfd8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa9e7a1-4124-4f08-bafa-eba22bd0a7e5",
        "cursor": {
          "ref": "31499411-ccd0-46a5-abc9-74f0ffa3f660",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "871aba4b-fc49-4d50-84f5-a2964964bbf8"
        },
        "item": {
          "id": "8fa9e7a1-4124-4f08-bafa-eba22bd0a7e5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7e6cb4e6-7357-4ab1-a8ef-e5ba7520a58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58179535-5e2c-4488-99b3-2014ddacd54f",
        "cursor": {
          "ref": "8086259a-e6e1-49a2-acde-d9b94eaada85",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "99644ad4-4b1b-40d4-9c1e-f6e564b82ffe"
        },
        "item": {
          "id": "58179535-5e2c-4488-99b3-2014ddacd54f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "561e8ac2-7ac8-42d9-bee1-c134229c26cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf280ce7-7cda-436c-966d-3970f665d142",
        "cursor": {
          "ref": "8f159b11-83a6-4f66-8942-e88e965e32a4",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "044ba6af-ff7f-4382-9b99-5fe175f602ce"
        },
        "item": {
          "id": "cf280ce7-7cda-436c-966d-3970f665d142",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f6949aae-b6ec-473f-a0ed-e71d5b02a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081ccd22-974b-4155-84a7-f5b81b6974c5",
        "cursor": {
          "ref": "3cafd86c-645a-44c0-b4ed-044685c3cc18",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "989f9dd8-c4a9-46ec-8318-d07c970b06dc"
        },
        "item": {
          "id": "081ccd22-974b-4155-84a7-f5b81b6974c5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0007c340-6b2e-4108-9b98-a8e72a99f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2441c6-4852-47a0-b06b-8aecc9bfb3d8",
        "cursor": {
          "ref": "f4def2f4-3c9e-46d9-a3a5-5c03689939fb",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e635012c-bf30-4e48-848e-a1a626469dd4"
        },
        "item": {
          "id": "ad2441c6-4852-47a0-b06b-8aecc9bfb3d8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e87b8d83-feb1-44ce-ac9a-78a5032f15b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71721555-8a57-4a2a-8d22-bddfb88b7dad",
        "cursor": {
          "ref": "cad1e20c-4ed6-4063-a5bd-3643fb3a9967",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43d96aae-7fe3-4587-8046-2fb72d53b1ec"
        },
        "item": {
          "id": "71721555-8a57-4a2a-8d22-bddfb88b7dad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc9e2cc5-6d26-4028-9fe5-9ab3d4a76a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b597be5-9ba3-4b3b-955b-ae76c029bef3",
        "cursor": {
          "ref": "a40c8ad1-00a0-4cc9-b173-26b355b228db",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a8b03595-f5a5-4fea-9029-6c13c022f2c1"
        },
        "item": {
          "id": "5b597be5-9ba3-4b3b-955b-ae76c029bef3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "342bb045-cd12-47ca-8067-8f88e127a064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6b271f-54cf-445e-847b-77c4bb87ecc4",
        "cursor": {
          "ref": "2feb92ba-ba58-400b-a03a-b12ffa0dc21b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b2fb7822-6ed9-4bea-b0bf-b9be6c337272"
        },
        "item": {
          "id": "7c6b271f-54cf-445e-847b-77c4bb87ecc4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "78b51ca7-762c-4290-9a03-6c3567fd0405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf93dd52-6eff-4016-8b14-3581d9f1911c",
        "cursor": {
          "ref": "4c62068a-92a5-41d5-8a37-ebcae9667b51",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c43854a4-0df7-4736-9cee-21086b46a224"
        },
        "item": {
          "id": "cf93dd52-6eff-4016-8b14-3581d9f1911c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df61d955-5552-4ebd-8d58-8e07a8d47c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c6705e-1f79-4126-91a2-1c6f499ac0e4",
        "cursor": {
          "ref": "4b2ff077-784a-4ff3-929b-e507836a8724",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "989678e2-791a-4b5e-bb62-467073cad0d1"
        },
        "item": {
          "id": "a1c6705e-1f79-4126-91a2-1c6f499ac0e4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0379262c-8302-416f-b8fe-291d79cb9669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2941ff6-fcec-4363-b621-4c549a877da7",
        "cursor": {
          "ref": "0eea20a6-1afd-42cf-aeb6-a1f2d1e60cdc",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f12d5625-d904-4835-bd64-f4a3a11e9380"
        },
        "item": {
          "id": "a2941ff6-fcec-4363-b621-4c549a877da7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "73e04f5c-6d76-492c-80ee-31da3c35877d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64709f34-823a-4737-bd6d-727e0588e985",
        "cursor": {
          "ref": "17cb9d0c-0679-4f29-b3f1-9425d5a5b4f4",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "072793e9-8c91-4c4f-8f93-9f74ef8436fa"
        },
        "item": {
          "id": "64709f34-823a-4737-bd6d-727e0588e985",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "92f42749-6766-4a21-b9f9-5de4fc21ac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d6f817-3192-4b0d-a27c-560b5c095c5a",
        "cursor": {
          "ref": "d9370eff-1581-4d80-9991-c16797fdb0bd",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "069355ba-13c0-42f6-b4ef-069de3fff635"
        },
        "item": {
          "id": "e1d6f817-3192-4b0d-a27c-560b5c095c5a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "adae7f43-950a-4130-8f69-06fdc81555b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bfc077-2d28-4b9d-b50a-daa2531a76ee",
        "cursor": {
          "ref": "0fd7a632-fc36-4489-851e-c743c9bed390",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "35a9c540-092e-41a2-bd31-1360a9b01316"
        },
        "item": {
          "id": "e9bfc077-2d28-4b9d-b50a-daa2531a76ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bf98f30d-2493-4d47-8951-5ae12aa2daa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed87768b-a3b4-40fc-9316-84a620a1628f",
        "cursor": {
          "ref": "7e891160-01ca-4772-aaf6-6faa6997851b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6d2201e0-fda2-4222-8db7-8eed0c936ce5"
        },
        "item": {
          "id": "ed87768b-a3b4-40fc-9316-84a620a1628f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "678d0130-cc81-448b-b2d8-01ba5017b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e47c520-5673-4390-b4a2-918e15b0a789",
        "cursor": {
          "ref": "4c089a6c-222c-45ab-a87c-eadbad636e64",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "71f5e340-762e-4f5e-a67a-2f67a3a1a3ed"
        },
        "item": {
          "id": "6e47c520-5673-4390-b4a2-918e15b0a789",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "99037b81-ffc1-482b-b61b-5ae4d861422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe787fa3-f276-42df-8db1-37b2fd52828a",
        "cursor": {
          "ref": "b22e0c0e-a6e7-463c-830a-638d1f660f64",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b1c6772-8c76-4346-98bf-386aec073df5"
        },
        "item": {
          "id": "fe787fa3-f276-42df-8db1-37b2fd52828a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e3627f0b-76dd-440a-a299-1d03d1d76803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732992ef-60bb-4c1f-9627-ed9b338b86d1",
        "cursor": {
          "ref": "30e806a4-c3af-45e1-8fe3-d35a7a850a71",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5657493e-b000-48cc-9fba-4eae9782189c"
        },
        "item": {
          "id": "732992ef-60bb-4c1f-9627-ed9b338b86d1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "495cf0b5-08c3-4c13-9b5f-6f6868105d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eed29f-d316-495d-883a-8f562dc3637d",
        "cursor": {
          "ref": "602f69a9-3c7d-469e-ada2-f2ea961b7290",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d5989075-17a2-4097-a422-b8ef171f81ff"
        },
        "item": {
          "id": "99eed29f-d316-495d-883a-8f562dc3637d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bbdfae41-8716-480b-a898-790f3c88f953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b25d14b-ab3d-4aa3-ac2a-8fbc7d40be5d",
        "cursor": {
          "ref": "1c5ea03c-14a3-4e11-9d60-9d75ba3397f9",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0a6b72ea-de7a-4157-bcc9-4f68abce28bc"
        },
        "item": {
          "id": "9b25d14b-ab3d-4aa3-ac2a-8fbc7d40be5d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d9e43836-335b-4029-9827-e598fe262b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adebff2b-f2e8-45f7-9099-5fbf93500633",
        "cursor": {
          "ref": "631bf609-17be-4376-b5d9-58e5c131d87c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d575f9a5-194e-4695-8aee-0a5fed525146"
        },
        "item": {
          "id": "adebff2b-f2e8-45f7-9099-5fbf93500633",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9ef8f8e9-4932-4692-a238-113ad5d4c7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8767db79-ef8f-428a-9c87-919cb54c03da",
        "cursor": {
          "ref": "0c6be84c-8418-42c8-8ffd-2876491aa625",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "538f49c5-9b85-4e42-9e18-337aac467db8"
        },
        "item": {
          "id": "8767db79-ef8f-428a-9c87-919cb54c03da",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "154b174b-1a09-4340-aeaa-63e7c4b0d718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c7bb0-7692-4069-b3cf-c914a1574c6e",
        "cursor": {
          "ref": "10a01a5c-cfaf-4ed3-be16-d219bcee1064",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "db914bec-afac-431e-b4b5-20f5e9614977"
        },
        "item": {
          "id": "141c7bb0-7692-4069-b3cf-c914a1574c6e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "77bcc495-d203-4c1a-a6d5-6ad3fdbf924a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d112b2-ae1e-46e6-ad44-ae66da9a6181",
        "cursor": {
          "ref": "6567b067-21df-4328-879a-04e9d0948f99",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "09e4aa09-a24d-440b-8646-5f536e30eb4f"
        },
        "item": {
          "id": "f6d112b2-ae1e-46e6-ad44-ae66da9a6181",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e756c1c9-0da4-4084-a8a9-84d5557ce1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5651f8-bf62-414b-820b-d1671b6d9330",
        "cursor": {
          "ref": "b2837313-f2cf-4e07-9531-4382b01c3eb5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8a7831bb-5fd9-444c-b7ac-562ee0c6749e"
        },
        "item": {
          "id": "eb5651f8-bf62-414b-820b-d1671b6d9330",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "51e242db-0ed1-41bc-ba30-4ec8b159e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db4a97c-180d-4464-a307-f49e250ccdcb",
        "cursor": {
          "ref": "6d00db8e-f707-4e04-a17c-b2546d0bdaab",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "103cfd60-772f-496a-9333-57feb7c419fb"
        },
        "item": {
          "id": "9db4a97c-180d-4464-a307-f49e250ccdcb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "19cbdb6c-f8bc-40b8-addb-c08bd29e70cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa0cb35-2eb0-406f-8aaf-cc90ffe16796",
        "cursor": {
          "ref": "b297e9f1-9af5-4026-a009-9da01bdb083c",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0fe2d7fa-6cfd-4329-a76d-c37b9b02fdbc"
        },
        "item": {
          "id": "3fa0cb35-2eb0-406f-8aaf-cc90ffe16796",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "30133637-bc8e-4841-bdbc-11fc2d94fb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11faf6a6-c8f0-4502-b12e-dc2bc77b2e9a",
        "cursor": {
          "ref": "fb046ec3-f414-4cdb-a870-455541a951cc",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c2e4cc7c-612a-41a5-82c4-4039b41fec74"
        },
        "item": {
          "id": "11faf6a6-c8f0-4502-b12e-dc2bc77b2e9a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0e1721e6-c016-48fb-97b5-9bd7285f159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a9d8f-ce3d-4646-a25c-3d448f9ca19b",
        "cursor": {
          "ref": "66379585-1e94-4b36-b2b4-0856da35b19d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a1f56b4c-d262-476d-b5d0-5311f44b85f7"
        },
        "item": {
          "id": "013a9d8f-ce3d-4646-a25c-3d448f9ca19b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d4e66f89-66e1-43b3-83c4-b6c0b51fa695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c5f96b-3d85-4182-a3a0-be95f88d2d0f",
        "cursor": {
          "ref": "1748589b-b670-45f0-a459-1423c0e39ee7",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "357497e7-e2c0-4276-8df7-ff3080312cbb"
        },
        "item": {
          "id": "52c5f96b-3d85-4182-a3a0-be95f88d2d0f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "927a2458-f0c8-4b67-b08e-792107826101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7121f75-1b8d-4d39-89f7-9a21376b0c51",
        "cursor": {
          "ref": "54fd027a-4766-4fd2-97e2-52ef12f4394b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c8cbc236-53e5-4de4-a86a-a7d1c5436dca"
        },
        "item": {
          "id": "c7121f75-1b8d-4d39-89f7-9a21376b0c51",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "31d7a34b-7784-4178-a9a9-e875b9aad300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8553b048-f401-4265-bb38-44359278e09c",
        "cursor": {
          "ref": "f1377869-075b-4437-9d4a-9c12fb2067fb",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3bcdc4c4-9d7d-40d8-80ff-90510a9bb418"
        },
        "item": {
          "id": "8553b048-f401-4265-bb38-44359278e09c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "045f6c02-e8b9-4e41-a410-e41f35ef7072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787d25c8-c4ef-4bea-91e9-ed2b916e034e",
        "cursor": {
          "ref": "5572aae5-bf13-4dfe-8595-27ba7f6a46b8",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3325278d-d3ea-4953-9d0b-cfc4d6b0612f"
        },
        "item": {
          "id": "787d25c8-c4ef-4bea-91e9-ed2b916e034e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "09acc23a-75c6-4312-a13e-e9d9ad0d1fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3efcbd3-aa1d-4f4e-ace0-7e205d22b425",
        "cursor": {
          "ref": "9fc0cbce-9775-4954-90b0-7d96960d79f6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2a757673-ebff-4dd6-8700-314304117769"
        },
        "item": {
          "id": "a3efcbd3-aa1d-4f4e-ace0-7e205d22b425",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87333732-7107-4c4a-966b-cce3bd5ba9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4889cd-c48c-4edd-a9ac-2571580b3f1c",
        "cursor": {
          "ref": "5cbd7ae2-8777-4b74-9632-70088fc7e589",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "903d6146-8627-462a-ae39-53a020441d73"
        },
        "item": {
          "id": "0d4889cd-c48c-4edd-a9ac-2571580b3f1c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "865a9041-4d7e-4733-83d5-a49577f4010c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331c434b-3431-4ac7-8bf2-9a51ccae1ed3",
        "cursor": {
          "ref": "3fd1bc18-51f3-46fb-ba93-604c81658400",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65821842-4ef7-4221-9f9e-626dd1538985"
        },
        "item": {
          "id": "331c434b-3431-4ac7-8bf2-9a51ccae1ed3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "23d40a95-dc88-44b4-8063-8a935814baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d094eb5-0d71-4a56-9d29-4c637343d95e",
        "cursor": {
          "ref": "5c173954-3e79-435b-8906-c9c4abc7ec55",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0773aa3a-442f-4bab-ad8a-9383b100991f"
        },
        "item": {
          "id": "7d094eb5-0d71-4a56-9d29-4c637343d95e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "410f2dcd-7ac4-495e-97f1-4e324c50c289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1f21a0-98ae-43e2-9727-c0ef4c95a15f",
        "cursor": {
          "ref": "d71cfd35-24ab-4446-9315-29264b4f942e",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "330d55f2-6e27-4135-9bc6-fb6cb0bcb97b"
        },
        "item": {
          "id": "1b1f21a0-98ae-43e2-9727-c0ef4c95a15f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2f88ac58-8e66-4693-930f-2a63f4210156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff4bc1c-c055-410f-bbae-7f2d7394bd09",
        "cursor": {
          "ref": "aae9345d-1aa6-4313-9975-816272fc8cc2",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e1d7aa49-cc56-4a06-a057-7a369b5b2701"
        },
        "item": {
          "id": "dff4bc1c-c055-410f-bbae-7f2d7394bd09",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2d1c0e2d-52ce-423d-9754-05a964c50d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3a11ec-2de3-454c-9c31-5c518cf1ced1",
        "cursor": {
          "ref": "b9e708a8-8ec8-4318-966d-7608e5f4d8f7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6a7b9556-bcbc-43ce-aa8f-516127a29a9d"
        },
        "item": {
          "id": "2c3a11ec-2de3-454c-9c31-5c518cf1ced1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "945993b4-64a4-4296-acc2-bb6fd2cf00d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eee4310-698a-414b-9c27-3fd302b86d3e",
        "cursor": {
          "ref": "1c1194a4-6afa-4af7-bc76-1ce7d6d81611",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3006c953-f72f-449e-92ce-9f1bcbbb430c"
        },
        "item": {
          "id": "5eee4310-698a-414b-9c27-3fd302b86d3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "62a1afa1-d04a-4ba0-89fa-49255c40d781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3aa98a-d337-42dd-98ff-d4614db89a94",
        "cursor": {
          "ref": "b30b0272-d1ea-4906-9bea-d017b62f25f9",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4ddb74e4-4e7e-46ed-8671-c65bd18bff53"
        },
        "item": {
          "id": "ef3aa98a-d337-42dd-98ff-d4614db89a94",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e6763ed-a994-426f-b020-f8a2b30f373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b556d-233a-4bd1-a2bf-96d1b9734d3b",
        "cursor": {
          "ref": "7086ec92-822e-44da-96cd-48293b93b19a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "87ab14dd-26fa-437f-a85e-ded8ca9c2352"
        },
        "item": {
          "id": "460b556d-233a-4bd1-a2bf-96d1b9734d3b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0adbd844-5547-4e86-ae0c-9d3049a2acb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88de1c63-e738-4ee5-ada2-5495fcf2855f",
        "cursor": {
          "ref": "11731c20-9892-4fe7-86ec-e88d1eb5d04c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b22440ad-14fe-4da9-8c79-339b29384e4b"
        },
        "item": {
          "id": "88de1c63-e738-4ee5-ada2-5495fcf2855f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "987a7426-0cb0-44eb-b30a-94c2db7f5e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e694ae-93c7-4a6c-8a7f-42f6abb3ebfc",
        "cursor": {
          "ref": "c7a60812-8d7d-4356-ae3e-faba84eeff7c",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b495f68-e63c-44b4-a367-ecf6aaef411d"
        },
        "item": {
          "id": "71e694ae-93c7-4a6c-8a7f-42f6abb3ebfc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fccd7979-f955-479d-96cf-5d416f76f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e23e77-1126-4a37-b3fe-95e405f8efd0",
        "cursor": {
          "ref": "789b5985-21f1-4d12-b8e9-a7af49608d24",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "39b1e77f-7939-45de-9f67-3dbefd818cb3"
        },
        "item": {
          "id": "52e23e77-1126-4a37-b3fe-95e405f8efd0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99ac79db-98f7-4dd0-a181-b0065d8c8b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c0846b-8e3f-4d45-a14f-535bbe2a14e5",
        "cursor": {
          "ref": "f945f83e-96af-4d38-89d7-cd7a0abde3c9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fd792cd1-26d8-480c-bc9e-0328a5f6320d"
        },
        "item": {
          "id": "b7c0846b-8e3f-4d45-a14f-535bbe2a14e5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "760d76d8-9fe6-48ef-ba10-ed710b397c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15216516-f5d5-4e2e-b5bf-e14cf39130fb",
        "cursor": {
          "ref": "27a72827-9882-4f23-ad02-4481891d6e00",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b7bfc45a-25fc-43ed-bc2c-573a86c9c434"
        },
        "item": {
          "id": "15216516-f5d5-4e2e-b5bf-e14cf39130fb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "90915426-d253-4a3a-a7e9-2d6b9bd77802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f4b4e-521d-4a47-bcc9-947eadaa9c96",
        "cursor": {
          "ref": "7e578e77-e982-4e88-9a79-a7ab3742d8b6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "92e16244-b6c3-4844-ba07-1ecf69df9ed0"
        },
        "item": {
          "id": "369f4b4e-521d-4a47-bcc9-947eadaa9c96",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f3270a95-af11-4ef6-a05e-d92d26a387ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1897d6c5-4f2a-42b9-aadc-4b88dc337cae",
        "cursor": {
          "ref": "5f42e5c1-1d12-4bcb-9c1b-36ef7f8467e8",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d0447883-c4b9-4c6b-99f2-8d3ccbdb3927"
        },
        "item": {
          "id": "1897d6c5-4f2a-42b9-aadc-4b88dc337cae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2945869a-954b-4173-8da9-6ca15174e5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4180c12-1008-4148-99f0-162971f6ff3e",
        "cursor": {
          "ref": "208408c8-5263-45cc-a3db-75a73ab37359",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dfa00215-1522-425f-adfa-4600b3b068b3"
        },
        "item": {
          "id": "e4180c12-1008-4148-99f0-162971f6ff3e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ceb04eb-50c6-4a8a-a538-cf5642da4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0392f2dc-ab10-4d7a-a5ff-fb3a378d720a",
        "cursor": {
          "ref": "b9452a4e-97d5-4733-bf45-d792407ed622",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "563009fd-15d3-44c0-812a-940002bc37a9"
        },
        "item": {
          "id": "0392f2dc-ab10-4d7a-a5ff-fb3a378d720a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8b549147-bc01-422f-aaf6-c3452e20cc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc027c5e-62ca-478b-96fe-e367341ede8f",
        "cursor": {
          "ref": "eae2532f-f19e-4e7b-aba8-8505f93c78ca",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f57cbfa0-b3ed-4091-a441-5666f3ac271a"
        },
        "item": {
          "id": "cc027c5e-62ca-478b-96fe-e367341ede8f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "27a33181-80b8-49ca-850b-ad284fe8270a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a6c644-7f70-4b03-8f05-2e60a76b73c8",
        "cursor": {
          "ref": "902b198c-75cd-40ec-8f48-070cf5130a84",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c2419161-2af9-4a57-917c-ade856c3c5a9"
        },
        "item": {
          "id": "81a6c644-7f70-4b03-8f05-2e60a76b73c8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7c5081de-2fe2-4385-8b82-58531fd04d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3110dc0-6f51-45f9-956c-a3dbc5025083",
        "cursor": {
          "ref": "69bd54d8-1448-44ba-a314-81e028e9cc78",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f1a4689d-d94c-4033-919c-31a36fa5008f"
        },
        "item": {
          "id": "d3110dc0-6f51-45f9-956c-a3dbc5025083",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2e2a27be-3c4f-49f3-a931-eeeb86977973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c7da4d-a197-47e6-b68d-5b08bed8625e",
        "cursor": {
          "ref": "e13d2a0b-dcab-4570-b705-4895c52f6e93",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "88d3434a-cd0e-49bd-a61e-e5036939f722"
        },
        "item": {
          "id": "20c7da4d-a197-47e6-b68d-5b08bed8625e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dc2a5142-219f-4b18-9571-c1dadcc6b549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a642e0-784b-4822-8894-aba348526fc6",
        "cursor": {
          "ref": "7c8a002b-4dbd-4d51-9e9a-1e658d90b770",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "08e9de08-4494-498a-89e4-8715ac0df056"
        },
        "item": {
          "id": "d2a642e0-784b-4822-8894-aba348526fc6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5749efad-63ab-49b2-8a5a-6c2ad0e300b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e1b6cc-d7ea-488b-a63f-53cc227f5c4b",
        "cursor": {
          "ref": "d469ee04-844e-42e0-8cbf-987cd0bc98dd",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e178b8d2-db66-4546-889c-b195bce6ec36"
        },
        "item": {
          "id": "24e1b6cc-d7ea-488b-a63f-53cc227f5c4b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b4e5b5cb-c60a-420e-9970-e12d6348cb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e382194b-20dc-49d2-b118-f9a26dc21404",
        "cursor": {
          "ref": "ddadff4c-18df-4301-be46-fe6039e2bb9c",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "80ef5275-4c1a-4bba-8a7c-cdbcccea3f01"
        },
        "item": {
          "id": "e382194b-20dc-49d2-b118-f9a26dc21404",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b32c605-01e1-4d8e-a4e9-daa8dd799514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb17eab3-2986-49fe-b6e9-362077972148",
        "cursor": {
          "ref": "51ead72c-dc16-4024-806f-19cd0aa58ae6",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5a41bcf9-a37c-4cc2-9065-88cb1a57ec95"
        },
        "item": {
          "id": "eb17eab3-2986-49fe-b6e9-362077972148",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e345987a-07f5-4e05-91ea-269ed7bb1105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca22d502-df90-42ff-9188-ae031b4bd782",
        "cursor": {
          "ref": "7919547f-2547-458b-8a1c-5f3d4cdddc59",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "107dfa55-a5f4-4986-aba2-42a154ef6d3f"
        },
        "item": {
          "id": "ca22d502-df90-42ff-9188-ae031b4bd782",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6df6309e-6cdb-46ab-b836-5c90e3446f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a699c2-2c77-4da9-a5e9-aa607fb2e837",
        "cursor": {
          "ref": "97c583f3-de7a-4e93-8866-5968c734c7a7",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "19ca5421-4dec-45ee-8dd6-a5fa495349c1"
        },
        "item": {
          "id": "f1a699c2-2c77-4da9-a5e9-aa607fb2e837",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4f1f31f1-0d68-41db-a849-30b04e48e240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33eebbd-e33c-4920-a5e3-0e7dd76b9b01",
        "cursor": {
          "ref": "06c6d64b-fa61-41fd-ae38-d59c33583174",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1788eea5-2a84-4b92-ac6c-4b6879a4858f"
        },
        "item": {
          "id": "e33eebbd-e33c-4920-a5e3-0e7dd76b9b01",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "41204498-9f93-453b-aa68-330daab4b660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07c0ab8-ce83-422d-94ff-df10a3f291e8",
        "cursor": {
          "ref": "1f907ccf-b9f7-4997-9e77-41be72bc35a1",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f8fe2f93-9553-44c5-8911-08724dedb177"
        },
        "item": {
          "id": "f07c0ab8-ce83-422d-94ff-df10a3f291e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0f7dd58e-636b-4800-81b6-6eb77db67721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06920405-fa2e-48f9-970d-495c9bab34dc",
        "cursor": {
          "ref": "3f207606-96b5-41d7-9ba8-1e0bad61a550",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "79cbbdf3-903d-4e1b-a0e3-0e367f9b2852"
        },
        "item": {
          "id": "06920405-fa2e-48f9-970d-495c9bab34dc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "528146ab-8de0-4277-a8e8-6cdcba3e3757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c806d00-3a5b-4f2d-91ec-c5a425e26274",
        "cursor": {
          "ref": "5a62f23c-cdad-4fe1-b495-e9e2aad13d4a",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "34aebd95-5bda-4bbb-b229-5aceaa2c6e0f"
        },
        "item": {
          "id": "3c806d00-3a5b-4f2d-91ec-c5a425e26274",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c25d1e5-96ec-4d4a-b205-9961602756cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b4c793-6572-491b-8ef9-6a1aaf463574",
        "cursor": {
          "ref": "3c04db07-0141-4ad4-80f8-29ff78f65cb9",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef62c3c7-7dc2-4a5f-9a26-04de3e3ed2b7"
        },
        "item": {
          "id": "c6b4c793-6572-491b-8ef9-6a1aaf463574",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "978225a9-3a91-4fe8-8d0c-d98f4b5f021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f46438-2ca0-430f-a677-960faac596d7",
        "cursor": {
          "ref": "eba4d11b-5279-4737-94d9-4eb78b521eb7",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a38aca2e-3079-4eb5-ba57-2416dfc1de17"
        },
        "item": {
          "id": "90f46438-2ca0-430f-a677-960faac596d7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "57437d18-d5f4-4333-83e2-1c425d5afb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea591e-7750-4445-bdd0-a32585f095fc",
        "cursor": {
          "ref": "0b9fd9a0-88d1-4461-8870-3d70bec28af4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "138bf3cf-3c6b-4a98-9ebb-a51341afc74b"
        },
        "item": {
          "id": "14ea591e-7750-4445-bdd0-a32585f095fc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca660d61-68f0-4e60-9883-9dbd7ffdbe39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc784e8-49f7-464e-829d-96f210d3394c",
        "cursor": {
          "ref": "2a5c1782-12ad-4298-a75b-a0875361a5a3",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "28b2de5e-65ac-4f9a-8350-0deebf5b482b"
        },
        "item": {
          "id": "fcc784e8-49f7-464e-829d-96f210d3394c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5da1389e-2eb9-4b3a-b7b6-8565d2066596",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 321,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594c99fe-2545-46ee-bd5d-2bf94c3230e8",
        "cursor": {
          "ref": "02ee31fe-cece-4d66-920c-34cb4d9f9ce5",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1d781f1e-22f6-4d65-b78a-580f3899d4c5"
        },
        "item": {
          "id": "594c99fe-2545-46ee-bd5d-2bf94c3230e8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0886620f-eefb-40fe-9796-80457a578366",
          "status": "OK",
          "code": 200,
          "responseTime": 503,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a545f0-abe9-47cf-b285-b128764c0ab8",
        "cursor": {
          "ref": "74ed0e16-5de3-47e7-ab8e-d78e0aa2a8ca",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "793e16a6-155d-4f4f-a142-38991696fe4e"
        },
        "item": {
          "id": "94a545f0-abe9-47cf-b285-b128764c0ab8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "684d181d-2bab-433f-808b-6f2d076006d5",
          "status": "OK",
          "code": 200,
          "responseTime": 2208,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "813006a8-f8b3-4be7-af4c-0c78c46cc957",
        "cursor": {
          "ref": "75491f1d-e8c9-44e5-bb3f-02aace55abeb",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3d479c69-65b2-44f8-bf86-4367eba7ea5d"
        },
        "item": {
          "id": "813006a8-f8b3-4be7-af4c-0c78c46cc957",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f2504068-1023-4a24-9608-0d622fa8eabd",
          "status": "OK",
          "code": 200,
          "responseTime": 1801,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
        "cursor": {
          "ref": "2192dc7a-eedc-4f42-988f-b983e6fb5619",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b61c38f-d0fd-45b8-85ec-e98e8ba9d144"
        },
        "item": {
          "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2aee2f6-afa8-4ba0-8fd7-a757aedf8710",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
        "cursor": {
          "ref": "2192dc7a-eedc-4f42-988f-b983e6fb5619",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b61c38f-d0fd-45b8-85ec-e98e8ba9d144"
        },
        "item": {
          "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2aee2f6-afa8-4ba0-8fd7-a757aedf8710",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
        "cursor": {
          "ref": "2192dc7a-eedc-4f42-988f-b983e6fb5619",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b61c38f-d0fd-45b8-85ec-e98e8ba9d144"
        },
        "item": {
          "id": "d5230e00-3e54-46c2-ac56-3838003a3f6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2aee2f6-afa8-4ba0-8fd7-a757aedf8710",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471dba16-45de-42fe-a47c-0b0b8e7caaf3",
        "cursor": {
          "ref": "fbdff3bd-0527-4131-9c26-8ce10541a942",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "08de8beb-9d76-4d54-8c0f-ec7d7a8afc08"
        },
        "item": {
          "id": "471dba16-45de-42fe-a47c-0b0b8e7caaf3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7d759f50-e351-4bf8-9965-958324d293db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 685,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81410ff-0816-4968-8455-232b3a23dfa7",
        "cursor": {
          "ref": "2a6bb8f3-7651-4de2-9760-59b7c3d9f45b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61643fe0-952c-48cf-a52e-9c9f6687327c"
        },
        "item": {
          "id": "f81410ff-0816-4968-8455-232b3a23dfa7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58771c9c-0e15-4f40-9221-95175aa9a5c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81410ff-0816-4968-8455-232b3a23dfa7",
        "cursor": {
          "ref": "2a6bb8f3-7651-4de2-9760-59b7c3d9f45b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61643fe0-952c-48cf-a52e-9c9f6687327c"
        },
        "item": {
          "id": "f81410ff-0816-4968-8455-232b3a23dfa7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58771c9c-0e15-4f40-9221-95175aa9a5c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed750a1-0329-4f1b-9988-8d5db82eebc2",
        "cursor": {
          "ref": "390473b6-18a2-42fb-b296-f9ff6317605e",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "77989c45-8f99-4721-b62d-acbf863b8384"
        },
        "item": {
          "id": "bed750a1-0329-4f1b-9988-8d5db82eebc2",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "10d33801-7bc3-42b3-a82e-6579baef64c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 977,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb9e3c3-d520-463e-b5e2-695efd79aa10",
        "cursor": {
          "ref": "ff7369e5-b1d9-4bd1-aad3-a8bc5dc3a024",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e3b970fb-f260-449d-961b-85b4f41658cd"
        },
        "item": {
          "id": "5cb9e3c3-d520-463e-b5e2-695efd79aa10",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "609a7be0-8172-4b03-84f0-b8e9c6461b3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb9e3c3-d520-463e-b5e2-695efd79aa10",
        "cursor": {
          "ref": "ff7369e5-b1d9-4bd1-aad3-a8bc5dc3a024",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e3b970fb-f260-449d-961b-85b4f41658cd"
        },
        "item": {
          "id": "5cb9e3c3-d520-463e-b5e2-695efd79aa10",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "609a7be0-8172-4b03-84f0-b8e9c6461b3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f12a863-6d4f-47cc-b02b-1ae899a869ca",
        "cursor": {
          "ref": "364d7892-223d-4f8c-8f16-3aa8610a6a62",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "51724156-16d3-4e7f-9934-6babc03b7f2c"
        },
        "item": {
          "id": "2f12a863-6d4f-47cc-b02b-1ae899a869ca",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "69b3fbab-2959-4923-93b0-5f4f797e26a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}