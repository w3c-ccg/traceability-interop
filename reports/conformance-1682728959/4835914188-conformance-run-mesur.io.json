{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ffb21095-aedb-4187-9fe6-e8d0f30e466b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bb5fad37-9550-4b9a-a973-d0f3148e7ca7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d0e6025-61d8-444f-84b1-53e729dc809d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "efc5b466-49b4-458c-9eba-b2aed39889a0"
                }
              }
            ]
          },
          {
            "id": "817292cb-2de8-41dd-b705-65c7e9727212",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80062167-dd7e-4f6e-a85e-f0e2ffb03589",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e482159-c367-446e-ac2a-f7a7aaf0f98b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "375c9cd8-93c1-4d47-b85b-c73352919282",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70a448ef-1f7b-436d-ba65-533aefad1ba3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "806600d1-2c2a-4119-a8cd-bcd63cc1de7e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4ee8ff1-54fe-4352-9e20-734e41fbdb8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc49527b-fab3-4292-aeaf-6fe76baf9110"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48ecdeff-1305-4c82-ae0f-6d8f58a367cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a858b648-c11a-4630-a76a-39c8e1e208e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b4d61d1-288e-4b2c-b5c3-5713be58560d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27b971a0-28f8-41e1-9081-c208967c7fa4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ec83685-913e-4a9c-ad20-04038034ce40",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0706c3eb-0d4a-4d39-8bdb-c707ee27ef39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bdf6c33-0273-4378-ae48-446c65baef8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d1cd106-90a6-4644-a86b-097492605df3"
            }
          }
        ]
      },
      {
        "id": "618e39bc-76e1-40f6-9431-9051da06575f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "de82ad2d-9034-4462-a6b5-a9acafd15ce5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0550456b-f124-4b35-a52a-6484b6cc4921",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9cda2af6-a973-42de-8028-b1d1caf991c1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2451e4c7-b681-4de5-9ee9-e748f450ef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bd3d61f-3820-4a4c-9c57-403b73944c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf8db3d-c482-461f-9ff6-19f897424bc3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d659a05-9c5b-4732-ad12-33de98ade9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5de0971-a8bc-4a7b-8755-7e4e7c99efe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e764ae01-9e4d-42cf-acb5-82b612e6b666",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4786fa61-f95f-44b3-bbc9-210cfd4120fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40a759ec-42f9-4534-b277-991ebf8a9836"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f2fd440-f949-4cf2-a307-bb4cd81eb329",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72aeada6-bd7f-4629-8d31-2138575349b6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399a20d5-b466-498d-9723-4991e995002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78bc11cf-a592-42a0-a305-05f6687f7991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1d44c1-a152-4a47-87b3-3266107c474e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054933de-018d-4635-a5b0-58fda7229723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942db59c-8e1f-45ec-960d-67c5a9c4ba11",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449016e2-e48f-49a0-a74e-ca13cc3ebdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d54178c-bc90-4451-a789-e15a90a721a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0476c8fc-68cf-49de-8cb9-62e1208da0b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0c5877b1-4388-42cb-9898-79f43050fcea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a192c560-cb63-4770-bfd6-fefdd10cc560",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b73e2fdd-30aa-47a2-a72e-42e558053818",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22f0c4e2-0b51-4afa-bdd9-e8cf4b2a677e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f8c230b-f8e6-4668-b1b9-08257856b677"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60f7fcba-7ddf-477f-b6e7-57a9758431c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6dcbef5d-2096-46bf-9e4e-165f1fd22513"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90b69937-5848-4b36-873b-957942eafbb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae8a6bd9-b572-4c73-8a9a-1bedeabbbf2a"
            }
          }
        ]
      },
      {
        "id": "f5f9a05a-a640-43f4-95db-f152ea412283",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6becd455-a965-42b5-925c-c53b1659b56d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94827b82-350d-400b-a295-90398f9f30c8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7717ba21-5e20-4df7-a800-e65321e9966b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4727cc6-e1ec-4e97-bfda-0f395a265faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac241e94-6285-499b-b0ef-e65d609fb55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48fc238-e334-4996-bc50-db0a444b163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7f0d488-884f-415b-b4dc-2ad9b970eb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2525ceb8-4b27-4f2b-909d-dca053d3db53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34410ce-c6fc-415d-90e6-20c6972c0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c143e561-c5b3-480c-9adf-35ea269a5399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9e796a-85c8-4e52-9ed7-20daa35f83b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4ad0828-cae5-4af3-8a38-b44f913615cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b2a3b-2281-4c4c-8557-077311c5991b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936b62bf-11ac-44bb-8dfc-ae5649cc6f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec19622-10b4-41c3-b1e0-feac6baca99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe8f519-3f11-41b9-a688-9b573db0e52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6394fc6f-64ea-43d1-94b4-71c8a77bde09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db17634f-b97d-4581-83c0-14c126cbc7d3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce69a53-460e-486e-91a3-976efc63098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b660379d-8650-4435-b870-a49fd4e4ed8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1733c5ea-8d66-4fe0-a392-83bb83f67cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a49c70de-8678-4460-8214-453aa397123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fc74f7-dc80-409a-8a4d-26dd592b3d99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1055a4-4982-4c09-8dcd-16020fd6e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e462bb-db51-4cc2-aa12-35e77e7fc195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90410254-5964-41e1-b986-79ea047bbe85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f08fefde-29e0-43ed-8cdc-b7d57c0ef34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db148ab-68fe-4ad9-84fd-710978b054b2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b06be9-9532-4446-b914-0ea7fb170dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db55d625-93dc-4ba1-b0d0-c9f054fb8ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc3d448-37f9-418b-86a6-317e7692ee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95a60def-4132-4b00-a9e6-83b0033b5b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4c5f95-5366-4877-abb3-008a9749d917",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fd572e-d981-4492-b1ae-65c6ca56fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cb64a5-bc0a-46d9-a6a0-094771e52d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e5e42e-1df5-419d-b54e-dacf56041ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6959f2ae-7867-48a4-8529-8029fb0330d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91305d0-6ab4-4bf1-b98c-10c06a6883fb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bd80f6-a7db-4258-8408-f52a6b6bc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055c45ca-2b7b-4d1b-9a2b-bbdb4e5b3b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027797a7-73ac-45a9-a3f0-7048cb2b0a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b83258-73bc-4ab6-85a1-6c9d1a989f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78d89a8-3e20-42dd-85b8-4d2567d730a7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20547b92-1d8e-409c-bf24-5b4431477611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832fc68b-b760-45e6-b44b-49825215e1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b9704e-d57a-45e7-b102-1886189b38f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac9f1c97-f9f2-41d6-ae41-913f274bf9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce079202-baf5-47e5-b1fd-f5b91c6a5356",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958808d1-ea8b-49f9-8fa1-dec062e32cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3fc356-d905-495b-b968-bb88d8d17be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba66e9-68c8-456b-8088-7914d2f869e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b399107-426b-4e55-a72f-f5d1b9cd8b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b0924b-26e9-4532-bb53-1d11a247b812",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e053749-940b-4a22-984b-2c2880c9f6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce644d12-c140-41ad-86c4-ff960bc9711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bec5e8-0f6b-4b7b-997b-376cd9a57529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1980e81d-e701-4fe8-8154-a71ff332f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53bf618-59ac-4c6b-94e5-b512cb1ee508",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7b1587-bc2c-426d-b705-74b1d88ffa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b9f24b-dca5-4f40-80e1-2ac53b426308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5929a2d-2c46-4659-9faf-f04893e623ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8942d125-3e5e-4a27-8f98-b34eac39cbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6042959-f0e1-4050-95a7-a8912d44b04a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74462a92-a414-4383-88c5-d33a70b4ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf013cb-1474-4aa9-a022-5bf317b61eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1a0f75-0279-454b-8492-f28cf1887a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb9a9a34-7522-473a-937a-545d539a0c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e57954-c274-4502-99bc-5118cd94246c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4c466c-3aa8-4651-ad91-ca8d70fb9e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72705d6f-23eb-4e88-a738-4db352599ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cddc091-9a1f-4f91-bb29-c4c2a5fc5df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "326e8e13-7ef2-42f3-8434-4c8e2542f010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96042036-ffe5-4bde-a145-dca6b0ba7502",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634d8a51-96d7-480a-b915-d5cb155dff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9bad2d-efcc-4d51-a40b-6b6b0734d14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f2bfc6-0b11-4421-850f-43fceb41636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "547be02f-6ae6-4136-ae1d-0dc95aa5e7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cec4d77-b273-43d7-a5a4-5da92329e794",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd57f709-2380-45dd-be73-d0d8ed790090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434f9d99-d46d-41e5-93e5-49eb0bb767ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce6b1fc-b28d-4c7a-b89c-9b4faa75d1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d81146cf-30ff-4995-8ad6-c6fd3d0c15d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439d8a8c-0d00-44fa-9d56-8094fc6b682c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaf6df7-b281-40ee-8e5a-76b4aa8e4629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8776820a-e322-4be4-9646-b8d5f8090219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bab9f4-bc6b-4647-a748-c0968f328af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fbf3b71-b553-40ad-a17b-9d00b6ffad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de4197d-c21b-41b8-bb54-6d0ab274138a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07eba472-6ca4-49f5-883d-1725aa419e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55088b3e-6a75-4a54-a735-eb87e1f53704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55485c9b-7357-4756-8718-9760b41ec515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e5ceb9-3f69-4ec3-aa0b-152799557634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b197ca8-8eb7-4f71-acbf-bf7b03ff1c7f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdfe831-31a8-4132-a5a3-d2f907410ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b409dc17-629f-4bcd-aa26-a085b55a1925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1235a31e-57eb-41d1-8c35-1e4e869fbd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f3e30f-5220-4489-b28e-315e24dc167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e53ea-f9d6-4531-a7ca-5424ab841ea8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4c02c6-c066-49d6-beda-97c150b26ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918203cd-675f-42f0-81ee-986f6aa824e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098e7bfa-3437-4459-9792-3c91aa3a5d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb8d58e-73e2-46b3-bf6f-4b6e10aff828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d953fd74-a30a-446d-ac97-36a1ea9660cd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7a4439-6860-4028-84fb-1b45bc234b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fb482f-8ba4-4b99-9b62-993182e668a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae163e6-daaf-4a80-b8e2-8c595725c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8473bafb-1610-4645-b07a-34e1d19f18a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e169a13b-2581-4504-879d-30acecfff72c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d586a8-681f-48d3-88b0-8975c63d3d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b49a69b-8498-4802-9623-55d1e4cb76ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778c8e2e-a56f-42a7-aff1-e4c9da20bb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bd512d-bb2b-4efd-8ee2-67e8b8cfdff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12dad0f-c6d2-44ed-b6f4-c5aac17ac6f6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2c2434-fa5c-453f-a080-d3f445f26c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cc737d-7317-43dc-9989-064aadf108fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60be05d-12d5-44b2-8ad2-a4a14ef4bd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd823a7-b2b5-41c1-b128-3991564f7f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8756054e-cb42-4522-9423-85e5dc5c4ef7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a99dc-ca3a-4464-b345-04149f54f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cdd889-82c6-4684-abf1-dc7df1d1f926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0257163-4092-4438-b40d-0e196dc9e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c67d97-7a37-43f0-9ee1-a390d428d947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b15be8f-541f-40f7-9ff8-c81544465769",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f776355-5c9d-46cf-a0cb-afe09e4cb0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08349fb-9811-4e55-a3c5-a51370f378f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17758258-58e0-43da-bfa9-4300b7974116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbd1554-1c66-434d-a338-96cebee3a255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbfd0d4-fc13-437b-b967-216b51f12379",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7be808-34c9-470d-a82e-db568d0db00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b447a5-9a93-413e-9504-d89a2fcb416d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e72ae7-1855-4d57-8237-bf3e1bb4ee26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d64f019-a45e-4106-9b1f-d36bda0123b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874585e5-9eff-4ce3-b036-95e55949522f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82e2d24-1473-4f36-9739-dba05e384e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6368d1-c4f7-420c-9119-6d9f01a3c61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d262ccec-5bad-40e2-ba4c-78361850787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c07aaa-ccca-47ab-b042-7c788496aff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34390733-3b11-4579-a657-8ecb67b5da57",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e56ac3a-4414-4b09-81a0-f9bfeba657ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aa659c-c8c8-4975-9354-34fd1716bfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4272106-d7fc-418e-83e5-33e511127db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a169ea9f-ce14-4381-8e0d-d99600ea5499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc49134-b632-4146-a343-e017a7211919",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9e344f-9753-4b1b-bfd1-64c94525ee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106db0aa-3e3a-4e04-a13f-94485c7485ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a475e02-4005-4276-bcf6-21cd2e052c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f54fe87-ad28-48ec-99fe-72e22bae5b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84136e4d-b95c-473a-9627-3ff886bc1cc5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0276618-005c-4534-99f6-45e850af19e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1147636-6e7c-4ce4-9441-4a8ebbeccc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5bac2a-24f6-4ae1-b063-3b63c1d36e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6cb460-c075-41ef-b510-305694aa2826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31719d9-cc1e-4589-b235-19f32214dc00",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847c9207-5681-478a-8ad8-5b05e8be1e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b57c7f-9301-4e36-81f3-e7b5cf9aa00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874d6b32-4c3f-461a-b317-b5a55a5ebc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb6eef6-bce6-47a7-8a17-f090a11238cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d18ffa-3d62-4195-aa78-7b8e97a5fc38",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd26a3da-6212-414a-8afd-384ac10bab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad8466c-2828-484a-8d13-38ff8da41ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66564d4d-bb2c-4002-b819-4225e0979c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de02d15-dc28-43ef-ac53-ce0a4c1359e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995d2965-21e3-489e-9ae6-aa28d2bd6c34",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e603495-30fd-4f78-af53-7a2c7b696c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e1debd-acc0-48d1-a53e-26120470e331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994f24bb-0cdf-4742-9ddb-4ec5cf51abfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ba2aa9-272b-4f68-a773-f01372ad3543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dd4f31-eb85-4a76-a9b6-1b7c8c8eba48",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bee59f-de76-4762-b202-a290c68b68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea6aec7-5a2f-48c6-85ad-2ad0d135b7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c24e2e-527d-4bef-9421-faaa392b58ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a21d8d2e-6b6a-4e16-8812-f2fcc3b681db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ae0f50-56d5-44f8-a3e1-5cb60fa998b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5bfb97-2dd3-46b4-b9e1-d1e580910deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a358c213-1c1f-4073-8757-b27934369313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05151e6a-cf79-45a4-9451-501ac6ee76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "453cee10-251e-4b30-85e7-74c02dea312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc883f7-1837-4223-b1d0-eb26f0abc342",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c2cff0-a1e3-45b9-a2a4-dbe590cbfeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc228636-e57b-4728-84ef-0012e4cd0cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bff3db-762e-4f4b-8605-3c690c40b156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87cc78d8-9d69-4e5b-89dc-0fc5495618e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c38aa8-ede9-4a6a-86bc-c45a8d5f2d09",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e36d38c-3a5c-4875-98a8-376ae4c0b762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8555bc-b504-44d4-8afa-dc2daf31997d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c9044d-a303-4c3d-9e61-63bc651c8c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09fb790e-8dc7-460e-820c-9bab36c082ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca90e149-f225-4b4b-9813-1309c6d54986",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eee1b3c-a820-43f5-83c2-04175269a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70988218-a017-4624-b526-7742a8794c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ee4953-38d0-4904-9248-66343df61081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f43414-35c9-4693-aff9-8f1d7f5d0a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8781ee61-3b83-4203-ac4e-d9c1810f0d31",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d18311-1433-4468-bc89-871393259856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcce4c7-d58f-49c6-83f9-8bd5a7cd6a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9d1095-3794-4617-927d-8837185fad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f149c8-68b3-4230-aa2e-76a51e5e46bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6d1113-a112-4405-961c-3863fa9149be",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080fab82-019a-4f8c-bd81-8a391fd3b98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795e399a-d14e-4af3-b90d-9fed118f6a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa37b851-399f-489a-9440-4f566e97f67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e63b94f1-47cd-4043-9ae6-7df6e375d70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cba49f-a2f0-45dc-91ff-18c8c08402d2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4426876-8e3a-40bb-9a16-fef6ae22e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab79b44-2e2f-4288-b720-3a79f36d5fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6255bb2f-5804-4520-a8f0-85d0cdf3cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c370745-9cbc-4214-abd1-c3304d1c8383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e885849-cb01-4e87-8fab-77db8e909b4c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f7347a-3820-41b8-a944-22cece5e7df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3413db49-00f6-42a8-a3ca-1a38a2861e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16abe649-c4c3-428f-ad64-1347566f5a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9e7711-782a-4a2b-8a22-89a270021e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da8991c-5462-4734-abe6-c64b2a1eb174",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e49a5ff-72b3-4993-ad3e-cfa072ad3b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2412040c-73d9-47c9-9411-ec49038a2ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe747a-3033-46d0-b1d8-8070e75f28b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1930aec-9cf3-4efe-bcc8-a24bcf780aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1abc5b-065f-459c-9f3d-48fee8e0fa45",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2531deab-0745-4099-9849-6bc821f7314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f20bb3-2087-495c-ae1e-2c1b927f4ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb37be7-712c-4a93-a813-80a2feb7466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "766e9ed3-5dbf-4830-b0b9-a18cd4ce6603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af750425-5882-4b75-bee7-c94872d6a42b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597c301e-f5d5-4cb5-8e67-e14e31d5d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d11a1-0b0e-4f14-afa1-406ad6c4dd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb547220-8be6-413f-8151-f2cf205d887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40367af2-278b-4d3f-98d7-ad60bdd200c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84b6e4e-eab6-45fa-bfc2-f7a9094c3a9d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8491a358-9a85-494a-b990-7cbaf6147d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b351d4c8-cfa4-474f-8850-44ce7a390e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af5feb0-688e-4771-9ac7-08fbf578076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d32be21f-7d58-4818-98ce-7960d9e145a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd99b71f-c7f7-4bcc-8979-35b354d37baa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a840e34c-54ce-4217-bc74-7b16a4bd27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5083d00a-65f0-46f1-abc3-266110c11643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d2da9-e58a-4f19-b68f-79633b5d4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abca416c-30a1-4f12-922f-6bd2e7ccb45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e77e55c-a4b0-47d6-95be-dcf44d3ded9d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee527bd4-cf8e-4d3a-8a82-a9c7d10af337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda7d38d-e2a2-415b-9a6d-bc9503e546bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabd7a91-d890-4558-8c97-8649b700af88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "794b242f-be01-40d1-b5a5-6b6d3604db52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e9f98d-f37b-4d48-b579-fd07ef6fe7ff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1781395-ac9b-4170-8ed5-8633383b4033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ab878d-2eb8-42da-990f-6a4d81e83d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df67670-830b-4daf-9a8a-51e935b7b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cb1caf-40a1-4bf1-bd72-b1e7fab9ade1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aadc3e-85a8-408c-ab1b-2585a4740fac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b09d26-a008-46a5-80f7-672265e633e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357957e0-6719-4df6-8e56-3a692252c3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c5d12-1230-4006-b0da-01b9a31e9f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab2e4e3-479a-435c-a0f1-4fe2f1da9f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5de3c67-1447-486b-b8ba-2ab818853566",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edec075-7172-4971-a676-8e83d6d4322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4e138a-abc8-4025-8a33-e9cb805e99aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183cd84b-262f-4d71-9052-d7fa4496ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "089a87f8-1da5-4b96-ac5e-f1914b6358f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc63c4-fe68-4ddf-bbda-4a19ce870e33",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82de4cb9-197f-4300-a3ee-4d84c371fd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d274bef1-d96e-40fb-8b57-ab27999d9962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ca116-9be4-432f-a0b4-cf92500eb94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2e21cd-11ea-4528-b2b2-0c405b2b9fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08e193a-70b7-4968-8d98-f811e6bf63a0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b7b7c-2a7b-4a65-93a8-6a43df7b06e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d2fbbc-75cc-45ea-97ab-1e4a39756fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dbca7d-e451-4fa8-87e7-c51555c08e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30e55d5-bae6-4fd9-9625-12a76fa97e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9df2d57-72a7-485d-8f6a-dd4c9ba9b91e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5799f26b-e3a3-4a8a-9fb8-443d763f9ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ad79df-0df0-41b3-a079-b51e55584f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd9aab0-febd-4a15-9d8d-37f30ba5dc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70156312-6c87-43dc-87e0-2fe7bcac3dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7dfb1f-5618-4e59-84fd-e706340a49ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298a8ed0-04ce-4fb1-99fd-2c20615aa194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef19685a-9a78-4c39-a680-49910134c0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a3a158-5ab9-4190-bb8d-90a7e866f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09179a4d-55d9-414d-890a-c43e72632396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6de791-a93d-465a-a66d-02cb940b6025",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1666af4-0382-42d5-9f2a-0ffe10a53d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94fceec-a604-47ef-a900-1a873c558154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6136ba96-a905-4779-b695-6f7fc20c0d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d815e3f4-d966-4ee7-94a1-e71512dfde3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122af4c7-4dfe-4b5c-9b71-0ecf2c4d5ce0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdc3ad4-57a4-4a2f-91cf-38263259064e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2090a00b-3831-406a-8167-4935e14b6ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f019482d-7c8c-4276-8b4b-d55f076ff31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d247e8dc-3dc4-4121-8916-cc342ad83f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8c77f1-86e0-4394-8e22-4c724fa5d454",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddd13e7-a613-4efd-959f-be4cc4e247aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c19168f-d947-42e2-a529-10c9abba5517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3cf768-abe8-4068-92ee-deb8ef99f7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc351658-ea62-45d8-b40b-b63d79f5e64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69abd372-a541-48fc-bcb8-7605bf660ac6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ddcf7-ccdf-4db5-a68d-320662c8ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2092a590-add6-4895-990a-6d268728e98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24ff608-9c08-4ac8-858f-0c9cdde68e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fae69c6-297b-448c-87b3-cf591a154573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7c983b-b499-44fe-a48e-6fc3e62897a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ca40e-18b8-48c7-af93-7f9d3345d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e782e5-9a7c-4122-b673-cc9cc17bbcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f5b49e-f917-4bcf-a481-d200020b8c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aeb7302-ad3b-49f2-ae41-2c18a7dc92e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd852997-d6a7-466b-a421-a7b76baa090b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf21f99-3980-47e6-a564-20773cb40593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b8caf6-c7f0-4745-9259-e9ff4ef4b7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e0af1b-9c28-4e16-8911-5580ebcbb073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d1e10a-3cf2-4cf6-aca0-6ade9da7d38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f88198-e775-43dc-ad81-1fc522297f27",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27695c2-7e6c-4d4c-9c6b-f07be3ed6943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcbde2e-0a99-471d-9e48-5721fb4483b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4268e6-6f9d-4810-81b3-f7686a711370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0f4f93-4b2d-4614-a945-dd086b7f6178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddf7b80-2b23-40b6-9294-bf90100083d7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b209b5e-5cd7-4291-85ce-dcba49e50d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497da49a-159f-457d-a3a1-ca83b6b67e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c884aaf-f5e7-40e7-bad4-0898240f5ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8effb7-fc41-41dd-8ceb-66ee810fa87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17512e9-2d93-4d4e-b1c4-c5230c3d616f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c1cdc7-87aa-48e6-bd43-8ac5efa2f210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e787882c-d92f-47c9-836e-b0068a2cf5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4091b91c-f451-4572-be73-bfb3ac890259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93ff8d22-88b0-4637-93d7-e3acbfb39260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a822596-f94f-4028-9a3d-7c492d7ba219",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49f2803-a12e-4d48-a91a-f76a896a9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110380a5-de07-4a04-a86f-46ce25178776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcc35a9-5a29-4e14-b2ff-1e3427ae46a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d08a5658-b81d-4b3b-9b48-0ea0b43bdd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be770929-0aa8-407e-ab12-8b88e5e35e66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c898bb6a-8625-43d2-9335-9d9ebc1a7b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb94aab4-c417-4f41-acb5-f432cf07be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66f438a-50ec-4231-a294-e0c1be9fe8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed8e522-7e5f-41c8-84a1-041b0527388b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50a6243-fbae-47f5-9f5a-418e6f558eba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e651d9d5-adc4-4e2c-927a-708cd63813bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d06c61d-1ea0-43da-9d34-125a4447ed2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efc2f05-7c0d-42d9-bc9a-858ccba0c131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb286c29-7d86-48b8-9e51-4a682063350a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d796e1-b2f5-4ed9-a449-646b146cece3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25725d9d-5cee-42a2-960b-709dcc66a265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9b00cf-631d-4035-97bb-cc57e265f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116935ac-efd7-4ffb-8150-9eed39ba8baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f586d5c8-c66a-40a2-9d57-e6bf81c67ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e5c30d-2db0-459e-bb05-c5b14cf51861",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fa4caa-3049-490d-8b86-cf900370fb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcf776b-a0b2-4ac0-a8bd-803c37867ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c6255-a964-43c4-8ad1-d192fd680b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8723aa11-72c3-4cb0-bc1c-339bd390bc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8d1e32-142d-4545-b148-5f6a6d698723",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f1ba52-138c-4084-8ebe-96b36efa5193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08908a2-7df2-430f-84c0-7d02abcc38ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717bc92-db8f-4ff8-b90a-0629245df9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4535f75-e947-40c9-90bc-541746d7c490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538ef81-121a-4bc3-908d-d6db5a0eef5b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b010c877-3015-48af-977f-9d48dc8baa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f84099d-9839-46e5-82e4-b1ca84c3fcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa976be2-a93f-4f69-8232-a0f010fb1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c794602c-0bd7-4cbd-afc2-08c48c7bae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae918459-06c7-4206-ad13-01481bb4a652",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c958202-dcf2-434b-97fe-ffb822ae10a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5066e5a-9cdc-47c2-945f-91aa620f4f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ee52b2-45d4-412e-9807-e2f0e45cebd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c1d09c-979e-4f28-81dc-61a0a0f9368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1080d0a-7933-441c-b06f-8fc29755cc65",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329a75ee-e188-4bae-b25b-d10cbe5f68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699b4fc4-3f60-46cb-8d84-626ebb2d78f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09d6700-8fc6-4bac-8eec-fe7e7adadad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56d23993-c64e-4c9c-9de2-aa3e4a26e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83acc6b2-8c0d-4f22-b7e1-5d763cbb8023",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e17bdbd-b17e-4036-a9dd-074eb8e3b6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7791a1-c990-4894-a028-85df62b018fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccad7511-01f0-4bcb-a631-3d06ceea979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3b9d0a-21f3-44f9-82c6-b4ba86e2ae3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d87e0dd-19aa-4880-b378-b5eb66e2e031",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f900d38c-2a21-4a81-a20a-faf9d6134017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d2603c-a093-45d9-bee3-4ce5fb836809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3767fe0-7ea7-4463-b26c-1b02992f6016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23e7efe-1a9c-401e-b63f-c1e47de632ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2c24b5-edf6-480e-934b-823d292bddfc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dc519b-bd07-4c4c-862a-4728ddabec0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd20b90-9c33-4366-aec1-785320668bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a12e08-f258-4544-8f4e-760de0de5f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60dfa0ad-2cd4-4085-854a-ab84928c4659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13ea09c-02df-4d38-964c-a926846b6a10",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1617d0-4a98-4ce5-bcb8-0d76d0e475bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2466556-24bd-4533-9217-6f3708b92133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cead171f-6f57-4bec-87a3-9c4c82201cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9b85d5-c8f9-4200-ab16-5985e1f3a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372e1e6f-2e16-475f-95b9-7d5a41bd7983",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b04b6ba-42d2-4485-96a3-3c96f86c0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fc9127-651f-4103-a957-cbeadfebc63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb210adb-198f-4fd2-8c0f-5f948dd46ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dda6a5-30dc-4468-a19d-598a4bedd79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93387e0e-a59a-4aeb-a023-71d850eeb0e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa9544-0f10-4b1e-9a7c-6d6ffdd0a394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80273d00-798d-41d1-8c47-c4b8f38d8abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e8875d-c7cb-4eb6-aea7-cade84e6d416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf225eae-ed78-473b-9230-de441a9f07b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4403619-9d8d-4ae1-bbae-02ad08743120",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1330e540-2a89-4bf3-9ade-95e7a2a4047d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616feecd-58e9-4318-a07b-c6f00c34989e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3879a6a-8580-44d8-ab48-902eafdebc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5dfba7-b242-4eb8-86da-2ab3f82a344f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaba9ac-b491-4611-a4a1-bb4aa5a919f4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582cf4e0-6dfa-4e64-b7b6-fbc3eed4a336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b29900-b6f4-4cc5-8b8a-f96c2f1df27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac13dc5-4149-48ef-a69f-3a255c421d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b0619b-dfd0-42c7-b049-cf5a4846f75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c77e1b-e2e4-4190-a332-5df23d792794",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe0f529-990d-43af-9d61-e3a20b1ec84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7456f93-b2d1-4dfe-abdf-4daa9434af54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8233c1f1-83a7-4f31-8bf6-1e1e2591648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44bfccdc-b591-44dc-8a45-84c0225adf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2362d9f-f0a9-423d-9b6a-079a03819f30",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3d0e0b-4c4c-4f47-ae58-1fdcb19fc3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26afea9-13eb-4d7c-b958-da1bf46e8fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a6216d-9aef-4ec3-a8cc-bfd29ff6d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e744ccbf-21e3-41ed-95b3-c87cdbf4233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b25358-db6f-4c57-8e47-6d499432cc59",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9c4df4-139d-4e9a-96b0-491af5002ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc43206-9211-4494-ac9c-b539beeefc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c692db4-a970-48b0-8518-1d9c3801780d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5d3cfe-daa7-4523-8925-575feede7797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a374b70c-1467-424b-a639-b0b07a0b4ed9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df01cda-585d-4557-8059-48742aceea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6887c21f-d7d0-40b2-97b9-17b962a7812f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6afe17f-d3b2-4e6f-91bb-84b58840bf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f29777c-9004-41af-ad31-2dc05c4dde2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6735df58-724d-4d35-a1e5-029205bb6bcb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dccc6d-05ae-4c89-af4d-fb22991019fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713a9248-7d10-4469-86de-645efb884941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e27d8f3-d975-42fe-b8c6-695170604b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d53787c-8d44-4a05-b2ca-e7a98ae17638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1cb810-a627-457f-8eee-da2de13459fb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff9cf51-9357-4d01-a008-9feffb66e395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093c5ff0-e19d-4cce-88f5-7ec33a34eca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa65328d-0f50-4d56-b4a8-c91a32289caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14aa45b4-6c37-4f3f-9d09-95b6c55ea968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6a835d-2902-4012-84c2-3a093fbfcc16",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f320b9e-ca24-477a-aca9-ef864e231ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e5296c-4499-42c7-8fb3-3dc356287f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da041060-ef0e-4587-abc8-846e13d6a269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa62728-3678-40b9-95ec-8d3c6b406482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce2ef6-e537-4baf-a209-0280e134522b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824317e2-29e7-43f8-b2ff-31438b9c85e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99779864-ce89-4d04-9fee-e0c5d5f3e584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7639a-8880-4126-8f91-700ebbbe4292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bf8de7-64b0-4672-a042-242b4c6f015c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d225b-2d24-4f68-a34c-cb2b00ac2946",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a0a56e-7c54-40f2-81cd-c13753df3614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3822d91f-81ea-4fcf-9ea3-36e4a9b01d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c210d475-3710-4dfb-a150-8760fb8fb67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b054210b-fada-4eac-8566-a3aa3884dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b89c71-af5e-4de2-97a1-c3136bbbe15b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d211d4-d18d-44fc-a1d9-49bc16a74733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8071a0-097b-4bf7-83ad-6560ec1545fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7911a571-a099-4118-8462-2a681283096c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a49742f-1e33-41b0-9923-d8233eb3315b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfb8835-2d29-4422-a950-b3221df56fed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaed288-ca1b-4ccf-af06-c84386090790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8985ac38-c51e-49f7-b4c5-f96b1ec77eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b761233-6c17-4925-8ceb-28edd100d954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aba3d1d-7689-4683-831c-8edf5bd0a530"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dfe4553-2b66-4178-bb66-ea4fae3e2cfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b46d1c3-d0c5-43fb-b1f9-45c8e821c3bb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb82d75-50a5-4ea1-9dea-186d55cefd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5818c869-ee99-4c80-b1f8-7df788acc8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb48e9d-50b9-49ca-a397-81fa5d318f6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cc8250e-ca6d-419a-bcc8-9ce992223f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d0d4cf-1213-4d04-9486-925984a8aef1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3aa8e5-584f-429d-8a9e-4ff65c7756c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baf79dbd-bff1-4b8e-82f0-73abe1ff4d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7dfb36-e4ff-4c9d-a14b-99a9313ee4ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db8fa799-b153-4f09-95d1-8cbeef950b5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc666405-0bb9-4b60-bccf-b7ef9faf81d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e452f77-0c30-43f0-9668-d7804cf4a056"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b72b5ae7-42a0-4d12-be0b-d29b59e27ff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9830d0b-be27-422c-87fd-b6d2d120b5df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d273548-aa40-44e3-9414-be82f7b0761e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa510cf2-765f-4c6a-a69b-6a219224d75f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79dab7fb-e4d9-49de-90d1-f4450883ab9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ffd7e90-2e75-4dd4-b814-8820b2a7b465"
                }
              }
            ]
          },
          {
            "id": "8e66453f-d915-4c75-9750-81a7afe8066e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "813916a7-6d09-4a6b-aa8b-e9d7a1644367",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41ba49c9-07ce-439a-9238-f7df2827eae3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a71c4c9b-5a6f-4082-b99c-9b5dcb2d414b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08d19787-2794-48f7-88a8-7e20d7497903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40de93e1-b403-4ef6-ab8b-b509db22469f"
                    }
                  }
                ]
              },
              {
                "id": "ee7762e1-66d0-4fc1-a756-cd201eafc1ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "458ebbcf-3d05-4b1a-9e7d-2e35dc002bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7ad65b5-472d-4b35-a70b-5c0c6442f39b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9237da67-94a6-47a1-be82-fc1abcb7917b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66ea3f21-f065-4301-afa7-1936ae1cc66d"
                    }
                  }
                ]
              },
              {
                "id": "d19bf65a-2394-4f5f-b4d4-e70d7e6a9e52",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d346994b-5f46-4acf-a28a-9497ea9f54ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf267a6f-7eb2-4908-b92e-ca5d78610bfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "088b08ab-01d0-4407-b7b2-160d3cf2d0c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0db0847-60a3-4401-9127-b4181ea645bc"
                    }
                  }
                ]
              },
              {
                "id": "47a03f5c-6712-4089-a5d1-ff4fc26ebef8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17c8c21f-dc87-4459-9baf-105b25479a41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5835a77a-5181-4c56-a555-7f3b723647b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "043df33a-857e-4223-95c4-ba971cc68388",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "adc19726-15dd-45a7-9ee7-0eb33dd91766"
                    }
                  }
                ]
              },
              {
                "id": "be5cf9c2-096c-48c2-b92e-c2f8bf9778c8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad121e50-9f93-44bd-b1dd-090c570b370a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eaeb152-120f-4b3e-9f5e-253a5df00f71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37ac5450-25d4-4e14-b23d-9644e3de5b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b30e9685-4057-4895-b717-7843ca162f55"
                    }
                  }
                ]
              },
              {
                "id": "361b3587-ea85-4f4c-be7b-4f1f1a0f85eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a962cc78-7cfe-4691-b0aa-800ed994259e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbe2554b-56f4-4f8e-adc6-8e01ed4bec5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "391e32f3-9515-4135-a828-f54d48326d42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdd4697b-8b4d-40dd-a60f-07a7a4d036d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e9bbb90-0642-4723-936e-05e5a0039d8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85494de8-b5f1-4ae8-8ac9-c231c9d175bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad4358c2-11ae-4a53-871b-cae7424b1c06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37139bda-37fa-4609-add7-9163d0a92e5a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e99a73b-443f-4654-9a7e-36e459ca6830",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f91ae2b-130a-4fe7-941b-b1c6b78222aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c50e1db0-eef5-464f-b18f-5542965c06f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8990d174-3d25-465e-b943-07b598ba172b"
            }
          }
        ]
      },
      {
        "id": "5d8c51f3-41f6-4c31-addb-6d42f5cd355f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4746ad39-3a59-4736-9d0a-18af5c255a6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe0696bb-e928-44f5-8ca0-439fc2649ea1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b18de853-73e1-468e-8e48-fd26fae59968",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec2c63c-a1f3-4024-8e5e-a5bfd67d225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512e3325-410e-4770-8377-91042583d5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73aa91bc-2c80-4f9f-ab5d-782701addfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f385ee-22bd-4b1d-8f2e-ed4176f35a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2424a40-5d6e-418d-9b6e-f0064f5e121e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e61d0-7a30-4714-88ce-7382b18adf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5ca01d-1705-489c-b992-531cdd7d8123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5f3e8b-5e2f-4c37-af0e-d9e01787eb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "081ced13-650b-438c-b91a-75e9b6327735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629e39ba-b3ca-467c-bdab-1edd6ed2302a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2d1930-9aec-4714-b489-55a19d9a4064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e43c2b2-7968-40c4-b755-a62ec169cbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2118adf-c4fe-4894-85f6-8736ca6adf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce2099b-8885-4002-b63d-07f419fdbf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa240e2-53dc-4407-9394-158bbf2acf84",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9321c748-874e-47c8-817a-b525f0b0310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e778b863-ee36-4ad4-9f58-c034a9bd1adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2373b784-e645-4c4d-a41d-d8ab2e06f660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ed4b4a-0ea6-4491-b904-2cbeffa4eaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93529b2-c63a-42fa-a1c6-4b21485f5df7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1c5d52-c687-4c65-a9eb-727fce65fde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61944ff3-c686-45c5-a986-9aadffda7037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e2821-2a36-45cb-b3fd-47a4fda8b6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dacbcb-d875-4def-bb99-2072551d34df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4260ae6b-4811-4d4c-9c70-837e43481ae4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8518d8e3-c075-499a-b2fc-603be19870a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffead98-0939-4e86-8392-ba7a6c3e5385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fee846e-9161-4d6e-9f28-ea101754173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6348d3b-0a7a-477b-a5c9-534eaf0feb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6982a1-d7a9-4d23-b15e-7f4b8cbba54d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e292a65-cd57-492b-a5db-7c332cc9bfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbd45e8-289e-4dad-9e18-593b894e4b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f8f4d6-bf97-49fe-8843-53d0eccde32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a56cbed-198e-4db5-8a3d-157f05b62a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c82d577-cf0d-4de5-b62b-52ecb4c14df6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d066d4b-7a11-4b19-bcf2-7767910a05a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61678a4e-31aa-4608-a2cd-8b2cb1cfe257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b5fdde-7e59-4959-9d86-0fc83dbf5b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1e4546-b4d8-4153-8577-1a5bf6ffec76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3433c2-139a-423a-bb2d-6e5a4471b230",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3b6e54-6aa4-4331-87f7-39a43a264ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a584360-beed-4668-be21-f9d405bc9f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6705bd-e403-4ee5-a4d7-fba9c4d24981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af14185-e05f-467c-8363-758bc5ea812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cd3a3b-d409-44ce-9eed-3c62cc76cfee",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca90910-3f13-4590-9c77-46109c6d53bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec84353a-d04f-4d53-a024-ef875a975c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4f6108-623c-401b-875a-a82b62e4758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20d5632-6ed5-4874-9907-b290602986f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620eaf03-201b-429f-998f-89b8621ac661",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda08591-63fa-4a82-8863-b2750658e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8888d4f5-d08b-40bb-9858-56246e625ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc28410e-15e9-4aa6-af40-413f6781cbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69f00212-b6dd-4063-a0c6-6907472a4c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48195d6-3627-489d-be28-dc28c9777dce",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31628c44-3304-4388-9b28-179a8b96f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce9f6f3-4bb8-4f1d-b6c4-4cde6525153c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cdd689-a437-44d9-9cea-bc1c0331838c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e91441e3-5f2a-4b2c-b15d-a45f349fb68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e43998-f27f-4d33-91ef-3c2495e9d9cd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e11591a-a614-444e-bcb6-f65aa9ea850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6f3317-3938-480e-8501-4854ab1cb033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c875c90-26a3-4052-a143-cff68f5a2298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43c5656-561c-48b5-ba6b-e693c2678669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8149803-17d6-4b5a-b4ac-bd718a0953e0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b0fc9-7821-4b02-9158-f4d527d26fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f9de26-093f-46ff-b6a6-0eb181e79ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff19b29-c3ad-4f08-a740-8cb9f712cc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd8ec39-6a32-42b2-a541-0c0b07a6a01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8ead8b-31cd-4c81-9b48-66fc04605f3f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d7d76b-0b8b-4bc4-aab0-f0a3a7a1f656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dab86e-65e4-4b2c-8486-031a3830fa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5bbc9c-f470-4cb5-9bba-5f00192d1738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87e3d07-2f94-4ca2-8348-1a6f6dde42ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e7a6e2-9e9c-43a1-a2a5-e459c51d80ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e2d145-ba4f-43e5-96e6-53a0f8c35d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c11154-10fe-4ac8-8972-2687c4fc0186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5523d7-7488-4003-a3a9-501eea0f6c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1dc19b-e727-42e1-a8fc-3a85ad1987a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867a6e3d-ed6f-48ea-9e20-29d1d5f50585",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1177e89b-8646-4924-b2b0-5cb349b0ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70840f87-9de6-4bb4-8288-0f8a62cbf4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ec0243-985e-4c24-8423-a55775349bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "066b2594-3849-48fb-b8bf-f8d81db9739d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e650ebf8-f532-414d-b046-ea1cb3e6a043",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6284b2-9631-46b7-a431-803b3888b6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab575c5-ce50-44c0-acc7-d9e5906f47a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8550b05-69f5-4ff9-a821-e3ab793531c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e539327-eab7-40de-aa05-12631370521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bb82a5-0f9c-4751-b28b-b777d6ddb12d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e36b8-f17d-4270-a843-ddb1b58b45f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0d6576-4d0a-4c28-87b4-c3e5e8ab7f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3a582b-b678-4150-be5f-b27b5bfdaf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0242ee9f-f399-40f0-b7ad-b4485cf2e1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca978d60-982d-420e-b31f-655355ccaee1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f80bdcb-ab80-4793-8c10-5760a9a69687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6eac2e-ecc1-482d-9e09-0439ec1ddd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c7494-d0b7-4a2e-879c-ed04386d0aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2814a941-928c-4949-9d2a-30ac9683529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d291b2-2e90-4639-bf5e-400b8f96d676",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ad0568-c123-47ad-bc0f-9e7221f0ee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8cc996-bbda-409c-937e-59e9be19a192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc697ef1-5eda-4c6d-975e-f4e073e79683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "792d135c-4fed-4705-ab4f-4ed12b1fffa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b6c663-c35a-49f1-bcd2-72a18d2e0a09",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da27357-9537-4840-b83a-d945a351f449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33efe933-23b4-4eb4-b78e-9b73092c638b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fe416e-f1fc-498d-9c90-b9797ae8deee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e685797-1c46-4f7b-8e49-9bb58c98ca29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed29519-ceb9-42f4-9d02-f31aabf8b89e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c617a8-dbd1-47e5-aa8a-9434b2e94f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206f4461-adce-4959-83dc-106c7a0c2faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50072965-984c-42dd-9f35-6897de45ba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12ee0dc4-7cd4-4135-9bbb-3769e391b1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038427d3-accd-46f5-a908-fe6ffc5014c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64941243-15d5-482b-9ce0-5a276b43f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d50de3-c061-4298-8f72-3451d2325115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60573a98-ad1d-48bb-813b-ea6bf75e5db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5641966-db7b-4444-b662-848e6a33821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c535011-7500-4a5b-a68c-dfd23927ebb4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043e67b5-4b31-499e-96de-2269ac3d07a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b53191-eac5-48a4-8d8f-22fffa0df672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e4e83-cfbc-4cab-89f8-34acd5c23b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456e271a-5d80-438a-861c-86b7685fbd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3851f521-8a66-4416-8f76-904e4c54e6a7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f136c39b-bf67-4eb3-b0df-b5e12908b747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a295146e-18aa-41da-b493-c55047ea8cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35d6dd9-1a8a-4d8d-93c4-09ca44d1d58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cd8574-e3f9-4974-af0c-0c0760275f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd4cdef-e9c5-4eff-96f5-7863b62df2a8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d4944c-6294-4cb8-816a-446e2bf24fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7af5ae8-e18e-4d6c-a7bd-31f202f23fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1baf00-dc52-4e25-bfbb-b83255c544b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f93acb-4156-489a-a531-3fe56c5828f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451e23b8-fdcc-409b-b564-40f76c10042c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d574b-211a-4840-868f-9f0413314132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd55b44-7d87-454d-bb0e-248b504afb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e8ada9-22c3-4b92-a383-bf8937c1b916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c5a97b-e6d4-4823-96f8-6667dcfe15e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e003d77-8d64-44b0-aaa4-bfc7d13b976e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0435ddea-920a-4864-ab71-763b16282958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ba612f-a7c7-46c2-b78f-d7a6ec790c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11690f55-ea3e-485d-bbd6-54fcb1efb67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c05fa18-95d7-4462-ad90-36fa7ec1cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df348172-1419-49da-9df8-86f18438359b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb36515-021b-483e-9f5a-587ec8bf4df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e2a7f6-bc88-497d-849d-236455154e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8a1cf9-b24a-40bf-ab52-5dc6e8b05c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4808100-5eeb-4dcc-a2fe-fa6f00db6b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc0c8f9-635f-4286-a369-b1ecd8722242",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3d09ca-d742-4404-820f-ce347d3d3bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4f512b-7db1-4108-8343-74fec9ab9c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fee72a-0c8c-488d-affb-0fc4accc86f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b4127f-2442-43e7-a0e9-ee22ac0c3e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd377d47-3c21-4677-ac98-f9e04acfc54b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2798eb9b-748c-458a-be17-cf08a1dbb21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967eeeb2-2719-404d-a8bd-a97d76cf3357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfe7184-a6ce-485f-a042-8907e92e0d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98038644-63ec-4d48-aee0-8cc23ab0ee08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "077f037f-60dd-4f32-8bd4-c5d523067588",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbbf6646-921c-42fb-9ae4-30866823a5d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853a4381-3e98-42fa-8f6b-fedca1299b49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d4abaa3c-6728-4450-9fe7-56665ad568cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2023ea43-1090-44d2-bf89-c807bf219972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fa87b5b-d664-41a5-b696-a426645a2f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b68530-59d8-49c9-8138-5f6c8e096519",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e82acb-e6f0-4a73-8a39-34097a83c03a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad862bdd-2b37-4a76-8d78-3f69f3f5ca2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc78b55-8e65-42ca-8ba9-4fdfeda4d6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f51076b1-a9ec-4e05-88b0-02aa3b6cfc79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fe6e35b-667a-4d49-a398-f9c746597523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1077ca10-364e-4c65-a9d4-1f4c75376b10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc22a391-73da-4f96-a355-743393c35c2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9ff1d29-2b70-440d-9c71-7443559cf93e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78ae41ff-a7d1-4bd0-8456-79996b074929",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10b1651e-744e-412b-be56-3dff38c979a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1aa742da-23ac-42c8-b58b-d050949dc5a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b756263e-a40b-49c2-9c4c-d9215309fdc4"
            }
          }
        ]
      },
      {
        "id": "20b9ed9b-acf7-47b4-873c-716f6f0cce51",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "24db472c-ce7f-4da2-a118-81fe3d8121a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c164ddb0-8c92-465f-b830-8f7afb713666",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bd0cad8-55a0-453b-b400-c7233a7c3f85",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c4fbc9-ba3d-4ff2-a746-9a6d136eba1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc35fc2-6727-4a61-afb1-837c33fd1dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2020b5cf-e0ad-4b69-b0bb-38048428a28c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3222b76-3cc3-4248-a328-0d9ee00d3b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c357fdb0-ff9c-4fc0-b817-56608f9268c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c162fb25-36e7-4fa0-987d-26a27832b732",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e07b56-2538-483e-99d9-b05b5ea55f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4101a4b-87ca-4ac6-adf3-f3477e7dfe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de24669e-9e8a-4252-bb05-3be51fb33191",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ad8736-2d7c-4563-a1b0-b0a73dbecf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cf56ca-52ff-4f2e-8c4d-36deab3c2b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ea6828-a487-4eba-9961-7a35f788441e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546835ae-7bb8-43e6-ae4d-5e8acf2e33e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c46f010-c0d7-4d27-8d4e-1b1243bef93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ea0d57-a080-44f9-8455-ec53dea97755",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c4ca68-1add-4fa2-9474-78a730c5e420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d43c1e-2011-4bb4-814b-a2a8e3432a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93a5dd3-9dad-4de6-88fc-b79e84d1042b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f267e3-6c82-4484-8c9d-8bdf06918744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52f05dd-8ef8-475f-8d37-ad7b5397b352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fb53d7-6311-4bd5-9958-aa3f45b74379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1a06d9-dee4-45da-9c6c-6b37eaac2fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9859ce86-cafe-479b-a9fe-fe4b2bde5f69",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f756d5f-c8b0-4103-bc58-94d0ff75a381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b21258-0279-4b55-a1a5-74335e3368c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270d3e70-12cc-43d1-a9bf-dcfd27b87a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600c6b8c-0c9d-47a8-9820-4481aa9f5024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1816f7ee-e4dd-4492-897f-936eb16861b6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e56fca2-5b3e-4db5-bb8e-5a472d5e7549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea3c8367-39d0-43e8-9144-5cfe517e91da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee08785-194d-4865-b54c-9e92c6b80eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a59d41a-f846-4573-ab1b-f6553b1fd9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f08214-823d-4e85-a0c6-c35ada149a20",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f60b269-3d9c-4ab7-91f4-3fd2b681ca17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b4e977-3848-4d0c-b412-4e8e570b86c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46802f03-f8b7-4aaf-b829-2a08644424d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af64427-0a41-4c09-aee5-b77822a8b286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4103cf3e-77a5-4185-9450-007b2eca15ce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783bfe1b-d423-4678-a9e9-2eb80992bf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cb6c6c-ff30-47e3-a4f6-5642512f0b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404e98b6-5bcf-4435-94f9-2a3f86afc7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c66dd9f-7b77-4f45-b1df-74d5c39274cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2f58d0-0a5c-4bed-9ed7-90fe98a8865b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe94cebc-b4ca-4b97-8a6f-73979e3d79ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40aa1c69-9130-485f-ba8b-e1d7318c34ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a1e11e-30de-4fe0-b019-1b6d642fa483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e684c9f4-edff-4cf5-9063-57d22ab7ebb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f14b41e-a96a-4dbc-8483-6911d3ac3174",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f8db13-de68-48d4-837d-25db5b24bfbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d279a37-2f55-4da4-b9e4-451a13159a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb66093d-26b0-40af-a6fc-de883e6b9c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20623889-4ead-4395-97c8-a4e9d642575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49ef1c1-7af3-4b83-9d13-474cdd53ec30",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8765848-187b-41ee-9f8e-19299ce8b7e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075bbe7a-8736-45ad-8cf1-bb2494f19c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9ea9b0-fb6e-4a02-a6b9-efeebb9e5bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca75c001-b2ae-4ae4-9ad8-8a3244468216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673dc1e9-c0a3-4339-a6ca-8978c644db4a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fd4dec-2a27-48ba-8859-84903d20df0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aca5229-eab3-4191-bf76-9f43aa2526f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15ba6ff-9ed3-4f91-8bb3-176485875e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d0d24f-83ff-440f-b4f0-9c081ab8e412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fced1bcf-964a-41e4-9d70-532a7acf9a7f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff864d0-4b1a-44d1-a90b-38e5b6377a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c85448-a390-4378-8212-fae456dcbbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab6b570-57f0-45ad-a0fc-12eb86b35f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d894043-fc45-4dea-b817-21a3b458b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f2a24f-29d4-4378-954b-cba43959d977",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38e448a-d5e9-4f98-9e7e-98285d0c4513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5112b7b7-e094-4b08-acd2-c5a76908000e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234fb374-bc6a-47a0-97e7-40c22ab14d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e23785-07f0-4c63-bb99-1bda1127c8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3112b8c0-d032-43ab-9fb8-bff34f798497",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94dd18a-e298-420c-8d46-281299a9a58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fbcca9-40cf-4760-a735-924f44aa0da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f5cff-832b-4983-8a28-7c372cf40d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91df8f69-15b8-401e-ac79-3151acaf4db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da22b00-021f-4ea1-a430-dea89834743c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9912d-e0aa-49ce-9740-5b7656be879d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832fbc20-ab9f-4bf2-8076-9a8ecd687872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e16ef7-94d7-417c-b3d2-86852b0e439a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586ac125-4bb0-4232-b481-0b9fcb7274fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931d6964-0b0b-4ba0-96ad-819a501e5be7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29badf76-07e0-45d4-843c-392c0132b7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd90cba-df2e-4796-89d4-32d156880f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aef036-b690-4c4d-9a1d-76420db9243d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34306a76-eb68-4a97-83d8-0bbcfe821ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9953e0c5-ab3a-4d9e-8ac5-9d1ad60a56d0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f7350-2a93-40c2-b3e9-8dca551d5611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e59946-17aa-4f0b-88c5-100692ae95eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1c0434-3892-4129-9019-e7b3b659feb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83770ec-1fe9-4465-8393-ab62611c4709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e5cd03-3b3c-47ca-9527-3896949a8ec1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae5aa6-a6df-4568-bafe-91609641331c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07423879-a1c2-47ff-9f62-94a5bb433c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbf0e41-a10f-48c2-b10e-2bea3af68c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51867c0-b06e-4742-a22e-93886e65febe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fdfef6-071f-4aef-9dc3-1f3c415cb3dd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a264d250-1038-4ae5-9854-162ec0c27f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665564b4-74b0-456c-8dd1-b7784a3def3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf163eec-c8de-4dc4-8df4-8e91d117d4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0cd062-6bc0-42b2-bb03-36ec9a6e33af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d94db0a-cf14-4568-957f-a72d728737ae",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347a131c-272c-43ce-8afa-e4822f7815e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b028a4-af7e-4d27-b83a-55044d3b4a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953aad64-a104-4c05-aa5e-e4679017b290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b38dbb-cf40-482c-92d8-7cb915687075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e666de5-f56e-4150-8e33-181970fe9fdd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78fbc13-f403-4d95-9dc9-2a5eb8066540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a1831c-5458-42ab-8896-d24694bc12ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e00e4db-00f2-4aae-9979-62284b72ac71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea012b7-1579-4a74-9681-84bd14d09881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f3e932-88a5-4f8e-972f-92df03def2a3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98410a3-cab8-49c5-a2fb-f80df2c0eb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d455b30-d360-42b4-809e-906608113711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dc0b6b-7bc6-44dc-a54a-2553362b86c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9f6850-5a69-4bc4-8b8e-227080e79551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bcf10d-5ce4-4757-a86c-4e0083a0d1ef",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92f8dd-a00a-4f71-9a2d-2e19bbbf4e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759e2d65-ad2c-4a7c-b4c4-893d834f2f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec63ad1b-7174-4122-ba53-e82e308b4c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b11e03-b7bc-46f2-a8ed-ebd9e8f0f563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66088ef6-46a1-4426-8b27-5acb627f0f5e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c9ee38-a34e-4542-b865-d5936e49bb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651156a8-e8e6-4d6a-b320-5106389540ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861f7dbf-7858-484a-a195-90b857e41fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22789a5e-5ffa-44f4-a6f1-312adc06cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a0d936-cf18-4704-b981-8b617c4f5bab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461cd2af-6cdc-490b-84bd-0f2dc563a519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b146df4d-4c98-4aa2-b8ed-f33beb934877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe5b28f-4a95-4e68-902f-4f1c22502a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52b66c8-543c-47e3-8023-68b4ea91c7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886cc032-c836-4161-a087-53c4bbcd835e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d6dd7e-6358-4cff-92d7-0501a494cde7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8082bbe9-5115-4f70-9254-46760e8d1465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648977d0-89c1-4e56-994a-15360a183be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624ee2f8-3160-49e4-aa3b-942f72e11314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71df5025-287e-476e-84e8-4e16f1782869",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74263db-5b96-4d59-8a04-1dc896054b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272b444f-bba3-491d-862e-1374b7b1b852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66495124-7cdb-48ef-9061-7399084083ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc95530-f4a7-46cf-853c-5f126d60f57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acdb83d-e307-47b3-88ad-295cd2099b19",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daef2c16-a1ea-4c40-8b54-39fc312fbe22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954d0cf1-6dc5-47c2-b0f3-44534d303ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d14ef71-6988-4486-83fb-954a20580dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d82e2f6-4c3b-4b98-8caa-cc22e0595f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2deae2-9f2f-4e24-b955-a8756acb7d53",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc219ec3-ed99-45e2-8a3b-be7153c4efa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad6d77c-4fa7-4ff5-bfd0-45ad0cdc4e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4745ee4a-f37b-414a-ba96-65c52306e817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a26a31-2861-498c-ae7a-5f2473e2979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1e80b-8879-4a07-ab46-2bce1f31375a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5609ea-d7c7-4914-9ab0-23bf0d8cdbdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc6fb93-afd8-4bc0-9aab-4ff7015eba0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd456c27-bf9b-41e2-b743-9aa05f6a21d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601866bc-6301-4224-9919-e44c8ab9445d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86958429-04c2-4948-b81c-c549e9f3250e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a179ca-4ab2-49cd-b064-59472dfc6a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec8c90d-b9ff-4de2-940c-f6d5f7e0845b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc8a8d6-97cc-4068-8f53-26a5b6533ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c8646f-036e-4795-b8a5-ca246102e2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdd752d-8110-4aab-920c-69d65ed18973",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c0dcea-666d-4a5b-828a-cfd067674558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8d4421-e0c2-4acf-8737-eb34192a156e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7794b5df-1f87-4361-81bb-2d90a256cb4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff26b48f-0504-4456-afed-aabb65c40e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eabf6b-3be5-4ae5-bd52-6b714f7e3497",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3bf412-6a00-477f-ab74-978211b549a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bf5e05-7ebf-480d-b101-d9755943a31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4394ff94-1c20-451e-9f3c-9244de0546dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d0864b-1e5c-4d1e-b2f4-cc860c3164b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148e5295-bc31-413b-a309-68d8729aff93",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabc08b9-d0b4-4025-a85f-377c6f21d25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27609765-927f-4360-931d-3159e9846d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dbb8f8-7946-42fd-8cae-2f057c69c642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0f5602-2629-4623-8653-1a352ec37bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cfb852-85dd-44d6-b5bc-76456ce1d026",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d6478f-bea0-4d49-a7ee-78d9345e2e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8be0752-59d1-4676-95ba-55451c793747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca5f343-5505-475e-a055-e97075f4498e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdb527d-3142-4f5c-bd67-4d68e272a1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b53032-48a3-4a10-a448-6da1a678cd13",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8f4565-5812-4951-9d09-ae8102b52d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063bb5fb-de58-404a-acc1-b7f45add8007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d6192f-c0cd-416c-901c-0dbc08974a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c72bc0-45d5-403a-8323-f6794f27bcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3305a50d-317f-4df1-ba5c-cc18336a63d9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea6a7f9-a2a4-4436-aa92-ab7075ede36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b41856-7036-4cd0-9c50-fbe32b32f400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e47e53c-27e1-4c2a-9b7d-74f832952101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b068cb-dc53-4bc2-9c34-eea4f103a4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75c3ac5-18c6-434f-aad2-9d876e9ffe76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1082c29-a976-459d-bb49-81469b96f710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8148fbe6-e003-44a0-8098-4340a081b55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfd8fbc-25b6-4b1d-b642-f24d67a21954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d4dad1-1c11-456a-93e8-fdc0214973e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f90e4a-6205-48e5-a385-bd995be8f3d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb84d531-038a-4fe1-9be0-b02de60f2270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6f4ee2-55e1-42bf-9d8a-44b5c798ecb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d942da-bf32-4056-b65e-01a1c6760b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d808ddb-3c09-46c9-8aaa-cdfb0c34b8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a70b00-2e6c-4558-af48-9181d63bb2ce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909bac82-518c-4434-b042-e5d94d969ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b96271-003b-4097-97c2-eba6fee171df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8e29f8-c11b-4636-9df5-033bd7d195f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b098b9-cf23-4150-8b9a-01b3817eafbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29a056c-64ba-4817-84d2-c820eb87a0ba",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da80bff-19fa-46f9-bd11-f1a42946a977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdd31f8-324b-48e4-a0c8-148367b6437b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5232b885-395a-4abd-bc34-92f06285b899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf414ec-9f9f-44fc-bae0-7b8186336db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b195042d-df27-4238-9b1a-b35cbc485a51",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badadf23-6eff-4ed3-a103-e9c4d13d6a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942d1e05-f9cc-4902-96de-a7583bb608c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2811c452-184d-4434-ae65-1d3d772e5498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1759db5d-caa3-4025-9054-f5b18ac9484e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c47ca0-6b45-4c0c-b270-6cc136d60939",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114a9983-8ed3-4027-aa89-737faf54e025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170c38b6-3a66-4596-ba51-4d07e42285aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9378aea7-31c7-4ca4-8bb5-7340fc511699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c448fc-99ca-4d12-a9b2-c765107f1ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7731f3-43eb-4a00-b690-90b309ca50da",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87de5ed-581e-4b58-9806-2d347837f9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c26e5b-db60-4004-9197-e9b8c6f278f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd428f9-5422-4ad5-8efc-e914764c2fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469782b9-4433-46bd-93b9-c2e5bdbeb421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad22457-69d2-4773-867c-341e45bfa02c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49caf1d2-c27f-413e-b557-14231ddf981f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c593f0c4-a23f-4879-8697-51a78b6fe2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d7bbb-c1a5-46ea-a1da-e74b7f079a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06f0c3e-114a-49ad-b913-63650b5147ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6478459-49ff-4327-9357-b89ea352d316",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a48ff-9058-4ed3-8ffc-41e9344b6cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0dc3b05-3f72-4999-b180-006e5d02a33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef03a6a3-e224-40bb-85a7-fe16fa920973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f9f801-66cb-4354-b07d-94e6ab0fc231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4570a157-e39f-457e-b29f-3811c1b304c4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be657e-4e6e-4d00-8585-bb08844ca917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98be8c12-99c7-4755-92f6-704e1210248e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cd4f15-8916-4986-809a-ce5498b9fa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7041e4d5-9740-4b61-a9bb-3ed5be42df6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7132e1c1-7dc2-4ffe-b37f-50294c665e7a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf27f2e-834c-45b0-aaf3-6a2488c5d02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc47e641-0641-4193-a064-b17c6f151ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e0690d-1639-4926-9179-9352c45eddbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a65321b-f68a-4ac4-9bfb-0243253b3280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5535642-1aff-4c53-9191-c38f6c506d20",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0125ddbc-a9fe-404e-858f-3891ac1711fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed00b32-b478-4702-9368-d54a52c8c017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfa6dad-5f18-486c-b68c-676e49b2837f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c988ec2a-2801-4510-9070-12091868e3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89d4a47-9a8d-46d0-84eb-e597dd21f27c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19643bda-729f-4ec8-a483-183e0aa54281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8385aa5b-9d9b-450b-b3cd-c8b088a0db3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdfbb9b-a4be-4893-aa2b-476fcec2e293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f11422-bd77-4759-b231-6bcefa1e06f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae2f60f-e71e-4189-80d7-0ea99d2219d2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038f503-0316-4171-8bf3-9309413d010a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5381ca79-7287-4ec4-8ecd-dd5dac7e7759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bede6676-3dfc-4c6b-acb7-342cf63c6488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84af99b4-d5c5-459d-866e-8e864700a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e97441e-745a-4217-9931-107e5e6acf72",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d73121-baf3-4664-9bbc-97ec2d4dd0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d257e4-41ff-491d-9c72-ee888cdaa32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9868f7a-f41c-4b96-9251-5504e2710341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235c4c69-ebb0-4a17-bb6f-3d28d1f64a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b506cd6-cbae-42fd-8431-c3edec512b28",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cc865e-d45b-47b9-b120-9cf76613f9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e769e057-4c5a-4c1f-9fc3-f29070ca3474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d46159e-a09f-4138-950c-dd04576b0583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e60c0a-67b1-4194-9e1e-f49c32b7ff5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3a73e0-dedf-4239-bdf1-16cdead54a33",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0824d95-9e0c-4c42-8dce-f19dd70a8e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d045073-fbd2-4178-8bdb-33437d838dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b940813c-674f-413c-87c9-b3cd7fb48c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcbeebe-3fe4-457c-9aca-23d2bbf7f266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f829df00-acf6-41c2-b2cb-a2805abd89c6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d2ea4a-c856-486d-9e77-bc44161175a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197c183d-e156-44e1-8cd1-7b559d5ee434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e193e9-aa8b-4235-bc62-7c132966cd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c98b78-d6fb-439e-8608-4093052e5039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68747de3-c744-4ba5-a76a-e8ee5fa85297",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cadf572-e819-4185-b4c8-247736adb44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bcc842-79cc-4fe4-8a1e-0f55d878347d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e89323-ea8d-4df3-9985-19353c78dfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6210fa02-fa87-4f40-9c06-b5722ed53938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331d2ae-198e-48a7-aa82-cc22e921c50f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87786d32-ae34-4b72-b21e-001b4d216e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a2f80b-bcff-46db-bbef-a926179d8a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1499f6b3-2154-4720-847c-820e4c1171fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcb17e5-70c4-4632-95f2-bf651c3c7699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fe6cbc-9274-49bd-b23f-e99bc6c04143",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd125612-96bf-47df-9d3c-fa78f088bf9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44318d45-4b46-41c6-87da-4499f898dc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73ce7d1-9ae3-4386-a09d-2acba7acdade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de3dd55-1671-42e0-93a2-b595ba26f20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82744040-49d2-4860-a210-d5c35e3784d7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bc87c9-7ec6-43b0-9ae8-101a95dfe5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5371dfb9-ed6c-468a-b06f-65bf82746cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c492ebc4-a3ed-465c-bf5f-58455e92b0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9a9750-7f9d-40ce-8d11-daab38926464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f57e3a-a4e3-43ed-8208-c9686c97b48c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a109342-cf84-4873-8b87-9e700c09b55c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444d8778-b856-4540-a2c9-5e60509e661f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f486fe4-a1cf-49c0-a32a-a187650888aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c48c87-c4da-4f25-b558-d6eb1e79846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c63a3-e0d0-40ef-99fe-aa93cff0be04",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae19d5d5-ceda-4a7a-bc15-907ba1826dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ae825a-c5f5-4ae8-bc73-3e4d6edd9447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505dc2df-31f7-4578-8071-5f9c2491e5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c64d7d2-8207-43ae-99f8-0933a4e28eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0ef140-c1ae-42bc-a653-2063d0bb027a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31375b36-d0d0-4a80-8df3-15f22ad3df9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2162aa2b-4a25-42a5-9b66-69861f6aa02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bee4151-c85b-4e3c-b406-4cc055e8d692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ae67bf-8656-42bd-8e9f-8f51a4142294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ba86ed-8c06-4cba-b863-57a5a42ac6ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5bb820-60b4-4e8e-8397-1243e94d11e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38eff5d0-74c2-4951-8633-96441614cd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8ae24-ad0c-4afe-b138-b83c4effdbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cd3f1a-42c4-4688-a49f-4ff3eae24b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6257935e-041b-475d-a45a-83ab0b544d2d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748bde0c-e9fd-4be4-b088-c13a391f8b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83939798-00b6-4d5b-8de9-2728e3a87193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63169c32-60a6-4b8f-ab70-8b987aff52e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bab164-835d-49c2-8036-49c9b536efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45e1305-8b98-4904-a152-84c99f5a7894",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0e9853-6952-4dfc-bc35-f822c08302be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef1370a-a8e7-4e51-a211-b2404818721b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16d5d32-04e5-4f18-b37f-a3cdfd692162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765e25d1-dc8c-4fe8-89f3-98875f430ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452e62eb-8e4b-453c-94e6-32c7ca469799",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5672f187-49f1-4701-94f2-5abe810f202a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f465901-c2fa-43cd-af93-29e861a86ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2927b47-bbb3-4639-9d60-a6c4ad4bfcde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6801a1b-7bf1-43e3-a0de-e506fccd94f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f080108-226e-45f5-b148-f199b059e4f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c68e86-875c-400d-83b8-fd78aa716fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f5b456-9d0a-474a-aaa8-5673422da2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc94a90f-b6b8-4f8b-9402-b38fe6f1f803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c42d82-497d-4694-968e-87ab935c35d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46690df-cb99-4cf3-9dcd-468bd0563479",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e2a48a-ce39-436e-802f-1baa575ccac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c1f8c5-fe18-4e30-b5f4-8e1ea184d2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc82402b-db84-4b20-9dad-43a03d7dad25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e69a6a-d486-4ca6-bf4d-55b6f4998acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c14030-e5fa-4207-a492-20d25c712eb1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca76216-3aa7-4566-a7df-41a2d178cf4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb751fd-c1d4-4375-a9f1-0ef0d888d8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cd36fc-ff83-4f70-9ae8-fae77b9053d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09075044-a70e-432f-961e-8dfdc15405bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7b8a1d-d26b-4752-900c-a4510cc283ec",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50e8e45-e9b9-49da-b94a-3147338eb067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c229fcf7-c654-4bbe-a488-c34c4419ae4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4131dedc-020f-486e-a45a-663ac9c99802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc51ecc-3059-4691-991c-f02a744fa5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b006f1a-f781-4d92-8360-4ef6661fa5f0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b84c640-80c6-44e7-9b60-0d0883b290e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6573be2f-5e37-454d-af30-8a4938bc0d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa0079-e28d-435f-9a3b-f7ad8703e32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c35f490-4bac-4fed-a01d-28ff4eb51449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9af22c8-3bdf-46ec-85d4-f4ba561fa9cf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff0c1dc-4341-4dba-8a20-d4224551e911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13069fe9-42fb-47ca-8510-7a940dc4cf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddbc68d-9989-47c7-a068-f7cc28f3e4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3515818-6e94-4a00-b721-0c1b70311303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2bc509-f8bc-456d-aa6c-3ef38268d555",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8bba1a-b04c-4e5b-97da-ab41043ce459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa6b5af-05e3-49dd-ad60-bba2472ce83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e2d4a4-e4b5-4740-a63f-fc04fa27da2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac91c4a-7eb7-407e-9521-51c3f45b2981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db0cd91-b3cd-4fa9-9da1-60649bfbb527",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022b6b0b-461e-4f9a-9a28-35ef49ad3c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "627b00a6-ea01-43c7-bb27-ce49c2975a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b64ee52-b8fb-43eb-9b8d-403852764fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159d6d46-641e-4bea-8c74-ae311a43fd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd1ae4-4a4a-4275-90c2-8e19b03969c7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bdd2c0-b579-49cf-af1a-e6017e8185a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a75721-022d-47ba-8fcd-361d5f511797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dca528-7b84-4f8e-8948-d6584fc18ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a84482-c2bf-4752-a428-299ffc6db759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd15fb6b-a7fe-4cd8-b646-82a969e6d7d7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ae0ffb-eacb-42a0-8f0c-c732183ba523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ece6706-2b43-4248-a565-4a9498398b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a6f0a9-fe55-43e3-9b39-352d1efd1663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dea503-8fa7-4c6e-a482-581387d06817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df70f40c-e06c-493f-bff6-0ecbb99aeb19",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a27d52b-699c-4ed6-8b04-2bc333ef2d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4020e0b-2fd7-43a4-9a1d-dacfd6bf41a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa69039-d40d-4e11-a969-71c1f29b8b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7871de4-acc7-4082-be9e-0cae89f38975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2a6863-cadb-4107-b2c1-4fda87c1dfd8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e45ad95-7ba6-4535-bcb8-37d49b9548db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee9a7e6-6d47-4857-8934-b3bb4351d4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b99572d-1e61-48b8-adad-18b8803ef33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400e364e-9a09-46ba-a5d5-53064e92af96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4427a9-24f1-4e09-802c-d38b4c496328",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289b6e05-0873-4dbd-bf34-f7f998f25b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160e781b-ea01-4605-942d-29d207a92e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfed371-faf7-42e5-bb2f-8839de08f5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330067d0-94f5-4180-a99d-b38ebbe1dfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9acb105-f404-4bd2-a375-63771db1d4ee",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b88e6-9040-4a78-b990-b0369383e04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f926f4-8165-40ec-820d-f1247175f553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4b58ec-eb05-47eb-aa53-871a28cd1a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad216e71-6ea0-4b25-ba97-6ffaf21ecedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8977924c-1bf8-4cf1-a16b-7195bf1aae5c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26862ef5-d99e-457d-9791-ea3ff968a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2eba9b2-158a-4a57-9769-6b13d65287b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1656c8e-3a2d-440b-a07a-3280d7f4458e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756c1a77-8095-47c9-8d68-b2c681347f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c0381c-9d33-4082-8115-8b1d9cb4ac57",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6cda22-f5dd-41c6-972b-fdfac9c53767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73780097-2af1-4500-898b-b57f6b81b00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0990c5-f658-43f8-9e6f-26721039c51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba192dc9-06e4-4266-9659-bcdbb790f2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd8b694-59c5-4498-87af-39c17ca004ec",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099e1c81-58cf-4f96-87f5-56d385511f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258f5430-b8d1-42fd-a214-efdf49d7597a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647854ef-2cee-4977-9646-e63387b2085f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de091bc-dfcc-43d0-bf4a-28e12a303eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683b2f86-e602-45cf-a78b-d0ef995fa842",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7639ebe3-3047-497b-bff8-e758fcc1ff33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a8177d-8d8c-4b10-bf33-1a3caaa81225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65dca96-1f18-4adb-9d49-5556dbf1cf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77622f7e-a607-4ffd-ba53-d00e57f59abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600d95f1-2c6f-4f49-baab-7dd73377accf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e51010-9868-4826-9eca-d6297b47b224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbaf2e17-b819-48fb-9da6-ff501cd04246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025476c2-58e9-4a1a-a0d3-c442823d984a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4105a168-99e2-4240-8ae2-43f11fcea317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee72a91-d357-448a-b0de-483acd1e3b9f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3a058c-e540-42aa-9afa-b79b3524ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc3beab-65a6-4fe7-882c-9565cbc1f755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65acf0d6-d054-492c-8147-b5bb6311ba66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77678806-8aa4-4b35-8223-fdbec618cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8464afb-23ee-44d6-b091-303029689ace",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7a3472-9060-4119-9f14-8a7946492ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99aba7b6-eab7-49a7-b6ce-052385b7a132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0941b5-dc76-4c9b-b8d1-79a17518328f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d893517d-477d-4a11-96d6-fcf849a6f56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edafc5bd-21cc-4db6-bf2c-269430239a08",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52d9805-8973-4850-a165-b563160834e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b799f402-90f3-4af8-b3a0-6de6b034ebb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024dc735-f1b2-4758-9645-a9a86b3dc397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d3e3ec-e7e7-42e7-a97a-d8b1885964b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9568783a-40ab-46ee-af34-f91db3131cb1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465f0414-5a3b-4290-80cb-88c0a4b28c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0405ca36-d6a3-4b6f-8516-42f1d9087826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb9e791-ddd0-4b2e-8fd1-0153d3578de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e3f6f4-e587-4ca5-ae56-2c43e0b49aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54274aa4-b76c-47fb-9280-9afbe03c0dc9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e011534-458e-44e5-bd61-72c84aba5255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b04eee5-612f-4bc8-819e-04155366e3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b0a14-40dc-49fb-a847-7860bcea9b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854ebb00-d53b-4326-9e64-5e2b468d39cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4c8389-8a4b-454b-a1a0-3d1fdfe5a6b2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b657b15a-92a2-4c1b-93d3-3acc5e153f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7109e97-bfcf-4d99-a20c-e6ebb83e90e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3327f1-36e8-4f55-948a-0a2f78f88b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa26f2ac-3f0e-4bf7-95bd-6ff67c1acbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6361155e-4165-4f74-8aa0-89bdf215b26f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bac712d-5473-4c5c-a99d-035ab88ee86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c32886-2efd-4bed-8202-44480ab0b9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6744f747-aa71-43b1-993c-08d0efeb5de8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ca119d-7b06-4d1b-8e18-0a5a451dc634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1177dc68-ce23-46d2-8ce6-d9195cf71f52",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cecb58-48c8-46b4-92a1-213a473b1bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf61d5a-f57b-450f-a3fc-365749bbafff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaede0e2-f523-43e9-bc47-0accf30e6818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fec4c8-6511-4531-9ac2-3e953f32ed0b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81706b41-a263-4318-b797-9c39e6430007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c175af7a-b602-4da6-ac8f-be2f8fcc4f8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aef3e44d-73cb-40c3-b836-10610f861aae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc380cf1-ff6e-47e9-98c3-af6e47c0ee01"
                    }
                  }
                ]
              },
              {
                "id": "36bfb5c0-8b43-409c-a3a9-702a1036587c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b99917c2-44b9-4fb6-a643-f91c76463889",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2118fb3-dcc2-4cbc-babf-39ec47712b42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c9a82ad-f810-4e85-8da9-768ecea1650c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b77af34-0217-4355-be42-e314101e143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7d0fcce-adb5-48d6-87a3-da39e66e5f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abd57e2-5bbf-4541-a575-7f539962546e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfacbcd-eb5c-41e6-b050-d6db7bc80403",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ec8621f9-9eac-4826-abc4-89100761077c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d50283b-9b8e-4a30-8101-96d262047bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9758bda-4f47-4fee-afab-7164b681d8e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1537d18-febe-4196-a006-a3ac742efb47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab8c41b-8c18-40b8-8c89-30e88146ed57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c15a4406-34c6-4f94-8981-8bbf74e635e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a8c4b6a-08d0-49bf-9d8c-744ba9c65a65"
                    }
                  }
                ]
              },
              {
                "id": "61a49aa1-aa1b-4224-931f-af502fc95b15",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eac6ab54-bfe6-47f2-8011-8a889fe59475",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e157f96b-22c5-45eb-966b-5933c6a12629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "616ab6f0-f641-42e7-aed8-5ab2528fc6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a0ecb7-cd88-4439-b4bc-43f59b37865a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b6881a-9cef-4a78-bb78-3c2b59329a01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c53243a2-36de-4cd4-9d10-795da4367e03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e24bce98-6ccf-46a8-9673-af8460442e51",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c66bb055-e845-4314-803d-67105093ac79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1913decc-6ca3-4ebd-9e84-e89cbf7bb994"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90331dc3-c2f7-474f-84e5-34e469c0510e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dd0a66f-164f-4688-b5a6-b39380ca0a89"
                    }
                  }
                ]
              },
              {
                "id": "982a07b4-68f2-4d1a-8f23-afa5239381de",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "463710d2-41e8-4522-a9ec-220b3156c958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d3b26d4c-cfd0-4a58-a038-e4932afbb96e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2309ed3a-ae65-4306-b0ff-57c326702c98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f15d0677-a899-48c2-af54-027110944bfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5704e73-a7aa-4b73-82d5-1749ae731579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1062cf87-1435-4235-a732-c4b4dfc3b828"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2227fbf2-30b2-4a24-92d2-c5374ccab45a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9f6e182-dda2-4bd4-ac87-858228a144c0"
            }
          }
        ]
      },
      {
        "id": "a3e9ae2f-36cd-4e5d-b16a-248cacb922f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2082b4b5-c861-4ed6-b383-bf1d0b915034",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3934000b-e837-4aca-a4bb-a0a308ea82dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76663baa-8c0e-41c5-9ba4-41be0b623af0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "19150f60-dfb3-43ff-9f98-06799af98834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d186d1-3286-4df7-ba6c-9999094ea07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13e17e04-2c40-4e67-9356-7de943f79545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb70789a-6cec-460b-bb02-96a52b8d6a61",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1c2c0d-bebd-4cb7-9d7e-17b9e58dd9a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f67f86de-97c7-4659-9a54-58aee0e18077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd6d828-7797-46de-b099-9817ab7b938d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b596fe5-ce0c-4af0-9a6f-d3aa0d9fb603"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5724fcef-2d97-4626-8b33-b80db08def38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93364544-94de-4579-a115-4cdfd71a5159"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efe79b07-ade4-484f-9d85-4a0d635cd75f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e00d52b-5b58-4e0d-9c0b-16b25a28b22a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9b2e48c-a8c1-4a62-a37a-280844f92e1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5756cff8-45a4-4b07-9fe7-a2d0b7c4e2d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "378c9e71-cd93-46b6-93b6-dd89226df8e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07bd654f-1dda-4c8a-97a7-e792a256a5a9"
            }
          }
        ]
      },
      {
        "id": "5a4b68c4-f971-46eb-a3ce-c85edc4c4b6b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7eb3972f-a0eb-49a9-9d2f-20c328dc037e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "714aa0a3-552d-44a2-a441-034e06cafb25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41f0f421-8940-4c8b-a3f4-7125b8c299e4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3224367a-9d6f-4b6f-b178-b21a1fb5bbf3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e54c72-2849-4106-8fd5-26f2c7973124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b075b2-7abf-4a1e-a9a8-2a5c2b1c1674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f004cae-76d8-4cea-ad34-e20c37228e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c939e63-33aa-40fe-b10f-5e6effccd65b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e44da1-a323-448c-a635-c92324117236",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1e42ec57-f083-498a-9f98-b80ed283b22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d8d70-4299-4d9d-aa63-474f1cce1931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "560a8983-2ed0-448f-ada0-4c499ff5132d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7791a94d-0c2a-46d6-907c-7a29596b2808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fa8a62e-e7ca-4630-b0a8-da3ae4449f63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84b0cd5d-000c-4728-a9e0-d195f5d771d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e55d62-0035-40df-9c2c-7bdcea4759fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05f790d9-ea03-4cf4-9feb-4f89492e0897",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf0c168e-19d3-4e86-86fc-b08bd840fe92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "478cb200-b942-4059-8e92-ae4ee378128c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "014c0880-a827-43a4-86f2-800c0b758704"
            }
          }
        ]
      },
      {
        "id": "1d3eaa5d-787f-406a-a99d-aa805ec52b53",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "03d8d347-d154-4a8e-95f3-ec34eb995fb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db5383ff-fe80-44a0-97de-175ce39aad28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4790f558-ff7e-4b2c-9d4c-cd5a143844df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02d14cd-bd65-4e7e-b5ce-06a7107013e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d53434c-dd7f-4372-ad71-b14d6fda5804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747ae632-f181-4a63-972c-1965307b93fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78349d3b-ffb0-4786-8588-dd541c40cb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073e144b-4453-4ee2-aa90-356f044430c3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b891f2-01d5-45c6-9ded-28efb231a75e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7ec222-3448-4a97-b1f1-79f8900432b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f195855c-9682-4b01-8094-c71dec6fda67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f8d22c-8150-4546-99e0-93bbeb156795"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddf32492-af9e-49ed-a3ee-9a16df3a066b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2b7b44b-c9ca-4e0c-afa5-a62abb2b62e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b2a7678-c844-43eb-b750-3949f49ee2c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e189c1a-0fa2-4281-9c0a-d1f3516e87b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "429d85d3-1379-4a73-baab-17ca55f8c5e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "628000d7-ecb7-49a2-9104-d7781c7b49d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a93790e-caff-4a21-9858-c3b06b6993e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f709ff9-095a-40fc-a844-222cc4041396"
            }
          }
        ]
      },
      {
        "id": "38d230b6-0085-44bc-9cd6-74b5b5b14d1f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "236f8dc0-0168-40e4-8180-ec9e81625e96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "955432ad-eb3a-4828-8b25-8136189a8ea8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "055bf37c-c4ee-4357-a663-db31925c74da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef0a479e-633e-49ee-8888-475bb7c0e996",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bb33971-f799-42d6-858c-91682fe9e36c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 20.634615384615394,
      "responseMin": 6,
      "responseMax": 505,
      "responseSd": 55.99527069527109,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682728550874,
      "completed": 1682728566703
    },
    "executions": [
      {
        "id": "bb5fad37-9550-4b9a-a973-d0f3148e7ca7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3fb5e8cb-3c68-4ffa-85ac-c2f7422c9bce",
          "httpRequestId": "7c6c3b40-1b91-4252-a4b2-fb81b9053110"
        },
        "item": {
          "id": "bb5fad37-9550-4b9a-a973-d0f3148e7ca7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66d86210-263c-45a4-96a9-6b077b21ba01",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "817292cb-2de8-41dd-b705-65c7e9727212",
        "cursor": {
          "ref": "8839a0e7-9dc6-4681-8011-717ce8e091bc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "075ccbfa-0674-45d2-a294-8d59ad1bf95f"
        },
        "item": {
          "id": "817292cb-2de8-41dd-b705-65c7e9727212",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "07a6d310-69e5-4411-8e34-9636f5917e5c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "806600d1-2c2a-4119-a8cd-bcd63cc1de7e",
        "cursor": {
          "ref": "8571ae31-bc26-4214-9ffa-28a890e2dec7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41af4b4f-8160-4c09-a13d-9cd69792079c"
        },
        "item": {
          "id": "806600d1-2c2a-4119-a8cd-bcd63cc1de7e",
          "name": "did_json"
        },
        "response": {
          "id": "d000b59e-bfd0-421c-a869-49a5e9f9b1fb",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cda2af6-a973-42de-8028-b1d1caf991c1",
        "cursor": {
          "ref": "3d1c47b3-8906-4371-a400-4c433d004e0a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "38a21796-c09e-4f58-afd5-4cc3cd65fd0e"
        },
        "item": {
          "id": "9cda2af6-a973-42de-8028-b1d1caf991c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "685c7a50-832f-417a-acee-29be5efd2a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cda2af6-a973-42de-8028-b1d1caf991c1",
        "cursor": {
          "ref": "3d1c47b3-8906-4371-a400-4c433d004e0a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "38a21796-c09e-4f58-afd5-4cc3cd65fd0e"
        },
        "item": {
          "id": "9cda2af6-a973-42de-8028-b1d1caf991c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "685c7a50-832f-417a-acee-29be5efd2a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf8db3d-c482-461f-9ff6-19f897424bc3",
        "cursor": {
          "ref": "4c403e72-a3bc-46ee-be7b-4b7f58fe7ad7",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4483f9f2-eb2b-4ae8-960a-b57b83ba6644"
        },
        "item": {
          "id": "acf8db3d-c482-461f-9ff6-19f897424bc3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9dd1f3e1-fa03-472b-a8d3-5faed1810095",
          "status": "Not Found",
          "code": 404,
          "responseTime": 129,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e764ae01-9e4d-42cf-acb5-82b612e6b666",
        "cursor": {
          "ref": "8fe9455d-2eb5-4a12-a48d-2b11f125ddeb",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "11fe06f1-cd34-4c55-a36d-32e711b2b0e1"
        },
        "item": {
          "id": "e764ae01-9e4d-42cf-acb5-82b612e6b666",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0ad1a4ef-1070-4bc6-9a92-39774e225996",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aeada6-bd7f-4629-8d31-2138575349b6",
        "cursor": {
          "ref": "652a777b-55cb-43bd-8ed7-4d477bcaa0de",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa297d2c-38fa-4af0-b7ed-49b2c8009a08"
        },
        "item": {
          "id": "72aeada6-bd7f-4629-8d31-2138575349b6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "561c6f8c-2e85-478e-bf5b-39d8b2b17c34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942db59c-8e1f-45ec-960d-67c5a9c4ba11",
        "cursor": {
          "ref": "c7a80034-7659-4393-8cdc-ff942403a520",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "03414ba7-9d06-4810-bb4a-4056b589ed4d"
        },
        "item": {
          "id": "942db59c-8e1f-45ec-960d-67c5a9c4ba11",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9a79aa6c-5cbd-4df5-978a-e649c53180c1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942db59c-8e1f-45ec-960d-67c5a9c4ba11",
        "cursor": {
          "ref": "c7a80034-7659-4393-8cdc-ff942403a520",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "03414ba7-9d06-4810-bb4a-4056b589ed4d"
        },
        "item": {
          "id": "942db59c-8e1f-45ec-960d-67c5a9c4ba11",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9a79aa6c-5cbd-4df5-978a-e649c53180c1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73e2fdd-30aa-47a2-a72e-42e558053818",
        "cursor": {
          "ref": "b0b35ce7-c818-418a-afd8-0646feedf59d",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "250ddd6a-1f5d-4494-978a-431bae56063e"
        },
        "item": {
          "id": "b73e2fdd-30aa-47a2-a72e-42e558053818",
          "name": "identifiers"
        },
        "response": {
          "id": "806d4d77-0d9c-4c85-b9b8-80d53032aed9",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7717ba21-5e20-4df7-a800-e65321e9966b",
        "cursor": {
          "ref": "d601a8c1-5d8d-4f75-85d7-6d28b2274130",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12c7c50a-1bcf-4ff2-b0f4-1fbf6aebdb14"
        },
        "item": {
          "id": "7717ba21-5e20-4df7-a800-e65321e9966b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "19e1f1c5-3272-4a3e-88c2-f4cb9beffbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7717ba21-5e20-4df7-a800-e65321e9966b",
        "cursor": {
          "ref": "d601a8c1-5d8d-4f75-85d7-6d28b2274130",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12c7c50a-1bcf-4ff2-b0f4-1fbf6aebdb14"
        },
        "item": {
          "id": "7717ba21-5e20-4df7-a800-e65321e9966b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "19e1f1c5-3272-4a3e-88c2-f4cb9beffbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2525ceb8-4b27-4f2b-909d-dca053d3db53",
        "cursor": {
          "ref": "7afafacc-0d21-496c-89d9-b5091731873d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a89c5a73-ecd8-4655-a652-a50f17db22d4"
        },
        "item": {
          "id": "2525ceb8-4b27-4f2b-909d-dca053d3db53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c744322c-78bf-4ccb-8736-4848f6dad262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b2a3b-2281-4c4c-8557-077311c5991b",
        "cursor": {
          "ref": "586cef20-3476-4d65-8cf4-5cb0bad59693",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "25e85a35-c49d-490b-9ebd-425d357396cc"
        },
        "item": {
          "id": "513b2a3b-2281-4c4c-8557-077311c5991b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f5641cf1-d7a7-4719-830e-6496dcb83b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db17634f-b97d-4581-83c0-14c126cbc7d3",
        "cursor": {
          "ref": "9ae98bdf-6d9f-45d0-8600-e7f1bcb1255e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8a679b55-3ada-4ad3-8762-7a2e96ced38a"
        },
        "item": {
          "id": "db17634f-b97d-4581-83c0-14c126cbc7d3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f7bb9b75-850c-4d07-876f-d34406b43c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fc74f7-dc80-409a-8a4d-26dd592b3d99",
        "cursor": {
          "ref": "73657282-9780-43b2-8500-db05031d329e",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3a5a8f8d-1e1b-41e0-b9e7-47b2c779b0f6"
        },
        "item": {
          "id": "e6fc74f7-dc80-409a-8a4d-26dd592b3d99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05543260-0901-4600-967d-8878f05712a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db148ab-68fe-4ad9-84fd-710978b054b2",
        "cursor": {
          "ref": "73472b98-9ab6-4038-a9f4-7f7c08da36d6",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e856049d-63f3-4ebd-8584-b417319a56e0"
        },
        "item": {
          "id": "5db148ab-68fe-4ad9-84fd-710978b054b2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ec0db34b-f076-4dd8-8256-a1fafa38b9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4c5f95-5366-4877-abb3-008a9749d917",
        "cursor": {
          "ref": "54f6457e-8435-42f3-988e-6dd3f4f2d00f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8f177c1a-1e72-4ff3-8859-0b4e73b5675b"
        },
        "item": {
          "id": "ac4c5f95-5366-4877-abb3-008a9749d917",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9617aa3c-673d-4f92-a1cc-7ec0349208f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91305d0-6ab4-4bf1-b98c-10c06a6883fb",
        "cursor": {
          "ref": "6a8b7768-d066-431c-88a7-8c9b87d54641",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e99f6033-88b8-4fbc-b4fa-caf524703a29"
        },
        "item": {
          "id": "d91305d0-6ab4-4bf1-b98c-10c06a6883fb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1cf55322-61c2-403f-b33a-10517a1400d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78d89a8-3e20-42dd-85b8-4d2567d730a7",
        "cursor": {
          "ref": "61e8d3c0-8460-4b2c-8007-c86a9276669d",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b9a2adc-b99f-4562-8bbf-7ebf50bc938b"
        },
        "item": {
          "id": "c78d89a8-3e20-42dd-85b8-4d2567d730a7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5986e5e2-9ef6-4b3a-9860-4f387fddf5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce079202-baf5-47e5-b1fd-f5b91c6a5356",
        "cursor": {
          "ref": "5739ed6d-1c9c-4a2a-89af-0e1064b7775b",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "90a2e74c-89ba-4297-a8c3-682ffaa333c3"
        },
        "item": {
          "id": "ce079202-baf5-47e5-b1fd-f5b91c6a5356",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58ee37c2-ffc4-40d3-96f2-6de840a18830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b0924b-26e9-4532-bb53-1d11a247b812",
        "cursor": {
          "ref": "cb6a2e7f-e79f-4305-aca7-a5f63cd1c9c1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4e47c058-9cc7-4f70-810d-a0fa023b4f1c"
        },
        "item": {
          "id": "e6b0924b-26e9-4532-bb53-1d11a247b812",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c7279ca1-6295-4961-993c-2212deb0ac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53bf618-59ac-4c6b-94e5-b512cb1ee508",
        "cursor": {
          "ref": "65c71e08-a3fc-4685-b648-9da9101690c6",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e3235c37-8456-4224-a612-d8b0b54acdf7"
        },
        "item": {
          "id": "d53bf618-59ac-4c6b-94e5-b512cb1ee508",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2258769a-f54d-4adb-8931-d0f9ea2efaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6042959-f0e1-4050-95a7-a8912d44b04a",
        "cursor": {
          "ref": "4a3094b1-144d-40ed-ad72-618d07daae01",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55019c78-1f59-4039-9202-33f0e6eb9a15"
        },
        "item": {
          "id": "e6042959-f0e1-4050-95a7-a8912d44b04a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2e68cbb7-9eff-4ee2-9d54-32b4e7a9c682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e57954-c274-4502-99bc-5118cd94246c",
        "cursor": {
          "ref": "6a5fe8b1-787f-4491-9857-c2ac8b555545",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "67596a60-de2b-45d5-8209-50c414f2885e"
        },
        "item": {
          "id": "95e57954-c274-4502-99bc-5118cd94246c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d303e244-8d52-415a-97c3-1bc9cade5183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96042036-ffe5-4bde-a145-dca6b0ba7502",
        "cursor": {
          "ref": "ce1a14ac-14bb-42e4-b851-22c9bf00bc4d",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "026a99a2-f907-4877-a711-48210b3e80a1"
        },
        "item": {
          "id": "96042036-ffe5-4bde-a145-dca6b0ba7502",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6e2eb439-3823-41c3-a202-2a7d6c2b6bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec4d77-b273-43d7-a5a4-5da92329e794",
        "cursor": {
          "ref": "d92797b4-8999-44d2-a0fe-ca481634ec5c",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "14c6dba5-d194-44f9-95bd-a04bfd8df591"
        },
        "item": {
          "id": "8cec4d77-b273-43d7-a5a4-5da92329e794",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ec61e176-b838-4cf4-87cd-b4cc1a4e9c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439d8a8c-0d00-44fa-9d56-8094fc6b682c",
        "cursor": {
          "ref": "03e4a1ea-19c7-4e8a-90a3-18855479baa2",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6c421b6c-f1b3-4379-845c-76b7c28ac53d"
        },
        "item": {
          "id": "439d8a8c-0d00-44fa-9d56-8094fc6b682c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a99d0918-5b5b-4b0f-8c93-4dd200584e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de4197d-c21b-41b8-bb54-6d0ab274138a",
        "cursor": {
          "ref": "6cfaea53-2a44-44c9-bf09-caf1d11adb4b",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "eea421c5-c93d-488e-89e8-614e84044619"
        },
        "item": {
          "id": "2de4197d-c21b-41b8-bb54-6d0ab274138a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63afe472-ab9b-4778-aa6c-00f9d9873ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b197ca8-8eb7-4f71-acbf-bf7b03ff1c7f",
        "cursor": {
          "ref": "a36fd315-806b-42ee-9600-fc668f756ecd",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cf212963-006f-4151-a031-fce4d7c8bded"
        },
        "item": {
          "id": "9b197ca8-8eb7-4f71-acbf-bf7b03ff1c7f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d04adda9-9685-4f00-aded-2bb9f20af2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e53ea-f9d6-4531-a7ca-5424ab841ea8",
        "cursor": {
          "ref": "25a7cb04-50c5-4150-aaf4-37956cd74f1c",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d1f91103-dd64-4186-9086-025e3d18e639"
        },
        "item": {
          "id": "465e53ea-f9d6-4531-a7ca-5424ab841ea8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f8202dec-663f-4f1c-803b-bc17f5d700b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d953fd74-a30a-446d-ac97-36a1ea9660cd",
        "cursor": {
          "ref": "cfe1d41d-e7b5-4d28-a87b-f1c5e75b8276",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2cdd1a68-bfc6-4030-a31c-86b7381c57d4"
        },
        "item": {
          "id": "d953fd74-a30a-446d-ac97-36a1ea9660cd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "07f0538a-3b76-40cb-aa52-8b93c4d410fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e169a13b-2581-4504-879d-30acecfff72c",
        "cursor": {
          "ref": "203ea007-e7b3-4d3a-aa43-f55bb1c6eb15",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3a6b2bbe-afc1-42ad-bd67-65fca42422ff"
        },
        "item": {
          "id": "e169a13b-2581-4504-879d-30acecfff72c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5a56cde5-564f-4c8f-ab85-f60d0d168096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12dad0f-c6d2-44ed-b6f4-c5aac17ac6f6",
        "cursor": {
          "ref": "f4eb08fb-fc8c-4bcc-88bc-9529a18a5ee3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b3f81a52-a15a-41cc-90ce-c4723e5940a5"
        },
        "item": {
          "id": "a12dad0f-c6d2-44ed-b6f4-c5aac17ac6f6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e3ebf841-f51b-452d-8914-9362122c330e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8756054e-cb42-4522-9423-85e5dc5c4ef7",
        "cursor": {
          "ref": "3b903bca-11d5-405b-a6eb-6a4c548acb27",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5be6b352-d86b-4874-b1b8-0213b58028fe"
        },
        "item": {
          "id": "8756054e-cb42-4522-9423-85e5dc5c4ef7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "535e8710-af94-400c-9252-541905d4f16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b15be8f-541f-40f7-9ff8-c81544465769",
        "cursor": {
          "ref": "c7c21dea-460d-47cc-b30a-8ba6e321dbe5",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "041939eb-6af1-42c8-9bba-b62c9afb2dbc"
        },
        "item": {
          "id": "5b15be8f-541f-40f7-9ff8-c81544465769",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "32f27a81-50d0-41ae-9782-5563fb111de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbfd0d4-fc13-437b-b967-216b51f12379",
        "cursor": {
          "ref": "2c3fa6a3-e1cf-4d53-a60d-6b421606072f",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb6a6b22-c71d-43b6-862e-191ae63f966c"
        },
        "item": {
          "id": "5dbfd0d4-fc13-437b-b967-216b51f12379",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "81e9bdb0-7cd0-454a-9b2d-3c7c04d747bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874585e5-9eff-4ce3-b036-95e55949522f",
        "cursor": {
          "ref": "d93136b0-9802-4a2b-9d7e-15a0e413e0a6",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9746a12c-58e9-499a-af84-dde0db64ac88"
        },
        "item": {
          "id": "874585e5-9eff-4ce3-b036-95e55949522f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "95a9fb87-1b63-44e4-a840-0381d7a7d301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34390733-3b11-4579-a657-8ecb67b5da57",
        "cursor": {
          "ref": "b1458425-6620-4f6c-ae47-59ee1fe39809",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dcb2cda2-1f2e-4ad3-ae3b-4590edd3d8bc"
        },
        "item": {
          "id": "34390733-3b11-4579-a657-8ecb67b5da57",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b4a4908d-4f0b-43c5-ad34-b30fc52d9fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc49134-b632-4146-a343-e017a7211919",
        "cursor": {
          "ref": "f2e841ce-5d09-4ee2-8bbf-e55a3f7108a5",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "87900b9f-0ad0-4d57-b5f5-092c46b41623"
        },
        "item": {
          "id": "edc49134-b632-4146-a343-e017a7211919",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db3aa4a8-d362-4385-b4c8-2b0ef737ee55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84136e4d-b95c-473a-9627-3ff886bc1cc5",
        "cursor": {
          "ref": "5c985c92-d372-4b17-9f58-a9dc36f8db8b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "84b5bcc1-d7ca-4ace-bec1-29207755cfe7"
        },
        "item": {
          "id": "84136e4d-b95c-473a-9627-3ff886bc1cc5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6eaa83ce-db5e-424b-b1b2-93e912d6a971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31719d9-cc1e-4589-b235-19f32214dc00",
        "cursor": {
          "ref": "27fc372f-9ca8-42a8-b2ae-3bb21f240f71",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "29a3b79c-ed46-4f9d-8851-301391325af1"
        },
        "item": {
          "id": "a31719d9-cc1e-4589-b235-19f32214dc00",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8f1a6f87-67c1-412e-aa1b-a1687125c42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d18ffa-3d62-4195-aa78-7b8e97a5fc38",
        "cursor": {
          "ref": "6a51fa92-ad8c-49b8-a383-74ef0563dca5",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "73cd7b5c-01b9-4a21-a4ed-0dc7d82b7f52"
        },
        "item": {
          "id": "b7d18ffa-3d62-4195-aa78-7b8e97a5fc38",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3ca2c9a-7079-4b89-8bf8-dc6d1f7fc04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995d2965-21e3-489e-9ae6-aa28d2bd6c34",
        "cursor": {
          "ref": "0fdc2a86-4842-4194-91c2-b3ea56eaf365",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d556df94-468a-43d6-8486-018fe5a2b449"
        },
        "item": {
          "id": "995d2965-21e3-489e-9ae6-aa28d2bd6c34",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0d87e7b9-7dd3-4e5f-9b28-da3075f7e526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dd4f31-eb85-4a76-a9b6-1b7c8c8eba48",
        "cursor": {
          "ref": "48016061-09f5-4773-862e-fe94d847ad93",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "814f8b18-8ba4-487a-b614-8c6803ecfa2b"
        },
        "item": {
          "id": "d7dd4f31-eb85-4a76-a9b6-1b7c8c8eba48",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a41ab702-a657-45a0-a9a2-9bf6e215e955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ae0f50-56d5-44f8-a3e1-5cb60fa998b0",
        "cursor": {
          "ref": "e77cf62d-e47d-45e2-9d23-6c2b6e074900",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7864ab0e-f279-42bb-ba60-eb7ebdc05230"
        },
        "item": {
          "id": "b1ae0f50-56d5-44f8-a3e1-5cb60fa998b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5291f3f8-8a58-4d43-846d-9fd5c24ccccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc883f7-1837-4223-b1d0-eb26f0abc342",
        "cursor": {
          "ref": "3ccdaf4b-0744-457e-afb8-f8afaf0ea58e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75810205-fe14-41ba-b894-f49bda81b8df"
        },
        "item": {
          "id": "afc883f7-1837-4223-b1d0-eb26f0abc342",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ba5a9114-d64a-441b-86f0-84c09884afa6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c38aa8-ede9-4a6a-86bc-c45a8d5f2d09",
        "cursor": {
          "ref": "e069c2dd-1993-4134-a174-f1b3d0593055",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f21cbee2-cf24-4a4c-a612-e8e60fbc585a"
        },
        "item": {
          "id": "d0c38aa8-ede9-4a6a-86bc-c45a8d5f2d09",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9fec50f1-3c37-4b8e-a6c2-fce3070bbbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca90e149-f225-4b4b-9813-1309c6d54986",
        "cursor": {
          "ref": "085a3470-b8a8-429d-b33c-1ad22d777dfb",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a1121d5f-54e8-4b89-91d4-e68dcdcbfce5"
        },
        "item": {
          "id": "ca90e149-f225-4b4b-9813-1309c6d54986",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6c69bd76-3926-4e3d-ade0-1d3ec3a2cc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8781ee61-3b83-4203-ac4e-d9c1810f0d31",
        "cursor": {
          "ref": "01726795-5bae-42b7-8fb5-d9999800405c",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c5e86f7f-6829-4fb3-959d-ccd3c0cbb88d"
        },
        "item": {
          "id": "8781ee61-3b83-4203-ac4e-d9c1810f0d31",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f08e3f4b-ecb1-4ed0-9797-f4693fccc800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6d1113-a112-4405-961c-3863fa9149be",
        "cursor": {
          "ref": "da95bb05-52a5-4e80-a9df-5472b0f9df24",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d73a96e6-9ad7-4a7a-9ed2-91eca54e089c"
        },
        "item": {
          "id": "9d6d1113-a112-4405-961c-3863fa9149be",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "347d67bf-8fda-47aa-ad15-5963420d6433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cba49f-a2f0-45dc-91ff-18c8c08402d2",
        "cursor": {
          "ref": "866efd8d-e871-4629-bf38-d946ca6f7479",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "67fc5f5d-f9dc-40c1-a31a-64b6d083f46a"
        },
        "item": {
          "id": "75cba49f-a2f0-45dc-91ff-18c8c08402d2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "294f119a-caf2-4936-b6bc-b07854e85b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e885849-cb01-4e87-8fab-77db8e909b4c",
        "cursor": {
          "ref": "85188f02-81f9-4e0f-9ce2-3f500b7cad8f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "166de328-4961-48a9-ae7b-5d34cc1a418e"
        },
        "item": {
          "id": "1e885849-cb01-4e87-8fab-77db8e909b4c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f592805d-b7a7-44b9-86d6-d7c8e53816a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da8991c-5462-4734-abe6-c64b2a1eb174",
        "cursor": {
          "ref": "422d050c-9f5b-4277-93fb-80154b87a323",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0430087b-868f-496b-bddf-90605ecd4e7c"
        },
        "item": {
          "id": "5da8991c-5462-4734-abe6-c64b2a1eb174",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b4ea1328-5461-404e-8561-0e32c5dfb496",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1abc5b-065f-459c-9f3d-48fee8e0fa45",
        "cursor": {
          "ref": "20309701-a6d7-43b9-9045-cbf708dd5380",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "04dbc156-9135-4fe4-acd2-2fcd5620ca85"
        },
        "item": {
          "id": "0d1abc5b-065f-459c-9f3d-48fee8e0fa45",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b69098e-d489-42a3-b847-559186371997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af750425-5882-4b75-bee7-c94872d6a42b",
        "cursor": {
          "ref": "82799080-eb87-4908-8520-a70f801890d4",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "83d0a146-1c88-4268-8e00-6406d8b68f80"
        },
        "item": {
          "id": "af750425-5882-4b75-bee7-c94872d6a42b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8163a12d-bd55-4398-992d-d3e94c843601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84b6e4e-eab6-45fa-bfc2-f7a9094c3a9d",
        "cursor": {
          "ref": "a440f755-9baa-4719-9ce8-c78c21494d82",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "34cb7c9c-fe42-43c8-8448-35bd0f6509cd"
        },
        "item": {
          "id": "c84b6e4e-eab6-45fa-bfc2-f7a9094c3a9d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bbe5b067-e39e-4a7b-b506-7c7da6d47d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd99b71f-c7f7-4bcc-8979-35b354d37baa",
        "cursor": {
          "ref": "8e6040f7-15e0-4447-acaf-9e725398269b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2b076097-1ae4-4b3f-8633-65fd74cd1dae"
        },
        "item": {
          "id": "fd99b71f-c7f7-4bcc-8979-35b354d37baa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47cc8a63-24c9-472e-983f-23b3a5ed134c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e77e55c-a4b0-47d6-95be-dcf44d3ded9d",
        "cursor": {
          "ref": "1771f58b-8036-451e-bf04-90d0abc36c64",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f703ff31-2e00-4d3b-8c3e-5c4795c11848"
        },
        "item": {
          "id": "9e77e55c-a4b0-47d6-95be-dcf44d3ded9d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "865246a7-ccfc-480c-8479-f9741d0eda5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e9f98d-f37b-4d48-b579-fd07ef6fe7ff",
        "cursor": {
          "ref": "5ad4216f-937c-403e-8e08-3a5ed6ea6fd5",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "30746243-a5cb-4935-8045-1e6b6597deb3"
        },
        "item": {
          "id": "a8e9f98d-f37b-4d48-b579-fd07ef6fe7ff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5c9c0085-49e6-4e9d-8fd1-5f194881a2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aadc3e-85a8-408c-ab1b-2585a4740fac",
        "cursor": {
          "ref": "e4ff2630-3bbe-42f3-97f7-b34708ce3dc3",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "06a3e738-05f1-4a07-b92f-a7409f8eeaa5"
        },
        "item": {
          "id": "63aadc3e-85a8-408c-ab1b-2585a4740fac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "224f9ee9-6bbd-4a4e-aca3-963c168002d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5de3c67-1447-486b-b8ba-2ab818853566",
        "cursor": {
          "ref": "cf90c8fc-7492-481f-bffa-3bcd9ad9d55c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b608dcb8-b0c9-4e50-9301-b18928614f9d"
        },
        "item": {
          "id": "c5de3c67-1447-486b-b8ba-2ab818853566",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dd73d2a3-d814-4cb3-97a5-aca66490b344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc63c4-fe68-4ddf-bbda-4a19ce870e33",
        "cursor": {
          "ref": "ef123598-e7d6-4c68-8433-6612a02165cc",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "15826ed7-815d-45ba-ae74-4f326d995ba6"
        },
        "item": {
          "id": "0cfc63c4-fe68-4ddf-bbda-4a19ce870e33",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "719f90d6-37b9-4b17-b6d2-bbbc26515087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08e193a-70b7-4968-8d98-f811e6bf63a0",
        "cursor": {
          "ref": "0e68094e-1abf-49d3-99c3-b92693c817ca",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "148b236b-d091-4ff2-8da2-ed9b521ffac8"
        },
        "item": {
          "id": "b08e193a-70b7-4968-8d98-f811e6bf63a0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cf714711-8f56-43d6-9bb8-bd3b3ea6ed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9df2d57-72a7-485d-8f6a-dd4c9ba9b91e",
        "cursor": {
          "ref": "88b58113-c9a3-47d8-a1bb-d166fe3e018d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5fd9d559-f3fd-4876-854b-0a94b5693fe6"
        },
        "item": {
          "id": "d9df2d57-72a7-485d-8f6a-dd4c9ba9b91e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "00200743-1270-45a7-b3d2-c8e45c42087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7dfb1f-5618-4e59-84fd-e706340a49ab",
        "cursor": {
          "ref": "5a22dc16-4b4f-400b-978c-c74164e4b1ca",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "175c8a4f-da00-4bd5-9107-7b5956a41eec"
        },
        "item": {
          "id": "ed7dfb1f-5618-4e59-84fd-e706340a49ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eadf5f34-8882-4092-a30e-9c693c86e8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6de791-a93d-465a-a66d-02cb940b6025",
        "cursor": {
          "ref": "8175b8c5-9b8d-47df-a50c-4416c41aa65b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "680927b9-9df6-45c7-903a-fb37630e1e5f"
        },
        "item": {
          "id": "4a6de791-a93d-465a-a66d-02cb940b6025",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3471fa58-32e0-49e7-946e-9870b5bb3c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122af4c7-4dfe-4b5c-9b71-0ecf2c4d5ce0",
        "cursor": {
          "ref": "786a0bc5-b044-4e59-8e50-dbc49255963a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e253b336-205b-4045-ad68-958a98b7c640"
        },
        "item": {
          "id": "122af4c7-4dfe-4b5c-9b71-0ecf2c4d5ce0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5789089c-0a64-4295-8ce3-5671423a463c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8c77f1-86e0-4394-8e22-4c724fa5d454",
        "cursor": {
          "ref": "0edb8fb6-524b-4542-acf0-e1d3444ef2d8",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9e9f7342-86ea-4d91-8b91-9d2e08cbf8a6"
        },
        "item": {
          "id": "ed8c77f1-86e0-4394-8e22-4c724fa5d454",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "477bfa61-d290-45c1-89a5-5f3d25550aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69abd372-a541-48fc-bcb8-7605bf660ac6",
        "cursor": {
          "ref": "10f6897b-437a-4d67-adf0-3b41e9266cfa",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c84b9b19-6426-4bc2-8046-92e5dfdac2b9"
        },
        "item": {
          "id": "69abd372-a541-48fc-bcb8-7605bf660ac6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c8775144-58ce-4a71-bfd9-41b0ccd6a3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7c983b-b499-44fe-a48e-6fc3e62897a0",
        "cursor": {
          "ref": "0915c46a-6a45-49d1-aae8-1d4459d4113f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7b3e17f3-daf7-4a7e-ae22-f790c0f02aa8"
        },
        "item": {
          "id": "ad7c983b-b499-44fe-a48e-6fc3e62897a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3c0a8794-dad5-4e5d-8dde-79c42abeccdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd852997-d6a7-466b-a421-a7b76baa090b",
        "cursor": {
          "ref": "4eab5de0-5308-4ce3-881c-624010280592",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "51e11106-a7fd-4771-a8ce-509940908574"
        },
        "item": {
          "id": "dd852997-d6a7-466b-a421-a7b76baa090b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7e8a1507-722f-461e-99c7-d8e3b0ccf1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f88198-e775-43dc-ad81-1fc522297f27",
        "cursor": {
          "ref": "b4a23e07-0b3c-4917-abc9-2f6742b23cab",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5c9b7800-2cfc-4e21-a99f-c10e5a8d1215"
        },
        "item": {
          "id": "32f88198-e775-43dc-ad81-1fc522297f27",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "83b02540-bec5-4411-a114-1aeadd74cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddf7b80-2b23-40b6-9294-bf90100083d7",
        "cursor": {
          "ref": "06255ebb-3426-4ddb-8b2a-0201ae994623",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "417bfec8-3cb5-45d3-a36f-e7a8ad701e65"
        },
        "item": {
          "id": "9ddf7b80-2b23-40b6-9294-bf90100083d7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c109480b-63d5-4219-801c-0120e992f94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17512e9-2d93-4d4e-b1c4-c5230c3d616f",
        "cursor": {
          "ref": "4b331802-7d61-4d47-afcf-52569c2858a8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0e482ca6-93fb-459f-b9f9-2e06d81887a9"
        },
        "item": {
          "id": "f17512e9-2d93-4d4e-b1c4-c5230c3d616f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "68ad0393-2718-4e8c-86c5-24c157326b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a822596-f94f-4028-9a3d-7c492d7ba219",
        "cursor": {
          "ref": "874e80b0-ac8a-441f-a05b-4a49dd5e3fb5",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b9a1b2f4-2cd7-4575-906d-fb95c7ef66b8"
        },
        "item": {
          "id": "2a822596-f94f-4028-9a3d-7c492d7ba219",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cc8aca13-9c27-4535-a154-576574e9a618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be770929-0aa8-407e-ab12-8b88e5e35e66",
        "cursor": {
          "ref": "5ddfced4-6aa4-4ccc-bf0d-194895e976b5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b1d919f9-af51-402a-8698-2d922efff9fc"
        },
        "item": {
          "id": "be770929-0aa8-407e-ab12-8b88e5e35e66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0052c558-ee8a-4595-9de5-76714a6abc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50a6243-fbae-47f5-9f5a-418e6f558eba",
        "cursor": {
          "ref": "c8c66b35-5fb4-44a4-994f-83bfae6d8b22",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a8c22f7a-285b-4763-a936-e45e1cca489d"
        },
        "item": {
          "id": "d50a6243-fbae-47f5-9f5a-418e6f558eba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "afacc875-abb8-4b7b-a321-2cc546625380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d796e1-b2f5-4ed9-a449-646b146cece3",
        "cursor": {
          "ref": "0addab84-9f13-475d-88de-8cb6dbb7ba85",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f6dd8249-d237-46cf-8eb9-e00730325d7d"
        },
        "item": {
          "id": "07d796e1-b2f5-4ed9-a449-646b146cece3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9b3be3dd-28f3-4606-b78f-aa61cc1a6679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e5c30d-2db0-459e-bb05-c5b14cf51861",
        "cursor": {
          "ref": "a929ba6b-8f91-4d2a-87d4-70bc1660003c",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6c1af017-223f-447a-8187-c88bf5eb1039"
        },
        "item": {
          "id": "99e5c30d-2db0-459e-bb05-c5b14cf51861",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c3061d51-ed9b-4b5e-9b62-cf99730e1b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8d1e32-142d-4545-b148-5f6a6d698723",
        "cursor": {
          "ref": "c2c23a3c-ad4b-4955-9826-70de092353d4",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "00c7fda1-0959-4ff4-a3dc-1809c0f3c3ae"
        },
        "item": {
          "id": "eb8d1e32-142d-4545-b148-5f6a6d698723",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ab760dcd-296c-419f-816c-2c37438a4068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538ef81-121a-4bc3-908d-d6db5a0eef5b",
        "cursor": {
          "ref": "68f22ff0-d55a-44eb-b3a1-ff602dc5ecf2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "474daae1-b9b9-4319-8b0f-7c80fa3ac7d9"
        },
        "item": {
          "id": "4538ef81-121a-4bc3-908d-d6db5a0eef5b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9a92dfc9-f0fa-4d23-9051-b32e39a00163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae918459-06c7-4206-ad13-01481bb4a652",
        "cursor": {
          "ref": "088267ea-c9d5-4808-94d9-6227097e55b8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1eba3e12-858e-45c0-84bb-88614d059465"
        },
        "item": {
          "id": "ae918459-06c7-4206-ad13-01481bb4a652",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e26cc7a5-aa5c-4abb-9395-3a3e68d5e4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1080d0a-7933-441c-b06f-8fc29755cc65",
        "cursor": {
          "ref": "ccf38459-4472-49cc-a603-0a4f92435b56",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74b6ccb7-6ae9-4308-8f3e-5439dcb96ed3"
        },
        "item": {
          "id": "b1080d0a-7933-441c-b06f-8fc29755cc65",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "83962acc-3b6a-4cca-862c-55e39409bc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83acc6b2-8c0d-4f22-b7e1-5d763cbb8023",
        "cursor": {
          "ref": "59eed3ba-a031-4ceb-9f2a-fbfece964577",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a65545c4-8561-4aa7-8f89-2b98eac767b4"
        },
        "item": {
          "id": "83acc6b2-8c0d-4f22-b7e1-5d763cbb8023",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "daa69f76-55fb-4d79-8731-18a83aad300f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d87e0dd-19aa-4880-b378-b5eb66e2e031",
        "cursor": {
          "ref": "e599a62b-dae9-40a6-a988-72e31d768ab5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "96035b62-93dd-474f-a65c-e30ec52f06a3"
        },
        "item": {
          "id": "9d87e0dd-19aa-4880-b378-b5eb66e2e031",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2d0aa231-b0a3-42a6-8f7d-c6a92820619b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2c24b5-edf6-480e-934b-823d292bddfc",
        "cursor": {
          "ref": "31f078a7-446d-4d5c-b5e1-364c5730de2e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b142216c-16bb-4c48-a05b-e8c3d74fed7a"
        },
        "item": {
          "id": "ce2c24b5-edf6-480e-934b-823d292bddfc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "66bfb801-38d3-4974-b7e6-a71a0f966e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13ea09c-02df-4d38-964c-a926846b6a10",
        "cursor": {
          "ref": "fa998fc8-bda7-416e-b248-0acfbf1bccde",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "332d3682-aa53-4f37-89f1-51cc0f849a26"
        },
        "item": {
          "id": "d13ea09c-02df-4d38-964c-a926846b6a10",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09d9f35b-22f7-4b54-b430-a2a4b4ee4bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372e1e6f-2e16-475f-95b9-7d5a41bd7983",
        "cursor": {
          "ref": "2bff8c7f-62bd-4b1b-ba21-1862036df0e3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1f1c688b-0a0e-4f75-a103-b14a877d0635"
        },
        "item": {
          "id": "372e1e6f-2e16-475f-95b9-7d5a41bd7983",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "32df741d-a8e5-4b5e-9afb-a2f6f99f97c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93387e0e-a59a-4aeb-a023-71d850eeb0e4",
        "cursor": {
          "ref": "1aae3ba9-59a5-42b1-91cf-e2da5a6698e9",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b5baf5ad-afa7-43e1-a62d-b1285cbae08d"
        },
        "item": {
          "id": "93387e0e-a59a-4aeb-a023-71d850eeb0e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c8c10e8e-c684-43bd-bf2a-dbd7e4207acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4403619-9d8d-4ae1-bbae-02ad08743120",
        "cursor": {
          "ref": "d38225b7-9060-430f-8e85-1d23d3c90f5c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "458fb45b-7eec-45b7-b44b-3d72ede509ff"
        },
        "item": {
          "id": "f4403619-9d8d-4ae1-bbae-02ad08743120",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ceeab051-1318-46a4-985e-676ecdaa6e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaba9ac-b491-4611-a4a1-bb4aa5a919f4",
        "cursor": {
          "ref": "e3553be9-5f27-42a0-bc48-7b61df09c8ce",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0eb49f94-61ed-4f54-b728-1c3ff6ab3d3b"
        },
        "item": {
          "id": "8eaba9ac-b491-4611-a4a1-bb4aa5a919f4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d5085b71-c7ec-4998-b274-30d47845bda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c77e1b-e2e4-4190-a332-5df23d792794",
        "cursor": {
          "ref": "ba2d4049-94e6-4797-912a-d050da7efa87",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2f6b2147-5b3a-405f-a4bf-80377c9636f4"
        },
        "item": {
          "id": "b6c77e1b-e2e4-4190-a332-5df23d792794",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ed4d49e4-aee9-4459-a355-bc5ac39d5f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2362d9f-f0a9-423d-9b6a-079a03819f30",
        "cursor": {
          "ref": "f01c705e-c3c9-47e0-8024-4bc812b2c7eb",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "61b68382-0317-4cb7-bdd7-b2f649ba0e04"
        },
        "item": {
          "id": "a2362d9f-f0a9-423d-9b6a-079a03819f30",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e01db55c-757d-4cf9-90dd-bfb4630a302b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b25358-db6f-4c57-8e47-6d499432cc59",
        "cursor": {
          "ref": "c6ff9ca4-785a-45bf-bf64-59dcfee1fdc0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e3359b64-b4db-4d81-a1ce-04cd994142da"
        },
        "item": {
          "id": "a0b25358-db6f-4c57-8e47-6d499432cc59",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "81625a14-9ae6-4128-a51e-61fa9192c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a374b70c-1467-424b-a639-b0b07a0b4ed9",
        "cursor": {
          "ref": "2295c022-9f63-4ec8-9bdb-6b830aed5f33",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d6e9dcdf-4694-4846-8a86-a9e2cae5a2c0"
        },
        "item": {
          "id": "a374b70c-1467-424b-a639-b0b07a0b4ed9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "07598ae1-b94f-457e-89c7-a1820880ac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6735df58-724d-4d35-a1e5-029205bb6bcb",
        "cursor": {
          "ref": "b6156af0-d68f-46d8-b5b8-6eaddad21a3a",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "93023cbc-0afd-450b-b027-2d776dd3df3f"
        },
        "item": {
          "id": "6735df58-724d-4d35-a1e5-029205bb6bcb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a688bd60-4fd9-4cb9-926d-f3fe2aa44148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1cb810-a627-457f-8eee-da2de13459fb",
        "cursor": {
          "ref": "2ba84831-40d5-4880-bfaf-710fe7056bd4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "55b2a5ea-45ca-461a-9b52-4525a54d5b0b"
        },
        "item": {
          "id": "8d1cb810-a627-457f-8eee-da2de13459fb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52a979fb-1c28-48b6-ab91-e495baf56242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6a835d-2902-4012-84c2-3a093fbfcc16",
        "cursor": {
          "ref": "f73425fc-a466-4b11-aa86-daf72c155a18",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d144589c-9a80-44cc-a299-6e3f66b6a4a0"
        },
        "item": {
          "id": "ce6a835d-2902-4012-84c2-3a093fbfcc16",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "afde55e5-36e7-451c-873e-169a250b50e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce2ef6-e537-4baf-a209-0280e134522b",
        "cursor": {
          "ref": "1ac4c633-a34f-4b6e-9b97-364f7395ffe4",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e1373be8-21d4-45ee-9b3e-51d7841aa9ac"
        },
        "item": {
          "id": "f2ce2ef6-e537-4baf-a209-0280e134522b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9dbdb07a-0491-4c72-8080-d2629c81c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d225b-2d24-4f68-a34c-cb2b00ac2946",
        "cursor": {
          "ref": "c0e7365a-12c1-4df0-ba82-a2a556e26860",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8c7bf1b9-e2f8-45ef-b8e8-f675795ddac4"
        },
        "item": {
          "id": "eb2d225b-2d24-4f68-a34c-cb2b00ac2946",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "78711d60-235a-498f-923f-e72d0b54988b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b89c71-af5e-4de2-97a1-c3136bbbe15b",
        "cursor": {
          "ref": "01e26b07-897d-4e54-a839-9af018161194",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "db9e6be7-8cc5-4c6a-aa21-06c322d67f2e"
        },
        "item": {
          "id": "d6b89c71-af5e-4de2-97a1-c3136bbbe15b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "99ac8cfa-eb33-46cc-8920-6dfad1c50a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfb8835-2d29-4422-a950-b3221df56fed",
        "cursor": {
          "ref": "9e18ad4c-be03-4baf-a6c7-6383634b82b4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7bce1356-4fba-47da-b779-e15d897cfca3"
        },
        "item": {
          "id": "fcfb8835-2d29-4422-a950-b3221df56fed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "74107482-1400-450e-adf6-5a70b456fea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b46d1c3-d0c5-43fb-b1f9-45c8e821c3bb",
        "cursor": {
          "ref": "a27f5aa2-5af2-4293-8b5f-49d5200592b0",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "95e6e399-943a-4aeb-b406-db3ba518da7b"
        },
        "item": {
          "id": "0b46d1c3-d0c5-43fb-b1f9-45c8e821c3bb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "16b11c28-ed8f-449c-b6fb-e15c046ed9b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d0d4cf-1213-4d04-9486-925984a8aef1",
        "cursor": {
          "ref": "c4572cb8-e4e9-45c0-90fc-eedf86562a33",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5e5f6781-b490-47fe-aad7-45cc70d7e35d"
        },
        "item": {
          "id": "58d0d4cf-1213-4d04-9486-925984a8aef1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3b0bbf6a-649c-4a78-ada6-88d199628955",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 43,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813916a7-6d09-4a6b-aa8b-e9d7a1644367",
        "cursor": {
          "ref": "6ad23504-90df-4741-ba1a-4da8be862d73",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "74e824ae-ce1b-4abb-8939-b48c2de13b09"
        },
        "item": {
          "id": "813916a7-6d09-4a6b-aa8b-e9d7a1644367",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ac817e19-444b-47e4-b37c-bad094b68e92",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7762e1-66d0-4fc1-a756-cd201eafc1ff",
        "cursor": {
          "ref": "8bd5b2c0-96b2-4e50-a5b0-9f4b36cc5d77",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "259496ee-cce8-49d4-ba41-72fbe87839eb"
        },
        "item": {
          "id": "ee7762e1-66d0-4fc1-a756-cd201eafc1ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e92f0649-48e9-45ef-8f28-7fea79bed16f",
          "status": "Created",
          "code": 201,
          "responseTime": 160,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19bf65a-2394-4f5f-b4d4-e70d7e6a9e52",
        "cursor": {
          "ref": "a599bf29-2b2a-4279-9131-4fbc1978cd01",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ac16032a-ac42-49c8-9885-a617ce4ab712"
        },
        "item": {
          "id": "d19bf65a-2394-4f5f-b4d4-e70d7e6a9e52",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6ccbbbcb-94ec-4350-8b5e-ecccd0dab49e",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a03f5c-6712-4089-a5d1-ff4fc26ebef8",
        "cursor": {
          "ref": "02d95e2f-1716-428e-a083-1592072c1cf6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "63278e16-3ebc-4bd5-96f3-5748b9e3c99e"
        },
        "item": {
          "id": "47a03f5c-6712-4089-a5d1-ff4fc26ebef8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "76e1050d-29e4-43bc-8cf7-65344d2f257c",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5cf9c2-096c-48c2-b92e-c2f8bf9778c8",
        "cursor": {
          "ref": "f31f604e-6d5e-4b98-94bd-50d377b09209",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3b887bb9-7fa4-4560-9a3e-7943a8d46ae0"
        },
        "item": {
          "id": "be5cf9c2-096c-48c2-b92e-c2f8bf9778c8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b3ca655b-c853-4570-a4bc-c9c46e9504ae",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b3587-ea85-4f4c-be7b-4f1f1a0f85eb",
        "cursor": {
          "ref": "7177c167-2f70-4690-98c5-447ff70b3238",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6e946345-8e6d-4b98-a14a-c7bf3ce173ac"
        },
        "item": {
          "id": "361b3587-ea85-4f4c-be7b-4f1f1a0f85eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e197a34b-b40d-442a-bb77-ec38be3caeec",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18de853-73e1-468e-8e48-fd26fae59968",
        "cursor": {
          "ref": "5e728e89-6387-41a2-8d66-6ebb65d7b394",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c313806-3edc-4841-8889-9da70c2d4df6"
        },
        "item": {
          "id": "b18de853-73e1-468e-8e48-fd26fae59968",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d015eeca-eb78-4846-bd34-bffa42203d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18de853-73e1-468e-8e48-fd26fae59968",
        "cursor": {
          "ref": "5e728e89-6387-41a2-8d66-6ebb65d7b394",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c313806-3edc-4841-8889-9da70c2d4df6"
        },
        "item": {
          "id": "b18de853-73e1-468e-8e48-fd26fae59968",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d015eeca-eb78-4846-bd34-bffa42203d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2424a40-5d6e-418d-9b6e-f0064f5e121e",
        "cursor": {
          "ref": "e518e060-c260-4760-8239-ef6195317306",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a176efc6-04e6-46d5-9098-ce7c14c90cde"
        },
        "item": {
          "id": "e2424a40-5d6e-418d-9b6e-f0064f5e121e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a41346e-e9ed-4fed-8e17-065baba6e959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629e39ba-b3ca-467c-bdab-1edd6ed2302a",
        "cursor": {
          "ref": "16f91a44-ed06-48c1-ab1e-d59120157388",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "54dd2305-d21d-494b-a9b2-22014d6b5a42"
        },
        "item": {
          "id": "629e39ba-b3ca-467c-bdab-1edd6ed2302a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "571f2280-d63d-4a86-b6c0-0f0b18daa569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa240e2-53dc-4407-9394-158bbf2acf84",
        "cursor": {
          "ref": "69bcde28-2827-4120-9a32-fbeee01e2932",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a75b5395-f88f-418e-896a-c63948c36225"
        },
        "item": {
          "id": "9fa240e2-53dc-4407-9394-158bbf2acf84",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c0cbb9ef-ea59-4bcc-91f0-aee91066d531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93529b2-c63a-42fa-a1c6-4b21485f5df7",
        "cursor": {
          "ref": "457b6f6e-9cb7-45bc-a093-fcebb7cad426",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2477e3ce-0444-4cc1-b3b3-8aea06b70b29"
        },
        "item": {
          "id": "b93529b2-c63a-42fa-a1c6-4b21485f5df7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "426fd129-d1b3-468e-978e-0b7a8acc431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4260ae6b-4811-4d4c-9c70-837e43481ae4",
        "cursor": {
          "ref": "6831729a-84fc-4c68-ac92-e549ce0049f5",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4bf0c0ea-e809-4285-bac5-564b42516f3a"
        },
        "item": {
          "id": "4260ae6b-4811-4d4c-9c70-837e43481ae4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b6bfc47-16db-4926-a282-edd856c3dbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6982a1-d7a9-4d23-b15e-7f4b8cbba54d",
        "cursor": {
          "ref": "67844873-4eed-42f6-badd-c6e8c4ff2846",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9d770302-41a4-49ea-9980-1120beebe83b"
        },
        "item": {
          "id": "8d6982a1-d7a9-4d23-b15e-7f4b8cbba54d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14cb9457-3589-4c51-a59b-565ac332dbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c82d577-cf0d-4de5-b62b-52ecb4c14df6",
        "cursor": {
          "ref": "471666db-39fc-4d28-b9e0-b45896ab6fe5",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "881c0706-602a-4807-95d6-7b50abffc8ec"
        },
        "item": {
          "id": "1c82d577-cf0d-4de5-b62b-52ecb4c14df6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f18dbeb7-754a-4be4-8e8e-155a75385f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3433c2-139a-423a-bb2d-6e5a4471b230",
        "cursor": {
          "ref": "8630fdb0-1a0a-49c9-bc64-2f78cda1b1e9",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e69cf302-c110-4679-b6d4-cabdd7b6b6fe"
        },
        "item": {
          "id": "9f3433c2-139a-423a-bb2d-6e5a4471b230",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57965f40-9672-4135-9c86-c88fb6a0355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cd3a3b-d409-44ce-9eed-3c62cc76cfee",
        "cursor": {
          "ref": "28ef9c8c-ea0f-4d54-a2ac-ae4be3ce46e8",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a3e24f8b-a883-4128-9312-b785f1bde003"
        },
        "item": {
          "id": "09cd3a3b-d409-44ce-9eed-3c62cc76cfee",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03ca88a2-26ae-401c-84e1-9b4ae37eb8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620eaf03-201b-429f-998f-89b8621ac661",
        "cursor": {
          "ref": "dee7ae3f-7161-4b27-8fff-54a7a5c826c4",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9fd43378-606e-4246-8315-f3d8ff027fac"
        },
        "item": {
          "id": "620eaf03-201b-429f-998f-89b8621ac661",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f7069a9-ee38-4f3e-8ce4-76aaeff58df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48195d6-3627-489d-be28-dc28c9777dce",
        "cursor": {
          "ref": "52485b48-682a-4aa4-b6a1-cb1d89b83edf",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dbafdf44-f96c-45b7-95d7-6df577d0aa7a"
        },
        "item": {
          "id": "c48195d6-3627-489d-be28-dc28c9777dce",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6e915c8e-bcf2-4561-ac2e-4b0066a37c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e43998-f27f-4d33-91ef-3c2495e9d9cd",
        "cursor": {
          "ref": "08a6cbff-7b59-4c45-a298-0aa0913e679a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e212d5ac-a11d-4738-bb90-b783653427e7"
        },
        "item": {
          "id": "e4e43998-f27f-4d33-91ef-3c2495e9d9cd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dec7ef25-3cb4-4baa-8fa9-d70e250118fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8149803-17d6-4b5a-b4ac-bd718a0953e0",
        "cursor": {
          "ref": "0e57048f-fdff-4662-aa68-04e1484495e9",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2afd1266-1830-4cec-9442-9f66de0cc31f"
        },
        "item": {
          "id": "b8149803-17d6-4b5a-b4ac-bd718a0953e0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90f15c03-b697-46d5-b23a-9d8eef108b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8ead8b-31cd-4c81-9b48-66fc04605f3f",
        "cursor": {
          "ref": "25f0e041-ed2e-41a3-9014-46f505be5476",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a0ded27c-2059-44c3-9ba1-90753ba517f0"
        },
        "item": {
          "id": "6d8ead8b-31cd-4c81-9b48-66fc04605f3f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "069df94e-fbc7-434a-95d7-9a50b2418134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e7a6e2-9e9c-43a1-a2a5-e459c51d80ac",
        "cursor": {
          "ref": "d8ee88bd-4628-4af0-abed-dc795ce20df8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b71fb36a-3fb3-450c-a1e5-04f649e1e7d0"
        },
        "item": {
          "id": "09e7a6e2-9e9c-43a1-a2a5-e459c51d80ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "78f6239b-e966-47d6-b99d-057be4dc82cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867a6e3d-ed6f-48ea-9e20-29d1d5f50585",
        "cursor": {
          "ref": "0f6f4d7a-3bba-4e3d-9e36-439fdcfd69da",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62cf6940-f551-4b84-a82b-dae7b3b1c02f"
        },
        "item": {
          "id": "867a6e3d-ed6f-48ea-9e20-29d1d5f50585",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee00b083-6794-417f-b9d2-8ccb8b816f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e650ebf8-f532-414d-b046-ea1cb3e6a043",
        "cursor": {
          "ref": "858ceea6-a163-47df-905b-fad8da13f143",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d656d134-04b7-4d67-8429-af6c9d941ba7"
        },
        "item": {
          "id": "e650ebf8-f532-414d-b046-ea1cb3e6a043",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51cea870-62f9-4aaa-bb13-13d3af9da325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bb82a5-0f9c-4751-b28b-b777d6ddb12d",
        "cursor": {
          "ref": "c583d089-11c1-400a-9845-99443d4748ee",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bf933f24-2117-431f-832b-cbaa1cacae4b"
        },
        "item": {
          "id": "b3bb82a5-0f9c-4751-b28b-b777d6ddb12d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "58314ec6-a98b-42f6-9dbd-74614226611a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca978d60-982d-420e-b31f-655355ccaee1",
        "cursor": {
          "ref": "ab187fc9-fd29-4b59-9b20-87e2a313c3fb",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed46c906-10c1-41e8-a3d7-f1b788e117ac"
        },
        "item": {
          "id": "ca978d60-982d-420e-b31f-655355ccaee1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5036c40-8625-498c-b4d0-26676ac7dcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d291b2-2e90-4639-bf5e-400b8f96d676",
        "cursor": {
          "ref": "ccb09ed6-549d-4518-8f4f-e3c4f2d4f4d5",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f3d3197e-54e4-4d95-8d12-fc5db56c9c93"
        },
        "item": {
          "id": "d9d291b2-2e90-4639-bf5e-400b8f96d676",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "794b3c54-f984-4aed-96e3-af7382c803bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b6c663-c35a-49f1-bcd2-72a18d2e0a09",
        "cursor": {
          "ref": "d3016c65-226c-4ede-b0f2-ee83807edf6c",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c79475d5-b47d-4607-8a05-b00dbb9a4ba9"
        },
        "item": {
          "id": "71b6c663-c35a-49f1-bcd2-72a18d2e0a09",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9af644a9-749d-4707-abed-465b0eb525a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed29519-ceb9-42f4-9d02-f31aabf8b89e",
        "cursor": {
          "ref": "1ddd4bbf-66fc-4c30-bb85-daca1b64c424",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3924bf2a-5f72-4eab-a6dc-ce2c452c9e9a"
        },
        "item": {
          "id": "3ed29519-ceb9-42f4-9d02-f31aabf8b89e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7164afdd-3b36-4255-b5f9-8a35297e81fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038427d3-accd-46f5-a908-fe6ffc5014c4",
        "cursor": {
          "ref": "c3f9d3db-b154-41ae-a78a-2e2f1975ffdd",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd0971b2-763b-4449-82e4-3b138c51144d"
        },
        "item": {
          "id": "038427d3-accd-46f5-a908-fe6ffc5014c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67ac9350-cc7b-42ba-8178-33094f93175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c535011-7500-4a5b-a68c-dfd23927ebb4",
        "cursor": {
          "ref": "c427a045-3558-4106-b800-01a49233709a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6021c318-0fee-405a-bb0e-6846daeb67eb"
        },
        "item": {
          "id": "5c535011-7500-4a5b-a68c-dfd23927ebb4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58050d4b-ea16-489a-a8e8-904e807f37bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3851f521-8a66-4416-8f76-904e4c54e6a7",
        "cursor": {
          "ref": "65add10d-3f96-44c9-b548-b91bfa7d4be7",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d1afcd93-d3e0-4f09-a8bd-e8b28b22b445"
        },
        "item": {
          "id": "3851f521-8a66-4416-8f76-904e4c54e6a7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8dd447ba-4dd4-4e7b-b0a8-743459fb3f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd4cdef-e9c5-4eff-96f5-7863b62df2a8",
        "cursor": {
          "ref": "95f6e0c3-929e-49f1-920a-b19444c11a85",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "02291a11-a51f-4762-868f-06bd5109d1e7"
        },
        "item": {
          "id": "dbd4cdef-e9c5-4eff-96f5-7863b62df2a8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f9e55c59-11d0-4030-8fee-10c62d25ef74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451e23b8-fdcc-409b-b564-40f76c10042c",
        "cursor": {
          "ref": "69747c19-dd22-4fae-ad62-79a4500ac2f4",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "922f422f-55f3-4c66-8e10-8e354902f597"
        },
        "item": {
          "id": "451e23b8-fdcc-409b-b564-40f76c10042c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1b13a4c7-9032-49c7-8509-2fcf0248c288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e003d77-8d64-44b0-aaa4-bfc7d13b976e",
        "cursor": {
          "ref": "ccde6a81-7dd0-4bde-a59a-9412dd2f7875",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "64d3179d-cda2-4b52-a5af-ace7e81dc8f8"
        },
        "item": {
          "id": "5e003d77-8d64-44b0-aaa4-bfc7d13b976e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b3a79ec-7d51-437e-91fc-e3cfec8185d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df348172-1419-49da-9df8-86f18438359b",
        "cursor": {
          "ref": "c3bf4904-f772-41bc-8f21-791ef54e2c5d",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d7e9fa88-d43a-4c99-8451-9f61cc74d596"
        },
        "item": {
          "id": "df348172-1419-49da-9df8-86f18438359b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b079084f-6f10-49f5-bdd3-7851c2d03420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc0c8f9-635f-4286-a369-b1ecd8722242",
        "cursor": {
          "ref": "617101ba-4829-4b63-95ca-d0940321d1b6",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "becbc4c8-1e81-41fe-96a0-ad570136da94"
        },
        "item": {
          "id": "3cc0c8f9-635f-4286-a369-b1ecd8722242",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cbe6cc0f-e210-4345-9a35-28fa488f7b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd377d47-3c21-4677-ac98-f9e04acfc54b",
        "cursor": {
          "ref": "69fba242-e9c7-4454-ba72-828c75cf8698",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ec70b62b-ad29-40fb-bdc1-a1dacc645dad"
        },
        "item": {
          "id": "bd377d47-3c21-4677-ac98-f9e04acfc54b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6ae74ee8-7eb6-4eaf-8344-61de4bd7d14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbf6646-921c-42fb-9ae4-30866823a5d4",
        "cursor": {
          "ref": "750f4141-5898-4357-98c3-8a87efffd0e6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "557e5411-dac8-4aaa-a40d-8e04babd1ccf"
        },
        "item": {
          "id": "bbbf6646-921c-42fb-9ae4-30866823a5d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98401ff5-a5a6-4b53-a849-9eeba9b11cf0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b68530-59d8-49c9-8138-5f6c8e096519",
        "cursor": {
          "ref": "6c453213-a89e-4a2f-bc4a-2e03754f8032",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4f2eec59-b556-43f7-8511-f5c7d6e908ec"
        },
        "item": {
          "id": "87b68530-59d8-49c9-8138-5f6c8e096519",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "73d8532b-0aae-4ca7-8c93-f08c895a3ed9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0cad8-55a0-453b-b400-c7233a7c3f85",
        "cursor": {
          "ref": "8100e416-5b14-438e-9879-c86e122390bf",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "700e877f-b1e6-418b-88ed-6c773a182704"
        },
        "item": {
          "id": "1bd0cad8-55a0-453b-b400-c7233a7c3f85",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f78d16da-bb9e-4d85-94af-82905339a905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0cad8-55a0-453b-b400-c7233a7c3f85",
        "cursor": {
          "ref": "8100e416-5b14-438e-9879-c86e122390bf",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "700e877f-b1e6-418b-88ed-6c773a182704"
        },
        "item": {
          "id": "1bd0cad8-55a0-453b-b400-c7233a7c3f85",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f78d16da-bb9e-4d85-94af-82905339a905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2020b5cf-e0ad-4b69-b0bb-38048428a28c",
        "cursor": {
          "ref": "0bef3a2d-c379-4897-a476-63269967f618",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "101bbae2-728c-40e4-bc59-acf24e91f01e"
        },
        "item": {
          "id": "2020b5cf-e0ad-4b69-b0bb-38048428a28c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f5967d2f-8444-41cf-814d-e6cf8f8220af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c162fb25-36e7-4fa0-987d-26a27832b732",
        "cursor": {
          "ref": "23e8d6e6-ba1d-4298-a6f5-72eeb2d72916",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ddc6c07-30ff-4dd1-a359-4839c76ddcc9"
        },
        "item": {
          "id": "c162fb25-36e7-4fa0-987d-26a27832b732",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "24f3cf3f-768e-4b77-a280-5d580ced2355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de24669e-9e8a-4252-bb05-3be51fb33191",
        "cursor": {
          "ref": "cf78ca04-23a6-4c2f-aa0e-84e923f1a2e9",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74aa871f-16ee-42ea-8aab-3632ac78aaf7"
        },
        "item": {
          "id": "de24669e-9e8a-4252-bb05-3be51fb33191",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9f93b3d5-c1e6-4557-8844-64b3f0d611dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ea6828-a487-4eba-9961-7a35f788441e",
        "cursor": {
          "ref": "d23e87d8-9082-4e8c-8fff-94cf0bce6a84",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9dedb1b5-58d0-4d43-8a7e-69e847810814"
        },
        "item": {
          "id": "b1ea6828-a487-4eba-9961-7a35f788441e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bb059b9e-0a2a-40c5-8aa1-4a7c3a0fcb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ea0d57-a080-44f9-8455-ec53dea97755",
        "cursor": {
          "ref": "c0e0a927-826f-4aab-b54d-15cf4efd9053",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7aaa852d-1c5b-46b0-a449-25b4225a847c"
        },
        "item": {
          "id": "99ea0d57-a080-44f9-8455-ec53dea97755",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3546328a-9208-48c7-a5d3-507c6ae53c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93a5dd3-9dad-4de6-88fc-b79e84d1042b",
        "cursor": {
          "ref": "6c4ce07f-5b29-41ac-8cd6-f2c9517dd684",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "68121381-2363-488a-8fdd-917d1e2e9648"
        },
        "item": {
          "id": "d93a5dd3-9dad-4de6-88fc-b79e84d1042b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2c294e8b-14c6-4074-ba75-133e2fbf5891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859ce86-cafe-479b-a9fe-fe4b2bde5f69",
        "cursor": {
          "ref": "8fd161f0-0ce2-4fd1-a832-85495aa181d5",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ab5c6b5-5b0e-450a-9dd5-6f9127631719"
        },
        "item": {
          "id": "9859ce86-cafe-479b-a9fe-fe4b2bde5f69",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "77c3ea84-e19e-4577-8e83-0d46d2bd9e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1816f7ee-e4dd-4492-897f-936eb16861b6",
        "cursor": {
          "ref": "18710a05-f1cc-4f1e-9130-ba5fb2d046c7",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a46ee145-e293-412c-94f4-f76b84972033"
        },
        "item": {
          "id": "1816f7ee-e4dd-4492-897f-936eb16861b6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fe2f9707-4a4f-4702-a3af-40e85d3db57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f08214-823d-4e85-a0c6-c35ada149a20",
        "cursor": {
          "ref": "c5b26cbc-bf1a-420c-9d32-ad6f30da5ef1",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8e5db43a-2e76-45da-8ca4-c9927910640c"
        },
        "item": {
          "id": "62f08214-823d-4e85-a0c6-c35ada149a20",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0cc04628-5ede-4e04-ab23-6de3ba44abb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4103cf3e-77a5-4185-9450-007b2eca15ce",
        "cursor": {
          "ref": "accaa45e-5f59-4338-8f9c-f48794aa0d52",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cbcce3e1-a542-4c54-9eda-5f1fc7a2352f"
        },
        "item": {
          "id": "4103cf3e-77a5-4185-9450-007b2eca15ce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4761e433-133c-4ebb-a814-eb66e298f9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2f58d0-0a5c-4bed-9ed7-90fe98a8865b",
        "cursor": {
          "ref": "076ecc26-381b-492e-8c77-4e4cd2574e04",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8cad9322-08b1-40b8-ae8f-a0cdc2a3243a"
        },
        "item": {
          "id": "5a2f58d0-0a5c-4bed-9ed7-90fe98a8865b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1d619baf-4013-4867-a21c-471be502c9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f14b41e-a96a-4dbc-8483-6911d3ac3174",
        "cursor": {
          "ref": "2491a693-7aeb-484d-bb6a-1616f1197ef6",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1eb67454-9bcf-4fc3-833b-5440c74d76c7"
        },
        "item": {
          "id": "0f14b41e-a96a-4dbc-8483-6911d3ac3174",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d3f6161c-229f-4c21-bdbd-8c9c6dbe204d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49ef1c1-7af3-4b83-9d13-474cdd53ec30",
        "cursor": {
          "ref": "77551771-bd39-4e7e-b77a-69867dfd64f4",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "28a856b1-c1e2-4511-b4f2-d72cbf73576a"
        },
        "item": {
          "id": "a49ef1c1-7af3-4b83-9d13-474cdd53ec30",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "501c8216-759c-4a2f-be2d-5315c1ca1c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673dc1e9-c0a3-4339-a6ca-8978c644db4a",
        "cursor": {
          "ref": "1f68547e-b303-42c9-ae30-4b6c94aceec4",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "276753a4-db26-48d1-923f-5b3b49432786"
        },
        "item": {
          "id": "673dc1e9-c0a3-4339-a6ca-8978c644db4a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0e042f11-00d7-4efb-a667-117d62e97827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fced1bcf-964a-41e4-9d70-532a7acf9a7f",
        "cursor": {
          "ref": "7a30b342-a163-4ae0-b7ae-a3ec1deec818",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "01151d0e-c858-4b5f-bfab-5c5dadcd838a"
        },
        "item": {
          "id": "fced1bcf-964a-41e4-9d70-532a7acf9a7f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "66f6fd3d-35e9-4cab-96a0-590bc4681c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f2a24f-29d4-4378-954b-cba43959d977",
        "cursor": {
          "ref": "459dd605-8145-444a-8b80-9d40638ad545",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "39a08b0f-f38d-44bf-a281-c8cb6fb7ebc0"
        },
        "item": {
          "id": "e1f2a24f-29d4-4378-954b-cba43959d977",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fef7721f-caeb-47de-9fa3-5f5cd60ff71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3112b8c0-d032-43ab-9fb8-bff34f798497",
        "cursor": {
          "ref": "108bc916-9931-46a8-b6e1-d1d0ab989797",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ce187658-3b05-42a2-89f5-74bf56dae94e"
        },
        "item": {
          "id": "3112b8c0-d032-43ab-9fb8-bff34f798497",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "69d84ba7-f70f-4ada-a392-2baaefe0358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da22b00-021f-4ea1-a430-dea89834743c",
        "cursor": {
          "ref": "d3a29990-5eb5-4bba-8bcb-bdc5032df565",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "68df699f-214f-4995-85e2-aad8cc2d525e"
        },
        "item": {
          "id": "1da22b00-021f-4ea1-a430-dea89834743c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "066c0f51-cb13-4760-bdc1-4ea98d40a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931d6964-0b0b-4ba0-96ad-819a501e5be7",
        "cursor": {
          "ref": "eec91928-a45d-41b9-83d1-d3ff7b77aa9d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3c77513-49e0-456a-8761-d7f2940d4b4d"
        },
        "item": {
          "id": "931d6964-0b0b-4ba0-96ad-819a501e5be7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5167f2d6-5288-45bd-bac6-16b4e7c5d316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9953e0c5-ab3a-4d9e-8ac5-9d1ad60a56d0",
        "cursor": {
          "ref": "911695a5-451b-4a04-9ecc-192c5f1bf345",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f93a64e8-7752-4494-88f3-1944b6813318"
        },
        "item": {
          "id": "9953e0c5-ab3a-4d9e-8ac5-9d1ad60a56d0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a2e7e531-52e5-4d60-8e5f-e4376bb71e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e5cd03-3b3c-47ca-9527-3896949a8ec1",
        "cursor": {
          "ref": "48edb11b-3499-4665-9e9d-abb2095bd0c4",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "54bdf296-e0f3-41b2-b1f4-1608ab008070"
        },
        "item": {
          "id": "86e5cd03-3b3c-47ca-9527-3896949a8ec1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fab08023-7bba-4906-8660-bca41fa6d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fdfef6-071f-4aef-9dc3-1f3c415cb3dd",
        "cursor": {
          "ref": "8c170dc3-68ca-4d5d-a000-403e04c88d2a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "59b1c149-03cc-414f-8eb7-0a84be1c19bd"
        },
        "item": {
          "id": "d7fdfef6-071f-4aef-9dc3-1f3c415cb3dd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f13bee5c-7252-4480-8bf9-bb7cacef309f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d94db0a-cf14-4568-957f-a72d728737ae",
        "cursor": {
          "ref": "ed0e9b8b-0fdc-42c8-80cf-89f7c060d885",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a845860b-24eb-4fc5-a060-9520d861b98c"
        },
        "item": {
          "id": "2d94db0a-cf14-4568-957f-a72d728737ae",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "db37fc03-ff52-469a-ace6-e3625436a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e666de5-f56e-4150-8e33-181970fe9fdd",
        "cursor": {
          "ref": "5db97b91-3299-4db4-bed4-a7add237cd6b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "91e9530c-c4d9-4259-8707-8852e1f76fce"
        },
        "item": {
          "id": "1e666de5-f56e-4150-8e33-181970fe9fdd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0bb6323f-fe0a-448e-ad49-113e9de21c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f3e932-88a5-4f8e-972f-92df03def2a3",
        "cursor": {
          "ref": "79f619f3-6da5-4a0e-9f5e-0e156f7d383c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1c04675-abeb-4314-a3a7-8954d88ff635"
        },
        "item": {
          "id": "32f3e932-88a5-4f8e-972f-92df03def2a3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e9d3f296-1e2b-4037-9f0c-ebe32c8d728b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bcf10d-5ce4-4757-a86c-4e0083a0d1ef",
        "cursor": {
          "ref": "ed4d243a-b49a-4257-a6d3-8acec17a08f9",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1243ce30-7022-499c-9961-8a6feebfd4b4"
        },
        "item": {
          "id": "04bcf10d-5ce4-4757-a86c-4e0083a0d1ef",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fd00a698-d082-4129-be3e-7796f8b27f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66088ef6-46a1-4426-8b27-5acb627f0f5e",
        "cursor": {
          "ref": "11d5a42b-90d1-4d74-90bb-a63b20f51304",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4a96dd73-6784-40e0-a6f4-8238cb2fd3ee"
        },
        "item": {
          "id": "66088ef6-46a1-4426-8b27-5acb627f0f5e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "236200b5-5392-41c8-99e3-c18779346906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a0d936-cf18-4704-b981-8b617c4f5bab",
        "cursor": {
          "ref": "06d55e98-bd4a-4a57-8bd2-d5bd32103650",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0e03c6f6-c79c-43d0-b76a-d46bea2d7a68"
        },
        "item": {
          "id": "85a0d936-cf18-4704-b981-8b617c4f5bab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0dd6bd64-b4d2-4730-ab73-57544f3d9178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886cc032-c836-4161-a087-53c4bbcd835e",
        "cursor": {
          "ref": "5ddad227-86cc-4784-bbc5-8b670da63095",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5e5d3ca4-56e8-4382-8217-1f6937e5080f"
        },
        "item": {
          "id": "886cc032-c836-4161-a087-53c4bbcd835e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "31b21383-d330-460b-b229-1501b04d2977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71df5025-287e-476e-84e8-4e16f1782869",
        "cursor": {
          "ref": "73df513a-c45f-4206-b599-b3b7671e38e8",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4dd7bfc2-a81e-452e-96f2-a0cba13c6694"
        },
        "item": {
          "id": "71df5025-287e-476e-84e8-4e16f1782869",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e8047718-48a2-4ae0-b894-9e886569f646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acdb83d-e307-47b3-88ad-295cd2099b19",
        "cursor": {
          "ref": "37ce1212-ad82-482c-bde9-5e7420120e94",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3634865e-9097-4a56-95e0-e3b296bc514e"
        },
        "item": {
          "id": "6acdb83d-e307-47b3-88ad-295cd2099b19",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "876e55ad-de63-4362-9388-64c8b4a9cfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2deae2-9f2f-4e24-b955-a8756acb7d53",
        "cursor": {
          "ref": "47983b8c-ac23-4e9a-a7d5-a633120573fa",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7fe66853-5850-4520-9bf6-3d71d6ab7648"
        },
        "item": {
          "id": "9c2deae2-9f2f-4e24-b955-a8756acb7d53",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e436fb03-70b9-442d-afa1-728b5d84767f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1e80b-8879-4a07-ab46-2bce1f31375a",
        "cursor": {
          "ref": "a38066ea-32c2-4ac3-9c02-794b21231249",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2d3a70b2-d213-4611-bfbe-d3708b89889f"
        },
        "item": {
          "id": "c5a1e80b-8879-4a07-ab46-2bce1f31375a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e59ec88c-1c8b-427b-8a92-80cd4757e918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86958429-04c2-4948-b81c-c549e9f3250e",
        "cursor": {
          "ref": "9499ea15-0e98-4c0f-ab53-d69a17d4172a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4a6fae58-0521-4bdd-88fd-9caaa151515f"
        },
        "item": {
          "id": "86958429-04c2-4948-b81c-c549e9f3250e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3aeeba04-e0d0-4e51-9f4d-50f047154c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdd752d-8110-4aab-920c-69d65ed18973",
        "cursor": {
          "ref": "b1f4946c-7e90-406c-80e1-27778dde8f57",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "923e78f5-4d3e-4659-8bfa-6cdd367dd9d1"
        },
        "item": {
          "id": "0fdd752d-8110-4aab-920c-69d65ed18973",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d2a86c31-aa5f-455b-9c60-6bb406beaf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eabf6b-3be5-4ae5-bd52-6b714f7e3497",
        "cursor": {
          "ref": "736aa8eb-86b9-4afb-a1e3-b93319b5585d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8ae7615f-4f44-428c-b451-65a327943733"
        },
        "item": {
          "id": "88eabf6b-3be5-4ae5-bd52-6b714f7e3497",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4a1cb529-7e6d-446a-b8a1-742a9177a9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148e5295-bc31-413b-a309-68d8729aff93",
        "cursor": {
          "ref": "06cfae21-5038-4fab-9133-75e4433e344a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "48982c3d-dfe8-431c-a095-b2eab8f4a0b8"
        },
        "item": {
          "id": "148e5295-bc31-413b-a309-68d8729aff93",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "786da23d-f5f5-4bfa-944a-d169f63be786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cfb852-85dd-44d6-b5bc-76456ce1d026",
        "cursor": {
          "ref": "e40ae23f-315f-4de3-82a9-57781bb9e9b9",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c6bbde82-4df4-4547-a692-a4dd4cf71c58"
        },
        "item": {
          "id": "60cfb852-85dd-44d6-b5bc-76456ce1d026",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4658e497-2d5d-4ed8-ac02-f3ba8240e773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b53032-48a3-4a10-a448-6da1a678cd13",
        "cursor": {
          "ref": "c36f2d79-ba0a-41a7-baee-929bfc422adc",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a3ffdaa2-43e0-4640-ae48-c466b8c56eb4"
        },
        "item": {
          "id": "38b53032-48a3-4a10-a448-6da1a678cd13",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2512578e-f73f-4b45-9c3f-27e1a4b06dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3305a50d-317f-4df1-ba5c-cc18336a63d9",
        "cursor": {
          "ref": "841caf96-6840-470f-b91b-77b746aba8d9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "44a85039-14e3-485f-b506-7d25c2b40474"
        },
        "item": {
          "id": "3305a50d-317f-4df1-ba5c-cc18336a63d9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "06eb9834-38f2-4a25-90dd-b25b1984bced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c3ac5-18c6-434f-aad2-9d876e9ffe76",
        "cursor": {
          "ref": "d1ebb491-6727-43e7-93ff-bdfaf4323581",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8433e9b7-3c32-4c47-abfa-90fcb665e8b5"
        },
        "item": {
          "id": "d75c3ac5-18c6-434f-aad2-9d876e9ffe76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e37db618-8efd-4d50-b1ac-f9353f8b691a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f90e4a-6205-48e5-a385-bd995be8f3d5",
        "cursor": {
          "ref": "134dc888-4b04-4a39-b2d5-b40dbdb7b418",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a6c64c67-9272-42b3-b431-3a57727cfa9f"
        },
        "item": {
          "id": "66f90e4a-6205-48e5-a385-bd995be8f3d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e505ea76-de4e-4a49-b8b3-173553d73780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a70b00-2e6c-4558-af48-9181d63bb2ce",
        "cursor": {
          "ref": "9664ecc0-1bae-4561-8fba-f6e465028deb",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8753771a-c874-41be-8cd5-8e30a7a0a4be"
        },
        "item": {
          "id": "c6a70b00-2e6c-4558-af48-9181d63bb2ce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "052da792-1471-4b22-87bc-8062d682ea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29a056c-64ba-4817-84d2-c820eb87a0ba",
        "cursor": {
          "ref": "930c995b-5c12-4b18-96ed-c237af039393",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "422f779e-5820-41f6-9134-a1044f0fa861"
        },
        "item": {
          "id": "c29a056c-64ba-4817-84d2-c820eb87a0ba",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "af8d1daa-7cdf-4786-81b9-020e923a6de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b195042d-df27-4238-9b1a-b35cbc485a51",
        "cursor": {
          "ref": "391c2e18-7ed1-47f6-9204-836cdceaf0e9",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "37dff8da-b5a9-45f4-a256-825837062fb7"
        },
        "item": {
          "id": "b195042d-df27-4238-9b1a-b35cbc485a51",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a17fbf0-407e-487a-9b59-01c7f098f636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c47ca0-6b45-4c0c-b270-6cc136d60939",
        "cursor": {
          "ref": "58c9f21f-efa5-4729-b524-52e13398c460",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a34e6bd4-24dc-4349-8a61-ef48e750b7b2"
        },
        "item": {
          "id": "d0c47ca0-6b45-4c0c-b270-6cc136d60939",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a2abf947-09b9-4a76-bfb3-58f358c7375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7731f3-43eb-4a00-b690-90b309ca50da",
        "cursor": {
          "ref": "5cdebfc0-48a6-4174-bfcb-559d4de85d02",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6072c3c7-8a4c-45ca-b7ed-6cf1e1fba1c4"
        },
        "item": {
          "id": "7d7731f3-43eb-4a00-b690-90b309ca50da",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3debe1ab-8d35-4b03-9dc9-e734ffbbb733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad22457-69d2-4773-867c-341e45bfa02c",
        "cursor": {
          "ref": "13bab315-073b-450a-b385-b643f40e7fcd",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b7266047-28d8-4039-8e99-5820fba3d130"
        },
        "item": {
          "id": "fad22457-69d2-4773-867c-341e45bfa02c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a887fe13-334b-4de9-8339-a26dab94a401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6478459-49ff-4327-9357-b89ea352d316",
        "cursor": {
          "ref": "2d8a7f41-5edf-4552-b831-ea420cacd42a",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c554e1dd-e1d4-4321-be11-cebd1f282f21"
        },
        "item": {
          "id": "b6478459-49ff-4327-9357-b89ea352d316",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dbd48092-736d-44c8-93c9-320c8c0c66de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4570a157-e39f-457e-b29f-3811c1b304c4",
        "cursor": {
          "ref": "f1b97144-85fc-4b32-abbe-df9a0cf97f1b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d9fee5e3-7301-4cef-802e-657604de6247"
        },
        "item": {
          "id": "4570a157-e39f-457e-b29f-3811c1b304c4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "17dbb85c-b312-46bb-bb2c-35ec45f29bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7132e1c1-7dc2-4ffe-b37f-50294c665e7a",
        "cursor": {
          "ref": "e20351ce-10f3-4037-8fe2-bb965800ed90",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "54ac9b6c-e6bd-4635-9572-f02a50563df8"
        },
        "item": {
          "id": "7132e1c1-7dc2-4ffe-b37f-50294c665e7a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "62eb7537-a2f3-4923-9dbe-ba8e1254bff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5535642-1aff-4c53-9191-c38f6c506d20",
        "cursor": {
          "ref": "b06dc6a1-0db9-4829-9178-67954524cbc1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "29b1f4cc-3c42-4507-a073-011784b0eddd"
        },
        "item": {
          "id": "d5535642-1aff-4c53-9191-c38f6c506d20",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e3a762a1-5b3f-4610-bcd4-af2700a545f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89d4a47-9a8d-46d0-84eb-e597dd21f27c",
        "cursor": {
          "ref": "929bd08c-627e-41e3-86d4-bf0da0226d3f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "07a209a7-52ee-4fcc-9b6a-f0e5ef3bd70c"
        },
        "item": {
          "id": "d89d4a47-9a8d-46d0-84eb-e597dd21f27c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "941fbb87-9459-4fc1-a868-43fda72b78f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae2f60f-e71e-4189-80d7-0ea99d2219d2",
        "cursor": {
          "ref": "d077799f-b1f2-47e5-9cc6-52f9444eadb3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "30512048-5f28-4b19-8a93-88c56abbd3f8"
        },
        "item": {
          "id": "8ae2f60f-e71e-4189-80d7-0ea99d2219d2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5c1ae3b8-0c59-4163-be3e-36e925b06839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e97441e-745a-4217-9931-107e5e6acf72",
        "cursor": {
          "ref": "47123edb-44ce-41a5-adf5-5a09e930d8a9",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "238531e3-352a-4661-aee4-5d2495638c7c"
        },
        "item": {
          "id": "8e97441e-745a-4217-9931-107e5e6acf72",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3c21c75e-feaa-4b23-91d1-6f2d83c60bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b506cd6-cbae-42fd-8431-c3edec512b28",
        "cursor": {
          "ref": "11b2b373-ec4f-4488-b007-308583f564d8",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a2849507-4ccd-4786-9e02-f86446e094e2"
        },
        "item": {
          "id": "9b506cd6-cbae-42fd-8431-c3edec512b28",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0d230c98-19df-453e-b08a-dba87b4b01b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3a73e0-dedf-4239-bdf1-16cdead54a33",
        "cursor": {
          "ref": "e8d72e1b-e612-4b31-837b-bf3a87b259bc",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "df2dccbc-4ad4-42f1-936d-da2434700ece"
        },
        "item": {
          "id": "9f3a73e0-dedf-4239-bdf1-16cdead54a33",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0ffc19a9-c83e-411f-9a70-7649c398c17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829df00-acf6-41c2-b2cb-a2805abd89c6",
        "cursor": {
          "ref": "65f43054-2627-47d5-8127-d3c2ded3a64a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "096d4e91-0bbb-4904-b56d-e8795b26d6e3"
        },
        "item": {
          "id": "f829df00-acf6-41c2-b2cb-a2805abd89c6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a2a00f72-a58b-4b3b-8ce9-1efe1b73e549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68747de3-c744-4ba5-a76a-e8ee5fa85297",
        "cursor": {
          "ref": "89950f1a-a5ea-4b36-b942-7c00d5de6c60",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "980adade-6867-4187-ac94-24362c20c01f"
        },
        "item": {
          "id": "68747de3-c744-4ba5-a76a-e8ee5fa85297",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4ca56414-b6ec-4f98-823b-841593ae26df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6331d2ae-198e-48a7-aa82-cc22e921c50f",
        "cursor": {
          "ref": "8eb7078a-ecac-4365-a3d5-9a4eed017dfe",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9dcc4a2d-04d8-4e52-b0f4-da1da33deddb"
        },
        "item": {
          "id": "6331d2ae-198e-48a7-aa82-cc22e921c50f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "14555a26-115a-44e5-bf7a-00854e85b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fe6cbc-9274-49bd-b23f-e99bc6c04143",
        "cursor": {
          "ref": "7c6e717c-7dcc-4967-a90b-3cdc43b1e033",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "85b02ff9-3ba6-49ee-b806-e786b0fb090c"
        },
        "item": {
          "id": "19fe6cbc-9274-49bd-b23f-e99bc6c04143",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "081c1320-44d9-4a97-8f63-9d399e0d0e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82744040-49d2-4860-a210-d5c35e3784d7",
        "cursor": {
          "ref": "ff09a7c2-674f-411a-afcb-94e995128e0d",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5fa84dfa-2f34-4889-a29d-f6ef2db3aba6"
        },
        "item": {
          "id": "82744040-49d2-4860-a210-d5c35e3784d7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b0995567-6e26-4b0f-af69-1f6b4df07e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f57e3a-a4e3-43ed-8208-c9686c97b48c",
        "cursor": {
          "ref": "de4040da-a0e6-4433-b26c-9aff9be2f74d",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2720e006-7f72-4fee-b9e0-fec6c7b8fd35"
        },
        "item": {
          "id": "25f57e3a-a4e3-43ed-8208-c9686c97b48c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5030ec21-dde0-4047-b01f-2962ced6cff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c63a3-e0d0-40ef-99fe-aa93cff0be04",
        "cursor": {
          "ref": "b0c68975-0941-43b1-a4fa-e727a3f885df",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cebb3c40-b591-4adb-a864-92302fe48955"
        },
        "item": {
          "id": "ab8c63a3-e0d0-40ef-99fe-aa93cff0be04",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89ec5c5a-5ab0-4b39-8d44-cf2992220adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0ef140-c1ae-42bc-a653-2063d0bb027a",
        "cursor": {
          "ref": "78b5e9df-a9ec-4c82-9199-e0fd8f1d2711",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e42a8ae2-f170-4155-a786-67c5b99eefd3"
        },
        "item": {
          "id": "0f0ef140-c1ae-42bc-a653-2063d0bb027a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4174fbaf-0c75-453c-9375-9afece0cedd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ba86ed-8c06-4cba-b863-57a5a42ac6ae",
        "cursor": {
          "ref": "cbf84394-8b5d-4b93-981d-9068f2dafa7c",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "09ce67f9-b242-4ab9-bfbd-7827bf0bdd1b"
        },
        "item": {
          "id": "a9ba86ed-8c06-4cba-b863-57a5a42ac6ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "79e857df-c1b7-4b84-97f7-cc9cbaedcd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6257935e-041b-475d-a45a-83ab0b544d2d",
        "cursor": {
          "ref": "074c96ab-cc26-46c2-8e8e-44b54433ba15",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "22013661-dd57-4b73-b3c1-b10a636cc5e6"
        },
        "item": {
          "id": "6257935e-041b-475d-a45a-83ab0b544d2d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fb96ad7e-6b29-4dff-b24b-da7d4eef9978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45e1305-8b98-4904-a152-84c99f5a7894",
        "cursor": {
          "ref": "2e7fb692-e174-45ce-a6b7-ac711583a2e5",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e5d58c42-46f4-4356-b390-87d305dc252f"
        },
        "item": {
          "id": "a45e1305-8b98-4904-a152-84c99f5a7894",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "52d99933-06f7-4e3b-8de0-8fd5f99d6bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452e62eb-8e4b-453c-94e6-32c7ca469799",
        "cursor": {
          "ref": "743e0271-61fc-4ec0-9b08-cf37b1f86581",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b8083465-6bb6-4b44-84c5-c2b541422d6b"
        },
        "item": {
          "id": "452e62eb-8e4b-453c-94e6-32c7ca469799",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3a648426-25df-4d2d-aeea-cd9b73c24c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f080108-226e-45f5-b148-f199b059e4f5",
        "cursor": {
          "ref": "3705d91a-6d8d-457b-a341-624034bf6daf",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fe51864a-445b-4f49-b444-4a2df1279c5b"
        },
        "item": {
          "id": "8f080108-226e-45f5-b148-f199b059e4f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e2ad8fa0-4ce3-4f65-8457-0948aac5a031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46690df-cb99-4cf3-9dcd-468bd0563479",
        "cursor": {
          "ref": "1861fc08-ef9f-4bca-92e9-5ec25673e162",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8213470a-94a7-4ed5-a54c-16ef11794741"
        },
        "item": {
          "id": "b46690df-cb99-4cf3-9dcd-468bd0563479",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4abeb487-b62d-4a3c-92c7-01fd787b4b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c14030-e5fa-4207-a492-20d25c712eb1",
        "cursor": {
          "ref": "58f751be-600f-4218-8197-126e57eb764a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15239860-6e21-4806-b8ef-cffd4ff962d4"
        },
        "item": {
          "id": "50c14030-e5fa-4207-a492-20d25c712eb1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8a99e407-0563-415b-9f01-23ded9bf93ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7b8a1d-d26b-4752-900c-a4510cc283ec",
        "cursor": {
          "ref": "9118fb87-a74a-4322-8f5f-b4b23acd2554",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6da012bb-f7ff-4863-98f8-021a7c4fbadb"
        },
        "item": {
          "id": "9c7b8a1d-d26b-4752-900c-a4510cc283ec",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6c436adf-1e18-42e0-ae67-e2acf89a85d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b006f1a-f781-4d92-8360-4ef6661fa5f0",
        "cursor": {
          "ref": "d33b6b67-af2e-425b-980f-b8769bbb0683",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6c5b5bfe-227d-4e14-933c-f4742a020b7d"
        },
        "item": {
          "id": "8b006f1a-f781-4d92-8360-4ef6661fa5f0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c9d958c4-73cb-4420-8e71-d3cc1f86633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af22c8-3bdf-46ec-85d4-f4ba561fa9cf",
        "cursor": {
          "ref": "c13b0886-8d67-4aee-853b-0e449534b444",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fd05ad03-2804-486e-92ae-68503cf7a983"
        },
        "item": {
          "id": "b9af22c8-3bdf-46ec-85d4-f4ba561fa9cf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "322c8929-3c4e-4a4b-a84b-0e2d958db3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2bc509-f8bc-456d-aa6c-3ef38268d555",
        "cursor": {
          "ref": "c918fcd1-ac5e-4e09-8855-95dfefed8b6a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "589eedb6-eb4a-4ce5-a5e1-52cd1290b5fd"
        },
        "item": {
          "id": "7a2bc509-f8bc-456d-aa6c-3ef38268d555",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e5e50c53-86fa-45b2-8a07-b0be77220e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db0cd91-b3cd-4fa9-9da1-60649bfbb527",
        "cursor": {
          "ref": "c7ddec61-7af0-469c-930b-99917175eb77",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "89d20c0d-c4ee-4fda-bf12-f07184381b2e"
        },
        "item": {
          "id": "0db0cd91-b3cd-4fa9-9da1-60649bfbb527",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ac654bfd-ab1c-4aac-868e-3983815ac2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd1ae4-4a4a-4275-90c2-8e19b03969c7",
        "cursor": {
          "ref": "d7ad2f70-8546-4052-a38b-ecd146ec0c10",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e45da8ea-408e-469b-8b10-af6556c5d218"
        },
        "item": {
          "id": "65dd1ae4-4a4a-4275-90c2-8e19b03969c7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aa72761e-1cfe-47db-8f16-0df2fad9460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd15fb6b-a7fe-4cd8-b646-82a969e6d7d7",
        "cursor": {
          "ref": "c62d31a3-7018-43f7-9b69-a83c4804cb04",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e81f9363-3bb5-4cf0-8cbd-574be1e81361"
        },
        "item": {
          "id": "bd15fb6b-a7fe-4cd8-b646-82a969e6d7d7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8e94387e-35cb-4aa9-8a71-da085180c436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df70f40c-e06c-493f-bff6-0ecbb99aeb19",
        "cursor": {
          "ref": "be022ddf-4d3e-47db-82dd-f2780baa59d1",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d73d70af-0cee-40d4-addb-455c0668c5cd"
        },
        "item": {
          "id": "df70f40c-e06c-493f-bff6-0ecbb99aeb19",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "697f70b4-4db4-447f-b2bb-22fdc9b2a301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2a6863-cadb-4107-b2c1-4fda87c1dfd8",
        "cursor": {
          "ref": "12d6c78a-2349-418d-8aef-7f5bdfc35fcf",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4955555b-5ef3-4a68-84e3-4378242dadae"
        },
        "item": {
          "id": "ba2a6863-cadb-4107-b2c1-4fda87c1dfd8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "af6dc609-cb95-4e65-9940-347edc0b4a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4427a9-24f1-4e09-802c-d38b4c496328",
        "cursor": {
          "ref": "7402a5b9-7cea-4d19-a833-82987e3c9b5d",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "51581aca-3f7c-445f-aa89-ddd9db595e41"
        },
        "item": {
          "id": "fe4427a9-24f1-4e09-802c-d38b4c496328",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8b6e3791-a007-49ff-8e0f-0efd1882c244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9acb105-f404-4bd2-a375-63771db1d4ee",
        "cursor": {
          "ref": "19aa8b34-9548-4369-9af9-eb33e295f32a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4a7e8f8c-6185-4195-8389-318919cd2cfe"
        },
        "item": {
          "id": "a9acb105-f404-4bd2-a375-63771db1d4ee",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2cbe2dd4-787d-4931-880b-9fe3b3a23695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8977924c-1bf8-4cf1-a16b-7195bf1aae5c",
        "cursor": {
          "ref": "c95ae5d4-129e-4074-a05e-a7c89e85b040",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "48cec76c-f61a-4cd8-a039-9a69fa21e26f"
        },
        "item": {
          "id": "8977924c-1bf8-4cf1-a16b-7195bf1aae5c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "930e5fc2-4d11-4b1c-ad3d-e8626c03a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c0381c-9d33-4082-8115-8b1d9cb4ac57",
        "cursor": {
          "ref": "125350cc-84aa-43aa-bab7-ebe0ffc20e1b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea72958d-a2ac-420a-a637-54d3ca240836"
        },
        "item": {
          "id": "51c0381c-9d33-4082-8115-8b1d9cb4ac57",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1177b9a6-dd2f-4b9e-aa2a-eda2e0cccd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd8b694-59c5-4498-87af-39c17ca004ec",
        "cursor": {
          "ref": "5ca03a70-0ad4-480d-af43-b1af6d9f975b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a1a91e38-30c6-43cb-bf8e-ccb679fa4949"
        },
        "item": {
          "id": "dbd8b694-59c5-4498-87af-39c17ca004ec",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "136c493f-cea1-4d81-9850-400622adb008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683b2f86-e602-45cf-a78b-d0ef995fa842",
        "cursor": {
          "ref": "45f2be7c-0479-4ee2-bdc4-dee0f9efb5f9",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "689d3b46-445f-4e4d-955c-c5afde358395"
        },
        "item": {
          "id": "683b2f86-e602-45cf-a78b-d0ef995fa842",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "540b3f94-4fb2-432b-81e4-4f9ff41a8e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600d95f1-2c6f-4f49-baab-7dd73377accf",
        "cursor": {
          "ref": "347afd20-ff52-4b94-9f23-cc6cc2cad73c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9edee36-9eea-4f2f-a45d-0cbe67c32cf6"
        },
        "item": {
          "id": "600d95f1-2c6f-4f49-baab-7dd73377accf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c03cd2c2-f7da-4d61-bb6f-cc4c8c3a2668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee72a91-d357-448a-b0de-483acd1e3b9f",
        "cursor": {
          "ref": "3cdd6c6a-1faa-4bc6-9ec8-01475f8f7b95",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0858e17d-378d-4ad0-bee5-e05c3d6e0ff9"
        },
        "item": {
          "id": "eee72a91-d357-448a-b0de-483acd1e3b9f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7f4cf72d-f879-43e6-b557-46ee3e43372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8464afb-23ee-44d6-b091-303029689ace",
        "cursor": {
          "ref": "111cecbe-0c9b-4d91-9b74-462480fbb0b0",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "42af19c2-61db-4330-8583-06f4a4c06f41"
        },
        "item": {
          "id": "b8464afb-23ee-44d6-b091-303029689ace",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5a13caa7-213f-4823-92ed-f714fa4c4ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edafc5bd-21cc-4db6-bf2c-269430239a08",
        "cursor": {
          "ref": "6235f326-261f-47d9-94c6-6f376959fee4",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "206111da-e326-490c-85a0-2cacc11bd45c"
        },
        "item": {
          "id": "edafc5bd-21cc-4db6-bf2c-269430239a08",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f6d6f93a-8949-4c11-8b50-ebb380a5c4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9568783a-40ab-46ee-af34-f91db3131cb1",
        "cursor": {
          "ref": "1005bfd9-06f3-4151-b92c-89b7e5f80fc6",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "21b53039-4d9c-44f9-84c7-58fd5486c84c"
        },
        "item": {
          "id": "9568783a-40ab-46ee-af34-f91db3131cb1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c0860401-819a-4520-9f5f-2f791687ef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54274aa4-b76c-47fb-9280-9afbe03c0dc9",
        "cursor": {
          "ref": "0c92216f-ecd0-4f8f-b5e9-e1c89ef9bd2f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5fc7418b-24f3-4a22-b88f-0c289a13c227"
        },
        "item": {
          "id": "54274aa4-b76c-47fb-9280-9afbe03c0dc9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "32efdd52-5e71-4d69-8656-692a143013b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4c8389-8a4b-454b-a1a0-3d1fdfe5a6b2",
        "cursor": {
          "ref": "2720af1f-702b-41f4-9f5d-7e308b3d4a55",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a36f1722-a007-4ed5-a542-a4b31225aa2b"
        },
        "item": {
          "id": "af4c8389-8a4b-454b-a1a0-3d1fdfe5a6b2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "93352819-3ce0-4a78-b207-3b811ac726d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6361155e-4165-4f74-8aa0-89bdf215b26f",
        "cursor": {
          "ref": "a3677b5f-0eb3-4e77-a7ac-bfcf8041813f",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f8424b27-0d5a-4efe-8e29-f47cda7dc1f4"
        },
        "item": {
          "id": "6361155e-4165-4f74-8aa0-89bdf215b26f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c12bd565-c23b-453a-9fab-03e2891d99c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1177dc68-ce23-46d2-8ce6-d9195cf71f52",
        "cursor": {
          "ref": "cf5164c1-d3ab-4c38-ab60-2c250ae36d82",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f8d8b699-ef92-4efe-85c4-d1e98d728a2c"
        },
        "item": {
          "id": "1177dc68-ce23-46d2-8ce6-d9195cf71f52",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e9507f1-ed36-4cbf-86ca-92791cd67ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99917c2-44b9-4fb6-a643-f91c76463889",
        "cursor": {
          "ref": "d094a110-49a3-4080-8819-f57bf53ee2f6",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9e9e2bfe-36a4-4f8d-bc5b-7c289cc01132"
        },
        "item": {
          "id": "b99917c2-44b9-4fb6-a643-f91c76463889",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2ee50c0c-7102-4914-8bc5-78191b2912d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abd57e2-5bbf-4541-a575-7f539962546e",
        "cursor": {
          "ref": "6797d05e-81b4-47ac-a888-35bf4aa9a484",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71fb1909-f925-4f83-b99e-f919c6e6ef69"
        },
        "item": {
          "id": "6abd57e2-5bbf-4541-a575-7f539962546e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2c3fd3b2-5f21-4dc1-b124-fff6a8b21d09",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac6ab54-bfe6-47f2-8011-8a889fe59475",
        "cursor": {
          "ref": "68815905-6c40-4f12-af06-be20b2ae66af",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4c1d7a9f-2263-4407-a98e-21b64444defa"
        },
        "item": {
          "id": "eac6ab54-bfe6-47f2-8011-8a889fe59475",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "131ed1a0-c1d9-4bd9-a0ec-33dcf2b22dcf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24bce98-6ccf-46a8-9673-af8460442e51",
        "cursor": {
          "ref": "90370460-e227-4490-a2a3-c3de03484f43",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c58c2467-9906-428c-a949-2184a13aa67f"
        },
        "item": {
          "id": "e24bce98-6ccf-46a8-9673-af8460442e51",
          "name": "credentials_verify"
        },
        "response": {
          "id": "66a9b126-3f53-4cab-b12a-e7b55d3fd3ba",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "982a07b4-68f2-4d1a-8f23-afa5239381de",
        "cursor": {
          "ref": "7a6edd9a-04c9-435b-b706-36adb244528f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "60727d87-716d-474a-8082-a7a49c8b7df1"
        },
        "item": {
          "id": "982a07b4-68f2-4d1a-8f23-afa5239381de",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a0856fd-ec28-41bf-ab11-acfbc66d221d",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
        "cursor": {
          "ref": "7306576a-3d6c-453b-8655-b61ce1ccb446",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "33e94f04-d4cb-4da9-9eb9-794dcc1ef235"
        },
        "item": {
          "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "057656d2-0f2a-46ff-8e04-4e9d1e7ffec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
        "cursor": {
          "ref": "7306576a-3d6c-453b-8655-b61ce1ccb446",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "33e94f04-d4cb-4da9-9eb9-794dcc1ef235"
        },
        "item": {
          "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "057656d2-0f2a-46ff-8e04-4e9d1e7ffec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
        "cursor": {
          "ref": "7306576a-3d6c-453b-8655-b61ce1ccb446",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "33e94f04-d4cb-4da9-9eb9-794dcc1ef235"
        },
        "item": {
          "id": "0e36fe93-b7fb-4567-8b98-d79e85339ae9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "057656d2-0f2a-46ff-8e04-4e9d1e7ffec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb70789a-6cec-460b-bb02-96a52b8d6a61",
        "cursor": {
          "ref": "f5ad5ee9-9e8f-4f8d-a1fe-45c2b89a0294",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c5b96011-6f8a-4df5-99c1-3dc1acbe0696"
        },
        "item": {
          "id": "bb70789a-6cec-460b-bb02-96a52b8d6a61",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "42946f72-46c8-4675-af72-e24417c045f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f0f421-8940-4c8b-a3f4-7125b8c299e4",
        "cursor": {
          "ref": "cacc5f64-ce87-4600-a721-07044892436a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e869164-8cae-4ba2-9ac0-a2de4eed2292"
        },
        "item": {
          "id": "41f0f421-8940-4c8b-a3f4-7125b8c299e4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e1383640-37a7-4ce0-806a-3e3db7e86972",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f0f421-8940-4c8b-a3f4-7125b8c299e4",
        "cursor": {
          "ref": "cacc5f64-ce87-4600-a721-07044892436a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e869164-8cae-4ba2-9ac0-a2de4eed2292"
        },
        "item": {
          "id": "41f0f421-8940-4c8b-a3f4-7125b8c299e4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e1383640-37a7-4ce0-806a-3e3db7e86972",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c939e63-33aa-40fe-b10f-5e6effccd65b",
        "cursor": {
          "ref": "d02a72a4-7f5e-4f01-b3f8-8bd159fc7ba2",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d9a6a2a4-9804-44cb-814a-61f0df356fdc"
        },
        "item": {
          "id": "7c939e63-33aa-40fe-b10f-5e6effccd65b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a8c9ac6f-e72f-4cbf-b058-d78bc5f53b6c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4790f558-ff7e-4b2c-9d4c-cd5a143844df",
        "cursor": {
          "ref": "8c7f3a46-bf89-4862-ad56-611678d9e29d",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f95b497d-ab1f-4d2f-a52c-276d266b6ff8"
        },
        "item": {
          "id": "4790f558-ff7e-4b2c-9d4c-cd5a143844df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e3b4cc6-e407-46b7-9526-cc66f311a90b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4790f558-ff7e-4b2c-9d4c-cd5a143844df",
        "cursor": {
          "ref": "8c7f3a46-bf89-4862-ad56-611678d9e29d",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f95b497d-ab1f-4d2f-a52c-276d266b6ff8"
        },
        "item": {
          "id": "4790f558-ff7e-4b2c-9d4c-cd5a143844df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e3b4cc6-e407-46b7-9526-cc66f311a90b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073e144b-4453-4ee2-aa90-356f044430c3",
        "cursor": {
          "ref": "be374dac-25bd-422e-a16f-495ba9489e42",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "404fb80f-d1d1-47b5-bbf7-070dd0acfc18"
        },
        "item": {
          "id": "073e144b-4453-4ee2-aa90-356f044430c3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8e7c7a32-c74b-443d-8ae3-551a31b5e65a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}